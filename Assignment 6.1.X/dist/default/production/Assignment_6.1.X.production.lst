

Microchip MPLAB XC8 Assembler V2.36 build 20220127204148 
                                                                                               Thu Apr 28 12:15:09 2022

Microchip MPLAB XC8 C Compiler v2.36 (Free license) build 20220127204148 Og1 
     1                           	processor	16F1509
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	stringtext1,global,class=STRCODE,delta=2,noexec
     5                           	psect	stringtext2,global,class=STRCODE,delta=2,noexec
     6                           	psect	stringtext3,global,class=STRCODE,delta=2,noexec
     7                           	psect	cinit,global,class=CODE,merge=1,delta=2
     8                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     9                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    10                           	psect	text1,local,class=CODE,merge=1,delta=2
    11                           	psect	text2,local,class=CODE,merge=1,delta=2
    12                           	psect	text3,local,class=CODE,merge=1,delta=2
    13                           	psect	text4,local,class=CODE,merge=1,delta=2
    14                           	psect	text5,local,class=CODE,merge=1,delta=2
    15                           	psect	text6,local,class=CODE,merge=1,delta=2
    16                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=2,noexec
    17                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    18                           	dabs	1,0x7E,2
    19  0000                     
    20                           ; Version 2.40
    21                           ; Generated 17/11/2021 GMT
    22                           ; 
    23                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
    24                           ; All rights reserved.
    25                           ; 
    26                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    27                           ; 
    28                           ; Redistribution and use in source and binary forms, with or without modification, are
    29                           ; permitted provided that the following conditions are met:
    30                           ; 
    31                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    32                           ;        conditions and the following disclaimer.
    33                           ; 
    34                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    35                           ;        of conditions and the following disclaimer in the documentation and/or other
    36                           ;        materials provided with the distribution. Publication is not required when
    37                           ;        this file is used in an embedded application.
    38                           ; 
    39                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    40                           ;        software without specific prior written permission.
    41                           ; 
    42                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    43                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    44                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    45                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    46                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    47                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    48                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    49                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    50                           ; 
    51                           ; 
    52                           ; Code-generator required, PIC16F1509 Definitions
    53                           ; 
    54                           ; SFR Addresses
    55  0000                     	;# 
    56  0001                     	;# 
    57  0002                     	;# 
    58  0003                     	;# 
    59  0004                     	;# 
    60  0005                     	;# 
    61  0006                     	;# 
    62  0007                     	;# 
    63  0008                     	;# 
    64  0009                     	;# 
    65  000A                     	;# 
    66  000B                     	;# 
    67  000C                     	;# 
    68  000D                     	;# 
    69  000E                     	;# 
    70  0011                     	;# 
    71  0012                     	;# 
    72  0013                     	;# 
    73  0015                     	;# 
    74  0016                     	;# 
    75  0016                     	;# 
    76  0017                     	;# 
    77  0018                     	;# 
    78  0019                     	;# 
    79  001A                     	;# 
    80  001B                     	;# 
    81  001C                     	;# 
    82  008C                     	;# 
    83  008D                     	;# 
    84  008E                     	;# 
    85  0091                     	;# 
    86  0092                     	;# 
    87  0093                     	;# 
    88  0095                     	;# 
    89  0096                     	;# 
    90  0097                     	;# 
    91  0099                     	;# 
    92  009A                     	;# 
    93  009B                     	;# 
    94  009B                     	;# 
    95  009C                     	;# 
    96  009D                     	;# 
    97  009E                     	;# 
    98  009F                     	;# 
    99  010C                     	;# 
   100  010D                     	;# 
   101  010E                     	;# 
   102  0111                     	;# 
   103  0112                     	;# 
   104  0113                     	;# 
   105  0114                     	;# 
   106  0115                     	;# 
   107  0116                     	;# 
   108  0117                     	;# 
   109  0118                     	;# 
   110  0119                     	;# 
   111  011D                     	;# 
   112  018C                     	;# 
   113  018D                     	;# 
   114  018E                     	;# 
   115  0191                     	;# 
   116  0191                     	;# 
   117  0192                     	;# 
   118  0193                     	;# 
   119  0193                     	;# 
   120  0194                     	;# 
   121  0195                     	;# 
   122  0196                     	;# 
   123  0197                     	;# 
   124  0199                     	;# 
   125  019A                     	;# 
   126  019B                     	;# 
   127  019B                     	;# 
   128  019C                     	;# 
   129  019D                     	;# 
   130  019E                     	;# 
   131  019F                     	;# 
   132  020C                     	;# 
   133  020D                     	;# 
   134  0211                     	;# 
   135  0211                     	;# 
   136  0212                     	;# 
   137  0212                     	;# 
   138  0213                     	;# 
   139  0213                     	;# 
   140  0214                     	;# 
   141  0214                     	;# 
   142  0215                     	;# 
   143  0215                     	;# 
   144  0215                     	;# 
   145  0216                     	;# 
   146  0216                     	;# 
   147  0217                     	;# 
   148  0217                     	;# 
   149  0391                     	;# 
   150  0392                     	;# 
   151  0393                     	;# 
   152  0394                     	;# 
   153  0395                     	;# 
   154  0396                     	;# 
   155  0498                     	;# 
   156  0498                     	;# 
   157  0499                     	;# 
   158  049A                     	;# 
   159  049B                     	;# 
   160  049B                     	;# 
   161  049C                     	;# 
   162  049D                     	;# 
   163  049E                     	;# 
   164  049F                     	;# 
   165  0611                     	;# 
   166  0612                     	;# 
   167  0613                     	;# 
   168  0613                     	;# 
   169  0614                     	;# 
   170  0615                     	;# 
   171  0616                     	;# 
   172  0616                     	;# 
   173  0617                     	;# 
   174  0618                     	;# 
   175  0619                     	;# 
   176  0619                     	;# 
   177  061A                     	;# 
   178  061B                     	;# 
   179  061C                     	;# 
   180  061C                     	;# 
   181  0691                     	;# 
   182  0692                     	;# 
   183  0693                     	;# 
   184  0694                     	;# 
   185  0695                     	;# 
   186  0F0F                     	;# 
   187  0F10                     	;# 
   188  0F11                     	;# 
   189  0F12                     	;# 
   190  0F13                     	;# 
   191  0F14                     	;# 
   192  0F15                     	;# 
   193  0F16                     	;# 
   194  0F17                     	;# 
   195  0F18                     	;# 
   196  0F19                     	;# 
   197  0F1A                     	;# 
   198  0F1B                     	;# 
   199  0F1C                     	;# 
   200  0F1D                     	;# 
   201  0F1E                     	;# 
   202  0F1F                     	;# 
   203  0F20                     	;# 
   204  0F21                     	;# 
   205  0F22                     	;# 
   206  0F23                     	;# 
   207  0F24                     	;# 
   208  0F25                     	;# 
   209  0F26                     	;# 
   210  0F27                     	;# 
   211  0F28                     	;# 
   212  0F29                     	;# 
   213  0F2A                     	;# 
   214  0F2B                     	;# 
   215  0F2C                     	;# 
   216  0F2D                     	;# 
   217  0F2E                     	;# 
   218  0F2F                     	;# 
   219  0F8C                     	;# 
   220  0F8D                     	;# 
   221  0F91                     	;# 
   222  0F95                     	;# 
   223  0F96                     	;# 
   224  0F97                     	;# 
   225  0F9C                     	;# 
   226  0F9D                     	;# 
   227  0F9E                     	;# 
   228  0FE3                     	;# 
   229  0FE4                     	;# 
   230  0FE5                     	;# 
   231  0FE6                     	;# 
   232  0FE7                     	;# 
   233  0FE8                     	;# 
   234  0FE9                     	;# 
   235  0FEA                     	;# 
   236  0FEB                     	;# 
   237  0FED                     	;# 
   238  0FEE                     	;# 
   239  0FEF                     	;# 
   240  0000                     	;# 
   241  0001                     	;# 
   242  0002                     	;# 
   243  0003                     	;# 
   244  0004                     	;# 
   245  0005                     	;# 
   246  0006                     	;# 
   247  0007                     	;# 
   248  0008                     	;# 
   249  0009                     	;# 
   250  000A                     	;# 
   251  000B                     	;# 
   252  000C                     	;# 
   253  000D                     	;# 
   254  000E                     	;# 
   255  0011                     	;# 
   256  0012                     	;# 
   257  0013                     	;# 
   258  0015                     	;# 
   259  0016                     	;# 
   260  0016                     	;# 
   261  0017                     	;# 
   262  0018                     	;# 
   263  0019                     	;# 
   264  001A                     	;# 
   265  001B                     	;# 
   266  001C                     	;# 
   267  008C                     	;# 
   268  008D                     	;# 
   269  008E                     	;# 
   270  0091                     	;# 
   271  0092                     	;# 
   272  0093                     	;# 
   273  0095                     	;# 
   274  0096                     	;# 
   275  0097                     	;# 
   276  0099                     	;# 
   277  009A                     	;# 
   278  009B                     	;# 
   279  009B                     	;# 
   280  009C                     	;# 
   281  009D                     	;# 
   282  009E                     	;# 
   283  009F                     	;# 
   284  010C                     	;# 
   285  010D                     	;# 
   286  010E                     	;# 
   287  0111                     	;# 
   288  0112                     	;# 
   289  0113                     	;# 
   290  0114                     	;# 
   291  0115                     	;# 
   292  0116                     	;# 
   293  0117                     	;# 
   294  0118                     	;# 
   295  0119                     	;# 
   296  011D                     	;# 
   297  018C                     	;# 
   298  018D                     	;# 
   299  018E                     	;# 
   300  0191                     	;# 
   301  0191                     	;# 
   302  0192                     	;# 
   303  0193                     	;# 
   304  0193                     	;# 
   305  0194                     	;# 
   306  0195                     	;# 
   307  0196                     	;# 
   308  0197                     	;# 
   309  0199                     	;# 
   310  019A                     	;# 
   311  019B                     	;# 
   312  019B                     	;# 
   313  019C                     	;# 
   314  019D                     	;# 
   315  019E                     	;# 
   316  019F                     	;# 
   317  020C                     	;# 
   318  020D                     	;# 
   319  0211                     	;# 
   320  0211                     	;# 
   321  0212                     	;# 
   322  0212                     	;# 
   323  0213                     	;# 
   324  0213                     	;# 
   325  0214                     	;# 
   326  0214                     	;# 
   327  0215                     	;# 
   328  0215                     	;# 
   329  0215                     	;# 
   330  0216                     	;# 
   331  0216                     	;# 
   332  0217                     	;# 
   333  0217                     	;# 
   334  0391                     	;# 
   335  0392                     	;# 
   336  0393                     	;# 
   337  0394                     	;# 
   338  0395                     	;# 
   339  0396                     	;# 
   340  0498                     	;# 
   341  0498                     	;# 
   342  0499                     	;# 
   343  049A                     	;# 
   344  049B                     	;# 
   345  049B                     	;# 
   346  049C                     	;# 
   347  049D                     	;# 
   348  049E                     	;# 
   349  049F                     	;# 
   350  0611                     	;# 
   351  0612                     	;# 
   352  0613                     	;# 
   353  0613                     	;# 
   354  0614                     	;# 
   355  0615                     	;# 
   356  0616                     	;# 
   357  0616                     	;# 
   358  0617                     	;# 
   359  0618                     	;# 
   360  0619                     	;# 
   361  0619                     	;# 
   362  061A                     	;# 
   363  061B                     	;# 
   364  061C                     	;# 
   365  061C                     	;# 
   366  0691                     	;# 
   367  0692                     	;# 
   368  0693                     	;# 
   369  0694                     	;# 
   370  0695                     	;# 
   371  0F0F                     	;# 
   372  0F10                     	;# 
   373  0F11                     	;# 
   374  0F12                     	;# 
   375  0F13                     	;# 
   376  0F14                     	;# 
   377  0F15                     	;# 
   378  0F16                     	;# 
   379  0F17                     	;# 
   380  0F18                     	;# 
   381  0F19                     	;# 
   382  0F1A                     	;# 
   383  0F1B                     	;# 
   384  0F1C                     	;# 
   385  0F1D                     	;# 
   386  0F1E                     	;# 
   387  0F1F                     	;# 
   388  0F20                     	;# 
   389  0F21                     	;# 
   390  0F22                     	;# 
   391  0F23                     	;# 
   392  0F24                     	;# 
   393  0F25                     	;# 
   394  0F26                     	;# 
   395  0F27                     	;# 
   396  0F28                     	;# 
   397  0F29                     	;# 
   398  0F2A                     	;# 
   399  0F2B                     	;# 
   400  0F2C                     	;# 
   401  0F2D                     	;# 
   402  0F2E                     	;# 
   403  0F2F                     	;# 
   404  0F8C                     	;# 
   405  0F8D                     	;# 
   406  0F91                     	;# 
   407  0F95                     	;# 
   408  0F96                     	;# 
   409  0F97                     	;# 
   410  0F9C                     	;# 
   411  0F9D                     	;# 
   412  0F9E                     	;# 
   413  0FE3                     	;# 
   414  0FE4                     	;# 
   415  0FE5                     	;# 
   416  0FE6                     	;# 
   417  0FE7                     	;# 
   418  0FE8                     	;# 
   419  0FE9                     	;# 
   420  0FEA                     	;# 
   421  0FEB                     	;# 
   422  0FED                     	;# 
   423  0FEE                     	;# 
   424  0FEF                     	;# 
   425  000E                     _PORTCbits	set	14
   426  000E                     _PORTC	set	14
   427  008E                     _TRISC	set	142
   428                           
   429                           	psect	stringtext1
   430  0800                     __pstringtext1:
   431  0800                     STR_1:
   432  0800  3450               	retlw	80	;'P'
   433  0801  3449               	retlw	73	;'I'
   434  0802  3443               	retlw	67	;'C'
   435  0803  3431               	retlw	49	;'1'
   436  0804  3436               	retlw	54	;'6'
   437  0805  3446               	retlw	70	;'F'
   438  0806  3431               	retlw	49	;'1'
   439  0807  3435               	retlw	53	;'5'
   440  0808  3430               	retlw	48	;'0'
   441  0809  3439               	retlw	57	;'9'
   442  080A  3420               	retlw	32	;' '
   443  080B  344D               	retlw	77	;'M'
   444  080C  3443               	retlw	67	;'C'
   445  080D  3455               	retlw	85	;'U'
   446  080E  3400               	retlw	0
   447                           
   448                           	psect	stringtext2
   449  080F                     __pstringtext2:
   450  080F                     STR_2:
   451  080F  3432               	retlw	50	;'2'
   452  0810  3433               	retlw	51	;'3'
   453  0811  343A               	retlw	58	;':'
   454  0812  3435               	retlw	53	;'5'
   455  0813  3439               	retlw	57	;'9'
   456  0814  343A               	retlw	58	;':'
   457  0815  3430               	retlw	48	;'0'
   458  0816  3430               	retlw	48	;'0'
   459  0817  3400               	retlw	0
   460                           
   461                           	psect	stringtext3
   462  0000                     __pstringtext3:
   463                           
   464                           	psect	cinit
   465  07FD                     start_initialization:	
   466                           ; #config settings
   467                           
   468  07FD                     __initialization:
   469  07FD                     end_of_initialization:	
   470                           ;End of C runtime variable initialization code
   471                           
   472  07FD                     __end_of__initialization:
   473  07FD  0020               	movlb	0
   474  07FE  3187  2F4D         	ljmp	_main	;jump to C main() function
   475                           
   476                           	psect	cstackCOMMON
   477  0070                     __pcstackCOMMON:
   478  0070                     ?_LCD_Initialize:
   479  0070                     ?_LCDPutCmd:	
   480                           ; 1 bytes @ 0x0
   481                           
   482  0070                     ?_main:	
   483                           ; 1 bytes @ 0x0
   484                           
   485  0070                     ?_LCDWriteNibble:	
   486                           ; 1 bytes @ 0x0
   487                           
   488  0070                     ?_LCDPutChar:	
   489                           ; 1 bytes @ 0x0
   490                           
   491  0070                     LCDWriteNibble@rs:	
   492                           ; 1 bytes @ 0x0
   493                           
   494                           
   495                           ; 1 bytes @ 0x0
   496  0070                     	ds	1
   497  0071                     ??_LCDWriteNibble:
   498                           
   499                           ; 1 bytes @ 0x1
   500  0071                     	ds	2
   501  0073                     LCDWriteNibble@ch:
   502                           
   503                           ; 1 bytes @ 0x3
   504  0073                     	ds	1
   505  0074                     ??_LCDPutCmd:
   506  0074                     ??_LCDPutChar:	
   507                           ; 1 bytes @ 0x4
   508                           
   509                           
   510                           ; 1 bytes @ 0x4
   511  0074                     	ds	2
   512  0076                     LCDPutChar@ch:
   513  0076                     LCDPutCmd@ch:	
   514                           ; 1 bytes @ 0x6
   515                           
   516                           
   517                           ; 1 bytes @ 0x6
   518  0076                     	ds	1
   519  0077                     ??_LCD_Initialize:
   520  0077                     ?_LCDGoto:	
   521                           ; 1 bytes @ 0x7
   522                           
   523  0077                     ?_LCDPutStr:	
   524                           ; 1 bytes @ 0x7
   525                           
   526  0077                     LCDGoto@ln:	
   527                           ; 1 bytes @ 0x7
   528                           
   529  0077                     LCDPutStr@str:	
   530                           ; 1 bytes @ 0x7
   531                           
   532                           
   533                           ; 2 bytes @ 0x7
   534  0077                     	ds	1
   535  0078                     ??_LCDGoto:
   536  0078                     _LCDGoto$103:	
   537                           ; 1 bytes @ 0x8
   538                           
   539                           
   540                           ; 2 bytes @ 0x8
   541  0078                     	ds	1
   542  0079                     ??_LCDPutStr:
   543                           
   544                           ; 1 bytes @ 0x9
   545  0079                     	ds	1
   546  007A                     LCDGoto@pos:
   547                           
   548                           ; 1 bytes @ 0xA
   549  007A                     	ds	2
   550  007C                     LCDPutStr@h:
   551                           
   552                           ; 1 bytes @ 0xC
   553  007C                     	ds	1
   554  007D                     LCDPutStr@i:
   555                           
   556                           ; 1 bytes @ 0xD
   557  007D                     	ds	1
   558  007E                     ??_main:
   559                           
   560                           	psect	maintext
   561  074D                     __pmaintext:	
   562                           ; 1 bytes @ 0xE
   563 ;;
   564 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   565 ;;
   566 ;; *************** function _main *****************
   567 ;; Defined at:
   568 ;;		line 5 in file "Assignment 61.c"
   569 ;; Parameters:    Size  Location     Type
   570 ;;		None
   571 ;; Auto vars:     Size  Location     Type
   572 ;;		None
   573 ;; Return value:  Size  Location     Type
   574 ;;                  1    wreg      void 
   575 ;; Registers used:
   576 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   577 ;; Tracked objects:
   578 ;;		On entry : B1F/0
   579 ;;		On exit  : 0/0
   580 ;;		Unchanged: 0/0
   581 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
   582 ;;      Params:         0       0       0       0       0       0       0       0
   583 ;;      Locals:         0       0       0       0       0       0       0       0
   584 ;;      Temps:          0       0       0       0       0       0       0       0
   585 ;;      Totals:         0       0       0       0       0       0       0       0
   586 ;;Total ram usage:        0 bytes
   587 ;; Hardware stack levels required when called: 3
   588 ;; This function calls:
   589 ;;		_LCDGoto
   590 ;;		_LCDPutStr
   591 ;;		_LCD_Initialize
   592 ;; This function is called by:
   593 ;;		Startup code after reset
   594 ;; This function uses a non-reentrant model
   595 ;;
   596                           
   597  074D                     _main:	
   598                           ;psect for function _main
   599                           
   600  074D                     l724:	
   601                           ;incstack = 0
   602                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   603                           
   604                           
   605                           ;Assignment 61.c: 6:     LCD_Initialize();
   606  074D  3187  278C  3187   	fcall	_LCD_Initialize
   607                           
   608                           ;Assignment 61.c: 7:     LCDGoto(1,0);
   609  0750  01F7               	clrf	LCDGoto@ln
   610  0751  3001               	movlw	1
   611  0752  3187  27AC  3187   	fcall	_LCDGoto
   612  0755                     l726:
   613                           
   614                           ;Assignment 61.c: 8:     LCDPutStr("PIC16F1509 MCU");
   615  0755  3000               	movlw	low (STR_1| (0+32768))
   616  0756  00F7               	movwf	LCDPutStr@str
   617  0757  3088               	movlw	high (STR_1| (0+32768))
   618  0758  00F8               	movwf	LCDPutStr@str+1
   619  0759  3187  27D3  3187   	fcall	_LCDPutStr
   620  075C                     l728:
   621                           
   622                           ;Assignment 61.c: 9:     LCDGoto(4,1);
   623  075C  01F7               	clrf	LCDGoto@ln
   624  075D  0AF7               	incf	LCDGoto@ln,f
   625  075E  3004               	movlw	4
   626  075F  3187  27AC  3187   	fcall	_LCDGoto
   627                           
   628                           ;Assignment 61.c: 10:     LCDPutStr("23:59:00");
   629  0762  300F               	movlw	low (STR_2| (0+32768))
   630  0763  00F7               	movwf	LCDPutStr@str
   631  0764  3088               	movlw	high (STR_2| (0+32768))
   632  0765  00F8               	movwf	LCDPutStr@str+1
   633  0766  3187  27D3  3187   	fcall	_LCDPutStr
   634  0769                     l11:	
   635                           ;Assignment 61.c: 11:     while(1);
   636                           
   637  0769                     l12:
   638  0769  2F69               	goto	l11
   639  076A  3180  2802         	ljmp	start
   640  076C                     __end_of_main:
   641                           
   642                           	psect	text1
   643  078C                     __ptext1:	
   644 ;; *************** function _LCD_Initialize *****************
   645 ;; Defined at:
   646 ;;		line 46 in file "lcd.c"
   647 ;; Parameters:    Size  Location     Type
   648 ;;		None
   649 ;; Auto vars:     Size  Location     Type
   650 ;;		None
   651 ;; Return value:  Size  Location     Type
   652 ;;                  1    wreg      void 
   653 ;; Registers used:
   654 ;;		wreg, status,2, status,0, pclath, cstack
   655 ;; Tracked objects:
   656 ;;		On entry : 0/0
   657 ;;		On exit  : 0/0
   658 ;;		Unchanged: 0/0
   659 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
   660 ;;      Params:         0       0       0       0       0       0       0       0
   661 ;;      Locals:         0       0       0       0       0       0       0       0
   662 ;;      Temps:          1       0       0       0       0       0       0       0
   663 ;;      Totals:         1       0       0       0       0       0       0       0
   664 ;;Total ram usage:        1 bytes
   665 ;; Hardware stack levels used: 1
   666 ;; Hardware stack levels required when called: 2
   667 ;; This function calls:
   668 ;;		_LCDPutCmd
   669 ;; This function is called by:
   670 ;;		_main
   671 ;; This function uses a non-reentrant model
   672 ;;
   673                           
   674  078C                     _LCD_Initialize:	
   675                           ;psect for function _LCD_Initialize
   676                           
   677  078C                     l686:	
   678                           ;incstack = 0
   679                           ; Regs used in _LCD_Initialize: [wreg+status,2+status,0+pclath+cstack]
   680                           
   681                           
   682                           ;lcd.c: 49:     PORTC = 0;
   683  078C  0020               	movlb	0	; select bank0
   684  078D  018E               	clrf	14	;volatile
   685                           
   686                           ;lcd.c: 51:     TRISC = 0x00;
   687  078E  0021               	movlb	1	; select bank1
   688  078F  018E               	clrf	14	;volatile
   689  0790                     l688:
   690                           
   691                           ;lcd.c: 57:     _delay((unsigned long)((15)*(1000000/4000.0)));
   692  0790  3005               	movlw	5
   693  0791  00F7               	movwf	??_LCD_Initialize
   694  0792  30DE               	movlw	222
   695  0793                     u157:
   696  0793  0B89               	decfsz	9,f
   697  0794  2F93               	goto	u157
   698  0795  0BF7               	decfsz	??_LCD_Initialize,f
   699  0796  2F93               	goto	u157
   700  0797                     l690:
   701                           
   702                           ;lcd.c: 60:     LCDPutCmd(0x32);
   703  0797  3032               	movlw	50
   704  0798  3187  272E  3187   	fcall	_LCDPutCmd
   705  079B                     l692:
   706                           
   707                           ;lcd.c: 63:     LCDPutCmd(0x28);
   708  079B  3028               	movlw	40
   709  079C  3187  272E  3187   	fcall	_LCDPutCmd
   710  079F                     l694:
   711                           
   712                           ;lcd.c: 66:     LCDPutCmd(0x0C);
   713  079F  300C               	movlw	12
   714  07A0  3187  272E  3187   	fcall	_LCDPutCmd
   715  07A3                     l696:
   716                           
   717                           ;lcd.c: 68:     LCDPutCmd(0x01);
   718  07A3  3001               	movlw	1
   719  07A4  3187  272E  3187   	fcall	_LCDPutCmd
   720  07A7                     l698:
   721                           
   722                           ;lcd.c: 71:     LCDPutCmd(0x06);
   723  07A7  3006               	movlw	6
   724  07A8  3187  272E  3187   	fcall	_LCDPutCmd
   725  07AB                     l27:
   726  07AB  0008               	return
   727  07AC                     __end_of_LCD_Initialize:
   728                           
   729                           	psect	text2
   730  07D3                     __ptext2:	
   731 ;; *************** function _LCDPutStr *****************
   732 ;; Defined at:
   733 ;;		line 135 in file "lcd.c"
   734 ;; Parameters:    Size  Location     Type
   735 ;;  str             2    7[COMMON] PTR const unsigned char 
   736 ;;		 -> STR_2(9), STR_1(15), 
   737 ;; Auto vars:     Size  Location     Type
   738 ;;  h               1   12[COMMON] unsigned char 
   739 ;;  i               1   13[COMMON] unsigned char 
   740 ;; Return value:  Size  Location     Type
   741 ;;                  1    wreg      void 
   742 ;; Registers used:
   743 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   744 ;; Tracked objects:
   745 ;;		On entry : 0/0
   746 ;;		On exit  : 0/0
   747 ;;		Unchanged: 0/0
   748 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
   749 ;;      Params:         2       0       0       0       0       0       0       0
   750 ;;      Locals:         2       0       0       0       0       0       0       0
   751 ;;      Temps:          3       0       0       0       0       0       0       0
   752 ;;      Totals:         7       0       0       0       0       0       0       0
   753 ;;Total ram usage:        7 bytes
   754 ;; Hardware stack levels used: 1
   755 ;; Hardware stack levels required when called: 2
   756 ;; This function calls:
   757 ;;		_LCDPutChar
   758 ;; This function is called by:
   759 ;;		_main
   760 ;; This function uses a non-reentrant model
   761 ;;
   762                           
   763  07D3                     _LCDPutStr:	
   764                           ;psect for function _LCDPutStr
   765                           
   766  07D3                     l714:	
   767                           ;incstack = 0
   768                           ; Regs used in _LCDPutStr: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   769                           
   770                           
   771                           ;lcd.c: 135: void LCDPutStr(const char *str);lcd.c: 136: {;lcd.c: 137:     uint8_t i=0;
   772  07D3  01FD               	clrf	LCDPutStr@i
   773                           
   774                           ;lcd.c: 140:     while (str[i])
   775  07D4  2FEC               	goto	l722
   776  07D5                     l716:
   777                           
   778                           ;lcd.c: 141:     {;lcd.c: 142:         uint8_t h = i++;
   779  07D5  087D               	movf	LCDPutStr@i,w
   780  07D6  00F9               	movwf	??_LCDPutStr
   781  07D7  0879               	movf	??_LCDPutStr,w
   782  07D8  00FC               	movwf	LCDPutStr@h
   783  07D9                     l718:
   784  07D9  3001               	movlw	1
   785  07DA  00F9               	movwf	??_LCDPutStr
   786  07DB  0879               	movf	??_LCDPutStr,w
   787  07DC  07FD               	addwf	LCDPutStr@i,f
   788  07DD                     l720:
   789                           
   790                           ;lcd.c: 144:         LCDPutChar(str[h]);
   791  07DD  0878               	movf	LCDPutStr@str+1,w
   792  07DE  00FA               	movwf	??_LCDPutStr+1
   793  07DF  0877               	movf	LCDPutStr@str,w
   794  07E0  00F9               	movwf	??_LCDPutStr
   795  07E1  087C               	movf	LCDPutStr@h,w
   796  07E2  0779               	addwf	??_LCDPutStr,w
   797  07E3  0084               	movwf	4
   798  07E4  087A               	movf	??_LCDPutStr+1,w
   799  07E5  1803               	skipnc
   800  07E6  0A7A               	incf	??_LCDPutStr+1,w
   801  07E7  0085               	movwf	5
   802  07E8  0800               	movf	0,w	;code access
   803  07E9  3187  2711  3187   	fcall	_LCDPutChar
   804  07EC                     l722:
   805                           
   806                           ;lcd.c: 140:     while (str[i])
   807  07EC  0878               	movf	LCDPutStr@str+1,w
   808  07ED  00FA               	movwf	??_LCDPutStr+1
   809  07EE  0877               	movf	LCDPutStr@str,w
   810  07EF  00F9               	movwf	??_LCDPutStr
   811  07F0  087D               	movf	LCDPutStr@i,w
   812  07F1  0779               	addwf	??_LCDPutStr,w
   813  07F2  0084               	movwf	4
   814  07F3  087A               	movf	??_LCDPutStr+1,w
   815  07F4  1803               	skipnc
   816  07F5  0A7A               	incf	??_LCDPutStr+1,w
   817  07F6  0085               	movwf	5
   818  07F7  0012               	moviw fsr0++
   819  07F8  1D03               	btfss	3,2
   820  07F9  2FFB               	goto	u141
   821  07FA  2FFC               	goto	u140
   822  07FB                     u141:
   823  07FB  2FD5               	goto	l716
   824  07FC                     u140:
   825  07FC                     l42:
   826  07FC  0008               	return
   827  07FD                     __end_of_LCDPutStr:
   828                           
   829                           	psect	text3
   830  0711                     __ptext3:	
   831 ;; *************** function _LCDPutChar *****************
   832 ;; Defined at:
   833 ;;		line 103 in file "lcd.c"
   834 ;; Parameters:    Size  Location     Type
   835 ;;  ch              1    wreg     unsigned char 
   836 ;; Auto vars:     Size  Location     Type
   837 ;;  ch              1    6[COMMON] unsigned char 
   838 ;; Return value:  Size  Location     Type
   839 ;;                  1    wreg      void 
   840 ;; Registers used:
   841 ;;		wreg, status,2, status,0, pclath, cstack
   842 ;; Tracked objects:
   843 ;;		On entry : 0/0
   844 ;;		On exit  : 0/0
   845 ;;		Unchanged: 0/0
   846 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
   847 ;;      Params:         0       0       0       0       0       0       0       0
   848 ;;      Locals:         1       0       0       0       0       0       0       0
   849 ;;      Temps:          2       0       0       0       0       0       0       0
   850 ;;      Totals:         3       0       0       0       0       0       0       0
   851 ;;Total ram usage:        3 bytes
   852 ;; Hardware stack levels used: 1
   853 ;; Hardware stack levels required when called: 1
   854 ;; This function calls:
   855 ;;		_LCDWriteNibble
   856 ;; This function is called by:
   857 ;;		_LCDPutStr
   858 ;; This function uses a non-reentrant model
   859 ;;
   860                           
   861  0711                     _LCDPutChar:	
   862                           ;psect for function _LCDPutChar
   863                           
   864                           
   865                           ;incstack = 0
   866                           ; Regs used in _LCDPutChar: [wreg+status,2+status,0+pclath+cstack]
   867                           ;LCDPutChar@ch stored from wreg
   868  0711  00F6               	movwf	LCDPutChar@ch
   869  0712                     l678:
   870                           
   871                           ;lcd.c: 103: void LCDPutChar(uint8_t ch);lcd.c: 104: {;lcd.c: 105:     _delay((unsigned 
      +                          long)((5)*(1000000/4000.0)));
   872  0712  30FA               	movlw	250
   873  0713                     u167:
   874  0713  3200               	nop2
   875  0714  0B89               	decfsz	9,f
   876  0715  2F13               	goto	u167
   877  0716                     l680:
   878                           
   879                           ;lcd.c: 108:     LCDWriteNibble(ch,1);
   880  0716  01F0               	clrf	LCDWriteNibble@rs
   881  0717  0AF0               	incf	LCDWriteNibble@rs,f
   882  0718  0876               	movf	LCDPutChar@ch,w
   883  0719  3187  276C  3187   	fcall	_LCDWriteNibble
   884  071C                     l682:
   885                           
   886                           ;lcd.c: 111:     ch = (ch << 4);
   887  071C  0876               	movf	LCDPutChar@ch,w
   888  071D  00F4               	movwf	??_LCDPutChar
   889  071E  3003               	movlw	3
   890  071F                     u105:
   891  071F  35F4               	lslf	??_LCDPutChar,f
   892  0720  3EFF               	addlw	-1
   893  0721  1D03               	skipz
   894  0722  2F1F               	goto	u105
   895  0723  3574               	lslf	??_LCDPutChar,w
   896  0724  00F5               	movwf	??_LCDPutChar+1
   897  0725  0875               	movf	??_LCDPutChar+1,w
   898  0726  00F6               	movwf	LCDPutChar@ch
   899  0727                     l684:
   900                           
   901                           ;lcd.c: 114:     LCDWriteNibble(ch,1);
   902  0727  01F0               	clrf	LCDWriteNibble@rs
   903  0728  0AF0               	incf	LCDWriteNibble@rs,f
   904  0729  0876               	movf	LCDPutChar@ch,w
   905  072A  3187  276C  3187   	fcall	_LCDWriteNibble
   906  072D                     l33:
   907  072D  0008               	return
   908  072E                     __end_of_LCDPutChar:
   909                           
   910                           	psect	text4
   911  07AC                     __ptext4:	
   912 ;; *************** function _LCDGoto *****************
   913 ;; Defined at:
   914 ;;		line 149 in file "lcd.c"
   915 ;; Parameters:    Size  Location     Type
   916 ;;  pos             1    wreg     unsigned char 
   917 ;;  ln              1    7[COMMON] unsigned char 
   918 ;; Auto vars:     Size  Location     Type
   919 ;;  pos             1   10[COMMON] unsigned char 
   920 ;; Return value:  Size  Location     Type
   921 ;;                  1    wreg      void 
   922 ;; Registers used:
   923 ;;		wreg, status,2, status,0, pclath, cstack
   924 ;; Tracked objects:
   925 ;;		On entry : 0/0
   926 ;;		On exit  : 0/0
   927 ;;		Unchanged: 0/0
   928 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
   929 ;;      Params:         1       0       0       0       0       0       0       0
   930 ;;      Locals:         3       0       0       0       0       0       0       0
   931 ;;      Temps:          0       0       0       0       0       0       0       0
   932 ;;      Totals:         4       0       0       0       0       0       0       0
   933 ;;Total ram usage:        4 bytes
   934 ;; Hardware stack levels used: 1
   935 ;; Hardware stack levels required when called: 2
   936 ;; This function calls:
   937 ;;		_LCDPutCmd
   938 ;; This function is called by:
   939 ;;		_main
   940 ;; This function uses a non-reentrant model
   941 ;;
   942                           
   943  07AC                     _LCDGoto:	
   944                           ;psect for function _LCDGoto
   945                           
   946                           
   947                           ;incstack = 0
   948                           ; Regs used in _LCDGoto: [wreg+status,2+status,0+pclath+cstack]
   949                           ;LCDGoto@pos stored from wreg
   950  07AC  00FA               	movwf	LCDGoto@pos
   951  07AD                     l700:
   952                           
   953                           ;lcd.c: 149: void LCDGoto(uint8_t pos,uint8_t ln);lcd.c: 150: {;lcd.c: 152:     if ((ln 
      +                          > (2 -1)) || (pos > (16 -1)))
   954  07AD  3002               	movlw	2
   955  07AE  0277               	subwf	LCDGoto@ln,w
   956  07AF  1803               	skipnc
   957  07B0  2FB2               	goto	u111
   958  07B1  2FB3               	goto	u110
   959  07B2                     u111:
   960  07B2  2FD2               	goto	l48
   961  07B3                     u110:
   962  07B3                     l702:
   963  07B3  3010               	movlw	16
   964  07B4  027A               	subwf	LCDGoto@pos,w
   965  07B5  1C03               	skipc
   966  07B6  2FB8               	goto	u121
   967  07B7  2FB9               	goto	u120
   968  07B8                     u121:
   969  07B8  2FBA               	goto	l704
   970  07B9                     u120:
   971  07B9  2FD2               	goto	l48
   972  07BA                     l704:
   973                           
   974                           ;lcd.c: 159:     LCDPutCmd((ln == 1) ? (0xC0 | pos) : (0x80 | pos));
   975  07BA  0377               	decf	LCDGoto@ln,w
   976  07BB  1903               	btfsc	3,2
   977  07BC  2FBE               	goto	u131
   978  07BD  2FBF               	goto	u130
   979  07BE                     u131:
   980  07BE  2FC5               	goto	l708
   981  07BF                     u130:
   982  07BF                     l706:
   983  07BF  3080               	movlw	128
   984  07C0  047A               	iorwf	LCDGoto@pos,w
   985  07C1  00F8               	movwf	_LCDGoto$103
   986  07C2  3000               	movlw	0
   987  07C3  00F9               	movwf	_LCDGoto$103+1
   988  07C4  2FCA               	goto	l710
   989  07C5                     l708:
   990  07C5  30C0               	movlw	192
   991  07C6  047A               	iorwf	LCDGoto@pos,w
   992  07C7  00F8               	movwf	_LCDGoto$103
   993  07C8  3000               	movlw	0
   994  07C9  00F9               	movwf	_LCDGoto$103+1
   995  07CA                     l710:
   996  07CA  0878               	movf	_LCDGoto$103,w
   997  07CB  3187  272E  3187   	fcall	_LCDPutCmd
   998  07CE                     l712:
   999                           
  1000                           ;lcd.c: 162:     _delay((unsigned long)((5)*(1000000/4000.0)));
  1001  07CE  30FA               	movlw	250
  1002  07CF                     u177:
  1003  07CF  3200               	nop2
  1004  07D0  0B89               	decfsz	9,f
  1005  07D1  2FCF               	goto	u177
  1006  07D2                     l48:
  1007  07D2  0008               	return
  1008  07D3                     __end_of_LCDGoto:
  1009                           
  1010                           	psect	text5
  1011  072E                     __ptext5:	
  1012 ;; *************** function _LCDPutCmd *****************
  1013 ;; Defined at:
  1014 ;;		line 118 in file "lcd.c"
  1015 ;; Parameters:    Size  Location     Type
  1016 ;;  ch              1    wreg     unsigned char 
  1017 ;; Auto vars:     Size  Location     Type
  1018 ;;  ch              1    6[COMMON] unsigned char 
  1019 ;; Return value:  Size  Location     Type
  1020 ;;                  1    wreg      void 
  1021 ;; Registers used:
  1022 ;;		wreg, status,2, status,0, pclath, cstack
  1023 ;; Tracked objects:
  1024 ;;		On entry : 0/0
  1025 ;;		On exit  : 0/0
  1026 ;;		Unchanged: 0/0
  1027 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  1028 ;;      Params:         0       0       0       0       0       0       0       0
  1029 ;;      Locals:         1       0       0       0       0       0       0       0
  1030 ;;      Temps:          2       0       0       0       0       0       0       0
  1031 ;;      Totals:         3       0       0       0       0       0       0       0
  1032 ;;Total ram usage:        3 bytes
  1033 ;; Hardware stack levels used: 1
  1034 ;; Hardware stack levels required when called: 1
  1035 ;; This function calls:
  1036 ;;		_LCDWriteNibble
  1037 ;; This function is called by:
  1038 ;;		_LCD_Initialize
  1039 ;;		_LCDGoto
  1040 ;; This function uses a non-reentrant model
  1041 ;;
  1042                           
  1043  072E                     _LCDPutCmd:	
  1044                           ;psect for function _LCDPutCmd
  1045                           
  1046                           
  1047                           ;incstack = 0
  1048                           ; Regs used in _LCDPutCmd: [wreg+status,2+status,0+pclath+cstack]
  1049                           ;LCDPutCmd@ch stored from wreg
  1050  072E  00F6               	movwf	LCDPutCmd@ch
  1051  072F                     l668:
  1052                           
  1053                           ;lcd.c: 118: void LCDPutCmd(uint8_t ch);lcd.c: 119: {;lcd.c: 120:     _delay((unsigned l
      +                          ong)((5)*(1000000/4000.0)));
  1054  072F  30FA               	movlw	250
  1055  0730                     u187:
  1056  0730  3200               	nop2
  1057  0731  0B89               	decfsz	9,f
  1058  0732  2F30               	goto	u187
  1059  0733                     l670:
  1060                           
  1061                           ;lcd.c: 123:     LCDWriteNibble(ch,0);
  1062  0733  01F0               	clrf	LCDWriteNibble@rs
  1063  0734  0876               	movf	LCDPutCmd@ch,w
  1064  0735  3187  276C  3187   	fcall	_LCDWriteNibble
  1065  0738                     l672:
  1066                           
  1067                           ;lcd.c: 126:     ch = (ch << 4);
  1068  0738  0876               	movf	LCDPutCmd@ch,w
  1069  0739  00F4               	movwf	??_LCDPutCmd
  1070  073A  3003               	movlw	3
  1071  073B                     u95:
  1072  073B  35F4               	lslf	??_LCDPutCmd,f
  1073  073C  3EFF               	addlw	-1
  1074  073D  1D03               	skipz
  1075  073E  2F3B               	goto	u95
  1076  073F  3574               	lslf	??_LCDPutCmd,w
  1077  0740  00F5               	movwf	??_LCDPutCmd+1
  1078  0741  0875               	movf	??_LCDPutCmd+1,w
  1079  0742  00F6               	movwf	LCDPutCmd@ch
  1080  0743                     l674:
  1081                           
  1082                           ;lcd.c: 128:     _delay((unsigned long)((1)*(1000000/4000.0)));
  1083  0743  3053               	movlw	83
  1084  0744                     u197:
  1085  0744  0B89               	decfsz	9,f
  1086  0745  2F44               	goto	u197
  1087  0746  0000               	nop
  1088  0747                     l676:
  1089                           
  1090                           ;lcd.c: 131:     LCDWriteNibble(ch,0);
  1091  0747  01F0               	clrf	LCDWriteNibble@rs
  1092  0748  0876               	movf	LCDPutCmd@ch,w
  1093  0749  3187  276C  3187   	fcall	_LCDWriteNibble
  1094  074C                     l36:
  1095  074C  0008               	return
  1096  074D                     __end_of_LCDPutCmd:
  1097                           
  1098                           	psect	text6
  1099  076C                     __ptext6:	
  1100 ;; *************** function _LCDWriteNibble *****************
  1101 ;; Defined at:
  1102 ;;		line 76 in file "lcd.c"
  1103 ;; Parameters:    Size  Location     Type
  1104 ;;  ch              1    wreg     unsigned char 
  1105 ;;  rs              1    0[COMMON] unsigned char 
  1106 ;; Auto vars:     Size  Location     Type
  1107 ;;  ch              1    3[COMMON] unsigned char 
  1108 ;; Return value:  Size  Location     Type
  1109 ;;                  1    wreg      void 
  1110 ;; Registers used:
  1111 ;;		wreg, status,2, status,0
  1112 ;; Tracked objects:
  1113 ;;		On entry : 0/0
  1114 ;;		On exit  : 0/0
  1115 ;;		Unchanged: 0/0
  1116 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  1117 ;;      Params:         1       0       0       0       0       0       0       0
  1118 ;;      Locals:         1       0       0       0       0       0       0       0
  1119 ;;      Temps:          2       0       0       0       0       0       0       0
  1120 ;;      Totals:         4       0       0       0       0       0       0       0
  1121 ;;Total ram usage:        4 bytes
  1122 ;; Hardware stack levels used: 1
  1123 ;; This function calls:
  1124 ;;		Nothing
  1125 ;; This function is called by:
  1126 ;;		_LCDPutChar
  1127 ;;		_LCDPutCmd
  1128 ;; This function uses a non-reentrant model
  1129 ;;
  1130                           
  1131  076C                     _LCDWriteNibble:	
  1132                           ;psect for function _LCDWriteNibble
  1133                           
  1134                           
  1135                           ;incstack = 0
  1136                           ; Regs used in _LCDWriteNibble: [wreg+status,2+status,0]
  1137                           ;LCDWriteNibble@ch stored from wreg
  1138  076C  00F3               	movwf	LCDWriteNibble@ch
  1139  076D                     l654:
  1140                           
  1141                           ;lcd.c: 76: void LCDWriteNibble(uint8_t ch,uint8_t rs);lcd.c: 77: {;lcd.c: 79:     ch = 
      +                          (ch >> 4);
  1142  076D  0873               	movf	LCDWriteNibble@ch,w
  1143  076E  00F1               	movwf	??_LCDWriteNibble
  1144  076F  3004               	movlw	4
  1145  0770                     u85:
  1146  0770  36F1               	lsrf	??_LCDWriteNibble,f
  1147  0771  0B89               	decfsz	9,f
  1148  0772  2F70               	goto	u85
  1149  0773  0871               	movf	??_LCDWriteNibble,w
  1150  0774  00F2               	movwf	??_LCDWriteNibble+1
  1151  0775  0872               	movf	??_LCDWriteNibble+1,w
  1152  0776  00F3               	movwf	LCDWriteNibble@ch
  1153  0777                     l656:
  1154                           
  1155                           ;lcd.c: 82:     ch = (ch & 0x0F);
  1156  0777  0873               	movf	LCDWriteNibble@ch,w
  1157  0778  390F               	andlw	15
  1158  0779  00F1               	movwf	??_LCDWriteNibble
  1159  077A  0871               	movf	??_LCDWriteNibble,w
  1160  077B  00F3               	movwf	LCDWriteNibble@ch
  1161  077C                     l658:
  1162                           
  1163                           ;lcd.c: 85:     PORTC = (PORTC & 0xF0);
  1164  077C  0020               	movlb	0	; select bank0
  1165  077D  080E               	movf	14,w	;volatile
  1166  077E  39F0               	andlw	240
  1167  077F  008E               	movwf	14	;volatile
  1168                           
  1169                           ;lcd.c: 88:     PORTC = (PORTC | ch);
  1170  0780  080E               	movf	14,w	;volatile
  1171  0781  0473               	iorwf	LCDWriteNibble@ch,w
  1172  0782  008E               	movwf	14	;volatile
  1173  0783                     l660:
  1174                           
  1175                           ;lcd.c: 91:     PORTCbits.RC4 = rs;
  1176  0783  0C70               	rrf	LCDWriteNibble@rs,w
  1177  0784  1C03               	skipc
  1178  0785  120E               	bcf	14,4	;volatile
  1179  0786  1803               	skipnc
  1180  0787  160E               	bsf	14,4	;volatile
  1181  0788                     l662:
  1182                           
  1183                           ;lcd.c: 94:     PORTCbits.RC5 = 0;
  1184  0788  128E               	bcf	14,5	;volatile
  1185  0789                     l664:
  1186                           
  1187                           ;lcd.c: 97:     PORTCbits.RC6 = 1;
  1188  0789  170E               	bsf	14,6	;volatile
  1189  078A                     l666:
  1190                           
  1191                           ;lcd.c: 100:     PORTCbits.RC6 = 0;
  1192  078A  130E               	bcf	14,6	;volatile
  1193  078B                     l30:
  1194  078B  0008               	return
  1195  078C                     __end_of_LCDWriteNibble:
  1196  007E                     btemp	set	126	;btemp
  1197  007E                     wtemp0	set	126
  1198                           
  1199                           	psect	idloc
  1200                           
  1201                           ;Config register IDLOC0 @ 0x8000
  1202                           ;	unspecified, using default values
  1203  8000                     	org	32768
  1204  8000  3FFF               	dw	16383
  1205                           
  1206                           ;Config register IDLOC1 @ 0x8001
  1207                           ;	unspecified, using default values
  1208  8001                     	org	32769
  1209  8001  3FFF               	dw	16383
  1210                           
  1211                           ;Config register IDLOC2 @ 0x8002
  1212                           ;	unspecified, using default values
  1213  8002                     	org	32770
  1214  8002  3FFF               	dw	16383
  1215                           
  1216                           ;Config register IDLOC3 @ 0x8003
  1217                           ;	unspecified, using default values
  1218  8003                     	org	32771
  1219  8003  3FFF               	dw	16383
  1220                           
  1221                           	psect	config
  1222                           
  1223                           ;Config register CONFIG1 @ 0x8007
  1224                           ;	Oscillator Selection Bits
  1225                           ;	FOSC = INTOSC, INTOSC oscillator: I/O function on CLKIN pin
  1226                           ;	Watchdog Timer Enable
  1227                           ;	WDTE = OFF, WDT disabled
  1228                           ;	Power-up Timer Enable
  1229                           ;	PWRTE = OFF, PWRT disabled
  1230                           ;	MCLR Pin Function Select
  1231                           ;	MCLRE = OFF, MCLR/VPP pin function is digital input
  1232                           ;	Flash Program Memory Code Protection
  1233                           ;	CP = OFF, Program memory code protection is disabled
  1234                           ;	Brown-out Reset Enable
  1235                           ;	BOREN = OFF, Brown-out Reset disabled
  1236                           ;	Clock Out Enable
  1237                           ;	CLKOUTEN = OFF, CLKOUT function is disabled. I/O or oscillator function on the CLKOUT 
      +                          pin
  1238                           ;	Internal/External Switchover Mode
  1239                           ;	IESO = OFF, Internal/External Switchover Mode is disabled
  1240                           ;	Fail-Safe Clock Monitor Enable
  1241                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
  1242  8007                     	org	32775
  1243  8007  09A4               	dw	2468
  1244                           
  1245                           ;Config register CONFIG2 @ 0x8008
  1246                           ;	Flash Memory Self-Write Protection
  1247                           ;	WRT = OFF, Write protection off
  1248                           ;	Stack Overflow/Underflow Reset Enable
  1249                           ;	STVREN = OFF, Stack Overflow or Underflow will not cause a Reset
  1250                           ;	Brown-out Reset Voltage Selection
  1251                           ;	BORV = LO, Brown-out Reset Voltage (Vbor), low trip point selected.
  1252                           ;	Low-Power Brown Out Reset
  1253                           ;	LPBOR = OFF, Low-Power BOR is disabled
  1254                           ;	Low-Voltage Programming Enable
  1255                           ;	LVP = OFF, High-voltage on MCLR/VPP must be used for programming
  1256  8008                     	org	32776
  1257  8008  1DFF               	dw	7679

Data Sizes:
    Strings     24
    Constant    0
    Data        0
    BSS         0
    Persistent  32
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80      0       0
    BANK1            80      0       0
    BANK2            80      0       0
    BANK3            80      0       0
    BANK4            80      0       0
    BANK5            80      0       0
    BANK6            16      0       0

Pointer List with Targets:

    LCDPutStr@str	PTR const unsigned char  size(2) Largest target is 15
		 -> STR_2(CODE[9]), STR_1(CODE[15]), 


Critical Paths under _main in COMMON

    _main->_LCDPutStr
    _LCD_Initialize->_LCDPutCmd
    _LCDPutStr->_LCDPutChar
    _LCDPutChar->_LCDWriteNibble
    _LCDGoto->_LCDPutCmd
    _LCDPutCmd->_LCDWriteNibble

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0    1934
                            _LCDGoto
                          _LCDPutStr
                     _LCD_Initialize
 ---------------------------------------------------------------------------------
 (1) _LCD_Initialize                                       1     1      0     461
                                              7 COMMON     1     1      0
                          _LCDPutCmd
 ---------------------------------------------------------------------------------
 (1) _LCDPutStr                                            7     5      2     726
                                              7 COMMON     7     5      2
                         _LCDPutChar
 ---------------------------------------------------------------------------------
 (2) _LCDPutChar                                           3     3      0     461
                                              4 COMMON     3     3      0
                     _LCDWriteNibble
 ---------------------------------------------------------------------------------
 (1) _LCDGoto                                              4     3      1     747
                                              7 COMMON     4     3      1
                          _LCDPutCmd
 ---------------------------------------------------------------------------------
 (2) _LCDPutCmd                                            3     3      0     461
                                              4 COMMON     3     3      0
                     _LCDWriteNibble
 ---------------------------------------------------------------------------------
 (3) _LCDWriteNibble                                       4     3      1     394
                                              0 COMMON     4     3      1
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _LCDGoto
     _LCDPutCmd
       _LCDWriteNibble
   _LCDPutStr
     _LCDPutChar
       _LCDWriteNibble
   _LCD_Initialize
     _LCDPutCmd

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             1F0      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      E       E       2      100.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
ABS                  0      0       0       4        0.0%
BITBANK0            50      0       0       5        0.0%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BANK0               50      0       0       6        0.0%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BITBANK1            50      0       0       7        0.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BANK1               50      0       0       8        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BITBANK2            50      0       0       9        0.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BANK2               50      0       0      10        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BITBANK3            50      0       0      11        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BANK3               50      0       0      12        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BITBANK4            50      0       0      13        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BANK4               50      0       0      14        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BITBANK5            50      0       0      15        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BANK5               50      0       0      16        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BITBANK6            10      0       0      17        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BANK6               10      0       0      18        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
DATA                 0      0       0      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V2.36 build 20220127204148 
Symbol Table                                                                                   Thu Apr 28 12:15:09 2022

         _LCD_Initialize 078C                       l11 0769                       l12 0769  
                     l30 078B                       l33 072D                       l42 07FC  
                     l27 07AB              ?_LCDPutChar 0070                       l36 074C  
                     l48 07D2                       u85 0770                       u95 073B  
                    l700 07AD                      l710 07CA                      l702 07B3  
                    l712 07CE                      l704 07BA                      l720 07DD  
                    l706 07BF                      l722 07EC                      l714 07D3  
                    l660 0783                      l708 07C5                      l716 07D5  
                    l724 074D                      l662 0788                      l654 076D  
                    l670 0733                      l718 07D9                      l726 0755  
                    l664 0789                      l656 0777                      l672 0738  
                    l680 0716                      l728 075C                      l666 078A  
                    l658 077C                      l674 0743                      l682 071C  
                    l690 0797                      l676 0747                      l668 072F  
                    l684 0727                      l692 079B                      l678 0712  
                    l694 079F                      l686 078C                      l696 07A3  
                    l688 0790                      l698 07A7                      u110 07B3  
                    u111 07B2                      u120 07B9                      u121 07B8  
                    u105 071F                      u130 07BF                      u131 07BE  
                    u140 07FC                      u141 07FB                      u157 0793  
                    u167 0713                      u177 07CF                      u187 0730  
                    u197 0744                      wreg 0009          __end_of_LCDGoto 07D3  
                   STR_1 0800                     STR_2 080F                     _main 074D  
                   fsr0h 0005                     indf0 0000                     fsr0l 0004  
                   btemp 007E                     start 0002   __end_of_LCD_Initialize 07AC  
            LCDPutCmd@ch 0076                    ?_main 0070                    _PORTC 000E  
                  _TRISC 008E                    status 0003                    wtemp0 007E  
        ?_LCD_Initialize 0070          __initialization 07FD             __end_of_main 076C  
                 ??_main 007E                ??_LCDGoto 0078        __end_of_LCDPutCmd 074D  
           LCDPutChar@ch 0076        __end_of_LCDPutStr 07FD             LCDPutStr@str 0077  
         _LCDWriteNibble 076C   __end_of_LCDWriteNibble 078C  __end_of__initialization 07FD  
              LCDGoto@ln 0077           __pcstackCOMMON 0070             ??_LCDPutChar 0074  
        ?_LCDWriteNibble 0070       __end_of_LCDPutChar 072E               __pmaintext 074D  
                _LCDGoto 07AC         ??_LCD_Initialize 0077                  __ptext1 078C  
                __ptext2 07D3                  __ptext3 0711                  __ptext4 07AC  
                __ptext5 072E                  __ptext6 076C                _LCDPutCmd 072E  
              _LCDPutStr 07D3     end_of_initialization 07FD                _PORTCbits 000E  
             ?_LCDPutCmd 0070               ?_LCDPutStr 0077               LCDGoto@pos 007A  
             LCDPutStr@h 007C               LCDPutStr@i 007D      start_initialization 07FD  
       ??_LCDWriteNibble 0071                 ?_LCDGoto 0077                ___latbits 0002  
            ??_LCDPutCmd 0074              ??_LCDPutStr 0079         LCDWriteNibble@ch 0073  
       LCDWriteNibble@rs 0070              _LCDGoto$103 0078               _LCDPutChar 0711  
          __pstringtext1 0800            __pstringtext2 080F            __pstringtext3 0000  
