

Microchip MPLAB XC8 Assembler V2.36 build 20220127204148 
                                                                                               Thu Mar 03 17:17:46 2022

Microchip MPLAB XC8 C Compiler v2.36 (Free license) build 20220127204148 Og1 
     1                           	processor	18F67K22
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     8                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     9                           	psect	text0,global,reloc=2,class=CODE,delta=1
    10                           	psect	text1,global,reloc=2,class=CODE,delta=1,group=1
    11                           	psect	text2,global,reloc=2,class=CODE,delta=1,group=1
    12                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    13                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    14                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    15                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    16  0000                     
    17                           ; Version 2.35
    18                           ; Generated 05/05/2021 GMT
    19                           ; 
    20                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
    21                           ; All rights reserved.
    22                           ; 
    23                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    24                           ; 
    25                           ; Redistribution and use in source and binary forms, with or without modification, are
    26                           ; permitted provided that the following conditions are met:
    27                           ; 
    28                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    29                           ;        conditions and the following disclaimer.
    30                           ; 
    31                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    32                           ;        of conditions and the following disclaimer in the documentation and/or other
    33                           ;        materials provided with the distribution. Publication is not required when
    34                           ;        this file is used in an embedded application.
    35                           ; 
    36                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    37                           ;        software without specific prior written permission.
    38                           ; 
    39                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    40                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    41                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    42                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    43                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    44                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    45                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    46                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    47                           ; 
    48                           ; 
    49                           ; Code-generator required, PIC18F67K22 Definitions
    50                           ; 
    51                           ; SFR Addresses
    52  0000                     
    53                           	psect	idataCOMRAM
    54  01FDAA                     __pidataCOMRAM:
    55                           	callstack 0
    56                           
    57                           ;initializer for main@F6160
    58  01FDAA  00C0               	dw	192
    59  01FDAC  00F9               	dw	249
    60  01FDAE  00A4               	dw	164
    61  01FDB0  00B0               	dw	176
    62  01FDB2  0099               	dw	153
    63  01FDB4  0092               	dw	146
    64  01FDB6  0082               	dw	130
    65  01FDB8  00F8               	dw	248
    66  01FDBA  0080               	dw	128
    67  01FDBC  0090               	dw	144
    68  0000                     _LATA	set	3977
    69  0000                     _LATD	set	3980
    70  0000                     _TRISA	set	3986
    71  0000                     _TRISD	set	3989
    72                           
    73                           ; #config settings
    74                           
    75                           	psect	cinit
    76  01FDBE                     __pcinit:
    77                           	callstack 0
    78  01FDBE                     start_initialization:
    79                           	callstack 0
    80  01FDBE                     __initialization:
    81                           	callstack 0
    82                           
    83                           ; Initialize objects allocated to COMRAM (20 bytes)
    84                           ; load TBLPTR registers with __pidataCOMRAM
    85  01FDBE  0EAA               	movlw	low __pidataCOMRAM
    86  01FDC0  6EF6               	movwf	tblptrl,c
    87  01FDC2  0EFD               	movlw	high __pidataCOMRAM
    88  01FDC4  6EF7               	movwf	tblptrh,c
    89  01FDC6  0E01               	movlw	low (__pidataCOMRAM shr (0+16))
    90  01FDC8  6EF8               	movwf	tblptru,c
    91  01FDCA  EE00  F020         	lfsr	0,__pdataCOMRAM
    92  01FDCE  EE10 F014          	lfsr	1,20
    93  01FDD2                     copy_data0:
    94  01FDD2  0009               	tblrd		*+
    95  01FDD4  CFF5 FFEE          	movff	tablat,postinc0
    96  01FDD8  50E5               	movf	postdec1,w,c
    97  01FDDA  50E1               	movf	fsr1l,w,c
    98  01FDDC  E1FA               	bnz	copy_data0
    99  01FDDE                     end_of_initialization:
   100                           	callstack 0
   101  01FDDE                     __end_of__initialization:
   102                           	callstack 0
   103  01FDDE  0100               	movlb	0
   104  01FDE0  EFF2  F0FE         	goto	_main	;jump to C main() function
   105                           
   106                           	psect	dataCOMRAM
   107  000020                     __pdataCOMRAM:
   108                           	callstack 0
   109  000020                     main@F6160:
   110                           	callstack 0
   111  000020                     	ds	20
   112                           
   113                           	psect	cstackCOMRAM
   114  000001                     __pcstackCOMRAM:
   115                           	callstack 0
   116  000001                     ?___awdiv:
   117                           	callstack 0
   118  000001                     ?___awmod:
   119                           	callstack 0
   120  000001                     ___awdiv@dividend:
   121                           	callstack 0
   122  000001                     ___awmod@dividend:
   123                           	callstack 0
   124                           
   125                           ; 2 bytes @ 0x0
   126  000001                     	ds	2
   127  000003                     ___awdiv@divisor:
   128                           	callstack 0
   129  000003                     ___awmod@divisor:
   130                           	callstack 0
   131                           
   132                           ; 2 bytes @ 0x2
   133  000003                     	ds	2
   134  000005                     ___awdiv@counter:
   135                           	callstack 0
   136  000005                     ___awmod@counter:
   137                           	callstack 0
   138                           
   139                           ; 1 bytes @ 0x4
   140  000005                     	ds	1
   141  000006                     ___awdiv@sign:
   142                           	callstack 0
   143  000006                     ___awmod@sign:
   144                           	callstack 0
   145                           
   146                           ; 1 bytes @ 0x5
   147  000006                     	ds	1
   148  000007                     ___awdiv@quotient:
   149                           	callstack 0
   150                           
   151                           ; 2 bytes @ 0x6
   152  000007                     	ds	2
   153  000009                     ??_main:
   154                           
   155                           ; 1 bytes @ 0x8
   156  000009                     	ds	1
   157  00000A                     main@a:
   158                           	callstack 0
   159                           
   160                           ; 20 bytes @ 0x9
   161  00000A                     	ds	20
   162  00001E                     main@i:
   163                           	callstack 0
   164                           
   165                           ; 2 bytes @ 0x1D
   166  00001E                     	ds	2
   167                           
   168 ;;
   169 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
   170 ;;
   171 ;; *************** function _main *****************
   172 ;; Defined at:
   173 ;;		line 89 in file "Assignment 21.c"
   174 ;; Parameters:    Size  Location     Type
   175 ;;		None
   176 ;; Auto vars:     Size  Location     Type
   177 ;;  i               2   29[COMRAM] int 
   178 ;;  a              20    9[COMRAM] int [10]
   179 ;; Return value:  Size  Location     Type
   180 ;;                  1    wreg      void 
   181 ;; Registers used:
   182 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
   183 ;; Tracked objects:
   184 ;;		On entry : 0/0
   185 ;;		On exit  : 0/0
   186 ;;		Unchanged: 0/0
   187 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   188 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   189 ;;      Locals:        22       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   190 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   191 ;;      Totals:        23       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   192 ;;Total ram usage:       23 bytes
   193 ;; Hardware stack levels required when called: 1
   194 ;; This function calls:
   195 ;;		___awdiv
   196 ;;		___awmod
   197 ;; This function is called by:
   198 ;;		Startup code after reset
   199 ;; This function uses a non-reentrant model
   200 ;;
   201                           
   202                           	psect	text0
   203  01FDE4                     __ptext0:
   204                           	callstack 0
   205  01FDE4                     _main:
   206                           	callstack 30
   207  01FDE4                     
   208                           ;Assignment 21.c: 90:     TRISA = 0b00000000;
   209  01FDE4  0E00               	movlw	0
   210  01FDE6  6E92               	movwf	146,c	;volatile
   211                           
   212                           ;Assignment 21.c: 91:     TRISD = 0b00000000;
   213  01FDE8  0E00               	movlw	0
   214  01FDEA  6E95               	movwf	149,c	;volatile
   215  01FDEC                     
   216                           ;Assignment 21.c: 93:     int a[10] = {0xC0,0xF9,0xA4,0xB0,0x99,0x92,0x82,0xF8,0x80,0x90
      +                          };
   217  01FDEC  EE20  F020         	lfsr	2,main@F6160
   218  01FDF0  EE10  F00A         	lfsr	1,main@a
   219  01FDF4  0E13               	movlw	19
   220  01FDF6                     u271:
   221  01FDF6  CFDB FFE3          	movff	plusw2,plusw1
   222  01FDFA  06E8               	decf	wreg,f,c
   223  01FDFC  E2FC               	bc	u271
   224  01FDFE                     
   225                           ;Assignment 21.c: 94:     for (int i=0 ; i<100 ; i++){
   226  01FDFE  0E00               	movlw	0
   227  01FE00  6E1F               	movwf	(main@i+1)^0,c
   228  01FE02  0E00               	movlw	0
   229  01FE04  6E1E               	movwf	main@i^0,c
   230  01FE06                     l883:
   231                           
   232                           ;Assignment 21.c: 95:         LATD = a[i/10];
   233  01FE06  C01E  F001         	movff	main@i,___awdiv@dividend
   234  01FE0A  C01F  F002         	movff	main@i+1,___awdiv@dividend+1
   235  01FE0E  0E00               	movlw	0
   236  01FE10  6E04               	movwf	(___awdiv@divisor+1)^0,c
   237  01FE12  0E0A               	movlw	10
   238  01FE14  6E03               	movwf	___awdiv@divisor^0,c
   239  01FE16  EC9E  F0FF         	call	___awdiv	;wreg free
   240  01FE1A  90D8               	bcf	status,0,c
   241  01FE1C  3601               	rlcf	?___awdiv^0,f,c
   242  01FE1E  3602               	rlcf	(?___awdiv+1)^0,f,c
   243  01FE20  0E0A               	movlw	low main@a
   244  01FE22  2401               	addwf	?___awdiv^0,w,c
   245  01FE24  6ED9               	movwf	fsr2l,c
   246  01FE26  0E00               	movlw	high main@a
   247  01FE28  2002               	addwfc	(?___awdiv+1)^0,w,c
   248  01FE2A  6EDA               	movwf	fsr2h,c
   249  01FE2C  50DF               	movf	indf2,w,c
   250  01FE2E  6E8C               	movwf	140,c	;volatile
   251                           
   252                           ;Assignment 21.c: 96:         LATA = a[i%10];
   253  01FE30  C01E  F001         	movff	main@i,___awmod@dividend
   254  01FE34  C01F  F002         	movff	main@i+1,___awmod@dividend+1
   255  01FE38  0E00               	movlw	0
   256  01FE3A  6E04               	movwf	(___awmod@divisor+1)^0,c
   257  01FE3C  0E0A               	movlw	10
   258  01FE3E  6E03               	movwf	___awmod@divisor^0,c
   259  01FE40  EC46  F0FF         	call	___awmod	;wreg free
   260  01FE44  90D8               	bcf	status,0,c
   261  01FE46  3601               	rlcf	?___awmod^0,f,c
   262  01FE48  3602               	rlcf	(?___awmod+1)^0,f,c
   263  01FE4A  0E0A               	movlw	low main@a
   264  01FE4C  2401               	addwf	?___awmod^0,w,c
   265  01FE4E  6ED9               	movwf	fsr2l,c
   266  01FE50  0E00               	movlw	high main@a
   267  01FE52  2002               	addwfc	(?___awmod+1)^0,w,c
   268  01FE54  6EDA               	movwf	fsr2h,c
   269  01FE56  50DF               	movf	indf2,w,c
   270  01FE58  6E89               	movwf	137,c	;volatile
   271  01FE5A                     
   272                           ;Assignment 21.c: 97:         _delay((unsigned long)((70)*(4000000/4000.0)));
   273  01FE5A  0E5B               	movlw	91
   274  01FE5C  6E09               	movwf	??_main^0,c
   275  01FE5E  0EE8               	movlw	232
   276  01FE60                     u297:
   277  01FE60  2EE8               	decfsz	wreg,f,c
   278  01FE62  D7FE               	bra	u297
   279  01FE64  2E09               	decfsz	??_main^0,f,c
   280  01FE66  D7FC               	bra	u297
   281  01FE68                     
   282                           ;Assignment 21.c: 98:     }
   283  01FE68  4A1E               	infsnz	main@i^0,f,c
   284  01FE6A  2A1F               	incf	(main@i+1)^0,f,c
   285  01FE6C  BE1F               	btfsc	(main@i+1)^0,7,c
   286  01FE6E  EF42  F0FF         	goto	u281
   287  01FE72  501F               	movf	(main@i+1)^0,w,c
   288  01FE74  E109               	bnz	u280
   289  01FE76  0E64               	movlw	100
   290  01FE78  5C1E               	subwf	main@i^0,w,c
   291  01FE7A  A0D8               	btfss	status,0,c
   292  01FE7C  EF42  F0FF         	goto	u281
   293  01FE80  EF44  F0FF         	goto	u280
   294  01FE84                     u281:
   295  01FE84  EF03  F0FF         	goto	l883
   296  01FE88                     u280:
   297  01FE88  EF00  F000         	goto	start
   298  01FE8C                     __end_of_main:
   299                           	callstack 0
   300                           
   301 ;; *************** function ___awmod *****************
   302 ;; Defined at:
   303 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\awmod.c"
   304 ;; Parameters:    Size  Location     Type
   305 ;;  dividend        2    0[COMRAM] int 
   306 ;;  divisor         2    2[COMRAM] int 
   307 ;; Auto vars:     Size  Location     Type
   308 ;;  sign            1    5[COMRAM] unsigned char 
   309 ;;  counter         1    4[COMRAM] unsigned char 
   310 ;; Return value:  Size  Location     Type
   311 ;;                  2    0[COMRAM] int 
   312 ;; Registers used:
   313 ;;		wreg, status,2, status,0
   314 ;; Tracked objects:
   315 ;;		On entry : 0/0
   316 ;;		On exit  : 0/0
   317 ;;		Unchanged: 0/0
   318 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   319 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   320 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   321 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   322 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   323 ;;Total ram usage:        6 bytes
   324 ;; Hardware stack levels used: 1
   325 ;; This function calls:
   326 ;;		Nothing
   327 ;; This function is called by:
   328 ;;		_main
   329 ;; This function uses a non-reentrant model
   330 ;;
   331                           
   332                           	psect	text1
   333  01FE8C                     __ptext1:
   334                           	callstack 0
   335  01FE8C                     ___awmod:
   336                           	callstack 30
   337  01FE8C  0E00               	movlw	0
   338  01FE8E  6E06               	movwf	___awmod@sign^0,c
   339  01FE90  BE02               	btfsc	(___awmod@dividend+1)^0,7,c
   340  01FE92  EF4F  F0FF         	goto	u210
   341  01FE96  EF4D  F0FF         	goto	u211
   342  01FE9A                     u211:
   343  01FE9A  EF55  F0FF         	goto	l845
   344  01FE9E                     u210:
   345  01FE9E  6C01               	negf	___awmod@dividend^0,c
   346  01FEA0  1E02               	comf	(___awmod@dividend+1)^0,f,c
   347  01FEA2  B0D8               	btfsc	status,0,c
   348  01FEA4  2A02               	incf	(___awmod@dividend+1)^0,f,c
   349  01FEA6  0E01               	movlw	1
   350  01FEA8  6E06               	movwf	___awmod@sign^0,c
   351  01FEAA                     l845:
   352  01FEAA  BE04               	btfsc	(___awmod@divisor+1)^0,7,c
   353  01FEAC  EF5C  F0FF         	goto	u220
   354  01FEB0  EF5A  F0FF         	goto	u221
   355  01FEB4                     u221:
   356  01FEB4  EF60  F0FF         	goto	l849
   357  01FEB8                     u220:
   358  01FEB8  6C03               	negf	___awmod@divisor^0,c
   359  01FEBA  1E04               	comf	(___awmod@divisor+1)^0,f,c
   360  01FEBC  B0D8               	btfsc	status,0,c
   361  01FEBE  2A04               	incf	(___awmod@divisor+1)^0,f,c
   362  01FEC0                     l849:
   363  01FEC0  5003               	movf	___awmod@divisor^0,w,c
   364  01FEC2  1004               	iorwf	(___awmod@divisor+1)^0,w,c
   365  01FEC4  B4D8               	btfsc	status,2,c
   366  01FEC6  EF67  F0FF         	goto	u231
   367  01FECA  EF69  F0FF         	goto	u230
   368  01FECE                     u231:
   369  01FECE  EF8D  F0FF         	goto	l865
   370  01FED2                     u230:
   371  01FED2  0E01               	movlw	1
   372  01FED4  6E05               	movwf	___awmod@counter^0,c
   373  01FED6  EF71  F0FF         	goto	l855
   374  01FEDA                     l853:
   375  01FEDA  90D8               	bcf	status,0,c
   376  01FEDC  3603               	rlcf	___awmod@divisor^0,f,c
   377  01FEDE  3604               	rlcf	(___awmod@divisor+1)^0,f,c
   378  01FEE0  2A05               	incf	___awmod@counter^0,f,c
   379  01FEE2                     l855:
   380  01FEE2  AE04               	btfss	(___awmod@divisor+1)^0,7,c
   381  01FEE4  EF76  F0FF         	goto	u241
   382  01FEE8  EF78  F0FF         	goto	u240
   383  01FEEC                     u241:
   384  01FEEC  EF6D  F0FF         	goto	l853
   385  01FEF0                     u240:
   386  01FEF0                     l857:
   387  01FEF0  5003               	movf	___awmod@divisor^0,w,c
   388  01FEF2  5C01               	subwf	___awmod@dividend^0,w,c
   389  01FEF4  5004               	movf	(___awmod@divisor+1)^0,w,c
   390  01FEF6  5802               	subwfb	(___awmod@dividend+1)^0,w,c
   391  01FEF8  A0D8               	btfss	status,0,c
   392  01FEFA  EF81  F0FF         	goto	u251
   393  01FEFE  EF83  F0FF         	goto	u250
   394  01FF02                     u251:
   395  01FF02  EF87  F0FF         	goto	l861
   396  01FF06                     u250:
   397  01FF06  5003               	movf	___awmod@divisor^0,w,c
   398  01FF08  5E01               	subwf	___awmod@dividend^0,f,c
   399  01FF0A  5004               	movf	(___awmod@divisor+1)^0,w,c
   400  01FF0C  5A02               	subwfb	(___awmod@dividend+1)^0,f,c
   401  01FF0E                     l861:
   402  01FF0E  90D8               	bcf	status,0,c
   403  01FF10  3204               	rrcf	(___awmod@divisor+1)^0,f,c
   404  01FF12  3203               	rrcf	___awmod@divisor^0,f,c
   405  01FF14  2E05               	decfsz	___awmod@counter^0,f,c
   406  01FF16  EF78  F0FF         	goto	l857
   407  01FF1A                     l865:
   408  01FF1A  5006               	movf	___awmod@sign^0,w,c
   409  01FF1C  B4D8               	btfsc	status,2,c
   410  01FF1E  EF93  F0FF         	goto	u261
   411  01FF22  EF95  F0FF         	goto	u260
   412  01FF26                     u261:
   413  01FF26  EF99  F0FF         	goto	l869
   414  01FF2A                     u260:
   415  01FF2A  6C01               	negf	___awmod@dividend^0,c
   416  01FF2C  1E02               	comf	(___awmod@dividend+1)^0,f,c
   417  01FF2E  B0D8               	btfsc	status,0,c
   418  01FF30  2A02               	incf	(___awmod@dividend+1)^0,f,c
   419  01FF32                     l869:
   420  01FF32  C001  F001         	movff	___awmod@dividend,?___awmod
   421  01FF36  C002  F002         	movff	___awmod@dividend+1,?___awmod+1
   422  01FF3A  0012               	return		;funcret
   423  01FF3C                     __end_of___awmod:
   424                           	callstack 0
   425                           
   426 ;; *************** function ___awdiv *****************
   427 ;; Defined at:
   428 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\awdiv.c"
   429 ;; Parameters:    Size  Location     Type
   430 ;;  dividend        2    0[COMRAM] int 
   431 ;;  divisor         2    2[COMRAM] int 
   432 ;; Auto vars:     Size  Location     Type
   433 ;;  quotient        2    6[COMRAM] int 
   434 ;;  sign            1    5[COMRAM] unsigned char 
   435 ;;  counter         1    4[COMRAM] unsigned char 
   436 ;; Return value:  Size  Location     Type
   437 ;;                  2    0[COMRAM] int 
   438 ;; Registers used:
   439 ;;		wreg, status,2, status,0
   440 ;; Tracked objects:
   441 ;;		On entry : 0/0
   442 ;;		On exit  : 0/0
   443 ;;		Unchanged: 0/0
   444 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   445 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   446 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   447 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   448 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   449 ;;Total ram usage:        8 bytes
   450 ;; Hardware stack levels used: 1
   451 ;; This function calls:
   452 ;;		Nothing
   453 ;; This function is called by:
   454 ;;		_main
   455 ;; This function uses a non-reentrant model
   456 ;;
   457                           
   458                           	psect	text2
   459  01FF3C                     __ptext2:
   460                           	callstack 0
   461  01FF3C                     ___awdiv:
   462                           	callstack 30
   463  01FF3C  0E00               	movlw	0
   464  01FF3E  6E06               	movwf	___awdiv@sign^0,c
   465  01FF40  BE04               	btfsc	(___awdiv@divisor+1)^0,7,c
   466  01FF42  EFA7  F0FF         	goto	u150
   467  01FF46  EFA5  F0FF         	goto	u151
   468  01FF4A                     u151:
   469  01FF4A  EFAD  F0FF         	goto	l801
   470  01FF4E                     u150:
   471  01FF4E  6C03               	negf	___awdiv@divisor^0,c
   472  01FF50  1E04               	comf	(___awdiv@divisor+1)^0,f,c
   473  01FF52  B0D8               	btfsc	status,0,c
   474  01FF54  2A04               	incf	(___awdiv@divisor+1)^0,f,c
   475  01FF56  0E01               	movlw	1
   476  01FF58  6E06               	movwf	___awdiv@sign^0,c
   477  01FF5A                     l801:
   478  01FF5A  BE02               	btfsc	(___awdiv@dividend+1)^0,7,c
   479  01FF5C  EFB4  F0FF         	goto	u160
   480  01FF60  EFB2  F0FF         	goto	u161
   481  01FF64                     u161:
   482  01FF64  EFBA  F0FF         	goto	l807
   483  01FF68                     u160:
   484  01FF68  6C01               	negf	___awdiv@dividend^0,c
   485  01FF6A  1E02               	comf	(___awdiv@dividend+1)^0,f,c
   486  01FF6C  B0D8               	btfsc	status,0,c
   487  01FF6E  2A02               	incf	(___awdiv@dividend+1)^0,f,c
   488  01FF70  0E01               	movlw	1
   489  01FF72  1A06               	xorwf	___awdiv@sign^0,f,c
   490  01FF74                     l807:
   491  01FF74  0E00               	movlw	0
   492  01FF76  6E08               	movwf	(___awdiv@quotient+1)^0,c
   493  01FF78  0E00               	movlw	0
   494  01FF7A  6E07               	movwf	___awdiv@quotient^0,c
   495  01FF7C  5003               	movf	___awdiv@divisor^0,w,c
   496  01FF7E  1004               	iorwf	(___awdiv@divisor+1)^0,w,c
   497  01FF80  B4D8               	btfsc	status,2,c
   498  01FF82  EFC5  F0FF         	goto	u171
   499  01FF86  EFC7  F0FF         	goto	u170
   500  01FF8A                     u171:
   501  01FF8A  EFEF  F0FF         	goto	l829
   502  01FF8E                     u170:
   503  01FF8E  0E01               	movlw	1
   504  01FF90  6E05               	movwf	___awdiv@counter^0,c
   505  01FF92  EFCF  F0FF         	goto	l815
   506  01FF96                     l813:
   507  01FF96  90D8               	bcf	status,0,c
   508  01FF98  3603               	rlcf	___awdiv@divisor^0,f,c
   509  01FF9A  3604               	rlcf	(___awdiv@divisor+1)^0,f,c
   510  01FF9C  2A05               	incf	___awdiv@counter^0,f,c
   511  01FF9E                     l815:
   512  01FF9E  AE04               	btfss	(___awdiv@divisor+1)^0,7,c
   513  01FFA0  EFD4  F0FF         	goto	u181
   514  01FFA4  EFD6  F0FF         	goto	u180
   515  01FFA8                     u181:
   516  01FFA8  EFCB  F0FF         	goto	l813
   517  01FFAC                     u180:
   518  01FFAC                     l817:
   519  01FFAC  90D8               	bcf	status,0,c
   520  01FFAE  3607               	rlcf	___awdiv@quotient^0,f,c
   521  01FFB0  3608               	rlcf	(___awdiv@quotient+1)^0,f,c
   522  01FFB2  5003               	movf	___awdiv@divisor^0,w,c
   523  01FFB4  5C01               	subwf	___awdiv@dividend^0,w,c
   524  01FFB6  5004               	movf	(___awdiv@divisor+1)^0,w,c
   525  01FFB8  5802               	subwfb	(___awdiv@dividend+1)^0,w,c
   526  01FFBA  A0D8               	btfss	status,0,c
   527  01FFBC  EFE2  F0FF         	goto	u191
   528  01FFC0  EFE4  F0FF         	goto	u190
   529  01FFC4                     u191:
   530  01FFC4  EFE9  F0FF         	goto	l825
   531  01FFC8                     u190:
   532  01FFC8  5003               	movf	___awdiv@divisor^0,w,c
   533  01FFCA  5E01               	subwf	___awdiv@dividend^0,f,c
   534  01FFCC  5004               	movf	(___awdiv@divisor+1)^0,w,c
   535  01FFCE  5A02               	subwfb	(___awdiv@dividend+1)^0,f,c
   536  01FFD0  8007               	bsf	___awdiv@quotient^0,0,c
   537  01FFD2                     l825:
   538  01FFD2  90D8               	bcf	status,0,c
   539  01FFD4  3204               	rrcf	(___awdiv@divisor+1)^0,f,c
   540  01FFD6  3203               	rrcf	___awdiv@divisor^0,f,c
   541  01FFD8  2E05               	decfsz	___awdiv@counter^0,f,c
   542  01FFDA  EFD6  F0FF         	goto	l817
   543  01FFDE                     l829:
   544  01FFDE  5006               	movf	___awdiv@sign^0,w,c
   545  01FFE0  B4D8               	btfsc	status,2,c
   546  01FFE2  EFF5  F0FF         	goto	u201
   547  01FFE6  EFF7  F0FF         	goto	u200
   548  01FFEA                     u201:
   549  01FFEA  EFFB  F0FF         	goto	l833
   550  01FFEE                     u200:
   551  01FFEE  6C07               	negf	___awdiv@quotient^0,c
   552  01FFF0  1E08               	comf	(___awdiv@quotient+1)^0,f,c
   553  01FFF2  B0D8               	btfsc	status,0,c
   554  01FFF4  2A08               	incf	(___awdiv@quotient+1)^0,f,c
   555  01FFF6                     l833:
   556  01FFF6  C007  F001         	movff	___awdiv@quotient,?___awdiv
   557  01FFFA  C008  F002         	movff	___awdiv@quotient+1,?___awdiv+1
   558  01FFFE  0012               	return		;funcret
   559  020000                     __end_of___awdiv:
   560                           	callstack 0
   561  0000                     
   562                           	psect	rparam
   563  0000                     
   564                           	psect	idloc
   565                           
   566                           ;Config register IDLOC0 @ 0x200000
   567                           ;	unspecified, using default values
   568  200000                     	org	2097152
   569  200000  FF                 	db	255
   570                           
   571                           ;Config register IDLOC1 @ 0x200001
   572                           ;	unspecified, using default values
   573  200001                     	org	2097153
   574  200001  FF                 	db	255
   575                           
   576                           ;Config register IDLOC2 @ 0x200002
   577                           ;	unspecified, using default values
   578  200002                     	org	2097154
   579  200002  FF                 	db	255
   580                           
   581                           ;Config register IDLOC3 @ 0x200003
   582                           ;	unspecified, using default values
   583  200003                     	org	2097155
   584  200003  FF                 	db	255
   585                           
   586                           ;Config register IDLOC4 @ 0x200004
   587                           ;	unspecified, using default values
   588  200004                     	org	2097156
   589  200004  FF                 	db	255
   590                           
   591                           ;Config register IDLOC5 @ 0x200005
   592                           ;	unspecified, using default values
   593  200005                     	org	2097157
   594  200005  FF                 	db	255
   595                           
   596                           ;Config register IDLOC6 @ 0x200006
   597                           ;	unspecified, using default values
   598  200006                     	org	2097158
   599  200006  FF                 	db	255
   600                           
   601                           ;Config register IDLOC7 @ 0x200007
   602                           ;	unspecified, using default values
   603  200007                     	org	2097159
   604  200007  FF                 	db	255
   605                           
   606                           	psect	config
   607                           
   608                           ;Config register CONFIG1L @ 0x300000
   609                           ;	VREG Sleep Enable bit
   610                           ;	RETEN = OFF, Disabled - Controlled by SRETEN bit
   611                           ;	LF-INTOSC Low-power Enable bit
   612                           ;	INTOSCSEL = HIGH, LF-INTOSC in High-power mode during Sleep
   613                           ;	SOSC Power Selection and mode Configuration bits
   614                           ;	SOSCSEL = HIGH, High Power SOSC circuit selected
   615                           ;	Extended Instruction Set
   616                           ;	XINST = OFF, Disabled
   617  300000                     	org	3145728
   618  300000  1C                 	db	28
   619                           
   620                           ;Config register CONFIG1H @ 0x300001
   621                           ;	Oscillator
   622                           ;	FOSC = INTIO2, Internal RC oscillator
   623                           ;	PLL x4 Enable bit
   624                           ;	PLLCFG = OFF, Disabled
   625                           ;	Fail-Safe Clock Monitor
   626                           ;	FCMEN = OFF, Disabled
   627                           ;	Internal External Oscillator Switch Over Mode
   628                           ;	IESO = OFF, Disabled
   629  300001                     	org	3145729
   630  300001  08                 	db	8
   631                           
   632                           ;Config register CONFIG2L @ 0x300002
   633                           ;	Power Up Timer
   634                           ;	PWRTEN = OFF, Disabled
   635                           ;	Brown Out Detect
   636                           ;	BOREN = SBORDIS, Enabled in hardware, SBOREN disabled
   637                           ;	Brown-out Reset Voltage bits
   638                           ;	BORV = 3, 1.8V
   639                           ;	BORMV Power level
   640                           ;	BORPWR = ZPBORMV, ZPBORMV instead of BORMV is selected
   641  300002                     	org	3145730
   642  300002  7F                 	db	127
   643                           
   644                           ;Config register CONFIG2H @ 0x300003
   645                           ;	Watchdog Timer
   646                           ;	WDTEN = SWDTDIS, WDT enabled in hardware; SWDTEN bit disabled
   647                           ;	Watchdog Postscaler
   648                           ;	WDTPS = 1048576, 1:1048576
   649  300003                     	org	3145731
   650  300003  7F                 	db	127
   651                           
   652                           ;Config register CONFIG3L @ 0x300004
   653                           ;	RTCC Clock Select
   654                           ;	RTCOSC = SOSCREF, RTCC uses SOSC
   655  300004                     	org	3145732
   656  300004  01                 	db	1
   657                           
   658                           ;Config register CONFIG3H @ 0x300005
   659                           ;	CCP2 Mux
   660                           ;	CCP2MX = PORTC, RC1
   661                           ;	MSSP address masking
   662                           ;	MSSPMSK = MSK7, 7 Bit address masking mode
   663                           ;	Master Clear Enable
   664                           ;	MCLRE = ON, MCLR Enabled, RG5 Disabled
   665  300005                     	org	3145733
   666  300005  89                 	db	137
   667                           
   668                           ;Config register CONFIG4L @ 0x300006
   669                           ;	Stack Overflow Reset
   670                           ;	STVREN = OFF, Disabled
   671                           ;	Boot Block Size
   672                           ;	BBSIZ = BB2K, 2K word Boot Block size
   673                           ;	Background Debug
   674                           ;	DEBUG = 0x1, unprogrammed default
   675  300006                     	org	3145734
   676  300006  90                 	db	144
   677                           
   678                           ; Padding undefined space
   679  300007                     	org	3145735
   680  300007  FF                 	db	255
   681                           
   682                           ;Config register CONFIG5L @ 0x300008
   683                           ;	Code Protect 00800-03FFF
   684                           ;	CP0 = OFF, Disabled
   685                           ;	Code Protect 04000-07FFF
   686                           ;	CP1 = OFF, Disabled
   687                           ;	Code Protect 08000-0BFFF
   688                           ;	CP2 = OFF, Disabled
   689                           ;	Code Protect 0C000-0FFFF
   690                           ;	CP3 = OFF, Disabled
   691                           ;	Code Protect 10000-13FFF
   692                           ;	CP4 = OFF, Disabled
   693                           ;	Code Protect 14000-17FFF
   694                           ;	CP5 = OFF, Disabled
   695                           ;	Code Protect 18000-1BFFF
   696                           ;	CP6 = OFF, Disabled
   697                           ;	Code Protect 1C000-1FFFF
   698                           ;	CP7 = OFF, Disabled
   699  300008                     	org	3145736
   700  300008  FF                 	db	255
   701                           
   702                           ;Config register CONFIG5H @ 0x300009
   703                           ;	Code Protect Boot
   704                           ;	CPB = OFF, Disabled
   705                           ;	Data EE Read Protect
   706                           ;	CPD = OFF, Disabled
   707  300009                     	org	3145737
   708  300009  C0                 	db	192
   709                           
   710                           ;Config register CONFIG6L @ 0x30000A
   711                           ;	Table Write Protect 00800-03FFF
   712                           ;	WRT0 = OFF, Disabled
   713                           ;	Table Write Protect 04000-07FFF
   714                           ;	WRT1 = OFF, Disabled
   715                           ;	Table Write Protect 08000-0BFFF
   716                           ;	WRT2 = OFF, Disabled
   717                           ;	Table Write Protect 0C000-0FFFF
   718                           ;	WRT3 = OFF, Disabled
   719                           ;	Table Write Protect 10000-13FFF
   720                           ;	WRT4 = OFF, Disabled
   721                           ;	Table Write Protect 14000-17FFF
   722                           ;	WRT5 = OFF, Disabled
   723                           ;	Table Write Protect 18000-1BFFF
   724                           ;	WRT6 = OFF, Disabled
   725                           ;	Table Write Protect 1C000-1FFFF
   726                           ;	WRT7 = OFF, Disabled
   727  30000A                     	org	3145738
   728  30000A  FF                 	db	255
   729                           
   730                           ;Config register CONFIG6H @ 0x30000B
   731                           ;	Config. Write Protect
   732                           ;	WRTC = OFF, Disabled
   733                           ;	Table Write Protect Boot
   734                           ;	WRTB = OFF, Disabled
   735                           ;	Data EE Write Protect
   736                           ;	WRTD = OFF, Disabled
   737  30000B                     	org	3145739
   738  30000B  E0                 	db	224
   739                           
   740                           ;Config register CONFIG7L @ 0x30000C
   741                           ;	Table Read Protect 00800-03FFF
   742                           ;	EBRT0 = OFF, Disabled
   743                           ;	Table Read Protect 04000-07FFF
   744                           ;	EBRT1 = OFF, Disabled
   745                           ;	Table Read Protect 08000-0BFFF
   746                           ;	EBRT2 = OFF, Disabled
   747                           ;	Table Read Protect 0C000-0FFFF
   748                           ;	EBRT3 = OFF, Disabled
   749                           ;	Table Read Protect 10000-13FFF
   750                           ;	EBRT4 = OFF, Disabled
   751                           ;	Table Read Protect 14000-17FFF
   752                           ;	EBRT5 = OFF, Disabled
   753                           ;	Table Read Protect 18000-1BFFF
   754                           ;	EBRT6 = OFF, Disabled
   755                           ;	Table Read Protect 1C000-1FFFF
   756                           ;	EBRT7 = OFF, Disabled
   757  30000C                     	org	3145740
   758  30000C  FF                 	db	255
   759                           
   760                           ;Config register CONFIG7H @ 0x30000D
   761                           ;	Table Read Protect Boot
   762                           ;	EBRTB = OFF, Disabled
   763  30000D                     	org	3145741
   764  30000D  40                 	db	64
   765                           tosu	equ	0xFFF
   766                           tosh	equ	0xFFE
   767                           tosl	equ	0xFFD
   768                           stkptr	equ	0xFFC
   769                           pclatu	equ	0xFFB
   770                           pclath	equ	0xFFA
   771                           pcl	equ	0xFF9
   772                           tblptru	equ	0xFF8
   773                           tblptrh	equ	0xFF7
   774                           tblptrl	equ	0xFF6
   775                           tablat	equ	0xFF5
   776                           prodh	equ	0xFF4
   777                           prodl	equ	0xFF3
   778                           indf0	equ	0xFEF
   779                           postinc0	equ	0xFEE
   780                           postdec0	equ	0xFED
   781                           preinc0	equ	0xFEC
   782                           plusw0	equ	0xFEB
   783                           fsr0h	equ	0xFEA
   784                           fsr0l	equ	0xFE9
   785                           wreg	equ	0xFE8
   786                           indf1	equ	0xFE7
   787                           postinc1	equ	0xFE6
   788                           postdec1	equ	0xFE5
   789                           preinc1	equ	0xFE4
   790                           plusw1	equ	0xFE3
   791                           fsr1h	equ	0xFE2
   792                           fsr1l	equ	0xFE1
   793                           bsr	equ	0xFE0
   794                           indf2	equ	0xFDF
   795                           postinc2	equ	0xFDE
   796                           postdec2	equ	0xFDD
   797                           preinc2	equ	0xFDC
   798                           plusw2	equ	0xFDB
   799                           fsr2h	equ	0xFDA
   800                           fsr2l	equ	0xFD9
   801                           status	equ	0xFD8

Data Sizes:
    Strings     0
    Constant    0
    Data        20
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     31      51
    BANK0           160      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15           22      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMRAM

    _main->___awdiv

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                23    23      0    1037
                                              8 COMRAM    23    23      0
                            ___awdiv
                            ___awmod
 ---------------------------------------------------------------------------------
 (1) ___awmod                                              6     2      4     448
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (1) ___awdiv                                              8     4      4     452
                                              0 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   ___awdiv
   ___awmod

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             F15      0       0      42        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK14          100      0       0      32        0.0%
BANK14             100      0       0      33        0.0%
BITBANK13          100      0       0      30        0.0%
BANK13             100      0       0      31        0.0%
BITBANK12          100      0       0      28        0.0%
BANK12             100      0       0      29        0.0%
BITBANK11          100      0       0      26        0.0%
BANK11             100      0       0      27        0.0%
BITBANK10          100      0       0      24        0.0%
BANK10             100      0       0      25        0.0%
BITBANK9           100      0       0      22        0.0%
BANK9              100      0       0      23        0.0%
BITBANK8           100      0       0      20        0.0%
BANK8              100      0       0      21        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0       0       5        0.0%
BITBIGSFRlll        73      0       0      40        0.0%
BITBIGSFRhh         6A      0       0      36        0.0%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F     1F      33       1       53.7%
BITBANK15           16      0       0      34        0.0%
BANK15              16      0       0      35        0.0%
BITBIGSFRlh          5      0       0      38        0.0%
BITBIGSFRllh         2      0       0      39        0.0%
BITBIGSFRhl          2      0       0      37        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      33      41        0.0%
DATA                 0      0      33       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.36 build 20220127204148 
Symbol Table                                                                                   Thu Mar 03 17:17:46 2022

                     l19 FE88             ___awdiv@sign 0006                      l253 FFFE  
                    l266 FF3A                      l801 FF5A                      l811 FF8E  
                    l803 FF68                      l821 FFC8                      l813 FF96  
                    l805 FF70                      l831 FFEE                      l823 FFD0  
                    l815 FF9E                      l807 FF74                      l833 FFF6  
                    l825 FFD2                      l817 FFAC                      l809 FF7C  
                    l841 FE9E                      l827 FFD8                      l819 FFB2  
                    l851 FED2                      l843 FEA6                      l829 FFDE  
                    l861 FF0E                      l853 FEDA                      l845 FEAA  
                    l837 FE8C                      l863 FF14                      l855 FEE2  
                    l847 FEB8                      l839 FE90                      l793 FF3C  
                    l857 FEF0                      l865 FF1A                      l849 FEC0  
                    l873 FDE4                      l795 FF40                      l867 FF2A  
                    l859 FF06                      l883 FE06                      l875 FDEC  
                    l797 FF4E                      l869 FF32                      l885 FE5A  
                    l877 FDFE                      l799 FF56                      l887 FE68  
                    l889 FE6C                      u200 FFEE                      u201 FFEA  
                    u210 FE9E                      u211 FE9A                      u220 FEB8  
                    u221 FEB4                      u150 FF4E                      u230 FED2  
                    u151 FF4A                      u231 FECE                      u160 FF68  
                    u240 FEF0                      u161 FF64                      u241 FEEC  
                    u170 FF8E                      u250 FF06                      u171 FF8A  
                    u251 FF02                      u180 FFAC                      u260 FF2A  
                    u181 FFA8                      u261 FF26                      u190 FFC8  
                    u191 FFC4                      u271 FDF6                      u280 FE88  
                    u281 FE84                      u297 FE60             ___awmod@sign 0006  
                    wreg 000FE8                     _LATA 000F89                     _LATD 000F8C  
                   _main FDE4                     indf2 000FDF                     fsr1l 000FE1  
                   fsr2l 000FD9                     start 0000             ___param_bank 000000  
                  ?_main 0001          __end_of___awdiv 0000          __end_of___awmod FF3C  
        ___awdiv@divisor 0003          ___awdiv@counter 0005                    _TRISA 000F92  
                  _TRISD 000F95                    main@a 000A                    main@i 001E  
                  tablat 000FF5                    plusw1 000FE3                    plusw2 000FDB  
                  status 000FD8          __initialization FDBE             __end_of_main FE8C  
                 ??_main 0009            __activetblptr 000000         ___awdiv@dividend 0001  
              ??___awdiv 0005                ??___awmod 0005         ___awdiv@quotient 0007  
        ___awmod@divisor 0003                   isa$std 000001          ___awmod@counter 0005  
           __pdataCOMRAM 0020                   tblptrh 000FF7                   tblptrl 000FF6  
                 tblptru 000FF8               __accesstop 0060  __end_of__initialization FDDE  
          ___rparam_used 000001           __pcstackCOMRAM 0001                  __Hparam 0000  
                __Lparam 0000                  ___awdiv FF3C                  ___awmod FE8C  
                __pcinit FDBE                  __ramtop 1000                  __ptext0 FDE4  
                __ptext1 FE8C                  __ptext2 FF3C         ___awmod@dividend 0001  
   end_of_initialization FDDE                  postdec1 000FE5                  postinc0 000FEE  
          __pidataCOMRAM FDAA      start_initialization FDBE                 ?___awdiv 0001  
               ?___awmod 0001                main@F6160 0020                copy_data0 FDD2  
               __Hrparam 0000                 __Lrparam 0000                 isa$xinst 000000  
