

Microchip MPLAB XC8 Assembler V2.36 build 20220127204148 
                                                                                               Thu Mar 31 19:50:45 2022

Microchip MPLAB XC8 C Compiler v2.36 (Free license) build 20220127204148 Og1 
     1                           	processor	16F1509
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	cinit,global,class=CODE,merge=1,delta=2
     5                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     6                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
     7                           	psect	text1,local,class=CODE,merge=1,delta=2
     8                           	psect	text2,local,class=CODE,merge=1,delta=2
     9                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=2,noexec
    10                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    11                           	dabs	1,0x7E,2
    12  0000                     
    13                           ; Version 2.40
    14                           ; Generated 17/11/2021 GMT
    15                           ; 
    16                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
    17                           ; All rights reserved.
    18                           ; 
    19                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    20                           ; 
    21                           ; Redistribution and use in source and binary forms, with or without modification, are
    22                           ; permitted provided that the following conditions are met:
    23                           ; 
    24                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    25                           ;        conditions and the following disclaimer.
    26                           ; 
    27                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    28                           ;        of conditions and the following disclaimer in the documentation and/or other
    29                           ;        materials provided with the distribution. Publication is not required when
    30                           ;        this file is used in an embedded application.
    31                           ; 
    32                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    33                           ;        software without specific prior written permission.
    34                           ; 
    35                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    36                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    37                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    38                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    39                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    40                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    41                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    42                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    43                           ; 
    44                           ; 
    45                           ; Code-generator required, PIC16F1509 Definitions
    46                           ; 
    47                           ; SFR Addresses
    48  0000                     	;# 
    49  0001                     	;# 
    50  0002                     	;# 
    51  0003                     	;# 
    52  0004                     	;# 
    53  0005                     	;# 
    54  0006                     	;# 
    55  0007                     	;# 
    56  0008                     	;# 
    57  0009                     	;# 
    58  000A                     	;# 
    59  000B                     	;# 
    60  000C                     	;# 
    61  000D                     	;# 
    62  000E                     	;# 
    63  0011                     	;# 
    64  0012                     	;# 
    65  0013                     	;# 
    66  0015                     	;# 
    67  0016                     	;# 
    68  0016                     	;# 
    69  0017                     	;# 
    70  0018                     	;# 
    71  0019                     	;# 
    72  001A                     	;# 
    73  001B                     	;# 
    74  001C                     	;# 
    75  008C                     	;# 
    76  008D                     	;# 
    77  008E                     	;# 
    78  0091                     	;# 
    79  0092                     	;# 
    80  0093                     	;# 
    81  0095                     	;# 
    82  0096                     	;# 
    83  0097                     	;# 
    84  0099                     	;# 
    85  009A                     	;# 
    86  009B                     	;# 
    87  009B                     	;# 
    88  009C                     	;# 
    89  009D                     	;# 
    90  009E                     	;# 
    91  009F                     	;# 
    92  010C                     	;# 
    93  010D                     	;# 
    94  010E                     	;# 
    95  0111                     	;# 
    96  0112                     	;# 
    97  0113                     	;# 
    98  0114                     	;# 
    99  0115                     	;# 
   100  0116                     	;# 
   101  0117                     	;# 
   102  0118                     	;# 
   103  0119                     	;# 
   104  011D                     	;# 
   105  018C                     	;# 
   106  018D                     	;# 
   107  018E                     	;# 
   108  0191                     	;# 
   109  0191                     	;# 
   110  0192                     	;# 
   111  0193                     	;# 
   112  0193                     	;# 
   113  0194                     	;# 
   114  0195                     	;# 
   115  0196                     	;# 
   116  0197                     	;# 
   117  0199                     	;# 
   118  019A                     	;# 
   119  019B                     	;# 
   120  019B                     	;# 
   121  019C                     	;# 
   122  019D                     	;# 
   123  019E                     	;# 
   124  019F                     	;# 
   125  020C                     	;# 
   126  020D                     	;# 
   127  0211                     	;# 
   128  0211                     	;# 
   129  0212                     	;# 
   130  0212                     	;# 
   131  0213                     	;# 
   132  0213                     	;# 
   133  0214                     	;# 
   134  0214                     	;# 
   135  0215                     	;# 
   136  0215                     	;# 
   137  0215                     	;# 
   138  0216                     	;# 
   139  0216                     	;# 
   140  0217                     	;# 
   141  0217                     	;# 
   142  0391                     	;# 
   143  0392                     	;# 
   144  0393                     	;# 
   145  0394                     	;# 
   146  0395                     	;# 
   147  0396                     	;# 
   148  0498                     	;# 
   149  0498                     	;# 
   150  0499                     	;# 
   151  049A                     	;# 
   152  049B                     	;# 
   153  049B                     	;# 
   154  049C                     	;# 
   155  049D                     	;# 
   156  049E                     	;# 
   157  049F                     	;# 
   158  0611                     	;# 
   159  0612                     	;# 
   160  0613                     	;# 
   161  0613                     	;# 
   162  0614                     	;# 
   163  0615                     	;# 
   164  0616                     	;# 
   165  0616                     	;# 
   166  0617                     	;# 
   167  0618                     	;# 
   168  0619                     	;# 
   169  0619                     	;# 
   170  061A                     	;# 
   171  061B                     	;# 
   172  061C                     	;# 
   173  061C                     	;# 
   174  0691                     	;# 
   175  0692                     	;# 
   176  0693                     	;# 
   177  0694                     	;# 
   178  0695                     	;# 
   179  0F0F                     	;# 
   180  0F10                     	;# 
   181  0F11                     	;# 
   182  0F12                     	;# 
   183  0F13                     	;# 
   184  0F14                     	;# 
   185  0F15                     	;# 
   186  0F16                     	;# 
   187  0F17                     	;# 
   188  0F18                     	;# 
   189  0F19                     	;# 
   190  0F1A                     	;# 
   191  0F1B                     	;# 
   192  0F1C                     	;# 
   193  0F1D                     	;# 
   194  0F1E                     	;# 
   195  0F1F                     	;# 
   196  0F20                     	;# 
   197  0F21                     	;# 
   198  0F22                     	;# 
   199  0F23                     	;# 
   200  0F24                     	;# 
   201  0F25                     	;# 
   202  0F26                     	;# 
   203  0F27                     	;# 
   204  0F28                     	;# 
   205  0F29                     	;# 
   206  0F2A                     	;# 
   207  0F2B                     	;# 
   208  0F2C                     	;# 
   209  0F2D                     	;# 
   210  0F2E                     	;# 
   211  0F2F                     	;# 
   212  0F8C                     	;# 
   213  0F8D                     	;# 
   214  0F91                     	;# 
   215  0F95                     	;# 
   216  0F96                     	;# 
   217  0F97                     	;# 
   218  0F9C                     	;# 
   219  0F9D                     	;# 
   220  0F9E                     	;# 
   221  0FE3                     	;# 
   222  0FE4                     	;# 
   223  0FE5                     	;# 
   224  0FE6                     	;# 
   225  0FE7                     	;# 
   226  0FE8                     	;# 
   227  0FE9                     	;# 
   228  0FEA                     	;# 
   229  0FEB                     	;# 
   230  0FED                     	;# 
   231  0FEE                     	;# 
   232  0FEF                     	;# 
   233  000C                     _PORTAbits	set	12
   234  008C                     _TRISAbits	set	140
   235  008D                     _TRISB	set	141
   236  008E                     _TRISC	set	142
   237  010E                     _LATC	set	270
   238  010D                     _LATB	set	269
   239  018C                     _ANSELA	set	396
   240                           
   241                           	psect	cinit
   242  07FD                     start_initialization:	
   243                           ; #config settings
   244                           
   245  07FD                     __initialization:
   246  07FD                     end_of_initialization:	
   247                           ;End of C runtime variable initialization code
   248                           
   249  07FD                     __end_of__initialization:
   250  07FD  0020               	movlb	0
   251  07FE  3187  2F6C         	ljmp	_main	;jump to C main() function
   252                           
   253                           	psect	cstackCOMMON
   254  0070                     __pcstackCOMMON:
   255  0070                     ?_one_LED_move:
   256  0070                     ??_one_LED_move:	
   257                           ; 1 bytes @ 0x0
   258                           
   259  0070                     ?_LED_one_by_one:	
   260                           ; 1 bytes @ 0x0
   261                           
   262  0070                     ??_LED_one_by_one:	
   263                           ; 1 bytes @ 0x0
   264                           
   265  0070                     ?_main:	
   266                           ; 1 bytes @ 0x0
   267                           
   268                           
   269                           ; 1 bytes @ 0x0
   270  0070                     	ds	1
   271  0071                     one_LED_move@m:
   272  0071                     LED_one_by_one@m:	
   273                           ; 1 bytes @ 0x1
   274                           
   275                           
   276                           ; 1 bytes @ 0x1
   277  0071                     	ds	1
   278  0072                     one_LED_move@n:
   279  0072                     LED_one_by_one@n:	
   280                           ; 1 bytes @ 0x2
   281                           
   282                           
   283                           ; 1 bytes @ 0x2
   284  0072                     	ds	1
   285  0073                     one_LED_move@i:
   286  0073                     LED_one_by_one@i:	
   287                           ; 1 bytes @ 0x3
   288                           
   289                           
   290                           ; 1 bytes @ 0x3
   291  0073                     	ds	1
   292  0074                     one_LED_move@h:
   293  0074                     LED_one_by_one@h:	
   294                           ; 1 bytes @ 0x4
   295                           
   296                           
   297                           ; 1 bytes @ 0x4
   298  0074                     	ds	1
   299  0075                     ??_main:
   300                           
   301                           ; 1 bytes @ 0x5
   302  0075                     	ds	1
   303  0076                     main@S1_state:
   304                           
   305                           ; 1 bytes @ 0x6
   306  0076                     	ds	1
   307  0077                     main@S2_state:
   308                           
   309                           ; 1 bytes @ 0x7
   310  0077                     	ds	1
   311                           
   312                           	psect	maintext
   313  076C                     __pmaintext:	
   314 ;;
   315 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
   316 ;;
   317 ;; *************** function _main *****************
   318 ;; Defined at:
   319 ;;		line 59 in file "Assignment 51.c"
   320 ;; Parameters:    Size  Location     Type
   321 ;;		None
   322 ;; Auto vars:     Size  Location     Type
   323 ;;  S2_state        1    7[COMMON] unsigned char 
   324 ;;  S1_state        1    6[COMMON] unsigned char 
   325 ;; Return value:  Size  Location     Type
   326 ;;                  1    wreg      void 
   327 ;; Registers used:
   328 ;;		wreg, status,2, status,0, pclath, cstack
   329 ;; Tracked objects:
   330 ;;		On entry : B1F/0
   331 ;;		On exit  : 0/0
   332 ;;		Unchanged: 0/0
   333 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
   334 ;;      Params:         0       0       0       0       0       0       0       0
   335 ;;      Locals:         2       0       0       0       0       0       0       0
   336 ;;      Temps:          1       0       0       0       0       0       0       0
   337 ;;      Totals:         3       0       0       0       0       0       0       0
   338 ;;Total ram usage:        3 bytes
   339 ;; Hardware stack levels required when called: 1
   340 ;; This function calls:
   341 ;;		_LED_one_by_one
   342 ;;		_one_LED_move
   343 ;; This function is called by:
   344 ;;		Startup code after reset
   345 ;; This function uses a non-reentrant model
   346 ;;
   347                           
   348  076C                     _main:	
   349                           ;psect for function _main
   350                           
   351  076C                     l647:	
   352                           ;incstack = 0
   353                           ; Regs used in _main: [wreg+status,2+status,0+pclath+cstack]
   354                           
   355                           
   356                           ;Assignment 51.c: 60:     TRISC = 0;
   357  076C  0021               	movlb	1	; select bank1
   358  076D  018E               	clrf	14	;volatile
   359                           
   360                           ;Assignment 51.c: 61:     TRISB = 0;
   361  076E  018D               	clrf	13	;volatile
   362                           
   363                           ;Assignment 51.c: 62:     LATB = 0;
   364  076F  0022               	movlb	2	; select bank2
   365  0770  018D               	clrf	13	;volatile
   366                           
   367                           ;Assignment 51.c: 63:     LATC = 0;
   368  0771  018E               	clrf	14	;volatile
   369                           
   370                           ;Assignment 51.c: 64:     ANSELA = 0;
   371  0772  0023               	movlb	3	; select bank3
   372  0773  018C               	clrf	12	;volatile
   373  0774                     l649:
   374                           
   375                           ;Assignment 51.c: 65:     TRISAbits.TRISA0 = 1;
   376  0774  0021               	movlb	1	; select bank1
   377  0775  140C               	bsf	12,0	;volatile
   378  0776                     l651:
   379                           
   380                           ;Assignment 51.c: 66:     TRISAbits.TRISA1 = 1;
   381  0776  148C               	bsf	12,1	;volatile
   382  0777                     l653:
   383                           
   384                           ;Assignment 51.c: 67:     TRISAbits.TRISA2 = 1;
   385  0777  150C               	bsf	12,2	;volatile
   386                           
   387                           ;Assignment 51.c: 68:     unsigned char S1_state=0 ;
   388  0778  01F6               	clrf	main@S1_state
   389                           
   390                           ;Assignment 51.c: 69:     unsigned char S2_state=0 ;
   391  0779  01F7               	clrf	main@S2_state
   392  077A                     l655:
   393                           
   394                           ;Assignment 51.c: 71:         if ((S1_state == 0) && (PORTAbits.RA0 == 0)) S1_state =1;
   395  077A  0876               	movf	main@S1_state,w
   396  077B  1D03               	btfss	3,2
   397  077C  2F7E               	goto	u51
   398  077D  2F7F               	goto	u50
   399  077E                     u51:
   400  077E  2F86               	goto	l661
   401  077F                     u50:
   402  077F                     l657:
   403  077F  0020               	movlb	0	; select bank0
   404  0780  180C               	btfsc	12,0	;volatile
   405  0781  2F83               	goto	u61
   406  0782  2F84               	goto	u60
   407  0783                     u61:
   408  0783  2F86               	goto	l661
   409  0784                     u60:
   410  0784                     l659:
   411  0784  01F6               	clrf	main@S1_state
   412  0785  0AF6               	incf	main@S1_state,f
   413  0786                     l661:
   414                           
   415                           ;Assignment 51.c: 72:         if ((S1_state == 1) && (PORTAbits.RA0 == 1)) S1_state =2;
   416  0786  0376               	decf	main@S1_state,w
   417  0787  1D03               	btfss	3,2
   418  0788  2F8A               	goto	u71
   419  0789  2F8B               	goto	u70
   420  078A                     u71:
   421  078A  2F94               	goto	l667
   422  078B                     u70:
   423  078B                     l663:
   424  078B  0020               	movlb	0	; select bank0
   425  078C  1C0C               	btfss	12,0	;volatile
   426  078D  2F8F               	goto	u81
   427  078E  2F90               	goto	u80
   428  078F                     u81:
   429  078F  2F94               	goto	l667
   430  0790                     u80:
   431  0790                     l665:
   432  0790  3002               	movlw	2
   433  0791  00F5               	movwf	??_main
   434  0792  0875               	movf	??_main,w
   435  0793  00F6               	movwf	main@S1_state
   436  0794                     l667:
   437                           
   438                           ;Assignment 51.c: 73:         if ((S1_state == 2) && (PORTAbits.RA0 == 0)) S1_state =3;
   439  0794  3002               	movlw	2
   440  0795  0676               	xorwf	main@S1_state,w
   441  0796  1D03               	btfss	3,2
   442  0797  2F99               	goto	u91
   443  0798  2F9A               	goto	u90
   444  0799                     u91:
   445  0799  2FA3               	goto	l673
   446  079A                     u90:
   447  079A                     l669:
   448  079A  0020               	movlb	0	; select bank0
   449  079B  180C               	btfsc	12,0	;volatile
   450  079C  2F9E               	goto	u101
   451  079D  2F9F               	goto	u100
   452  079E                     u101:
   453  079E  2FA3               	goto	l673
   454  079F                     u100:
   455  079F                     l671:
   456  079F  3003               	movlw	3
   457  07A0  00F5               	movwf	??_main
   458  07A1  0875               	movf	??_main,w
   459  07A2  00F6               	movwf	main@S1_state
   460  07A3                     l673:
   461                           
   462                           ;Assignment 51.c: 75:         if ((S2_state == 0) && (PORTAbits.RA1 == 0)) S2_state =1;
   463  07A3  0877               	movf	main@S2_state,w
   464  07A4  1D03               	btfss	3,2
   465  07A5  2FA7               	goto	u111
   466  07A6  2FA8               	goto	u110
   467  07A7                     u111:
   468  07A7  2FAF               	goto	l679
   469  07A8                     u110:
   470  07A8                     l675:
   471  07A8  0020               	movlb	0	; select bank0
   472  07A9  188C               	btfsc	12,1	;volatile
   473  07AA  2FAC               	goto	u121
   474  07AB  2FAD               	goto	u120
   475  07AC                     u121:
   476  07AC  2FAF               	goto	l679
   477  07AD                     u120:
   478  07AD                     l677:
   479  07AD  01F7               	clrf	main@S2_state
   480  07AE  0AF7               	incf	main@S2_state,f
   481  07AF                     l679:
   482                           
   483                           ;Assignment 51.c: 76:         if ((S2_state == 1) && (PORTAbits.RA1 == 1)) S2_state =2;
   484  07AF  0377               	decf	main@S2_state,w
   485  07B0  1D03               	btfss	3,2
   486  07B1  2FB3               	goto	u131
   487  07B2  2FB4               	goto	u130
   488  07B3                     u131:
   489  07B3  2FBD               	goto	l685
   490  07B4                     u130:
   491  07B4                     l681:
   492  07B4  0020               	movlb	0	; select bank0
   493  07B5  1C8C               	btfss	12,1	;volatile
   494  07B6  2FB8               	goto	u141
   495  07B7  2FB9               	goto	u140
   496  07B8                     u141:
   497  07B8  2FBD               	goto	l685
   498  07B9                     u140:
   499  07B9                     l683:
   500  07B9  3002               	movlw	2
   501  07BA  00F5               	movwf	??_main
   502  07BB  0875               	movf	??_main,w
   503  07BC  00F7               	movwf	main@S2_state
   504  07BD                     l685:
   505                           
   506                           ;Assignment 51.c: 77:         if ((S2_state == 2) && (PORTAbits.RA1 == 0)) S2_state =3;
   507  07BD  3002               	movlw	2
   508  07BE  0677               	xorwf	main@S2_state,w
   509  07BF  1D03               	btfss	3,2
   510  07C0  2FC2               	goto	u151
   511  07C1  2FC3               	goto	u150
   512  07C2                     u151:
   513  07C2  2FCC               	goto	l691
   514  07C3                     u150:
   515  07C3                     l687:
   516  07C3  0020               	movlb	0	; select bank0
   517  07C4  188C               	btfsc	12,1	;volatile
   518  07C5  2FC7               	goto	u161
   519  07C6  2FC8               	goto	u160
   520  07C7                     u161:
   521  07C7  2FCC               	goto	l691
   522  07C8                     u160:
   523  07C8                     l689:
   524  07C8  3003               	movlw	3
   525  07C9  00F5               	movwf	??_main
   526  07CA  0875               	movf	??_main,w
   527  07CB  00F7               	movwf	main@S2_state
   528  07CC                     l691:
   529                           
   530                           ;Assignment 51.c: 79:         if (S1_state == 2){
   531  07CC  3002               	movlw	2
   532  07CD  0676               	xorwf	main@S1_state,w
   533  07CE  1D03               	btfss	3,2
   534  07CF  2FD1               	goto	u171
   535  07D0  2FD2               	goto	u170
   536  07D1                     u171:
   537  07D1  2FD5               	goto	l695
   538  07D2                     u170:
   539  07D2                     l693:
   540                           
   541                           ;Assignment 51.c: 80:             LATB = 0;
   542  07D2  0022               	movlb	2	; select bank2
   543  07D3  018D               	clrf	13	;volatile
   544                           
   545                           ;Assignment 51.c: 81:             LATC = 0;
   546  07D4  018E               	clrf	14	;volatile
   547  07D5                     l695:
   548                           
   549                           ;Assignment 51.c: 83:         if (S1_state == 3){
   550  07D5  3003               	movlw	3
   551  07D6  0676               	xorwf	main@S1_state,w
   552  07D7  1D03               	btfss	3,2
   553  07D8  2FDA               	goto	u181
   554  07D9  2FDB               	goto	u180
   555  07DA                     u181:
   556  07DA  2FDE               	goto	l699
   557  07DB                     u180:
   558  07DB                     l697:
   559                           
   560                           ;Assignment 51.c: 84:             one_LED_move();
   561  07DB  3186  26E1  3187   	fcall	_one_LED_move
   562  07DE                     l699:
   563                           
   564                           ;Assignment 51.c: 87:         if (S2_state == 2){
   565  07DE  3002               	movlw	2
   566  07DF  0677               	xorwf	main@S2_state,w
   567  07E0  1D03               	btfss	3,2
   568  07E1  2FE3               	goto	u191
   569  07E2  2FE4               	goto	u190
   570  07E3                     u191:
   571  07E3  2FE7               	goto	l703
   572  07E4                     u190:
   573  07E4                     l701:
   574                           
   575                           ;Assignment 51.c: 88:             LATB = 0;
   576  07E4  0022               	movlb	2	; select bank2
   577  07E5  018D               	clrf	13	;volatile
   578                           
   579                           ;Assignment 51.c: 89:             LATC = 0;
   580  07E6  018E               	clrf	14	;volatile
   581  07E7                     l703:
   582                           
   583                           ;Assignment 51.c: 92:         if (S2_state == 3){
   584  07E7  3003               	movlw	3
   585  07E8  0677               	xorwf	main@S2_state,w
   586  07E9  1D03               	btfss	3,2
   587  07EA  2FEC               	goto	u201
   588  07EB  2FED               	goto	u200
   589  07EC                     u201:
   590  07EC  2FF0               	goto	l707
   591  07ED                     u200:
   592  07ED                     l705:
   593                           
   594                           ;Assignment 51.c: 93:             LED_one_by_one();
   595  07ED  3187  2723  3187   	fcall	_LED_one_by_one
   596  07F0                     l707:
   597                           
   598                           ;Assignment 51.c: 96:         if (PORTAbits.RA2 == 1){
   599  07F0  0020               	movlb	0	; select bank0
   600  07F1  1D0C               	btfss	12,2	;volatile
   601  07F2  2FF4               	goto	u211
   602  07F3  2FF5               	goto	u210
   603  07F4                     u211:
   604  07F4  2F7A               	goto	l655
   605  07F5                     u210:
   606  07F5                     l709:
   607                           
   608                           ;Assignment 51.c: 97:             LATB = 0;
   609  07F5  0022               	movlb	2	; select bank2
   610  07F6  018D               	clrf	13	;volatile
   611                           
   612                           ;Assignment 51.c: 98:             LATC = 0;
   613  07F7  018E               	clrf	14	;volatile
   614                           
   615                           ;Assignment 51.c: 99:             S1_state = 0;
   616  07F8  01F6               	clrf	main@S1_state
   617                           
   618                           ;Assignment 51.c: 100:             S2_state = 0;
   619  07F9  01F7               	clrf	main@S2_state
   620  07FA  2F7A               	goto	l655
   621  07FB  3180  2802         	ljmp	start
   622  07FD                     __end_of_main:
   623                           
   624                           	psect	text1
   625  06E1                     __ptext1:	
   626 ;; *************** function _one_LED_move *****************
   627 ;; Defined at:
   628 ;;		line 22 in file "Assignment 51.c"
   629 ;; Parameters:    Size  Location     Type
   630 ;;		None
   631 ;; Auto vars:     Size  Location     Type
   632 ;;  n               1    2[COMMON] unsigned char 
   633 ;;  m               1    1[COMMON] unsigned char 
   634 ;;  h               1    4[COMMON] unsigned char 
   635 ;;  i               1    3[COMMON] unsigned char 
   636 ;; Return value:  Size  Location     Type
   637 ;;                  1    wreg      void 
   638 ;; Registers used:
   639 ;;		wreg, status,2, status,0
   640 ;; Tracked objects:
   641 ;;		On entry : 0/0
   642 ;;		On exit  : 0/0
   643 ;;		Unchanged: 0/0
   644 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
   645 ;;      Params:         0       0       0       0       0       0       0       0
   646 ;;      Locals:         4       0       0       0       0       0       0       0
   647 ;;      Temps:          1       0       0       0       0       0       0       0
   648 ;;      Totals:         5       0       0       0       0       0       0       0
   649 ;;Total ram usage:        5 bytes
   650 ;; Hardware stack levels used: 1
   651 ;; This function calls:
   652 ;;		Nothing
   653 ;; This function is called by:
   654 ;;		_main
   655 ;; This function uses a non-reentrant model
   656 ;;
   657                           
   658  06E1                     _one_LED_move:	
   659                           ;psect for function _one_LED_move
   660                           
   661  06E1                     l575:	
   662                           ;incstack = 0
   663                           ; Regs used in _one_LED_move: [wreg+status,2+status,0]
   664                           
   665  06E1                     l577:
   666                           
   667                           ;Assignment 51.c: 24:     i = 0b10000000;
   668  06E1  3080               	movlw	128
   669  06E2  00F0               	movwf	??_one_LED_move
   670  06E3  0870               	movf	??_one_LED_move,w
   671  06E4  00F3               	movwf	one_LED_move@i
   672  06E5                     l579:
   673                           
   674                           ;Assignment 51.c: 25:     h = 0b00100000;
   675  06E5  3020               	movlw	32
   676  06E6  00F0               	movwf	??_one_LED_move
   677  06E7  0870               	movf	??_one_LED_move,w
   678  06E8  00F4               	movwf	one_LED_move@h
   679                           
   680                           ;Assignment 51.c: 26:     for (char m=0;m<2;m++){
   681  06E9  01F1               	clrf	one_LED_move@m
   682  06EA                     l585:
   683                           
   684                           ;Assignment 51.c: 27:         LATB = h;
   685  06EA  0874               	movf	one_LED_move@h,w
   686  06EB  0022               	movlb	2	; select bank2
   687  06EC  008D               	movwf	13	;volatile
   688  06ED                     l587:
   689                           
   690                           ;Assignment 51.c: 28:         h=h>>1;
   691  06ED  3674               	lsrf	one_LED_move@h,w
   692  06EE  00F0               	movwf	??_one_LED_move
   693  06EF  0870               	movf	??_one_LED_move,w
   694  06F0  00F4               	movwf	one_LED_move@h
   695  06F1                     l589:
   696                           
   697                           ;Assignment 51.c: 29:         _delay((unsigned long)((50)*(1000000/4000.0)));
   698  06F1  3011               	movlw	17
   699  06F2  00F0               	movwf	??_one_LED_move
   700  06F3  303A               	movlw	58
   701  06F4                     u227:
   702  06F4  0B89               	decfsz	9,f
   703  06F5  2EF4               	goto	u227
   704  06F6  0BF0               	decfsz	??_one_LED_move,f
   705  06F7  2EF4               	goto	u227
   706  06F8  3200               	nop2
   707  06F9                     l591:
   708                           
   709                           ;Assignment 51.c: 30:         LATB=h;
   710  06F9  0874               	movf	one_LED_move@h,w
   711  06FA  0022               	movlb	2	; select bank2
   712  06FB  008D               	movwf	13	;volatile
   713  06FC                     l593:
   714                           
   715                           ;Assignment 51.c: 31:     }
   716  06FC  3001               	movlw	1
   717  06FD  00F0               	movwf	??_one_LED_move
   718  06FE  0870               	movf	??_one_LED_move,w
   719  06FF  07F1               	addwf	one_LED_move@m,f
   720  0700  3002               	movlw	2
   721  0701  0271               	subwf	one_LED_move@m,w
   722  0702  1C03               	skipc
   723  0703  2F05               	goto	u11
   724  0704  2F06               	goto	u10
   725  0705                     u11:
   726  0705  2EEA               	goto	l585
   727  0706                     u10:
   728  0706                     l595:
   729                           
   730                           ;Assignment 51.c: 32:     for (char n=0;n<8;n++){
   731  0706  01F2               	clrf	one_LED_move@n
   732  0707                     l601:
   733                           
   734                           ;Assignment 51.c: 33:         LATC = i;
   735  0707  0873               	movf	one_LED_move@i,w
   736  0708  008E               	movwf	14	;volatile
   737  0709                     l603:
   738                           
   739                           ;Assignment 51.c: 34:         i=i>>1;
   740  0709  3673               	lsrf	one_LED_move@i,w
   741  070A  00F0               	movwf	??_one_LED_move
   742  070B  0870               	movf	??_one_LED_move,w
   743  070C  00F3               	movwf	one_LED_move@i
   744  070D                     l605:
   745                           
   746                           ;Assignment 51.c: 35:         _delay((unsigned long)((50)*(1000000/4000.0)));
   747  070D  3011               	movlw	17
   748  070E  00F0               	movwf	??_one_LED_move
   749  070F  303A               	movlw	58
   750  0710                     u237:
   751  0710  0B89               	decfsz	9,f
   752  0711  2F10               	goto	u237
   753  0712  0BF0               	decfsz	??_one_LED_move,f
   754  0713  2F10               	goto	u237
   755  0714  3200               	nop2
   756  0715                     l607:
   757                           
   758                           ;Assignment 51.c: 36:         LATC = i;
   759  0715  0873               	movf	one_LED_move@i,w
   760  0716  0022               	movlb	2	; select bank2
   761  0717  008E               	movwf	14	;volatile
   762  0718                     l609:
   763                           
   764                           ;Assignment 51.c: 37:     }
   765  0718  3001               	movlw	1
   766  0719  00F0               	movwf	??_one_LED_move
   767  071A  0870               	movf	??_one_LED_move,w
   768  071B  07F2               	addwf	one_LED_move@n,f
   769  071C  3008               	movlw	8
   770  071D  0272               	subwf	one_LED_move@n,w
   771  071E  1C03               	skipc
   772  071F  2F21               	goto	u21
   773  0720  2F22               	goto	u20
   774  0721                     u21:
   775  0721  2F07               	goto	l601
   776  0722                     u20:
   777  0722                     l23:
   778  0722  0008               	return
   779  0723                     __end_of_one_LED_move:
   780                           
   781                           	psect	text2
   782  0723                     __ptext2:	
   783 ;; *************** function _LED_one_by_one *****************
   784 ;; Defined at:
   785 ;;		line 40 in file "Assignment 51.c"
   786 ;; Parameters:    Size  Location     Type
   787 ;;		None
   788 ;; Auto vars:     Size  Location     Type
   789 ;;  n               1    2[COMMON] unsigned char 
   790 ;;  m               1    1[COMMON] unsigned char 
   791 ;;  h               1    4[COMMON] unsigned char 
   792 ;;  i               1    3[COMMON] unsigned char 
   793 ;; Return value:  Size  Location     Type
   794 ;;                  1    wreg      void 
   795 ;; Registers used:
   796 ;;		wreg, status,2, status,0
   797 ;; Tracked objects:
   798 ;;		On entry : 0/0
   799 ;;		On exit  : 0/0
   800 ;;		Unchanged: 0/0
   801 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
   802 ;;      Params:         0       0       0       0       0       0       0       0
   803 ;;      Locals:         4       0       0       0       0       0       0       0
   804 ;;      Temps:          1       0       0       0       0       0       0       0
   805 ;;      Totals:         5       0       0       0       0       0       0       0
   806 ;;Total ram usage:        5 bytes
   807 ;; Hardware stack levels used: 1
   808 ;; This function calls:
   809 ;;		Nothing
   810 ;; This function is called by:
   811 ;;		_main
   812 ;; This function uses a non-reentrant model
   813 ;;
   814                           
   815  0723                     _LED_one_by_one:	
   816                           ;psect for function _LED_one_by_one
   817                           
   818  0723                     l611:	
   819                           ;incstack = 0
   820                           ; Regs used in _LED_one_by_one: [wreg+status,2+status,0]
   821                           
   822  0723                     l613:
   823                           
   824                           ;Assignment 51.c: 42:     i = 0b10000000;
   825  0723  3080               	movlw	128
   826  0724  00F0               	movwf	??_LED_one_by_one
   827  0725  0870               	movf	??_LED_one_by_one,w
   828  0726  00F3               	movwf	LED_one_by_one@i
   829  0727                     l615:
   830                           
   831                           ;Assignment 51.c: 43:     h = 0b00100000;
   832  0727  3020               	movlw	32
   833  0728  00F0               	movwf	??_LED_one_by_one
   834  0729  0870               	movf	??_LED_one_by_one,w
   835  072A  00F4               	movwf	LED_one_by_one@h
   836                           
   837                           ;Assignment 51.c: 44:     for (char m=0;m<2;m++){
   838  072B  01F1               	clrf	LED_one_by_one@m
   839  072C                     l621:
   840                           
   841                           ;Assignment 51.c: 45:         LATB = h;
   842  072C  0874               	movf	LED_one_by_one@h,w
   843  072D  0022               	movlb	2	; select bank2
   844  072E  008D               	movwf	13	;volatile
   845  072F                     l623:
   846                           
   847                           ;Assignment 51.c: 46:         h=h>>1|h;
   848  072F  3674               	lsrf	LED_one_by_one@h,w
   849  0730  0474               	iorwf	LED_one_by_one@h,w
   850  0731  00F0               	movwf	??_LED_one_by_one
   851  0732  0870               	movf	??_LED_one_by_one,w
   852  0733  00F4               	movwf	LED_one_by_one@h
   853  0734                     l625:
   854                           
   855                           ;Assignment 51.c: 47:         _delay((unsigned long)((50)*(1000000/4000.0)));
   856  0734  3011               	movlw	17
   857  0735  00F0               	movwf	??_LED_one_by_one
   858  0736  303A               	movlw	58
   859  0737                     u247:
   860  0737  0B89               	decfsz	9,f
   861  0738  2F37               	goto	u247
   862  0739  0BF0               	decfsz	??_LED_one_by_one,f
   863  073A  2F37               	goto	u247
   864  073B  3200               	nop2
   865                           
   866                           ;Assignment 51.c: 48:     }
   867  073C  3001               	movlw	1
   868  073D  00F0               	movwf	??_LED_one_by_one
   869  073E  0870               	movf	??_LED_one_by_one,w
   870  073F  07F1               	addwf	LED_one_by_one@m,f
   871  0740                     l627:
   872  0740  3002               	movlw	2
   873  0741  0271               	subwf	LED_one_by_one@m,w
   874  0742  1C03               	skipc
   875  0743  2F45               	goto	u31
   876  0744  2F46               	goto	u30
   877  0745                     u31:
   878  0745  2F2C               	goto	l621
   879  0746                     u30:
   880  0746                     l629:
   881                           
   882                           ;Assignment 51.c: 49:     for (char n=0;n<8;n++){
   883  0746  01F2               	clrf	LED_one_by_one@n
   884  0747                     l635:
   885                           
   886                           ;Assignment 51.c: 50:         LATC = i;
   887  0747  0873               	movf	LED_one_by_one@i,w
   888  0748  0022               	movlb	2	; select bank2
   889  0749  008E               	movwf	14	;volatile
   890  074A                     l637:
   891                           
   892                           ;Assignment 51.c: 51:         i=i>>1|i;
   893  074A  3673               	lsrf	LED_one_by_one@i,w
   894  074B  0473               	iorwf	LED_one_by_one@i,w
   895  074C  00F0               	movwf	??_LED_one_by_one
   896  074D  0870               	movf	??_LED_one_by_one,w
   897  074E  00F3               	movwf	LED_one_by_one@i
   898  074F                     l639:
   899                           
   900                           ;Assignment 51.c: 52:         _delay((unsigned long)((50)*(1000000/4000.0)));
   901  074F  3011               	movlw	17
   902  0750  00F0               	movwf	??_LED_one_by_one
   903  0751  303A               	movlw	58
   904  0752                     u257:
   905  0752  0B89               	decfsz	9,f
   906  0753  2F52               	goto	u257
   907  0754  0BF0               	decfsz	??_LED_one_by_one,f
   908  0755  2F52               	goto	u257
   909  0756  3200               	nop2
   910                           
   911                           ;Assignment 51.c: 53:     }
   912  0757  3001               	movlw	1
   913  0758  00F0               	movwf	??_LED_one_by_one
   914  0759  0870               	movf	??_LED_one_by_one,w
   915  075A  07F2               	addwf	LED_one_by_one@n,f
   916  075B                     l641:
   917  075B  3008               	movlw	8
   918  075C  0272               	subwf	LED_one_by_one@n,w
   919  075D  1C03               	skipc
   920  075E  2F60               	goto	u41
   921  075F  2F61               	goto	u40
   922  0760                     u41:
   923  0760  2F47               	goto	l635
   924  0761                     u40:
   925  0761                     l643:
   926                           
   927                           ;Assignment 51.c: 54:     LATB = 0;
   928  0761  0022               	movlb	2	; select bank2
   929  0762  018D               	clrf	13	;volatile
   930                           
   931                           ;Assignment 51.c: 55:     LATC = 0;
   932  0763  018E               	clrf	14	;volatile
   933  0764                     l645:
   934                           
   935                           ;Assignment 51.c: 56:     _delay((unsigned long)((40)*(1000000/4000.0)));
   936  0764  300D               	movlw	13
   937  0765  00F0               	movwf	??_LED_one_by_one
   938  0766  30FC               	movlw	252
   939  0767                     u267:
   940  0767  0B89               	decfsz	9,f
   941  0768  2F67               	goto	u267
   942  0769  0BF0               	decfsz	??_LED_one_by_one,f
   943  076A  2F67               	goto	u267
   944  076B                     l30:
   945  076B  0008               	return
   946  076C                     __end_of_LED_one_by_one:
   947  007E                     btemp	set	126	;btemp
   948  007E                     wtemp0	set	126
   949                           
   950                           	psect	idloc
   951                           
   952                           ;Config register IDLOC0 @ 0x8000
   953                           ;	unspecified, using default values
   954  8000                     	org	32768
   955  8000  3FFF               	dw	16383
   956                           
   957                           ;Config register IDLOC1 @ 0x8001
   958                           ;	unspecified, using default values
   959  8001                     	org	32769
   960  8001  3FFF               	dw	16383
   961                           
   962                           ;Config register IDLOC2 @ 0x8002
   963                           ;	unspecified, using default values
   964  8002                     	org	32770
   965  8002  3FFF               	dw	16383
   966                           
   967                           ;Config register IDLOC3 @ 0x8003
   968                           ;	unspecified, using default values
   969  8003                     	org	32771
   970  8003  3FFF               	dw	16383
   971                           
   972                           	psect	config
   973                           
   974                           ;Config register CONFIG1 @ 0x8007
   975                           ;	Oscillator Selection Bits
   976                           ;	FOSC = INTOSC, INTOSC oscillator: I/O function on CLKIN pin
   977                           ;	Watchdog Timer Enable
   978                           ;	WDTE = OFF, WDT disabled
   979                           ;	Power-up Timer Enable
   980                           ;	PWRTE = OFF, PWRT disabled
   981                           ;	MCLR Pin Function Select
   982                           ;	MCLRE = OFF, MCLR/VPP pin function is digital input
   983                           ;	Flash Program Memory Code Protection
   984                           ;	CP = OFF, Program memory code protection is disabled
   985                           ;	Brown-out Reset Enable
   986                           ;	BOREN = OFF, Brown-out Reset disabled
   987                           ;	Clock Out Enable
   988                           ;	CLKOUTEN = OFF, CLKOUT function is disabled. I/O or oscillator function on the CLKOUT 
      +                          pin
   989                           ;	Internal/External Switchover Mode
   990                           ;	IESO = OFF, Internal/External Switchover Mode is disabled
   991                           ;	Fail-Safe Clock Monitor Enable
   992                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
   993  8007                     	org	32775
   994  8007  09A4               	dw	2468
   995                           
   996                           ;Config register CONFIG2 @ 0x8008
   997                           ;	Flash Memory Self-Write Protection
   998                           ;	WRT = OFF, Write protection off
   999                           ;	Stack Overflow/Underflow Reset Enable
  1000                           ;	STVREN = OFF, Stack Overflow or Underflow will not cause a Reset
  1001                           ;	Brown-out Reset Voltage Selection
  1002                           ;	BORV = LO, Brown-out Reset Voltage (Vbor), low trip point selected.
  1003                           ;	Low-Power Brown Out Reset
  1004                           ;	LPBOR = OFF, Low-Power BOR is disabled
  1005                           ;	Low-Voltage Programming Enable
  1006                           ;	LVP = OFF, High-voltage on MCLR/VPP must be used for programming
  1007  8008                     	org	32776
  1008  8008  1DFF               	dw	7679

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         0
    Persistent  32
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      8       8
    BANK0            80      0       0
    BANK1            80      0       0
    BANK2            80      0       0
    BANK3            80      0       0
    BANK4            80      0       0
    BANK5            80      0       0
    BANK6            16      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    _main->_LED_one_by_one
    _main->_one_LED_move

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 3     3      0     450
                                              5 COMMON     3     3      0
                     _LED_one_by_one
                       _one_LED_move
 ---------------------------------------------------------------------------------
 (1) _one_LED_move                                         5     5      0     150
                                              0 COMMON     5     5      0
 ---------------------------------------------------------------------------------
 (1) _LED_one_by_one                                       5     5      0     150
                                              0 COMMON     5     5      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _LED_one_by_one
   _one_LED_move

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             1F0      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      8       8       2       57.1%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
ABS                  0      0       0       4        0.0%
BITBANK0            50      0       0       5        0.0%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BANK0               50      0       0       6        0.0%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BITBANK1            50      0       0       7        0.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BANK1               50      0       0       8        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BITBANK2            50      0       0       9        0.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BANK2               50      0       0      10        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BITBANK3            50      0       0      11        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BANK3               50      0       0      12        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BITBANK4            50      0       0      13        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BANK4               50      0       0      14        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BITBANK5            50      0       0      15        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BANK5               50      0       0      16        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BITBANK6            10      0       0      17        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BANK6               10      0       0      18        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
DATA                 0      0       0      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V2.36 build 20220127204148 
Symbol Table                                                                                   Thu Mar 31 19:50:45 2022

                     l30 076B                       l23 0722                       u10 0706  
                     u11 0705                       u20 0722                       u21 0721  
                     u30 0746                       u31 0745                       u40 0761  
                     u41 0760                       u50 077F                       u51 077E  
                     u60 0784                       u61 0783                       u70 078B  
                     u71 078A                       u80 0790                       u81 078F  
                     u90 079A                       u91 0799                      l601 0707  
                    l611 0723                      l603 0709                      l621 072C  
                    l613 0723                      l605 070D                      l701 07E4  
                    l623 072F                      l615 0727                      l607 0715  
                    l703 07E7                      l641 075B                      l625 0734  
                    l609 0718                      l705 07ED                      l643 0761  
                    l635 0747                      l627 0740                      l707 07F0  
                    l651 0776                      l645 0764                      l637 074A  
                    l629 0746                      l709 07F5                      l661 0786  
                    l653 0777                      l639 074F                      l591 06F9  
                    l575 06E1                      l671 079F                      l663 078B  
                    l655 077A                      l647 076C                      l593 06FC  
                    l585 06EA                      l577 06E1                      l681 07B4  
                    l673 07A3                      l665 0790                      l657 077F  
                    l649 0774                      l595 0706                      l587 06ED  
                    l579 06E5                      l691 07CC                      l683 07B9  
                    l675 07A8                      l667 0794                      l659 0784  
                    l589 06F1                      l693 07D2                      l685 07BD  
                    l677 07AD                      l669 079A                      l695 07D5  
                    l687 07C3                      l679 07AF                      l697 07DB  
                    l689 07C8                      l699 07DE                      u100 079F  
                    u101 079E                      u110 07A8                      u111 07A7  
                    u200 07ED                      u120 07AD                      u201 07EC  
                    u121 07AC                      u210 07F5                      u130 07B4  
                    u211 07F4                      u131 07B3                      u140 07B9  
                    u141 07B8                      u150 07C3                      u151 07C2  
                    u160 07C8                      u161 07C7                      u170 07D2  
                    u227 06F4                      u171 07D1                      u180 07DB  
                    u237 0710                      u181 07DA                      u190 07E4  
                    u247 0737                      u191 07E3                      u257 0752  
                    u267 0767                      wreg 0009                     _LATB 010D  
                   _LATC 010E                     _main 076C                     btemp 007E  
                   start 0002                    ?_main 0070                    _TRISB 008D  
                  _TRISC 008E                    status 0003                    wtemp0 007E  
        __initialization 07FD             __end_of_main 07FD                   ??_main 0075  
          ?_one_LED_move 0070                   _ANSELA 018C           ??_one_LED_move 0070  
__end_of__initialization 07FD           __pcstackCOMMON 0070               __pmaintext 076C  
   __end_of_one_LED_move 0723                  __ptext1 06E1                  __ptext2 0723  
         _LED_one_by_one 0723     end_of_initialization 07FD                _PORTAbits 000C  
 __end_of_LED_one_by_one 076C                _TRISAbits 008C          ?_LED_one_by_one 0070  
    start_initialization 07FD                ___latbits 0002             _one_LED_move 06E1  
          one_LED_move@h 0074            one_LED_move@i 0073            one_LED_move@m 0071  
          one_LED_move@n 0072         ??_LED_one_by_one 0070          LED_one_by_one@h 0074  
        LED_one_by_one@i 0073          LED_one_by_one@m 0071          LED_one_by_one@n 0072  
           main@S1_state 0076             main@S2_state 0077  
