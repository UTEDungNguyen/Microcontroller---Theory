

Microchip MPLAB XC8 Assembler V2.36 build 20220127204148 
                                                                                               Mon May 02 11:38:39 2022

Microchip MPLAB XC8 C Compiler v2.36 (Free license) build 20220127204148 Og1 
     1                           	processor	16F1509
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataBANK1,global,class=CODE,delta=2,noexec
     5                           	psect	stringtext1,global,class=STRCODE,delta=2,noexec
     6                           	psect	stringtext2,global,class=STRCODE,delta=2,noexec
     7                           	psect	cinit,global,class=CODE,merge=1,delta=2
     8                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1,noexec
     9                           	psect	inittext,global,class=CODE,delta=2
    10                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    11                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    12                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    13                           	psect	text1,local,class=CODE,merge=1,delta=2
    14                           	psect	text2,local,class=CODE,merge=1,delta=2
    15                           	psect	text3,local,class=CODE,merge=1,delta=2,group=2
    16                           	psect	text4,local,class=CODE,merge=1,delta=2
    17                           	psect	text5,local,class=CODE,merge=1,delta=2
    18                           	psect	text6,local,class=CODE,merge=1,delta=2
    19                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=2,noexec
    20                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    21                           	dabs	1,0x7E,2
    22  0000                     
    23                           ; Version 2.40
    24                           ; Generated 17/11/2021 GMT
    25                           ; 
    26                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
    27                           ; All rights reserved.
    28                           ; 
    29                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    30                           ; 
    31                           ; Redistribution and use in source and binary forms, with or without modification, are
    32                           ; permitted provided that the following conditions are met:
    33                           ; 
    34                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    35                           ;        conditions and the following disclaimer.
    36                           ; 
    37                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    38                           ;        of conditions and the following disclaimer in the documentation and/or other
    39                           ;        materials provided with the distribution. Publication is not required when
    40                           ;        this file is used in an embedded application.
    41                           ; 
    42                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    43                           ;        software without specific prior written permission.
    44                           ; 
    45                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    46                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    47                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    48                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    49                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    50                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    51                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    52                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    53                           ; 
    54                           ; 
    55                           ; Code-generator required, PIC16F1509 Definitions
    56                           ; 
    57                           ; SFR Addresses
    58  0000                     	;# 
    59  0001                     	;# 
    60  0002                     	;# 
    61  0003                     	;# 
    62  0004                     	;# 
    63  0005                     	;# 
    64  0006                     	;# 
    65  0007                     	;# 
    66  0008                     	;# 
    67  0009                     	;# 
    68  000A                     	;# 
    69  000B                     	;# 
    70  000C                     	;# 
    71  000D                     	;# 
    72  000E                     	;# 
    73  0011                     	;# 
    74  0012                     	;# 
    75  0013                     	;# 
    76  0015                     	;# 
    77  0016                     	;# 
    78  0016                     	;# 
    79  0017                     	;# 
    80  0018                     	;# 
    81  0019                     	;# 
    82  001A                     	;# 
    83  001B                     	;# 
    84  001C                     	;# 
    85  008C                     	;# 
    86  008D                     	;# 
    87  008E                     	;# 
    88  0091                     	;# 
    89  0092                     	;# 
    90  0093                     	;# 
    91  0095                     	;# 
    92  0096                     	;# 
    93  0097                     	;# 
    94  0099                     	;# 
    95  009A                     	;# 
    96  009B                     	;# 
    97  009B                     	;# 
    98  009C                     	;# 
    99  009D                     	;# 
   100  009E                     	;# 
   101  009F                     	;# 
   102  010C                     	;# 
   103  010D                     	;# 
   104  010E                     	;# 
   105  0111                     	;# 
   106  0112                     	;# 
   107  0113                     	;# 
   108  0114                     	;# 
   109  0115                     	;# 
   110  0116                     	;# 
   111  0117                     	;# 
   112  0118                     	;# 
   113  0119                     	;# 
   114  011D                     	;# 
   115  018C                     	;# 
   116  018D                     	;# 
   117  018E                     	;# 
   118  0191                     	;# 
   119  0191                     	;# 
   120  0192                     	;# 
   121  0193                     	;# 
   122  0193                     	;# 
   123  0194                     	;# 
   124  0195                     	;# 
   125  0196                     	;# 
   126  0197                     	;# 
   127  0199                     	;# 
   128  019A                     	;# 
   129  019B                     	;# 
   130  019B                     	;# 
   131  019C                     	;# 
   132  019D                     	;# 
   133  019E                     	;# 
   134  019F                     	;# 
   135  020C                     	;# 
   136  020D                     	;# 
   137  0211                     	;# 
   138  0211                     	;# 
   139  0212                     	;# 
   140  0212                     	;# 
   141  0213                     	;# 
   142  0213                     	;# 
   143  0214                     	;# 
   144  0214                     	;# 
   145  0215                     	;# 
   146  0215                     	;# 
   147  0215                     	;# 
   148  0216                     	;# 
   149  0216                     	;# 
   150  0217                     	;# 
   151  0217                     	;# 
   152  0391                     	;# 
   153  0392                     	;# 
   154  0393                     	;# 
   155  0394                     	;# 
   156  0395                     	;# 
   157  0396                     	;# 
   158  0498                     	;# 
   159  0498                     	;# 
   160  0499                     	;# 
   161  049A                     	;# 
   162  049B                     	;# 
   163  049B                     	;# 
   164  049C                     	;# 
   165  049D                     	;# 
   166  049E                     	;# 
   167  049F                     	;# 
   168  0611                     	;# 
   169  0612                     	;# 
   170  0613                     	;# 
   171  0613                     	;# 
   172  0614                     	;# 
   173  0615                     	;# 
   174  0616                     	;# 
   175  0616                     	;# 
   176  0617                     	;# 
   177  0618                     	;# 
   178  0619                     	;# 
   179  0619                     	;# 
   180  061A                     	;# 
   181  061B                     	;# 
   182  061C                     	;# 
   183  061C                     	;# 
   184  0691                     	;# 
   185  0692                     	;# 
   186  0693                     	;# 
   187  0694                     	;# 
   188  0695                     	;# 
   189  0F0F                     	;# 
   190  0F10                     	;# 
   191  0F11                     	;# 
   192  0F12                     	;# 
   193  0F13                     	;# 
   194  0F14                     	;# 
   195  0F15                     	;# 
   196  0F16                     	;# 
   197  0F17                     	;# 
   198  0F18                     	;# 
   199  0F19                     	;# 
   200  0F1A                     	;# 
   201  0F1B                     	;# 
   202  0F1C                     	;# 
   203  0F1D                     	;# 
   204  0F1E                     	;# 
   205  0F1F                     	;# 
   206  0F20                     	;# 
   207  0F21                     	;# 
   208  0F22                     	;# 
   209  0F23                     	;# 
   210  0F24                     	;# 
   211  0F25                     	;# 
   212  0F26                     	;# 
   213  0F27                     	;# 
   214  0F28                     	;# 
   215  0F29                     	;# 
   216  0F2A                     	;# 
   217  0F2B                     	;# 
   218  0F2C                     	;# 
   219  0F2D                     	;# 
   220  0F2E                     	;# 
   221  0F2F                     	;# 
   222  0F8C                     	;# 
   223  0F8D                     	;# 
   224  0F91                     	;# 
   225  0F95                     	;# 
   226  0F96                     	;# 
   227  0F97                     	;# 
   228  0F9C                     	;# 
   229  0F9D                     	;# 
   230  0F9E                     	;# 
   231  0FE3                     	;# 
   232  0FE4                     	;# 
   233  0FE5                     	;# 
   234  0FE6                     	;# 
   235  0FE7                     	;# 
   236  0FE8                     	;# 
   237  0FE9                     	;# 
   238  0FEA                     	;# 
   239  0FEB                     	;# 
   240  0FED                     	;# 
   241  0FEE                     	;# 
   242  0FEF                     	;# 
   243  0000                     	;# 
   244  0001                     	;# 
   245  0002                     	;# 
   246  0003                     	;# 
   247  0004                     	;# 
   248  0005                     	;# 
   249  0006                     	;# 
   250  0007                     	;# 
   251  0008                     	;# 
   252  0009                     	;# 
   253  000A                     	;# 
   254  000B                     	;# 
   255  000C                     	;# 
   256  000D                     	;# 
   257  000E                     	;# 
   258  0011                     	;# 
   259  0012                     	;# 
   260  0013                     	;# 
   261  0015                     	;# 
   262  0016                     	;# 
   263  0016                     	;# 
   264  0017                     	;# 
   265  0018                     	;# 
   266  0019                     	;# 
   267  001A                     	;# 
   268  001B                     	;# 
   269  001C                     	;# 
   270  008C                     	;# 
   271  008D                     	;# 
   272  008E                     	;# 
   273  0091                     	;# 
   274  0092                     	;# 
   275  0093                     	;# 
   276  0095                     	;# 
   277  0096                     	;# 
   278  0097                     	;# 
   279  0099                     	;# 
   280  009A                     	;# 
   281  009B                     	;# 
   282  009B                     	;# 
   283  009C                     	;# 
   284  009D                     	;# 
   285  009E                     	;# 
   286  009F                     	;# 
   287  010C                     	;# 
   288  010D                     	;# 
   289  010E                     	;# 
   290  0111                     	;# 
   291  0112                     	;# 
   292  0113                     	;# 
   293  0114                     	;# 
   294  0115                     	;# 
   295  0116                     	;# 
   296  0117                     	;# 
   297  0118                     	;# 
   298  0119                     	;# 
   299  011D                     	;# 
   300  018C                     	;# 
   301  018D                     	;# 
   302  018E                     	;# 
   303  0191                     	;# 
   304  0191                     	;# 
   305  0192                     	;# 
   306  0193                     	;# 
   307  0193                     	;# 
   308  0194                     	;# 
   309  0195                     	;# 
   310  0196                     	;# 
   311  0197                     	;# 
   312  0199                     	;# 
   313  019A                     	;# 
   314  019B                     	;# 
   315  019B                     	;# 
   316  019C                     	;# 
   317  019D                     	;# 
   318  019E                     	;# 
   319  019F                     	;# 
   320  020C                     	;# 
   321  020D                     	;# 
   322  0211                     	;# 
   323  0211                     	;# 
   324  0212                     	;# 
   325  0212                     	;# 
   326  0213                     	;# 
   327  0213                     	;# 
   328  0214                     	;# 
   329  0214                     	;# 
   330  0215                     	;# 
   331  0215                     	;# 
   332  0215                     	;# 
   333  0216                     	;# 
   334  0216                     	;# 
   335  0217                     	;# 
   336  0217                     	;# 
   337  0391                     	;# 
   338  0392                     	;# 
   339  0393                     	;# 
   340  0394                     	;# 
   341  0395                     	;# 
   342  0396                     	;# 
   343  0498                     	;# 
   344  0498                     	;# 
   345  0499                     	;# 
   346  049A                     	;# 
   347  049B                     	;# 
   348  049B                     	;# 
   349  049C                     	;# 
   350  049D                     	;# 
   351  049E                     	;# 
   352  049F                     	;# 
   353  0611                     	;# 
   354  0612                     	;# 
   355  0613                     	;# 
   356  0613                     	;# 
   357  0614                     	;# 
   358  0615                     	;# 
   359  0616                     	;# 
   360  0616                     	;# 
   361  0617                     	;# 
   362  0618                     	;# 
   363  0619                     	;# 
   364  0619                     	;# 
   365  061A                     	;# 
   366  061B                     	;# 
   367  061C                     	;# 
   368  061C                     	;# 
   369  0691                     	;# 
   370  0692                     	;# 
   371  0693                     	;# 
   372  0694                     	;# 
   373  0695                     	;# 
   374  0F0F                     	;# 
   375  0F10                     	;# 
   376  0F11                     	;# 
   377  0F12                     	;# 
   378  0F13                     	;# 
   379  0F14                     	;# 
   380  0F15                     	;# 
   381  0F16                     	;# 
   382  0F17                     	;# 
   383  0F18                     	;# 
   384  0F19                     	;# 
   385  0F1A                     	;# 
   386  0F1B                     	;# 
   387  0F1C                     	;# 
   388  0F1D                     	;# 
   389  0F1E                     	;# 
   390  0F1F                     	;# 
   391  0F20                     	;# 
   392  0F21                     	;# 
   393  0F22                     	;# 
   394  0F23                     	;# 
   395  0F24                     	;# 
   396  0F25                     	;# 
   397  0F26                     	;# 
   398  0F27                     	;# 
   399  0F28                     	;# 
   400  0F29                     	;# 
   401  0F2A                     	;# 
   402  0F2B                     	;# 
   403  0F2C                     	;# 
   404  0F2D                     	;# 
   405  0F2E                     	;# 
   406  0F2F                     	;# 
   407  0F8C                     	;# 
   408  0F8D                     	;# 
   409  0F91                     	;# 
   410  0F95                     	;# 
   411  0F96                     	;# 
   412  0F97                     	;# 
   413  0F9C                     	;# 
   414  0F9D                     	;# 
   415  0F9E                     	;# 
   416  0FE3                     	;# 
   417  0FE4                     	;# 
   418  0FE5                     	;# 
   419  0FE6                     	;# 
   420  0FE7                     	;# 
   421  0FE8                     	;# 
   422  0FE9                     	;# 
   423  0FEA                     	;# 
   424  0FEB                     	;# 
   425  0FED                     	;# 
   426  0FEE                     	;# 
   427  0FEF                     	;# 
   428                           
   429                           	psect	idataBANK1
   430  0703                     __pidataBANK1:
   431                           
   432                           ;initializer for main@F3679
   433  0703  3400               	retlw	0
   434  0704  340A               	retlw	10
   435  0705  341F               	retlw	31
   436  0706  341F               	retlw	31
   437  0707  341F               	retlw	31
   438  0708  340E               	retlw	14
   439  0709  3404               	retlw	4
   440  070A  3400               	retlw	0
   441  070B  3400               	retlw	0
   442  070C  340E               	retlw	14
   443  070D  3415               	retlw	21
   444  070E  341B               	retlw	27
   445  070F  340E               	retlw	14
   446  0710  340E               	retlw	14
   447  0711  3400               	retlw	0
   448  0712  3400               	retlw	0
   449  0713  3401               	retlw	1
   450  0714  3403               	retlw	3
   451  0715  3405               	retlw	5
   452  0716  3409               	retlw	9
   453  0717  340B               	retlw	11
   454  0718  341B               	retlw	27
   455  0719  3418               	retlw	24
   456  071A  3400               	retlw	0
   457  071B  3400               	retlw	0
   458  071C  341F               	retlw	31
   459  071D  3415               	retlw	21
   460  071E  341F               	retlw	31
   461  071F  341F               	retlw	31
   462  0720  340E               	retlw	14
   463  0721  340A               	retlw	10
   464  0722  341B               	retlw	27
   465  0723  340E               	retlw	14
   466  0724  3411               	retlw	17
   467  0725  3411               	retlw	17
   468  0726  3411               	retlw	17
   469  0727  341F               	retlw	31
   470  0728  341B               	retlw	27
   471  0729  341B               	retlw	27
   472  072A  341F               	retlw	31
   473  000E                     _PORTCbits	set	14
   474  000E                     _PORTC	set	14
   475  008E                     _TRISC	set	142
   476                           
   477                           	psect	stringtext1
   478  0800                     __pstringtext1:
   479  0800                     STR_1:
   480  0800  344E               	retlw	78	;'N'
   481  0801  3447               	retlw	71	;'G'
   482  0802  3455               	retlw	85	;'U'
   483  0803  3459               	retlw	89	;'Y'
   484  0804  3445               	retlw	69	;'E'
   485  0805  344E               	retlw	78	;'N'
   486  0806  3420               	retlw	32	;' '
   487  0807  3450               	retlw	80	;'P'
   488  0808  3448               	retlw	72	;'H'
   489  0809  3455               	retlw	85	;'U'
   490  080A  3443               	retlw	67	;'C'
   491  080B  3420               	retlw	32	;' '
   492  080C  3444               	retlw	68	;'D'
   493  080D  3455               	retlw	85	;'U'
   494  080E  344E               	retlw	78	;'N'
   495  080F  3447               	retlw	71	;'G'
   496  0810  3400               	retlw	0
   497                           
   498                           	psect	stringtext2
   499  0000                     __pstringtext2:
   500                           
   501                           	psect	cinit
   502  07F1                     start_initialization:	
   503                           ; #config settings
   504                           
   505  07F1                     __initialization:
   506                           
   507                           ; Initialize objects allocated to BANK1
   508  07F1  3003               	movlw	low __pidataBANK1
   509  07F2  0084               	movwf	4
   510  07F3  3087               	movlw	(high __pidataBANK1)| (0+128)
   511  07F4  0085               	movwf	5
   512  07F5  30A0               	movlw	low __pdataBANK1
   513  07F6  0086               	movwf	6
   514  07F7  3000               	movlw	high __pdataBANK1
   515  07F8  0087               	movwf	7
   516  07F9  3028               	movlw	40
   517  07FA  3186  2668  3187   	fcall	init_ram
   518  07FD                     end_of_initialization:	
   519                           ;End of C runtime variable initialization code
   520                           
   521  07FD                     __end_of__initialization:
   522  07FD  0020               	movlb	0
   523  07FE  3187  2F89         	ljmp	_main	;jump to C main() function
   524                           
   525                           	psect	dataBANK1
   526  00A0                     __pdataBANK1:
   527  00A0                     main@F3679:
   528  00A0                     	ds	40
   529                           
   530                           	psect	inittext
   531  0668                     init_ram:
   532  0668  00FE               	movwf	btemp
   533  0669                     initloop:
   534  0669  0012               	moviw fsr0++
   535  066A  001E               	movwi fsr1++
   536  066B  0BFE               	decfsz	btemp,f
   537  066C  2E69               	goto	initloop
   538  066D  3400               	retlw	0
   539                           
   540                           	psect	cstackCOMMON
   541  0070                     __pcstackCOMMON:
   542  0070                     ?_LCD_Initialize:
   543  0070                     ?_LCDPutCmd:	
   544                           ; 1 bytes @ 0x0
   545                           
   546  0070                     ?_LCDPutChar:	
   547                           ; 1 bytes @ 0x0
   548                           
   549  0070                     ?_main:	
   550                           ; 1 bytes @ 0x0
   551                           
   552  0070                     ?_LCDWriteNibble:	
   553                           ; 1 bytes @ 0x0
   554                           
   555  0070                     ?_strlen:	
   556                           ; 1 bytes @ 0x0
   557                           
   558  0070                     LCDWriteNibble@rs:	
   559                           ; 2 bytes @ 0x0
   560                           
   561  0070                     strlen@s:	
   562                           ; 1 bytes @ 0x0
   563                           
   564                           
   565                           ; 2 bytes @ 0x0
   566  0070                     	ds	1
   567  0071                     ??_LCDWriteNibble:
   568                           
   569                           ; 1 bytes @ 0x1
   570  0071                     	ds	1
   571  0072                     ??_strlen:
   572                           
   573                           ; 1 bytes @ 0x2
   574  0072                     	ds	1
   575  0073                     LCDWriteNibble@ch:
   576  0073                     strlen@a:	
   577                           ; 1 bytes @ 0x3
   578                           
   579                           
   580                           ; 2 bytes @ 0x3
   581  0073                     	ds	1
   582  0074                     ??_LCDPutCmd:
   583  0074                     ??_LCDPutChar:	
   584                           ; 1 bytes @ 0x4
   585                           
   586                           
   587                           ; 1 bytes @ 0x4
   588  0074                     	ds	2
   589  0076                     LCDPutChar@ch:
   590  0076                     LCDPutCmd@ch:	
   591                           ; 1 bytes @ 0x6
   592                           
   593                           
   594                           ; 1 bytes @ 0x6
   595  0076                     	ds	1
   596  0077                     ??_LCD_Initialize:
   597  0077                     ?_LCDPutStr3:	
   598                           ; 1 bytes @ 0x7
   599                           
   600  0077                     LCDPutStr3@str:	
   601                           ; 1 bytes @ 0x7
   602                           
   603                           
   604                           ; 2 bytes @ 0x7
   605  0077                     	ds	2
   606  0079                     LCDPutStr3@ln:
   607                           
   608                           ; 1 bytes @ 0x9
   609  0079                     	ds	1
   610  007A                     ??_LCDPutStr3:
   611                           
   612                           ; 1 bytes @ 0xA
   613  007A                     	ds	3
   614  007D                     ??_main:
   615                           
   616                           ; 1 bytes @ 0xD
   617  007D                     	ds	1
   618                           
   619                           	psect	cstackBANK0
   620  0020                     __pcstackBANK0:
   621  0020                     _LCDPutStr3$115:
   622                           
   623                           ; 2 bytes @ 0x0
   624  0020                     	ds	2
   625  0022                     LCDPutStr3@x:
   626                           
   627                           ; 1 bytes @ 0x2
   628  0022                     	ds	1
   629  0023                     LCDPutStr3@y:
   630                           
   631                           ; 1 bytes @ 0x3
   632  0023                     	ds	1
   633  0024                     LCDPutStr3@i:
   634                           
   635                           ; 1 bytes @ 0x4
   636  0024                     	ds	1
   637  0025                     main@cus:
   638                           
   639                           ; 40 bytes @ 0x5
   640  0025                     	ds	40
   641  004D                     main@i:
   642                           
   643                           ; 2 bytes @ 0x2D
   644  004D                     	ds	2
   645  004F                     main@m:
   646                           
   647                           ; 2 bytes @ 0x2F
   648  004F                     	ds	2
   649                           
   650                           	psect	maintext
   651  0789                     __pmaintext:	
   652 ;;
   653 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
   654 ;;
   655 ;; *************** function _main *****************
   656 ;; Defined at:
   657 ;;		line 9 in file "Assignment 63.c"
   658 ;; Parameters:    Size  Location     Type
   659 ;;		None
   660 ;; Auto vars:     Size  Location     Type
   661 ;;  m               2   47[BANK0 ] int 
   662 ;;  i               2   45[BANK0 ] int 
   663 ;;  cus            40    5[BANK0 ] unsigned char [40]
   664 ;; Return value:  Size  Location     Type
   665 ;;                  1    wreg      void 
   666 ;; Registers used:
   667 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
   668 ;; Tracked objects:
   669 ;;		On entry : B1F/0
   670 ;;		On exit  : 0/0
   671 ;;		Unchanged: 0/0
   672 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
   673 ;;      Params:         0       0       0       0       0       0       0       0
   674 ;;      Locals:         0      44       0       0       0       0       0       0
   675 ;;      Temps:          1       0       0       0       0       0       0       0
   676 ;;      Totals:         1      44       0       0       0       0       0       0
   677 ;;Total ram usage:       45 bytes
   678 ;; Hardware stack levels required when called: 3
   679 ;; This function calls:
   680 ;;		_LCDPutChar
   681 ;;		_LCDPutCmd
   682 ;;		_LCDPutStr3
   683 ;;		_LCD_Initialize
   684 ;; This function is called by:
   685 ;;		Startup code after reset
   686 ;; This function uses a non-reentrant model
   687 ;;
   688                           
   689  0789                     _main:	
   690                           ;psect for function _main
   691                           
   692  0789                     l831:	
   693                           ;incstack = 0
   694                           ; Regs used in _main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
   695                           
   696                           
   697                           ;Assignment 63.c: 10:     LCD_Initialize();
   698  0789  3186  26E3  3187   	fcall	_LCD_Initialize
   699                           
   700                           ;Assignment 63.c: 11:     LCDPutCmd(0x0F);
   701  078C  300F               	movlw	15
   702  078D  3186  26A4  3187   	fcall	_LCDPutCmd
   703  0790                     l833:
   704                           
   705                           ;Assignment 63.c: 12:     LCDPutStr3("NGUYEN PHUC DUNG",0);
   706  0790  3000               	movlw	low (STR_1| (0+32768))
   707  0791  00F7               	movwf	LCDPutStr3@str
   708  0792  3088               	movlw	high (STR_1| (0+32768))
   709  0793  00F8               	movwf	LCDPutStr3@str+1
   710  0794  01F9               	clrf	LCDPutStr3@ln
   711  0795  3187  272B  3187   	fcall	_LCDPutStr3
   712  0798                     l835:
   713                           
   714                           ;Assignment 63.c: 14:     LCDPutCmd(0x40);
   715  0798  3040               	movlw	64
   716  0799  3186  26A4  3187   	fcall	_LCDPutCmd
   717  079C                     l837:
   718                           
   719                           ;Assignment 63.c: 15:     uint8_t cus[] =
   720  079C  30A0               	movlw	low main@F3679
   721  079D  0086               	movwf	6
   722  079E  3000               	movlw	high main@F3679
   723  079F  0087               	movwf	7
   724  07A0  3025               	movlw	low main@cus
   725  07A1  0084               	movwf	4
   726  07A2  3000               	movlw	high main@cus
   727  07A3  0085               	movwf	5
   728  07A4  3028               	movlw	40
   729  07A5  00FD               	movwf	??_main
   730  07A6                     u220:
   731  07A6  0016               	moviw fsr1++
   732  07A7  001A               	movwi fsr0++
   733  07A8  0BFD               	decfsz	??_main,f
   734  07A9  2FA6               	goto	u220
   735  07AA                     l839:
   736                           
   737                           ;Assignment 63.c: 22:     for (int i=0;i<40;i++){
   738  07AA  0020               	movlb	0	; select bank0
   739  07AB  01CD               	clrf	main@i
   740  07AC  01CE               	clrf	main@i+1
   741  07AD                     l845:
   742                           
   743                           ;Assignment 63.c: 23:         LCDPutChar(cus[i]);
   744  07AD  0020               	movlb	0	; select bank0
   745  07AE  084D               	movf	main@i,w
   746  07AF  3E25               	addlw	(low (main@cus| 0))& (0+255)
   747  07B0  0086               	movwf	6
   748  07B1  0187               	clrf	7
   749  07B2  0801               	movf	1,w
   750  07B3  3186  2687  3187   	fcall	_LCDPutChar
   751  07B6                     l847:
   752                           
   753                           ;Assignment 63.c: 24:     }
   754  07B6  3001               	movlw	1
   755  07B7  0020               	movlb	0	; select bank0
   756  07B8  07CD               	addwf	main@i,f
   757  07B9  3000               	movlw	0
   758  07BA  3DCE               	addwfc	main@i+1,f
   759  07BB                     l849:
   760  07BB  084E               	movf	main@i+1,w
   761  07BC  3A80               	xorlw	128
   762  07BD  00FD               	movwf	??_main
   763  07BE  3080               	movlw	128
   764  07BF  027D               	subwf	??_main,w
   765  07C0  1D03               	skipz
   766  07C1  2FC4               	goto	u235
   767  07C2  3028               	movlw	40
   768  07C3  024D               	subwf	main@i,w
   769  07C4                     u235:
   770  07C4  1C03               	skipc
   771  07C5  2FC7               	goto	u231
   772  07C6  2FC8               	goto	u230
   773  07C7                     u231:
   774  07C7  2FAD               	goto	l845
   775  07C8                     u230:
   776  07C8                     l851:
   777                           
   778                           ;Assignment 63.c: 26:     LCDPutCmd(0xC0);
   779  07C8  30C0               	movlw	192
   780  07C9  3186  26A4  3187   	fcall	_LCDPutCmd
   781  07CC                     l853:
   782                           
   783                           ;Assignment 63.c: 28:     for (int m=0;m<5;m++){
   784  07CC  0020               	movlb	0	; select bank0
   785  07CD  01CF               	clrf	main@m
   786  07CE  01D0               	clrf	main@m+1
   787  07CF                     l859:
   788                           
   789                           ;Assignment 63.c: 29:         LCDPutChar(m);
   790  07CF  0020               	movlb	0	; select bank0
   791  07D0  084F               	movf	main@m,w
   792  07D1  3186  2687  3187   	fcall	_LCDPutChar
   793  07D4                     l861:
   794                           
   795                           ;Assignment 63.c: 30:         _delay((unsigned long)((80)*(1000000/4000.0)));
   796  07D4  301A               	movlw	26
   797  07D5  00FD               	movwf	??_main
   798  07D6  30F8               	movlw	248
   799  07D7                     u297:
   800  07D7  0B89               	decfsz	9,f
   801  07D8  2FD7               	goto	u297
   802  07D9  0BFD               	decfsz	??_main,f
   803  07DA  2FD7               	goto	u297
   804  07DB  3200               	nop2
   805  07DC                     l863:
   806                           
   807                           ;Assignment 63.c: 31:     }
   808  07DC  3001               	movlw	1
   809  07DD  0020               	movlb	0	; select bank0
   810  07DE  07CF               	addwf	main@m,f
   811  07DF  3000               	movlw	0
   812  07E0  3DD0               	addwfc	main@m+1,f
   813  07E1                     l865:
   814  07E1  0850               	movf	main@m+1,w
   815  07E2  3A80               	xorlw	128
   816  07E3  00FD               	movwf	??_main
   817  07E4  3080               	movlw	128
   818  07E5  027D               	subwf	??_main,w
   819  07E6  1D03               	skipz
   820  07E7  2FEA               	goto	u245
   821  07E8  3005               	movlw	5
   822  07E9  024F               	subwf	main@m,w
   823  07EA                     u245:
   824  07EA  1C03               	skipc
   825  07EB  2FED               	goto	u241
   826  07EC  2FEE               	goto	u240
   827  07ED                     u241:
   828  07ED  2FCF               	goto	l859
   829  07EE                     u240:
   830  07EE                     l21:	
   831                           ;Assignment 63.c: 32:     while(1);
   832                           
   833  07EE  2FEE               	goto	l21
   834  07EF  3180  2802         	ljmp	start
   835  07F1                     __end_of_main:
   836                           
   837                           	psect	text1
   838  06E3                     __ptext1:	
   839 ;; *************** function _LCD_Initialize *****************
   840 ;; Defined at:
   841 ;;		line 47 in file "lcd.c"
   842 ;; Parameters:    Size  Location     Type
   843 ;;		None
   844 ;; Auto vars:     Size  Location     Type
   845 ;;		None
   846 ;; Return value:  Size  Location     Type
   847 ;;                  1    wreg      void 
   848 ;; Registers used:
   849 ;;		wreg, status,2, status,0, pclath, cstack
   850 ;; Tracked objects:
   851 ;;		On entry : 0/0
   852 ;;		On exit  : 0/0
   853 ;;		Unchanged: 0/0
   854 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
   855 ;;      Params:         0       0       0       0       0       0       0       0
   856 ;;      Locals:         0       0       0       0       0       0       0       0
   857 ;;      Temps:          1       0       0       0       0       0       0       0
   858 ;;      Totals:         1       0       0       0       0       0       0       0
   859 ;;Total ram usage:        1 bytes
   860 ;; Hardware stack levels used: 1
   861 ;; Hardware stack levels required when called: 2
   862 ;; This function calls:
   863 ;;		_LCDPutCmd
   864 ;; This function is called by:
   865 ;;		_main
   866 ;; This function uses a non-reentrant model
   867 ;;
   868                           
   869  06E3                     _LCD_Initialize:	
   870                           ;psect for function _LCD_Initialize
   871                           
   872  06E3                     l791:	
   873                           ;incstack = 0
   874                           ; Regs used in _LCD_Initialize: [wreg+status,2+status,0+pclath+cstack]
   875                           
   876                           
   877                           ;lcd.c: 50:     PORTC = 0;
   878  06E3  0020               	movlb	0	; select bank0
   879  06E4  018E               	clrf	14	;volatile
   880                           
   881                           ;lcd.c: 52:     TRISC = 0x00;
   882  06E5  0021               	movlb	1	; select bank1
   883  06E6  018E               	clrf	14	;volatile
   884  06E7                     l793:
   885                           
   886                           ;lcd.c: 58:     _delay((unsigned long)((15)*(1000000/4000.0)));
   887  06E7  3005               	movlw	5
   888  06E8  00F7               	movwf	??_LCD_Initialize
   889  06E9  30DE               	movlw	222
   890  06EA                     u307:
   891  06EA  0B89               	decfsz	9,f
   892  06EB  2EEA               	goto	u307
   893  06EC  0BF7               	decfsz	??_LCD_Initialize,f
   894  06ED  2EEA               	goto	u307
   895  06EE                     l795:
   896                           
   897                           ;lcd.c: 61:     LCDPutCmd(0x32);
   898  06EE  3032               	movlw	50
   899  06EF  3186  26A4  3186   	fcall	_LCDPutCmd
   900  06F2                     l797:
   901                           
   902                           ;lcd.c: 64:     LCDPutCmd(0x28);
   903  06F2  3028               	movlw	40
   904  06F3  3186  26A4  3186   	fcall	_LCDPutCmd
   905  06F6                     l799:
   906                           
   907                           ;lcd.c: 67:     LCDPutCmd(0x0C);
   908  06F6  300C               	movlw	12
   909  06F7  3186  26A4  3186   	fcall	_LCDPutCmd
   910  06FA                     l801:
   911                           
   912                           ;lcd.c: 69:     LCDPutCmd(0x01);
   913  06FA  3001               	movlw	1
   914  06FB  3186  26A4  3186   	fcall	_LCDPutCmd
   915  06FE                     l803:
   916                           
   917                           ;lcd.c: 72:     LCDPutCmd(0x06);
   918  06FE  3006               	movlw	6
   919  06FF  3186  26A4  3186   	fcall	_LCDPutCmd
   920  0702                     l39:
   921  0702  0008               	return
   922  0703                     __end_of_LCD_Initialize:
   923                           
   924                           	psect	text2
   925  072B                     __ptext2:	
   926 ;; *************** function _LCDPutStr3 *****************
   927 ;; Defined at:
   928 ;;		line 149 in file "lcd.c"
   929 ;; Parameters:    Size  Location     Type
   930 ;;  str             2    7[COMMON] PTR const unsigned char 
   931 ;;		 -> STR_1(17), 
   932 ;;  ln              1    9[COMMON] unsigned char 
   933 ;; Auto vars:     Size  Location     Type
   934 ;;  i               1    4[BANK0 ] unsigned char 
   935 ;;  y               1    3[BANK0 ] unsigned char 
   936 ;;  x               1    2[BANK0 ] unsigned char 
   937 ;; Return value:  Size  Location     Type
   938 ;;                  1    wreg      void 
   939 ;; Registers used:
   940 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   941 ;; Tracked objects:
   942 ;;		On entry : 0/0
   943 ;;		On exit  : 0/0
   944 ;;		Unchanged: 0/0
   945 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
   946 ;;      Params:         3       0       0       0       0       0       0       0
   947 ;;      Locals:         0       5       0       0       0       0       0       0
   948 ;;      Temps:          3       0       0       0       0       0       0       0
   949 ;;      Totals:         6       5       0       0       0       0       0       0
   950 ;;Total ram usage:       11 bytes
   951 ;; Hardware stack levels used: 1
   952 ;; Hardware stack levels required when called: 2
   953 ;; This function calls:
   954 ;;		_LCDPutChar
   955 ;;		_LCDPutCmd
   956 ;;		_strlen
   957 ;; This function is called by:
   958 ;;		_main
   959 ;; This function uses a non-reentrant model
   960 ;;
   961                           
   962  072B                     _LCDPutStr3:	
   963                           ;psect for function _LCDPutStr3
   964                           
   965  072B                     l805:	
   966                           ;incstack = 0
   967                           ; Regs used in _LCDPutStr3: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   968                           
   969                           
   970                           ;lcd.c: 149: void LCDPutStr3(const char *str , char ln);lcd.c: 150: {;lcd.c: 151:     ui
      +                          nt8_t x = 8 -((strlen(str))/2);
   971  072B  0878               	movf	LCDPutStr3@str+1,w
   972  072C  00F1               	movwf	strlen@s+1
   973  072D  0877               	movf	LCDPutStr3@str,w
   974  072E  00F0               	movwf	strlen@s
   975  072F  3186  266E  3187   	fcall	_strlen
   976  0732  0870               	movf	?_strlen,w
   977  0733  00FA               	movwf	??_LCDPutStr3
   978  0734  0871               	movf	?_strlen+1,w
   979  0735  00FB               	movwf	??_LCDPutStr3+1
   980  0736  36FB               	lsrf	??_LCDPutStr3+1,f
   981  0737  0CFA               	rrf	??_LCDPutStr3,f
   982  0738  087A               	movf	??_LCDPutStr3,w
   983  0739  3C08               	sublw	8
   984  073A  00FC               	movwf	??_LCDPutStr3+2
   985  073B  087C               	movf	??_LCDPutStr3+2,w
   986  073C  0020               	movlb	0	; select bank0
   987  073D  00A2               	movwf	LCDPutStr3@x
   988  073E                     l807:
   989                           
   990                           ;lcd.c: 152:     uint8_t y = ln;
   991  073E  0879               	movf	LCDPutStr3@ln,w
   992  073F  00FA               	movwf	??_LCDPutStr3
   993  0740  087A               	movf	??_LCDPutStr3,w
   994  0741  00A3               	movwf	LCDPutStr3@y
   995  0742                     l809:
   996                           
   997                           ;lcd.c: 153:     if ((y > (2 -1)))
   998  0742  3002               	movlw	2
   999  0743  0223               	subwf	LCDPutStr3@y,w
  1000  0744  1C03               	skipc
  1001  0745  2F47               	goto	u191
  1002  0746  2F48               	goto	u190
  1003  0747                     u191:
  1004  0747  2F49               	goto	l813
  1005  0748                     u190:
  1006  0748  2F88               	goto	l58
  1007  0749                     l813:
  1008                           
  1009                           ;lcd.c: 157:     LCDPutCmd((y == 1) ? (0xC0 | x) : (0x80 | x));
  1010  0749  0323               	decf	LCDPutStr3@y,w
  1011  074A  1903               	btfsc	3,2
  1012  074B  2F4D               	goto	u201
  1013  074C  2F4E               	goto	u200
  1014  074D                     u201:
  1015  074D  2F54               	goto	l817
  1016  074E                     u200:
  1017  074E                     l815:
  1018  074E  3080               	movlw	128
  1019  074F  0422               	iorwf	LCDPutStr3@x,w
  1020  0750  00A0               	movwf	_LCDPutStr3$115
  1021  0751  3000               	movlw	0
  1022  0752  00A1               	movwf	_LCDPutStr3$115+1
  1023  0753  2F59               	goto	l819
  1024  0754                     l817:
  1025  0754  30C0               	movlw	192
  1026  0755  0422               	iorwf	LCDPutStr3@x,w
  1027  0756  00A0               	movwf	_LCDPutStr3$115
  1028  0757  3000               	movlw	0
  1029  0758  00A1               	movwf	_LCDPutStr3$115+1
  1030  0759                     l819:
  1031  0759  0820               	movf	_LCDPutStr3$115,w
  1032  075A  3186  26A4  3187   	fcall	_LCDPutCmd
  1033  075D                     l821:
  1034                           
  1035                           ;lcd.c: 158:     _delay((unsigned long)((5)*(1000000/4000.0)));
  1036  075D  30FA               	movlw	250
  1037  075E                     u317:
  1038  075E  3200               	nop2
  1039  075F  0B89               	decfsz	9,f
  1040  0760  2F5E               	goto	u317
  1041  0761                     l823:
  1042                           
  1043                           ;lcd.c: 160:     uint8_t i=0;
  1044  0761  0020               	movlb	0	; select bank0
  1045  0762  01A4               	clrf	LCDPutStr3@i
  1046                           
  1047                           ;lcd.c: 161:     while (str[i])
  1048  0763  2F78               	goto	l829
  1049  0764                     l825:
  1050                           
  1051                           ;lcd.c: 162:     {;lcd.c: 163:         LCDPutChar(str[i++]);
  1052  0764  0878               	movf	LCDPutStr3@str+1,w
  1053  0765  00FB               	movwf	??_LCDPutStr3+1
  1054  0766  0877               	movf	LCDPutStr3@str,w
  1055  0767  00FA               	movwf	??_LCDPutStr3
  1056  0768  0824               	movf	LCDPutStr3@i,w
  1057  0769  077A               	addwf	??_LCDPutStr3,w
  1058  076A  0084               	movwf	4
  1059  076B  087B               	movf	??_LCDPutStr3+1,w
  1060  076C  1803               	skipnc
  1061  076D  0A7B               	incf	??_LCDPutStr3+1,w
  1062  076E  0085               	movwf	5
  1063  076F  0800               	movf	0,w	;code access
  1064  0770  3186  2687  3187   	fcall	_LCDPutChar
  1065  0773                     l827:
  1066  0773  3001               	movlw	1
  1067  0774  00FA               	movwf	??_LCDPutStr3
  1068  0775  087A               	movf	??_LCDPutStr3,w
  1069  0776  0020               	movlb	0	; select bank0
  1070  0777  07A4               	addwf	LCDPutStr3@i,f
  1071  0778                     l829:
  1072                           
  1073                           ;lcd.c: 161:     while (str[i])
  1074  0778  0878               	movf	LCDPutStr3@str+1,w
  1075  0779  00FB               	movwf	??_LCDPutStr3+1
  1076  077A  0877               	movf	LCDPutStr3@str,w
  1077  077B  00FA               	movwf	??_LCDPutStr3
  1078  077C  0824               	movf	LCDPutStr3@i,w
  1079  077D  077A               	addwf	??_LCDPutStr3,w
  1080  077E  0084               	movwf	4
  1081  077F  087B               	movf	??_LCDPutStr3+1,w
  1082  0780  1803               	skipnc
  1083  0781  0A7B               	incf	??_LCDPutStr3+1,w
  1084  0782  0085               	movwf	5
  1085  0783  0012               	moviw fsr0++
  1086  0784  1D03               	btfss	3,2
  1087  0785  2F87               	goto	u211
  1088  0786  2F88               	goto	u210
  1089  0787                     u211:
  1090  0787  2F64               	goto	l825
  1091  0788                     u210:
  1092  0788                     l58:
  1093  0788  0008               	return
  1094  0789                     __end_of_LCDPutStr3:
  1095                           
  1096                           	psect	text3
  1097  066E                     __ptext3:	
  1098 ;; *************** function _strlen *****************
  1099 ;; Defined at:
  1100 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\strlen.c"
  1101 ;; Parameters:    Size  Location     Type
  1102 ;;  s               2    0[COMMON] PTR const unsigned char 
  1103 ;;		 -> STR_1(17), 
  1104 ;; Auto vars:     Size  Location     Type
  1105 ;;  a               2    3[COMMON] PTR const unsigned char 
  1106 ;;		 -> STR_1(17), 
  1107 ;; Return value:  Size  Location     Type
  1108 ;;                  2    0[COMMON] unsigned int 
  1109 ;; Registers used:
  1110 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  1111 ;; Tracked objects:
  1112 ;;		On entry : 0/0
  1113 ;;		On exit  : 0/0
  1114 ;;		Unchanged: 0/0
  1115 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  1116 ;;      Params:         2       0       0       0       0       0       0       0
  1117 ;;      Locals:         2       0       0       0       0       0       0       0
  1118 ;;      Temps:          1       0       0       0       0       0       0       0
  1119 ;;      Totals:         5       0       0       0       0       0       0       0
  1120 ;;Total ram usage:        5 bytes
  1121 ;; Hardware stack levels used: 1
  1122 ;; This function calls:
  1123 ;;		Nothing
  1124 ;; This function is called by:
  1125 ;;		_LCDPutStr3
  1126 ;; This function uses a non-reentrant model
  1127 ;;
  1128                           
  1129  066E                     _strlen:	
  1130                           ;psect for function _strlen
  1131                           
  1132  066E                     l781:	
  1133                           ;incstack = 0
  1134                           ; Regs used in _strlen: [wreg-fsr0h+status,2+status,0]
  1135                           
  1136  066E  0871               	movf	strlen@s+1,w
  1137  066F  00F4               	movwf	strlen@a+1
  1138  0670  0870               	movf	strlen@s,w
  1139  0671  00F3               	movwf	strlen@a
  1140  0672  2E77               	goto	l785
  1141  0673                     l783:
  1142  0673  3001               	movlw	1
  1143  0674  07F0               	addwf	strlen@s,f
  1144  0675  3000               	movlw	0
  1145  0676  3DF1               	addwfc	strlen@s+1,f
  1146  0677                     l785:
  1147  0677  0870               	movf	strlen@s,w
  1148  0678  0084               	movwf	4
  1149  0679  0871               	movf	strlen@s+1,w
  1150  067A  0085               	movwf	5
  1151  067B  0012               	moviw fsr0++
  1152  067C  1D03               	btfss	3,2
  1153  067D  2E7F               	goto	u181
  1154  067E  2E80               	goto	u180
  1155  067F                     u181:
  1156  067F  2E73               	goto	l783
  1157  0680                     u180:
  1158  0680                     l787:
  1159  0680  0873               	movf	strlen@a,w
  1160  0681  0270               	subwf	strlen@s,w
  1161  0682  00F0               	movwf	?_strlen
  1162  0683  0874               	movf	strlen@a+1,w
  1163  0684  3B71               	subwfb	strlen@s+1,w
  1164  0685  00F1               	movwf	?_strlen+1
  1165  0686                     l605:
  1166  0686  0008               	return
  1167  0687                     __end_of_strlen:
  1168                           
  1169                           	psect	text4
  1170  06A4                     __ptext4:	
  1171 ;; *************** function _LCDPutCmd *****************
  1172 ;; Defined at:
  1173 ;;		line 119 in file "lcd.c"
  1174 ;; Parameters:    Size  Location     Type
  1175 ;;  ch              1    wreg     unsigned char 
  1176 ;; Auto vars:     Size  Location     Type
  1177 ;;  ch              1    6[COMMON] unsigned char 
  1178 ;; Return value:  Size  Location     Type
  1179 ;;                  1    wreg      void 
  1180 ;; Registers used:
  1181 ;;		wreg, status,2, status,0, pclath, cstack
  1182 ;; Tracked objects:
  1183 ;;		On entry : 0/0
  1184 ;;		On exit  : 0/0
  1185 ;;		Unchanged: 0/0
  1186 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  1187 ;;      Params:         0       0       0       0       0       0       0       0
  1188 ;;      Locals:         1       0       0       0       0       0       0       0
  1189 ;;      Temps:          2       0       0       0       0       0       0       0
  1190 ;;      Totals:         3       0       0       0       0       0       0       0
  1191 ;;Total ram usage:        3 bytes
  1192 ;; Hardware stack levels used: 1
  1193 ;; Hardware stack levels required when called: 1
  1194 ;; This function calls:
  1195 ;;		_LCDWriteNibble
  1196 ;; This function is called by:
  1197 ;;		_main
  1198 ;;		_LCD_Initialize
  1199 ;;		_LCDPutStr3
  1200 ;;		_LCDGoto
  1201 ;; This function uses a non-reentrant model
  1202 ;;
  1203                           
  1204  06A4                     _LCDPutCmd:	
  1205                           ;psect for function _LCDPutCmd
  1206                           
  1207                           
  1208                           ;incstack = 0
  1209                           ; Regs used in _LCDPutCmd: [wreg+status,2+status,0+pclath+cstack]
  1210                           ;LCDPutCmd@ch stored from wreg
  1211  06A4  00F6               	movwf	LCDPutCmd@ch
  1212  06A5                     l763:
  1213                           
  1214                           ;lcd.c: 119: void LCDPutCmd(uint8_t ch);lcd.c: 120: {;lcd.c: 121:     _delay((unsigned l
      +                          ong)((5)*(1000000/4000.0)));
  1215  06A5  30FA               	movlw	250
  1216  06A6                     u327:
  1217  06A6  3200               	nop2
  1218  06A7  0B89               	decfsz	9,f
  1219  06A8  2EA6               	goto	u327
  1220  06A9                     l765:
  1221                           
  1222                           ;lcd.c: 124:     LCDWriteNibble(ch,0);
  1223  06A9  01F0               	clrf	LCDWriteNibble@rs
  1224  06AA  0876               	movf	LCDPutCmd@ch,w
  1225  06AB  3186  26C3  3186   	fcall	_LCDWriteNibble
  1226  06AE                     l767:
  1227                           
  1228                           ;lcd.c: 127:     ch = (ch << 4);
  1229  06AE  0876               	movf	LCDPutCmd@ch,w
  1230  06AF  00F4               	movwf	??_LCDPutCmd
  1231  06B0  3003               	movlw	3
  1232  06B1                     u165:
  1233  06B1  35F4               	lslf	??_LCDPutCmd,f
  1234  06B2  3EFF               	addlw	-1
  1235  06B3  1D03               	skipz
  1236  06B4  2EB1               	goto	u165
  1237  06B5  3574               	lslf	??_LCDPutCmd,w
  1238  06B6  00F5               	movwf	??_LCDPutCmd+1
  1239  06B7  0875               	movf	??_LCDPutCmd+1,w
  1240  06B8  00F6               	movwf	LCDPutCmd@ch
  1241  06B9                     l769:
  1242                           
  1243                           ;lcd.c: 129:     _delay((unsigned long)((1)*(1000000/4000.0)));
  1244  06B9  3053               	movlw	83
  1245  06BA                     u337:
  1246  06BA  0B89               	decfsz	9,f
  1247  06BB  2EBA               	goto	u337
  1248  06BC  0000               	nop
  1249  06BD                     l771:
  1250                           
  1251                           ;lcd.c: 132:     LCDWriteNibble(ch,0);
  1252  06BD  01F0               	clrf	LCDWriteNibble@rs
  1253  06BE  0876               	movf	LCDPutCmd@ch,w
  1254  06BF  3186  26C3  3186   	fcall	_LCDWriteNibble
  1255  06C2                     l48:
  1256  06C2  0008               	return
  1257  06C3                     __end_of_LCDPutCmd:
  1258                           
  1259                           	psect	text5
  1260  0687                     __ptext5:	
  1261 ;; *************** function _LCDPutChar *****************
  1262 ;; Defined at:
  1263 ;;		line 104 in file "lcd.c"
  1264 ;; Parameters:    Size  Location     Type
  1265 ;;  ch              1    wreg     unsigned char 
  1266 ;; Auto vars:     Size  Location     Type
  1267 ;;  ch              1    6[COMMON] unsigned char 
  1268 ;; Return value:  Size  Location     Type
  1269 ;;                  1    wreg      void 
  1270 ;; Registers used:
  1271 ;;		wreg, status,2, status,0, pclath, cstack
  1272 ;; Tracked objects:
  1273 ;;		On entry : 0/0
  1274 ;;		On exit  : 0/0
  1275 ;;		Unchanged: 0/0
  1276 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  1277 ;;      Params:         0       0       0       0       0       0       0       0
  1278 ;;      Locals:         1       0       0       0       0       0       0       0
  1279 ;;      Temps:          2       0       0       0       0       0       0       0
  1280 ;;      Totals:         3       0       0       0       0       0       0       0
  1281 ;;Total ram usage:        3 bytes
  1282 ;; Hardware stack levels used: 1
  1283 ;; Hardware stack levels required when called: 1
  1284 ;; This function calls:
  1285 ;;		_LCDWriteNibble
  1286 ;; This function is called by:
  1287 ;;		_main
  1288 ;;		_LCDPutStr3
  1289 ;;		_LCDPutStr
  1290 ;; This function uses a non-reentrant model
  1291 ;;
  1292                           
  1293  0687                     _LCDPutChar:	
  1294                           ;psect for function _LCDPutChar
  1295                           
  1296                           
  1297                           ;incstack = 0
  1298                           ; Regs used in _LCDPutChar: [wreg+status,2+status,0+pclath+cstack]
  1299                           ;LCDPutChar@ch stored from wreg
  1300  0687  00F6               	movwf	LCDPutChar@ch
  1301  0688                     l773:
  1302                           
  1303                           ;lcd.c: 104: void LCDPutChar(uint8_t ch);lcd.c: 105: {;lcd.c: 106:     _delay((unsigned 
      +                          long)((5)*(1000000/4000.0)));
  1304  0688  30FA               	movlw	250
  1305  0689                     u347:
  1306  0689  3200               	nop2
  1307  068A  0B89               	decfsz	9,f
  1308  068B  2E89               	goto	u347
  1309  068C                     l775:
  1310                           
  1311                           ;lcd.c: 109:     LCDWriteNibble(ch,1);
  1312  068C  01F0               	clrf	LCDWriteNibble@rs
  1313  068D  0AF0               	incf	LCDWriteNibble@rs,f
  1314  068E  0876               	movf	LCDPutChar@ch,w
  1315  068F  3186  26C3  3186   	fcall	_LCDWriteNibble
  1316  0692                     l777:
  1317                           
  1318                           ;lcd.c: 112:     ch = (ch << 4);
  1319  0692  0876               	movf	LCDPutChar@ch,w
  1320  0693  00F4               	movwf	??_LCDPutChar
  1321  0694  3003               	movlw	3
  1322  0695                     u175:
  1323  0695  35F4               	lslf	??_LCDPutChar,f
  1324  0696  3EFF               	addlw	-1
  1325  0697  1D03               	skipz
  1326  0698  2E95               	goto	u175
  1327  0699  3574               	lslf	??_LCDPutChar,w
  1328  069A  00F5               	movwf	??_LCDPutChar+1
  1329  069B  0875               	movf	??_LCDPutChar+1,w
  1330  069C  00F6               	movwf	LCDPutChar@ch
  1331  069D                     l779:
  1332                           
  1333                           ;lcd.c: 115:     LCDWriteNibble(ch,1);
  1334  069D  01F0               	clrf	LCDWriteNibble@rs
  1335  069E  0AF0               	incf	LCDWriteNibble@rs,f
  1336  069F  0876               	movf	LCDPutChar@ch,w
  1337  06A0  3186  26C3  3186   	fcall	_LCDWriteNibble
  1338  06A3                     l45:
  1339  06A3  0008               	return
  1340  06A4                     __end_of_LCDPutChar:
  1341                           
  1342                           	psect	text6
  1343  06C3                     __ptext6:	
  1344 ;; *************** function _LCDWriteNibble *****************
  1345 ;; Defined at:
  1346 ;;		line 77 in file "lcd.c"
  1347 ;; Parameters:    Size  Location     Type
  1348 ;;  ch              1    wreg     unsigned char 
  1349 ;;  rs              1    0[COMMON] unsigned char 
  1350 ;; Auto vars:     Size  Location     Type
  1351 ;;  ch              1    3[COMMON] unsigned char 
  1352 ;; Return value:  Size  Location     Type
  1353 ;;                  1    wreg      void 
  1354 ;; Registers used:
  1355 ;;		wreg, status,2, status,0
  1356 ;; Tracked objects:
  1357 ;;		On entry : 0/0
  1358 ;;		On exit  : 0/0
  1359 ;;		Unchanged: 0/0
  1360 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  1361 ;;      Params:         1       0       0       0       0       0       0       0
  1362 ;;      Locals:         1       0       0       0       0       0       0       0
  1363 ;;      Temps:          2       0       0       0       0       0       0       0
  1364 ;;      Totals:         4       0       0       0       0       0       0       0
  1365 ;;Total ram usage:        4 bytes
  1366 ;; Hardware stack levels used: 1
  1367 ;; This function calls:
  1368 ;;		Nothing
  1369 ;; This function is called by:
  1370 ;;		_LCDPutChar
  1371 ;;		_LCDPutCmd
  1372 ;; This function uses a non-reentrant model
  1373 ;;
  1374                           
  1375  06C3                     _LCDWriteNibble:	
  1376                           ;psect for function _LCDWriteNibble
  1377                           
  1378                           
  1379                           ;incstack = 0
  1380                           ; Regs used in _LCDWriteNibble: [wreg+status,2+status,0]
  1381                           ;LCDWriteNibble@ch stored from wreg
  1382  06C3  00F3               	movwf	LCDWriteNibble@ch
  1383  06C4                     l749:
  1384                           
  1385                           ;lcd.c: 77: void LCDWriteNibble(uint8_t ch,uint8_t rs);lcd.c: 78: {;lcd.c: 80:     ch = 
      +                          (ch >> 4);
  1386  06C4  0873               	movf	LCDWriteNibble@ch,w
  1387  06C5  00F1               	movwf	??_LCDWriteNibble
  1388  06C6  3004               	movlw	4
  1389  06C7                     u155:
  1390  06C7  36F1               	lsrf	??_LCDWriteNibble,f
  1391  06C8  0B89               	decfsz	9,f
  1392  06C9  2EC7               	goto	u155
  1393  06CA  0871               	movf	??_LCDWriteNibble,w
  1394  06CB  00F2               	movwf	??_LCDWriteNibble+1
  1395  06CC  0872               	movf	??_LCDWriteNibble+1,w
  1396  06CD  00F3               	movwf	LCDWriteNibble@ch
  1397  06CE                     l751:
  1398                           
  1399                           ;lcd.c: 83:     ch = (ch & 0x0F);
  1400  06CE  0873               	movf	LCDWriteNibble@ch,w
  1401  06CF  390F               	andlw	15
  1402  06D0  00F1               	movwf	??_LCDWriteNibble
  1403  06D1  0871               	movf	??_LCDWriteNibble,w
  1404  06D2  00F3               	movwf	LCDWriteNibble@ch
  1405  06D3                     l753:
  1406                           
  1407                           ;lcd.c: 86:     PORTC = (PORTC & 0xF0);
  1408  06D3  0020               	movlb	0	; select bank0
  1409  06D4  080E               	movf	14,w	;volatile
  1410  06D5  39F0               	andlw	240
  1411  06D6  008E               	movwf	14	;volatile
  1412                           
  1413                           ;lcd.c: 89:     PORTC = (PORTC | ch);
  1414  06D7  080E               	movf	14,w	;volatile
  1415  06D8  0473               	iorwf	LCDWriteNibble@ch,w
  1416  06D9  008E               	movwf	14	;volatile
  1417  06DA                     l755:
  1418                           
  1419                           ;lcd.c: 92:     PORTCbits.RC4 = rs;
  1420  06DA  0C70               	rrf	LCDWriteNibble@rs,w
  1421  06DB  1C03               	skipc
  1422  06DC  120E               	bcf	14,4	;volatile
  1423  06DD  1803               	skipnc
  1424  06DE  160E               	bsf	14,4	;volatile
  1425  06DF                     l757:
  1426                           
  1427                           ;lcd.c: 95:     PORTCbits.RC5 = 0;
  1428  06DF  128E               	bcf	14,5	;volatile
  1429  06E0                     l759:
  1430                           
  1431                           ;lcd.c: 98:     PORTCbits.RC6 = 1;
  1432  06E0  170E               	bsf	14,6	;volatile
  1433  06E1                     l761:
  1434                           
  1435                           ;lcd.c: 101:     PORTCbits.RC6 = 0;
  1436  06E1  130E               	bcf	14,6	;volatile
  1437  06E2                     l42:
  1438  06E2  0008               	return
  1439  06E3                     __end_of_LCDWriteNibble:
  1440  007E                     btemp	set	126	;btemp
  1441  007E                     wtemp0	set	126
  1442                           
  1443                           	psect	idloc
  1444                           
  1445                           ;Config register IDLOC0 @ 0x8000
  1446                           ;	unspecified, using default values
  1447  8000                     	org	32768
  1448  8000  3FFF               	dw	16383
  1449                           
  1450                           ;Config register IDLOC1 @ 0x8001
  1451                           ;	unspecified, using default values
  1452  8001                     	org	32769
  1453  8001  3FFF               	dw	16383
  1454                           
  1455                           ;Config register IDLOC2 @ 0x8002
  1456                           ;	unspecified, using default values
  1457  8002                     	org	32770
  1458  8002  3FFF               	dw	16383
  1459                           
  1460                           ;Config register IDLOC3 @ 0x8003
  1461                           ;	unspecified, using default values
  1462  8003                     	org	32771
  1463  8003  3FFF               	dw	16383
  1464                           
  1465                           	psect	config
  1466                           
  1467                           ;Config register CONFIG1 @ 0x8007
  1468                           ;	Oscillator Selection Bits
  1469                           ;	FOSC = INTOSC, INTOSC oscillator: I/O function on CLKIN pin
  1470                           ;	Watchdog Timer Enable
  1471                           ;	WDTE = OFF, WDT disabled
  1472                           ;	Power-up Timer Enable
  1473                           ;	PWRTE = OFF, PWRT disabled
  1474                           ;	MCLR Pin Function Select
  1475                           ;	MCLRE = OFF, MCLR/VPP pin function is digital input
  1476                           ;	Flash Program Memory Code Protection
  1477                           ;	CP = OFF, Program memory code protection is disabled
  1478                           ;	Brown-out Reset Enable
  1479                           ;	BOREN = OFF, Brown-out Reset disabled
  1480                           ;	Clock Out Enable
  1481                           ;	CLKOUTEN = OFF, CLKOUT function is disabled. I/O or oscillator function on the CLKOUT 
      +                          pin
  1482                           ;	Internal/External Switchover Mode
  1483                           ;	IESO = OFF, Internal/External Switchover Mode is disabled
  1484                           ;	Fail-Safe Clock Monitor Enable
  1485                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
  1486  8007                     	org	32775
  1487  8007  09A4               	dw	2468
  1488                           
  1489                           ;Config register CONFIG2 @ 0x8008
  1490                           ;	Flash Memory Self-Write Protection
  1491                           ;	WRT = OFF, Write protection off
  1492                           ;	Stack Overflow/Underflow Reset Enable
  1493                           ;	STVREN = OFF, Stack Overflow or Underflow will not cause a Reset
  1494                           ;	Brown-out Reset Voltage Selection
  1495                           ;	BORV = LO, Brown-out Reset Voltage (Vbor), low trip point selected.
  1496                           ;	Low-Power Brown Out Reset
  1497                           ;	LPBOR = OFF, Low-Power BOR is disabled
  1498                           ;	Low-Voltage Programming Enable
  1499                           ;	LVP = OFF, High-voltage on MCLR/VPP must be used for programming
  1500  8008                     	org	32776
  1501  8008  1DFF               	dw	7679

Data Sizes:
    Strings     17
    Constant    0
    Data        40
    BSS         0
    Persistent  32
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     49      49
    BANK1            80      0      40
    BANK2            80      0       0
    BANK3            80      0       0
    BANK4            80      0       0
    BANK5            80      0       0
    BANK6            16      0       0

Pointer List with Targets:

    strlen@s	PTR const unsigned char  size(2) Largest target is 17
		 -> STR_1(CODE[17]), 

    strlen@a	PTR const unsigned char  size(2) Largest target is 17
		 -> STR_1(CODE[17]), 

    LCDPutStr3@str	PTR const unsigned char  size(2) Largest target is 17
		 -> STR_1(CODE[17]), 


Critical Paths under _main in COMMON

    _main->_LCDPutStr3
    _LCD_Initialize->_LCDPutCmd
    _LCDPutStr3->_LCDPutChar
    _LCDPutStr3->_LCDPutCmd
    _LCDPutCmd->_LCDWriteNibble
    _LCDPutChar->_LCDWriteNibble

Critical Paths under _main in BANK0

    _main->_LCDPutStr3

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                45    45      0    3031
                                             13 COMMON     1     1      0
                                              5 BANK0     44    44      0
                         _LCDPutChar
                          _LCDPutCmd
                         _LCDPutStr3
                     _LCD_Initialize
 ---------------------------------------------------------------------------------
 (1) _LCD_Initialize                                       1     1      0     461
                                              7 COMMON     1     1      0
                          _LCDPutCmd
 ---------------------------------------------------------------------------------
 (1) _LCDPutStr3                                          11     8      3    1488
                                              7 COMMON     6     3      3
                                              0 BANK0      5     5      0
                         _LCDPutChar
                          _LCDPutCmd
                             _strlen
 ---------------------------------------------------------------------------------
 (2) _strlen                                               5     3      2     166
                                              0 COMMON     5     3      2
 ---------------------------------------------------------------------------------
 (2) _LCDPutCmd                                            3     3      0     461
                                              4 COMMON     3     3      0
                     _LCDWriteNibble
 ---------------------------------------------------------------------------------
 (2) _LCDPutChar                                           3     3      0     461
                                              4 COMMON     3     3      0
                     _LCDWriteNibble
 ---------------------------------------------------------------------------------
 (3) _LCDWriteNibble                                       4     3      1     394
                                              0 COMMON     4     3      1
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _LCDPutChar
     _LCDWriteNibble
   _LCDPutCmd
     _LCDWriteNibble
   _LCDPutStr3
     _LCDPutChar
     _LCDPutCmd
     _strlen
   _LCD_Initialize
     _LCDPutCmd

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             1F0      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      E       E       2      100.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
ABS                  0      0      67       4        0.0%
BITBANK0            50      0       0       5        0.0%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BANK0               50     31      31       6       61.3%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BITBANK1            50      0       0       7        0.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BANK1               50      0      28       8       50.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BITBANK2            50      0       0       9        0.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BANK2               50      0       0      10        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BITBANK3            50      0       0      11        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BANK3               50      0       0      12        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BITBANK4            50      0       0      13        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BANK4               50      0       0      14        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BITBANK5            50      0       0      15        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BANK5               50      0       0      16        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BITBANK6            10      0       0      17        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BANK6               10      0       0      18        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
DATA                 0      0      67      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V2.36 build 20220127204148 
Symbol Table                                                                                   Mon May 02 11:38:39 2022

         _LCD_Initialize 06E3                       l21 07EE                       l42 06E2  
            ?_LCDPutChar 0070                       l45 06A3                       l39 0702  
                     l48 06C2                       l58 0788              ?_LCDPutStr3 0077  
                    l605 0686                      l801 06FA                      l803 06FE  
                    l821 075D                      l813 0749                      l805 072B  
                    l751 06CE                      l823 0761                      l815 074E  
                    l807 073E                      l831 0789                      l761 06E1  
                    l753 06D3                      l825 0764                      l817 0754  
                    l809 0742                      l833 0790                      l755 06DA  
                    l771 06BD                      l763 06A5                      l827 0773  
                    l819 0759                      l851 07C8                      l835 0798  
                    l757 06DF                      l749 06C4                      l773 0688  
                    l765 06A9                      l781 066E                      l829 0778  
                    l861 07D4                      l853 07CC                      l845 07AD  
                    l837 079C                      l759 06E0                      l775 068C  
                    l767 06AE                      l783 0673                      l791 06E3  
                    l863 07DC                      l847 07B6                      l839 07AA  
                    l777 0692                      l769 06B9                      l785 0677  
                    l793 06E7                      l865 07E1                      l849 07BB  
                    l779 069D                      l787 0680                      l795 06EE  
                    l859 07CF                      l797 06F2                      l799 06F6  
                    u200 074E                      u201 074D                      u210 0788  
                    u211 0787                      u220 07A6                      u230 07C8  
                    u231 07C7                      u240 07EE                      u241 07ED  
                    u155 06C7                      u307 06EA                      u235 07C4  
                    u180 0680                      u165 06B1                      u181 067F  
                    u317 075E                      u245 07EA                      u190 0748  
                    u175 0695                      u327 06A6                      u191 0747  
                    u337 06BA                      u347 0689                      u297 07D7  
                    wreg 0009                     STR_1 0800                     _main 0789  
                   fsr0h 0005                     fsr1h 0007                     indf0 0000  
                   fsr0l 0004                     indf1 0001                     fsr1l 0006  
                   btemp 007E                     start 0002   __end_of_LCD_Initialize 0703  
            LCDPutCmd@ch 0076           _LCDPutStr3$115 0020                    ?_main 0070  
            LCDPutStr3@i 0024              LCDPutStr3@x 0022              LCDPutStr3@y 0023  
                  _PORTC 000E                    _TRISC 008E                    main@i 004D  
                  main@m 004F                    status 0003                    wtemp0 007E  
        ?_LCD_Initialize 0070          __initialization 07F1             __end_of_main 07F1  
                 ??_main 007D        __end_of_LCDPutCmd 06C3             LCDPutChar@ch 0076  
           LCDPutStr3@ln 0079           _LCDWriteNibble 06C3                   _strlen 066E  
 __end_of_LCDWriteNibble 06E3  __end_of__initialization 07FD           __pcstackCOMMON 0070  
           __pidataBANK1 0703             ??_LCDPutChar 0074             ??_LCDPutStr3 007A  
        ?_LCDWriteNibble 0070       __end_of_LCDPutChar 06A4       __end_of_LCDPutStr3 0789  
             __pmaintext 0789                  ?_strlen 0070            LCDPutStr3@str 0077  
       ??_LCD_Initialize 0077                  __ptext1 06E3                  __ptext2 072B  
                __ptext3 066E                  __ptext4 06A4                  __ptext5 0687  
                __ptext6 06C3                _LCDPutCmd 06A4                  main@cus 0025  
   end_of_initialization 07FD                  init_ram 0668                  initloop 0669  
                strlen@a 0073                  strlen@s 0070                _PORTCbits 000E  
             ?_LCDPutCmd 0070           __end_of_strlen 0687      start_initialization 07F1  
       ??_LCDWriteNibble 0071              __pdataBANK1 00A0                 ??_strlen 0072  
              ___latbits 0002            __pcstackBANK0 0020              ??_LCDPutCmd 0074  
       LCDWriteNibble@ch 0073         LCDWriteNibble@rs 0070                main@F3679 00A0  
             _LCDPutChar 0687               _LCDPutStr3 072B            __pstringtext1 0800  
          __pstringtext2 0000  
