

Microchip MPLAB XC8 Assembler V2.36 build 20220127204148 
                                                                                               Sat Mar 26 23:30:14 2022

Microchip MPLAB XC8 C Compiler v2.36 (Free license) build 20220127204148 Og1 
     1                           	processor	18F67K22
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     8                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     9                           	psect	text0,global,reloc=2,class=CODE,delta=1
    10                           	psect	text1,global,reloc=2,class=CODE,delta=1,group=1
    11                           	psect	text2,global,reloc=2,class=CODE,delta=1,group=1
    12                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    13                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    14                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    15                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    16  0000                     
    17                           ; Version 2.35
    18                           ; Generated 05/05/2021 GMT
    19                           ; 
    20                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
    21                           ; All rights reserved.
    22                           ; 
    23                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    24                           ; 
    25                           ; Redistribution and use in source and binary forms, with or without modification, are
    26                           ; permitted provided that the following conditions are met:
    27                           ; 
    28                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    29                           ;        conditions and the following disclaimer.
    30                           ; 
    31                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    32                           ;        of conditions and the following disclaimer in the documentation and/or other
    33                           ;        materials provided with the distribution. Publication is not required when
    34                           ;        this file is used in an embedded application.
    35                           ; 
    36                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    37                           ;        software without specific prior written permission.
    38                           ; 
    39                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    40                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    41                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    42                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    43                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    44                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    45                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    46                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    47                           ; 
    48                           ; 
    49                           ; Code-generator required, PIC18F67K22 Definitions
    50                           ; 
    51                           ; SFR Addresses
    52  0000                     
    53                           	psect	idataCOMRAM
    54  01FD3E                     __pidataCOMRAM:
    55                           	callstack 0
    56                           
    57                           ;initializer for main@F6160
    58  01FD3E  00C0               	dw	192
    59  01FD40  00F9               	dw	249
    60  01FD42  00A4               	dw	164
    61  01FD44  00B0               	dw	176
    62  01FD46  0099               	dw	153
    63  01FD48  0092               	dw	146
    64  01FD4A  0082               	dw	130
    65  01FD4C  00F8               	dw	248
    66  01FD4E  0080               	dw	128
    67  01FD50  0090               	dw	144
    68  0000                     _LATA	set	3977
    69  0000                     _LATD	set	3980
    70  0000                     _LATE	set	3981
    71  0000                     _TRISA	set	3986
    72  0000                     _TRISD	set	3989
    73  0000                     _TRISE	set	3990
    74  0000                     _TRISB	set	3987
    75  0000                     _LATB	set	3978
    76                           
    77                           ; #config settings
    78                           
    79                           	psect	cinit
    80  01FD52                     __pcinit:
    81                           	callstack 0
    82  01FD52                     start_initialization:
    83                           	callstack 0
    84  01FD52                     __initialization:
    85                           	callstack 0
    86                           
    87                           ; Initialize objects allocated to COMRAM (20 bytes)
    88                           ; load TBLPTR registers with __pidataCOMRAM
    89  01FD52  0E3E               	movlw	low __pidataCOMRAM
    90  01FD54  6EF6               	movwf	tblptrl,c
    91  01FD56  0EFD               	movlw	high __pidataCOMRAM
    92  01FD58  6EF7               	movwf	tblptrh,c
    93  01FD5A  0E01               	movlw	low (__pidataCOMRAM shr (0+16))
    94  01FD5C  6EF8               	movwf	tblptru,c
    95  01FD5E  EE00  F022         	lfsr	0,__pdataCOMRAM
    96  01FD62  EE10 F014          	lfsr	1,20
    97  01FD66                     copy_data0:
    98  01FD66  0009               	tblrd		*+
    99  01FD68  CFF5 FFEE          	movff	tablat,postinc0
   100  01FD6C  50E5               	movf	postdec1,w,c
   101  01FD6E  50E1               	movf	fsr1l,w,c
   102  01FD70  E1FA               	bnz	copy_data0
   103  01FD72                     end_of_initialization:
   104                           	callstack 0
   105  01FD72                     __end_of__initialization:
   106                           	callstack 0
   107  01FD72  0100               	movlb	0
   108  01FD74  EF76  F0FF         	goto	_main	;jump to C main() function
   109                           
   110                           	psect	dataCOMRAM
   111  000022                     __pdataCOMRAM:
   112                           	callstack 0
   113  000022                     main@F6160:
   114                           	callstack 0
   115  000022                     	ds	20
   116                           
   117                           	psect	cstackCOMRAM
   118  000001                     __pcstackCOMRAM:
   119                           	callstack 0
   120  000001                     ?___awdiv:
   121                           	callstack 0
   122  000001                     ?___awmod:
   123                           	callstack 0
   124  000001                     ___awdiv@dividend:
   125                           	callstack 0
   126  000001                     ___awmod@dividend:
   127                           	callstack 0
   128                           
   129                           ; 2 bytes @ 0x0
   130  000001                     	ds	2
   131  000003                     ___awdiv@divisor:
   132                           	callstack 0
   133  000003                     ___awmod@divisor:
   134                           	callstack 0
   135                           
   136                           ; 2 bytes @ 0x2
   137  000003                     	ds	2
   138  000005                     ___awdiv@counter:
   139                           	callstack 0
   140  000005                     ___awmod@counter:
   141                           	callstack 0
   142                           
   143                           ; 1 bytes @ 0x4
   144  000005                     	ds	1
   145  000006                     ___awdiv@sign:
   146                           	callstack 0
   147  000006                     ___awmod@sign:
   148                           	callstack 0
   149                           
   150                           ; 1 bytes @ 0x5
   151  000006                     	ds	1
   152  000007                     ___awdiv@quotient:
   153                           	callstack 0
   154                           
   155                           ; 2 bytes @ 0x6
   156  000007                     	ds	2
   157  000009                     ??_main:
   158                           
   159                           ; 1 bytes @ 0x8
   160  000009                     	ds	1
   161  00000A                     main@a:
   162                           	callstack 0
   163                           
   164                           ; 20 bytes @ 0x9
   165  00000A                     	ds	20
   166  00001E                     main@i:
   167                           	callstack 0
   168                           
   169                           ; 2 bytes @ 0x1D
   170  00001E                     	ds	2
   171  000020                     main@n:
   172                           	callstack 0
   173                           
   174                           ; 2 bytes @ 0x1F
   175  000020                     	ds	2
   176                           
   177 ;;
   178 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
   179 ;;
   180 ;; *************** function _main *****************
   181 ;; Defined at:
   182 ;;		line 89 in file "Assignment 52.c"
   183 ;; Parameters:    Size  Location     Type
   184 ;;		None
   185 ;; Auto vars:     Size  Location     Type
   186 ;;  n               2   31[COMRAM] int 
   187 ;;  i               2   29[COMRAM] int 
   188 ;;  a              20    9[COMRAM] int [10]
   189 ;; Return value:  Size  Location     Type
   190 ;;                  1    wreg      void 
   191 ;; Registers used:
   192 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
   193 ;; Tracked objects:
   194 ;;		On entry : 0/0
   195 ;;		On exit  : 0/0
   196 ;;		Unchanged: 0/0
   197 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   198 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   199 ;;      Locals:        24       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   200 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   201 ;;      Totals:        25       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   202 ;;Total ram usage:       25 bytes
   203 ;; Hardware stack levels required when called: 1
   204 ;; This function calls:
   205 ;;		___awdiv
   206 ;;		___awmod
   207 ;; This function is called by:
   208 ;;		Startup code after reset
   209 ;; This function uses a non-reentrant model
   210 ;;
   211                           
   212                           	psect	text0
   213  01FEEC                     __ptext0:
   214                           	callstack 0
   215  01FEEC                     _main:
   216                           	callstack 30
   217  01FEEC                     
   218                           ;Assignment 52.c: 90:     TRISA = 0b00000000;
   219  01FEEC  0E00               	movlw	0
   220  01FEEE  6E92               	movwf	146,c	;volatile
   221                           
   222                           ;Assignment 52.c: 91:     TRISB = 0b00000000;
   223  01FEF0  0E00               	movlw	0
   224  01FEF2  6E93               	movwf	147,c	;volatile
   225                           
   226                           ;Assignment 52.c: 92:     TRISE = 0b00000000;
   227  01FEF4  0E00               	movlw	0
   228  01FEF6  6E96               	movwf	150,c	;volatile
   229                           
   230                           ;Assignment 52.c: 93:     TRISD = 0b00000000;
   231  01FEF8  0E00               	movlw	0
   232  01FEFA  6E95               	movwf	149,c	;volatile
   233  01FEFC                     
   234                           ;Assignment 52.c: 95:     int a[10] = {0xC0,0xF9,0xA4,0xB0,0x99,0x92,0x82,0xF8,0x80,0x90
      +                          };
   235  01FEFC  EE20  F022         	lfsr	2,main@F6160
   236  01FF00  EE10  F00A         	lfsr	1,main@a
   237  01FF04  0E13               	movlw	19
   238  01FF06                     u281:
   239  01FF06  CFDB FFE3          	movff	plusw2,plusw1
   240  01FF0A  06E8               	decf	wreg,f,c
   241  01FF0C  E2FC               	bc	u281
   242  01FF0E                     
   243                           ;Assignment 52.c: 96:     for (int i = 59; i>=0 ; i--){
   244  01FF0E  0E00               	movlw	0
   245  01FF10  6E1F               	movwf	(main@i+1)^0,c
   246  01FF12  0E3B               	movlw	59
   247  01FF14  6E1E               	movwf	main@i^0,c
   248  01FF16                     l903:
   249                           
   250                           ;Assignment 52.c: 97:         for (int n = 59; n>=0 ; n--){
   251  01FF16  0E00               	movlw	0
   252  01FF18  6E21               	movwf	(main@n+1)^0,c
   253  01FF1A  0E3B               	movlw	59
   254  01FF1C  6E20               	movwf	main@n^0,c
   255  01FF1E                     l909:
   256                           
   257                           ;Assignment 52.c: 98:             LATE = a[i%10];
   258  01FF1E  C01E  F001         	movff	main@i,___awmod@dividend
   259  01FF22  C01F  F002         	movff	main@i+1,___awmod@dividend+1
   260  01FF26  0E00               	movlw	0
   261  01FF28  6E04               	movwf	(___awmod@divisor+1)^0,c
   262  01FF2A  0E0A               	movlw	10
   263  01FF2C  6E03               	movwf	___awmod@divisor^0,c
   264  01FF2E  ECBC  F0FE         	call	___awmod	;wreg free
   265  01FF32  90D8               	bcf	status,0,c
   266  01FF34  3601               	rlcf	?___awmod^0,f,c
   267  01FF36  3602               	rlcf	(?___awmod+1)^0,f,c
   268  01FF38  0E0A               	movlw	low main@a
   269  01FF3A  2401               	addwf	?___awmod^0,w,c
   270  01FF3C  6ED9               	movwf	fsr2l,c
   271  01FF3E  0E00               	movlw	high main@a
   272  01FF40  2002               	addwfc	(?___awmod+1)^0,w,c
   273  01FF42  6EDA               	movwf	fsr2h,c
   274  01FF44  50DF               	movf	indf2,w,c
   275  01FF46  6E8D               	movwf	141,c	;volatile
   276                           
   277                           ;Assignment 52.c: 99:             LATD = a[i/10];
   278  01FF48  C01E  F001         	movff	main@i,___awdiv@dividend
   279  01FF4C  C01F  F002         	movff	main@i+1,___awdiv@dividend+1
   280  01FF50  0E00               	movlw	0
   281  01FF52  6E04               	movwf	(___awdiv@divisor+1)^0,c
   282  01FF54  0E0A               	movlw	10
   283  01FF56  6E03               	movwf	___awdiv@divisor^0,c
   284  01FF58  EC14  F0FF         	call	___awdiv	;wreg free
   285  01FF5C  90D8               	bcf	status,0,c
   286  01FF5E  3601               	rlcf	?___awdiv^0,f,c
   287  01FF60  3602               	rlcf	(?___awdiv+1)^0,f,c
   288  01FF62  0E0A               	movlw	low main@a
   289  01FF64  2401               	addwf	?___awdiv^0,w,c
   290  01FF66  6ED9               	movwf	fsr2l,c
   291  01FF68  0E00               	movlw	high main@a
   292  01FF6A  2002               	addwfc	(?___awdiv+1)^0,w,c
   293  01FF6C  6EDA               	movwf	fsr2h,c
   294  01FF6E  50DF               	movf	indf2,w,c
   295  01FF70  6E8C               	movwf	140,c	;volatile
   296                           
   297                           ;Assignment 52.c: 100:             LATA = a[n%10];
   298  01FF72  C020  F001         	movff	main@n,___awmod@dividend
   299  01FF76  C021  F002         	movff	main@n+1,___awmod@dividend+1
   300  01FF7A  0E00               	movlw	0
   301  01FF7C  6E04               	movwf	(___awmod@divisor+1)^0,c
   302  01FF7E  0E0A               	movlw	10
   303  01FF80  6E03               	movwf	___awmod@divisor^0,c
   304  01FF82  ECBC  F0FE         	call	___awmod	;wreg free
   305  01FF86  90D8               	bcf	status,0,c
   306  01FF88  3601               	rlcf	?___awmod^0,f,c
   307  01FF8A  3602               	rlcf	(?___awmod+1)^0,f,c
   308  01FF8C  0E0A               	movlw	low main@a
   309  01FF8E  2401               	addwf	?___awmod^0,w,c
   310  01FF90  6ED9               	movwf	fsr2l,c
   311  01FF92  0E00               	movlw	high main@a
   312  01FF94  2002               	addwfc	(?___awmod+1)^0,w,c
   313  01FF96  6EDA               	movwf	fsr2h,c
   314  01FF98  50DF               	movf	indf2,w,c
   315  01FF9A  6E89               	movwf	137,c	;volatile
   316                           
   317                           ;Assignment 52.c: 101:             LATB = a[n/10];
   318  01FF9C  C020  F001         	movff	main@n,___awdiv@dividend
   319  01FFA0  C021  F002         	movff	main@n+1,___awdiv@dividend+1
   320  01FFA4  0E00               	movlw	0
   321  01FFA6  6E04               	movwf	(___awdiv@divisor+1)^0,c
   322  01FFA8  0E0A               	movlw	10
   323  01FFAA  6E03               	movwf	___awdiv@divisor^0,c
   324  01FFAC  EC14  F0FF         	call	___awdiv	;wreg free
   325  01FFB0  90D8               	bcf	status,0,c
   326  01FFB2  3601               	rlcf	?___awdiv^0,f,c
   327  01FFB4  3602               	rlcf	(?___awdiv+1)^0,f,c
   328  01FFB6  0E0A               	movlw	low main@a
   329  01FFB8  2401               	addwf	?___awdiv^0,w,c
   330  01FFBA  6ED9               	movwf	fsr2l,c
   331  01FFBC  0E00               	movlw	high main@a
   332  01FFBE  2002               	addwfc	(?___awdiv+1)^0,w,c
   333  01FFC0  6EDA               	movwf	fsr2h,c
   334  01FFC2  50DF               	movf	indf2,w,c
   335  01FFC4  6E8A               	movwf	138,c	;volatile
   336  01FFC6                     
   337                           ;Assignment 52.c: 102:             _delay((unsigned long)((40)*(4000000/4000.0)));
   338  01FFC6  0E34               	movlw	52
   339  01FFC8  6E09               	movwf	??_main^0,c
   340  01FFCA  0EF2               	movlw	242
   341  01FFCC                     u317:
   342  01FFCC  2EE8               	decfsz	wreg,f,c
   343  01FFCE  D7FE               	bra	u317
   344  01FFD0  2E09               	decfsz	??_main^0,f,c
   345  01FFD2  D7FC               	bra	u317
   346  01FFD4                     
   347                           ;Assignment 52.c: 103:         }
   348  01FFD4  0620               	decf	main@n^0,f,c
   349  01FFD6  A0D8               	btfss	status,0,c
   350  01FFD8  0621               	decf	(main@n+1)^0,f,c
   351  01FFDA  BE21               	btfsc	(main@n+1)^0,7,c
   352  01FFDC  EFF4  F0FF         	goto	u290
   353  01FFE0  EFF2  F0FF         	goto	u291
   354  01FFE4                     u291:
   355  01FFE4  EF8F  F0FF         	goto	l909
   356  01FFE8                     u290:
   357  01FFE8                     
   358                           ;Assignment 52.c: 104:     }
   359  01FFE8  061E               	decf	main@i^0,f,c
   360  01FFEA  A0D8               	btfss	status,0,c
   361  01FFEC  061F               	decf	(main@i+1)^0,f,c
   362  01FFEE  BE1F               	btfsc	(main@i+1)^0,7,c
   363  01FFF0  EFFE  F0FF         	goto	u300
   364  01FFF4  EFFC  F0FF         	goto	u301
   365  01FFF8                     u301:
   366  01FFF8  EF8B  F0FF         	goto	l903
   367  01FFFC                     u300:
   368  01FFFC  EF00  F000         	goto	start
   369  020000                     __end_of_main:
   370                           	callstack 0
   371                           
   372 ;; *************** function ___awmod *****************
   373 ;; Defined at:
   374 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\awmod.c"
   375 ;; Parameters:    Size  Location     Type
   376 ;;  dividend        2    0[COMRAM] int 
   377 ;;  divisor         2    2[COMRAM] int 
   378 ;; Auto vars:     Size  Location     Type
   379 ;;  sign            1    5[COMRAM] unsigned char 
   380 ;;  counter         1    4[COMRAM] unsigned char 
   381 ;; Return value:  Size  Location     Type
   382 ;;                  2    0[COMRAM] int 
   383 ;; Registers used:
   384 ;;		wreg, status,2, status,0
   385 ;; Tracked objects:
   386 ;;		On entry : 0/0
   387 ;;		On exit  : 0/0
   388 ;;		Unchanged: 0/0
   389 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   390 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   391 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   392 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   393 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   394 ;;Total ram usage:        6 bytes
   395 ;; Hardware stack levels used: 1
   396 ;; This function calls:
   397 ;;		Nothing
   398 ;; This function is called by:
   399 ;;		_main
   400 ;; This function uses a non-reentrant model
   401 ;;
   402                           
   403                           	psect	text1
   404  01FD78                     __ptext1:
   405                           	callstack 0
   406  01FD78                     ___awmod:
   407                           	callstack 30
   408  01FD78  0E00               	movlw	0
   409  01FD7A  6E06               	movwf	___awmod@sign^0,c
   410  01FD7C  BE02               	btfsc	(___awmod@dividend+1)^0,7,c
   411  01FD7E  EFC5  F0FE         	goto	u220
   412  01FD82  EFC3  F0FE         	goto	u221
   413  01FD86                     u221:
   414  01FD86  EFCB  F0FE         	goto	l865
   415  01FD8A                     u220:
   416  01FD8A  6C01               	negf	___awmod@dividend^0,c
   417  01FD8C  1E02               	comf	(___awmod@dividend+1)^0,f,c
   418  01FD8E  B0D8               	btfsc	status,0,c
   419  01FD90  2A02               	incf	(___awmod@dividend+1)^0,f,c
   420  01FD92  0E01               	movlw	1
   421  01FD94  6E06               	movwf	___awmod@sign^0,c
   422  01FD96                     l865:
   423  01FD96  BE04               	btfsc	(___awmod@divisor+1)^0,7,c
   424  01FD98  EFD2  F0FE         	goto	u230
   425  01FD9C  EFD0  F0FE         	goto	u231
   426  01FDA0                     u231:
   427  01FDA0  EFD6  F0FE         	goto	l869
   428  01FDA4                     u230:
   429  01FDA4  6C03               	negf	___awmod@divisor^0,c
   430  01FDA6  1E04               	comf	(___awmod@divisor+1)^0,f,c
   431  01FDA8  B0D8               	btfsc	status,0,c
   432  01FDAA  2A04               	incf	(___awmod@divisor+1)^0,f,c
   433  01FDAC                     l869:
   434  01FDAC  5003               	movf	___awmod@divisor^0,w,c
   435  01FDAE  1004               	iorwf	(___awmod@divisor+1)^0,w,c
   436  01FDB0  B4D8               	btfsc	status,2,c
   437  01FDB2  EFDD  F0FE         	goto	u241
   438  01FDB6  EFDF  F0FE         	goto	u240
   439  01FDBA                     u241:
   440  01FDBA  EF03  F0FF         	goto	l885
   441  01FDBE                     u240:
   442  01FDBE  0E01               	movlw	1
   443  01FDC0  6E05               	movwf	___awmod@counter^0,c
   444  01FDC2  EFE7  F0FE         	goto	l875
   445  01FDC6                     l873:
   446  01FDC6  90D8               	bcf	status,0,c
   447  01FDC8  3603               	rlcf	___awmod@divisor^0,f,c
   448  01FDCA  3604               	rlcf	(___awmod@divisor+1)^0,f,c
   449  01FDCC  2A05               	incf	___awmod@counter^0,f,c
   450  01FDCE                     l875:
   451  01FDCE  AE04               	btfss	(___awmod@divisor+1)^0,7,c
   452  01FDD0  EFEC  F0FE         	goto	u251
   453  01FDD4  EFEE  F0FE         	goto	u250
   454  01FDD8                     u251:
   455  01FDD8  EFE3  F0FE         	goto	l873
   456  01FDDC                     u250:
   457  01FDDC                     l877:
   458  01FDDC  5003               	movf	___awmod@divisor^0,w,c
   459  01FDDE  5C01               	subwf	___awmod@dividend^0,w,c
   460  01FDE0  5004               	movf	(___awmod@divisor+1)^0,w,c
   461  01FDE2  5802               	subwfb	(___awmod@dividend+1)^0,w,c
   462  01FDE4  A0D8               	btfss	status,0,c
   463  01FDE6  EFF7  F0FE         	goto	u261
   464  01FDEA  EFF9  F0FE         	goto	u260
   465  01FDEE                     u261:
   466  01FDEE  EFFD  F0FE         	goto	l881
   467  01FDF2                     u260:
   468  01FDF2  5003               	movf	___awmod@divisor^0,w,c
   469  01FDF4  5E01               	subwf	___awmod@dividend^0,f,c
   470  01FDF6  5004               	movf	(___awmod@divisor+1)^0,w,c
   471  01FDF8  5A02               	subwfb	(___awmod@dividend+1)^0,f,c
   472  01FDFA                     l881:
   473  01FDFA  90D8               	bcf	status,0,c
   474  01FDFC  3204               	rrcf	(___awmod@divisor+1)^0,f,c
   475  01FDFE  3203               	rrcf	___awmod@divisor^0,f,c
   476  01FE00  2E05               	decfsz	___awmod@counter^0,f,c
   477  01FE02  EFEE  F0FE         	goto	l877
   478  01FE06                     l885:
   479  01FE06  5006               	movf	___awmod@sign^0,w,c
   480  01FE08  B4D8               	btfsc	status,2,c
   481  01FE0A  EF09  F0FF         	goto	u271
   482  01FE0E  EF0B  F0FF         	goto	u270
   483  01FE12                     u271:
   484  01FE12  EF0F  F0FF         	goto	l889
   485  01FE16                     u270:
   486  01FE16  6C01               	negf	___awmod@dividend^0,c
   487  01FE18  1E02               	comf	(___awmod@dividend+1)^0,f,c
   488  01FE1A  B0D8               	btfsc	status,0,c
   489  01FE1C  2A02               	incf	(___awmod@dividend+1)^0,f,c
   490  01FE1E                     l889:
   491  01FE1E  C001  F001         	movff	___awmod@dividend,?___awmod
   492  01FE22  C002  F002         	movff	___awmod@dividend+1,?___awmod+1
   493  01FE26  0012               	return		;funcret
   494  01FE28                     __end_of___awmod:
   495                           	callstack 0
   496                           
   497 ;; *************** function ___awdiv *****************
   498 ;; Defined at:
   499 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\awdiv.c"
   500 ;; Parameters:    Size  Location     Type
   501 ;;  dividend        2    0[COMRAM] int 
   502 ;;  divisor         2    2[COMRAM] int 
   503 ;; Auto vars:     Size  Location     Type
   504 ;;  quotient        2    6[COMRAM] int 
   505 ;;  sign            1    5[COMRAM] unsigned char 
   506 ;;  counter         1    4[COMRAM] unsigned char 
   507 ;; Return value:  Size  Location     Type
   508 ;;                  2    0[COMRAM] int 
   509 ;; Registers used:
   510 ;;		wreg, status,2, status,0
   511 ;; Tracked objects:
   512 ;;		On entry : 0/0
   513 ;;		On exit  : 0/0
   514 ;;		Unchanged: 0/0
   515 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   516 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   517 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   518 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   519 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   520 ;;Total ram usage:        8 bytes
   521 ;; Hardware stack levels used: 1
   522 ;; This function calls:
   523 ;;		Nothing
   524 ;; This function is called by:
   525 ;;		_main
   526 ;; This function uses a non-reentrant model
   527 ;;
   528                           
   529                           	psect	text2
   530  01FE28                     __ptext2:
   531                           	callstack 0
   532  01FE28                     ___awdiv:
   533                           	callstack 30
   534  01FE28  0E00               	movlw	0
   535  01FE2A  6E06               	movwf	___awdiv@sign^0,c
   536  01FE2C  BE04               	btfsc	(___awdiv@divisor+1)^0,7,c
   537  01FE2E  EF1D  F0FF         	goto	u160
   538  01FE32  EF1B  F0FF         	goto	u161
   539  01FE36                     u161:
   540  01FE36  EF23  F0FF         	goto	l821
   541  01FE3A                     u160:
   542  01FE3A  6C03               	negf	___awdiv@divisor^0,c
   543  01FE3C  1E04               	comf	(___awdiv@divisor+1)^0,f,c
   544  01FE3E  B0D8               	btfsc	status,0,c
   545  01FE40  2A04               	incf	(___awdiv@divisor+1)^0,f,c
   546  01FE42  0E01               	movlw	1
   547  01FE44  6E06               	movwf	___awdiv@sign^0,c
   548  01FE46                     l821:
   549  01FE46  BE02               	btfsc	(___awdiv@dividend+1)^0,7,c
   550  01FE48  EF2A  F0FF         	goto	u170
   551  01FE4C  EF28  F0FF         	goto	u171
   552  01FE50                     u171:
   553  01FE50  EF30  F0FF         	goto	l827
   554  01FE54                     u170:
   555  01FE54  6C01               	negf	___awdiv@dividend^0,c
   556  01FE56  1E02               	comf	(___awdiv@dividend+1)^0,f,c
   557  01FE58  B0D8               	btfsc	status,0,c
   558  01FE5A  2A02               	incf	(___awdiv@dividend+1)^0,f,c
   559  01FE5C  0E01               	movlw	1
   560  01FE5E  1A06               	xorwf	___awdiv@sign^0,f,c
   561  01FE60                     l827:
   562  01FE60  0E00               	movlw	0
   563  01FE62  6E08               	movwf	(___awdiv@quotient+1)^0,c
   564  01FE64  0E00               	movlw	0
   565  01FE66  6E07               	movwf	___awdiv@quotient^0,c
   566  01FE68  5003               	movf	___awdiv@divisor^0,w,c
   567  01FE6A  1004               	iorwf	(___awdiv@divisor+1)^0,w,c
   568  01FE6C  B4D8               	btfsc	status,2,c
   569  01FE6E  EF3B  F0FF         	goto	u181
   570  01FE72  EF3D  F0FF         	goto	u180
   571  01FE76                     u181:
   572  01FE76  EF65  F0FF         	goto	l849
   573  01FE7A                     u180:
   574  01FE7A  0E01               	movlw	1
   575  01FE7C  6E05               	movwf	___awdiv@counter^0,c
   576  01FE7E  EF45  F0FF         	goto	l835
   577  01FE82                     l833:
   578  01FE82  90D8               	bcf	status,0,c
   579  01FE84  3603               	rlcf	___awdiv@divisor^0,f,c
   580  01FE86  3604               	rlcf	(___awdiv@divisor+1)^0,f,c
   581  01FE88  2A05               	incf	___awdiv@counter^0,f,c
   582  01FE8A                     l835:
   583  01FE8A  AE04               	btfss	(___awdiv@divisor+1)^0,7,c
   584  01FE8C  EF4A  F0FF         	goto	u191
   585  01FE90  EF4C  F0FF         	goto	u190
   586  01FE94                     u191:
   587  01FE94  EF41  F0FF         	goto	l833
   588  01FE98                     u190:
   589  01FE98                     l837:
   590  01FE98  90D8               	bcf	status,0,c
   591  01FE9A  3607               	rlcf	___awdiv@quotient^0,f,c
   592  01FE9C  3608               	rlcf	(___awdiv@quotient+1)^0,f,c
   593  01FE9E  5003               	movf	___awdiv@divisor^0,w,c
   594  01FEA0  5C01               	subwf	___awdiv@dividend^0,w,c
   595  01FEA2  5004               	movf	(___awdiv@divisor+1)^0,w,c
   596  01FEA4  5802               	subwfb	(___awdiv@dividend+1)^0,w,c
   597  01FEA6  A0D8               	btfss	status,0,c
   598  01FEA8  EF58  F0FF         	goto	u201
   599  01FEAC  EF5A  F0FF         	goto	u200
   600  01FEB0                     u201:
   601  01FEB0  EF5F  F0FF         	goto	l845
   602  01FEB4                     u200:
   603  01FEB4  5003               	movf	___awdiv@divisor^0,w,c
   604  01FEB6  5E01               	subwf	___awdiv@dividend^0,f,c
   605  01FEB8  5004               	movf	(___awdiv@divisor+1)^0,w,c
   606  01FEBA  5A02               	subwfb	(___awdiv@dividend+1)^0,f,c
   607  01FEBC  8007               	bsf	___awdiv@quotient^0,0,c
   608  01FEBE                     l845:
   609  01FEBE  90D8               	bcf	status,0,c
   610  01FEC0  3204               	rrcf	(___awdiv@divisor+1)^0,f,c
   611  01FEC2  3203               	rrcf	___awdiv@divisor^0,f,c
   612  01FEC4  2E05               	decfsz	___awdiv@counter^0,f,c
   613  01FEC6  EF4C  F0FF         	goto	l837
   614  01FECA                     l849:
   615  01FECA  5006               	movf	___awdiv@sign^0,w,c
   616  01FECC  B4D8               	btfsc	status,2,c
   617  01FECE  EF6B  F0FF         	goto	u211
   618  01FED2  EF6D  F0FF         	goto	u210
   619  01FED6                     u211:
   620  01FED6  EF71  F0FF         	goto	l853
   621  01FEDA                     u210:
   622  01FEDA  6C07               	negf	___awdiv@quotient^0,c
   623  01FEDC  1E08               	comf	(___awdiv@quotient+1)^0,f,c
   624  01FEDE  B0D8               	btfsc	status,0,c
   625  01FEE0  2A08               	incf	(___awdiv@quotient+1)^0,f,c
   626  01FEE2                     l853:
   627  01FEE2  C007  F001         	movff	___awdiv@quotient,?___awdiv
   628  01FEE6  C008  F002         	movff	___awdiv@quotient+1,?___awdiv+1
   629  01FEEA  0012               	return		;funcret
   630  01FEEC                     __end_of___awdiv:
   631                           	callstack 0
   632  0000                     
   633                           	psect	rparam
   634  0000                     
   635                           	psect	idloc
   636                           
   637                           ;Config register IDLOC0 @ 0x200000
   638                           ;	unspecified, using default values
   639  200000                     	org	2097152
   640  200000  FF                 	db	255
   641                           
   642                           ;Config register IDLOC1 @ 0x200001
   643                           ;	unspecified, using default values
   644  200001                     	org	2097153
   645  200001  FF                 	db	255
   646                           
   647                           ;Config register IDLOC2 @ 0x200002
   648                           ;	unspecified, using default values
   649  200002                     	org	2097154
   650  200002  FF                 	db	255
   651                           
   652                           ;Config register IDLOC3 @ 0x200003
   653                           ;	unspecified, using default values
   654  200003                     	org	2097155
   655  200003  FF                 	db	255
   656                           
   657                           ;Config register IDLOC4 @ 0x200004
   658                           ;	unspecified, using default values
   659  200004                     	org	2097156
   660  200004  FF                 	db	255
   661                           
   662                           ;Config register IDLOC5 @ 0x200005
   663                           ;	unspecified, using default values
   664  200005                     	org	2097157
   665  200005  FF                 	db	255
   666                           
   667                           ;Config register IDLOC6 @ 0x200006
   668                           ;	unspecified, using default values
   669  200006                     	org	2097158
   670  200006  FF                 	db	255
   671                           
   672                           ;Config register IDLOC7 @ 0x200007
   673                           ;	unspecified, using default values
   674  200007                     	org	2097159
   675  200007  FF                 	db	255
   676                           
   677                           	psect	config
   678                           
   679                           ;Config register CONFIG1L @ 0x300000
   680                           ;	VREG Sleep Enable bit
   681                           ;	RETEN = OFF, Disabled - Controlled by SRETEN bit
   682                           ;	LF-INTOSC Low-power Enable bit
   683                           ;	INTOSCSEL = HIGH, LF-INTOSC in High-power mode during Sleep
   684                           ;	SOSC Power Selection and mode Configuration bits
   685                           ;	SOSCSEL = HIGH, High Power SOSC circuit selected
   686                           ;	Extended Instruction Set
   687                           ;	XINST = OFF, Disabled
   688  300000                     	org	3145728
   689  300000  1C                 	db	28
   690                           
   691                           ;Config register CONFIG1H @ 0x300001
   692                           ;	Oscillator
   693                           ;	FOSC = INTIO2, Internal RC oscillator
   694                           ;	PLL x4 Enable bit
   695                           ;	PLLCFG = OFF, Disabled
   696                           ;	Fail-Safe Clock Monitor
   697                           ;	FCMEN = OFF, Disabled
   698                           ;	Internal External Oscillator Switch Over Mode
   699                           ;	IESO = OFF, Disabled
   700  300001                     	org	3145729
   701  300001  08                 	db	8
   702                           
   703                           ;Config register CONFIG2L @ 0x300002
   704                           ;	Power Up Timer
   705                           ;	PWRTEN = OFF, Disabled
   706                           ;	Brown Out Detect
   707                           ;	BOREN = SBORDIS, Enabled in hardware, SBOREN disabled
   708                           ;	Brown-out Reset Voltage bits
   709                           ;	BORV = 3, 1.8V
   710                           ;	BORMV Power level
   711                           ;	BORPWR = ZPBORMV, ZPBORMV instead of BORMV is selected
   712  300002                     	org	3145730
   713  300002  7F                 	db	127
   714                           
   715                           ;Config register CONFIG2H @ 0x300003
   716                           ;	Watchdog Timer
   717                           ;	WDTEN = SWDTDIS, WDT enabled in hardware; SWDTEN bit disabled
   718                           ;	Watchdog Postscaler
   719                           ;	WDTPS = 1048576, 1:1048576
   720  300003                     	org	3145731
   721  300003  7F                 	db	127
   722                           
   723                           ;Config register CONFIG3L @ 0x300004
   724                           ;	RTCC Clock Select
   725                           ;	RTCOSC = SOSCREF, RTCC uses SOSC
   726  300004                     	org	3145732
   727  300004  01                 	db	1
   728                           
   729                           ;Config register CONFIG3H @ 0x300005
   730                           ;	CCP2 Mux
   731                           ;	CCP2MX = PORTC, RC1
   732                           ;	MSSP address masking
   733                           ;	MSSPMSK = MSK7, 7 Bit address masking mode
   734                           ;	Master Clear Enable
   735                           ;	MCLRE = ON, MCLR Enabled, RG5 Disabled
   736  300005                     	org	3145733
   737  300005  89                 	db	137
   738                           
   739                           ;Config register CONFIG4L @ 0x300006
   740                           ;	Stack Overflow Reset
   741                           ;	STVREN = OFF, Disabled
   742                           ;	Boot Block Size
   743                           ;	BBSIZ = BB2K, 2K word Boot Block size
   744                           ;	Background Debug
   745                           ;	DEBUG = 0x1, unprogrammed default
   746  300006                     	org	3145734
   747  300006  90                 	db	144
   748                           
   749                           ; Padding undefined space
   750  300007                     	org	3145735
   751  300007  FF                 	db	255
   752                           
   753                           ;Config register CONFIG5L @ 0x300008
   754                           ;	Code Protect 00800-03FFF
   755                           ;	CP0 = OFF, Disabled
   756                           ;	Code Protect 04000-07FFF
   757                           ;	CP1 = OFF, Disabled
   758                           ;	Code Protect 08000-0BFFF
   759                           ;	CP2 = OFF, Disabled
   760                           ;	Code Protect 0C000-0FFFF
   761                           ;	CP3 = OFF, Disabled
   762                           ;	Code Protect 10000-13FFF
   763                           ;	CP4 = OFF, Disabled
   764                           ;	Code Protect 14000-17FFF
   765                           ;	CP5 = OFF, Disabled
   766                           ;	Code Protect 18000-1BFFF
   767                           ;	CP6 = OFF, Disabled
   768                           ;	Code Protect 1C000-1FFFF
   769                           ;	CP7 = OFF, Disabled
   770  300008                     	org	3145736
   771  300008  FF                 	db	255
   772                           
   773                           ;Config register CONFIG5H @ 0x300009
   774                           ;	Code Protect Boot
   775                           ;	CPB = OFF, Disabled
   776                           ;	Data EE Read Protect
   777                           ;	CPD = OFF, Disabled
   778  300009                     	org	3145737
   779  300009  C0                 	db	192
   780                           
   781                           ;Config register CONFIG6L @ 0x30000A
   782                           ;	Table Write Protect 00800-03FFF
   783                           ;	WRT0 = OFF, Disabled
   784                           ;	Table Write Protect 04000-07FFF
   785                           ;	WRT1 = OFF, Disabled
   786                           ;	Table Write Protect 08000-0BFFF
   787                           ;	WRT2 = OFF, Disabled
   788                           ;	Table Write Protect 0C000-0FFFF
   789                           ;	WRT3 = OFF, Disabled
   790                           ;	Table Write Protect 10000-13FFF
   791                           ;	WRT4 = OFF, Disabled
   792                           ;	Table Write Protect 14000-17FFF
   793                           ;	WRT5 = OFF, Disabled
   794                           ;	Table Write Protect 18000-1BFFF
   795                           ;	WRT6 = OFF, Disabled
   796                           ;	Table Write Protect 1C000-1FFFF
   797                           ;	WRT7 = OFF, Disabled
   798  30000A                     	org	3145738
   799  30000A  FF                 	db	255
   800                           
   801                           ;Config register CONFIG6H @ 0x30000B
   802                           ;	Config. Write Protect
   803                           ;	WRTC = OFF, Disabled
   804                           ;	Table Write Protect Boot
   805                           ;	WRTB = OFF, Disabled
   806                           ;	Data EE Write Protect
   807                           ;	WRTD = OFF, Disabled
   808  30000B                     	org	3145739
   809  30000B  E0                 	db	224
   810                           
   811                           ;Config register CONFIG7L @ 0x30000C
   812                           ;	Table Read Protect 00800-03FFF
   813                           ;	EBRT0 = OFF, Disabled
   814                           ;	Table Read Protect 04000-07FFF
   815                           ;	EBRT1 = OFF, Disabled
   816                           ;	Table Read Protect 08000-0BFFF
   817                           ;	EBRT2 = OFF, Disabled
   818                           ;	Table Read Protect 0C000-0FFFF
   819                           ;	EBRT3 = OFF, Disabled
   820                           ;	Table Read Protect 10000-13FFF
   821                           ;	EBRT4 = OFF, Disabled
   822                           ;	Table Read Protect 14000-17FFF
   823                           ;	EBRT5 = OFF, Disabled
   824                           ;	Table Read Protect 18000-1BFFF
   825                           ;	EBRT6 = OFF, Disabled
   826                           ;	Table Read Protect 1C000-1FFFF
   827                           ;	EBRT7 = OFF, Disabled
   828  30000C                     	org	3145740
   829  30000C  FF                 	db	255
   830                           
   831                           ;Config register CONFIG7H @ 0x30000D
   832                           ;	Table Read Protect Boot
   833                           ;	EBRTB = OFF, Disabled
   834  30000D                     	org	3145741
   835  30000D  40                 	db	64
   836                           tosu	equ	0xFFF
   837                           tosh	equ	0xFFE
   838                           tosl	equ	0xFFD
   839                           stkptr	equ	0xFFC
   840                           pclatu	equ	0xFFB
   841                           pclath	equ	0xFFA
   842                           pcl	equ	0xFF9
   843                           tblptru	equ	0xFF8
   844                           tblptrh	equ	0xFF7
   845                           tblptrl	equ	0xFF6
   846                           tablat	equ	0xFF5
   847                           prodh	equ	0xFF4
   848                           prodl	equ	0xFF3
   849                           indf0	equ	0xFEF
   850                           postinc0	equ	0xFEE
   851                           postdec0	equ	0xFED
   852                           preinc0	equ	0xFEC
   853                           plusw0	equ	0xFEB
   854                           fsr0h	equ	0xFEA
   855                           fsr0l	equ	0xFE9
   856                           wreg	equ	0xFE8
   857                           indf1	equ	0xFE7
   858                           postinc1	equ	0xFE6
   859                           postdec1	equ	0xFE5
   860                           preinc1	equ	0xFE4
   861                           plusw1	equ	0xFE3
   862                           fsr1h	equ	0xFE2
   863                           fsr1l	equ	0xFE1
   864                           bsr	equ	0xFE0
   865                           indf2	equ	0xFDF
   866                           postinc2	equ	0xFDE
   867                           postdec2	equ	0xFDD
   868                           preinc2	equ	0xFDC
   869                           plusw2	equ	0xFDB
   870                           fsr2h	equ	0xFDA
   871                           fsr2l	equ	0xFD9
   872                           status	equ	0xFD8

Data Sizes:
    Strings     0
    Constant    0
    Data        20
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     33      53
    BANK0           160      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15           22      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMRAM

    _main->___awdiv

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                25    25      0    1477
                                              8 COMRAM    25    25      0
                            ___awdiv
                            ___awmod
 ---------------------------------------------------------------------------------
 (1) ___awmod                                              6     2      4     600
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (1) ___awdiv                                              8     4      4     604
                                              0 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   ___awdiv
   ___awmod

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             F15      0       0      42        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK14          100      0       0      32        0.0%
BANK14             100      0       0      33        0.0%
BITBANK13          100      0       0      30        0.0%
BANK13             100      0       0      31        0.0%
BITBANK12          100      0       0      28        0.0%
BANK12             100      0       0      29        0.0%
BITBANK11          100      0       0      26        0.0%
BANK11             100      0       0      27        0.0%
BITBANK10          100      0       0      24        0.0%
BANK10             100      0       0      25        0.0%
BITBANK9           100      0       0      22        0.0%
BANK9              100      0       0      23        0.0%
BITBANK8           100      0       0      20        0.0%
BANK8              100      0       0      21        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0       0       5        0.0%
BITBIGSFRlll        73      0       0      40        0.0%
BITBIGSFRhh         69      0       0      36        0.0%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F     21      35       1       55.8%
BITBANK15           16      0       0      34        0.0%
BANK15              16      0       0      35        0.0%
BITBIGSFRlh          4      0       0      38        0.0%
BITBIGSFRllh         1      0       0      39        0.0%
BITBIGSFRhl          1      0       0      37        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      35      41        0.0%
DATA                 0      0      35       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.36 build 20220127204148 
Symbol Table                                                                                   Sat Mar 26 23:30:14 2022

                     l29 FFFC             ___awdiv@sign 0006                      l263 FEEA  
                    l276 FE26                      l821 FE46                      l813 FE28  
                    l831 FE7A                      l823 FE54                      l815 FE2C  
                    l911 FFC6                      l903 FF16                      l841 FEB4  
                    l833 FE82                      l825 FE5C                      l817 FE3A  
                    l913 FFD4                      l851 FEDA                      l843 FEBC  
                    l835 FE8A                      l827 FE60                      l819 FE42  
                    l915 FFDA                      l853 FEE2                      l845 FEBE  
                    l837 FE98                      l829 FE68                      l861 FD8A  
                    l917 FFE8                      l909 FF1E                      l847 FEC4  
                    l839 FE9E                      l871 FDBE                      l863 FD92  
                    l919 FFEE                      l849 FECA                      l881 FDFA  
                    l873 FDC6                      l865 FD96                      l857 FD78  
                    l883 FE00                      l875 FDCE                      l867 FDA4  
                    l859 FD7C                      l877 FDDC                      l885 FE06  
                    l869 FDAC                      l893 FEEC                      l887 FE16  
                    l879 FDF2                      l895 FEFC                      l889 FE1E  
                    l897 FF0E                      u200 FEB4                      u201 FEB0  
                    u210 FEDA                      u211 FED6                      u220 FD8A  
                    u300 FFFC                      u221 FD86                      u301 FFF8  
                    u230 FDA4                      u231 FDA0                      u160 FE3A  
                    u240 FDBE                      u161 FE36                      u241 FDBA  
                    u170 FE54                      u250 FDDC                      u171 FE50  
                    u251 FDD8                      u180 FE7A                      u260 FDF2  
                    u181 FE76                      u261 FDEE                      u317 FFCC  
                    u190 FE98                      u270 FE16                      u191 FE94  
                    u271 FE12                      u281 FF06                      u290 FFE8  
                    u291 FFE4             ___awmod@sign 0006                      wreg 000FE8  
                   _LATA 000F89                     _LATB 000F8A                     _LATD 000F8C  
                   _LATE 000F8D                     _main FEEC                     indf2 000FDF  
                   fsr1l 000FE1                     fsr2l 000FD9                     start 0000  
           ___param_bank 000000                    ?_main 0001          __end_of___awdiv FEEC  
        __end_of___awmod FE28          ___awdiv@divisor 0003          ___awdiv@counter 0005  
                  _TRISA 000F92                    _TRISB 000F93                    _TRISD 000F95  
                  _TRISE 000F96                    main@a 000A                    main@i 001E  
                  main@n 0020                    tablat 000FF5                    plusw1 000FE3  
                  plusw2 000FDB                    status 000FD8          __initialization FD52  
           __end_of_main 0000                   ??_main 0009            __activetblptr 000000  
       ___awdiv@dividend 0001                ??___awdiv 0005                ??___awmod 0005  
       ___awdiv@quotient 0007          ___awmod@divisor 0003                   isa$std 000001  
        ___awmod@counter 0005             __pdataCOMRAM 0022                   tblptrh 000FF7  
                 tblptrl 000FF6                   tblptru 000FF8               __accesstop 0060  
__end_of__initialization FD72            ___rparam_used 000001           __pcstackCOMRAM 0001  
                __Hparam 0000                  __Lparam 0000                  ___awdiv FE28  
                ___awmod FD78                  __pcinit FD52                  __ramtop 1000  
                __ptext0 FEEC                  __ptext1 FD78                  __ptext2 FE28  
       ___awmod@dividend 0001     end_of_initialization FD72                  postdec1 000FE5  
                postinc0 000FEE            __pidataCOMRAM FD3E      start_initialization FD52  
               ?___awdiv 0001                 ?___awmod 0001                main@F6160 0022  
              copy_data0 FD66                 __Hrparam 0000                 __Lrparam 0000  
               isa$xinst 000000  
