

Microchip MPLAB XC8 Assembler V2.36 build 20220127204148 
                                                                                               Mon Apr 04 00:34:32 2022

Microchip MPLAB XC8 C Compiler v2.36 (Free license) build 20220127204148 Og1 
     1                           	processor	16F1509
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataBANK0,global,class=CODE,delta=2,noexec
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     7                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,noexec
     8                           	psect	inittext,global,class=CODE,delta=2
     9                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    10                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    11                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    12                           	psect	text1,local,class=CODE,merge=1,delta=2
    13                           	psect	text2,local,class=CODE,merge=1,delta=2,group=1
    14                           	psect	text3,local,class=CODE,merge=1,delta=2,group=1
    15                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=2,noexec
    16                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    17                           	dabs	1,0x7E,2
    18  0000                     
    19                           ; Version 2.40
    20                           ; Generated 17/11/2021 GMT
    21                           ; 
    22                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
    23                           ; All rights reserved.
    24                           ; 
    25                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    26                           ; 
    27                           ; Redistribution and use in source and binary forms, with or without modification, are
    28                           ; permitted provided that the following conditions are met:
    29                           ; 
    30                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    31                           ;        conditions and the following disclaimer.
    32                           ; 
    33                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    34                           ;        of conditions and the following disclaimer in the documentation and/or other
    35                           ;        materials provided with the distribution. Publication is not required when
    36                           ;        this file is used in an embedded application.
    37                           ; 
    38                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    39                           ;        software without specific prior written permission.
    40                           ; 
    41                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    42                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    43                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    44                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    45                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    46                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    47                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    48                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    49                           ; 
    50                           ; 
    51                           ; Code-generator required, PIC16F1509 Definitions
    52                           ; 
    53                           ; SFR Addresses
    54  0000                     	;# 
    55  0001                     	;# 
    56  0002                     	;# 
    57  0003                     	;# 
    58  0004                     	;# 
    59  0005                     	;# 
    60  0006                     	;# 
    61  0007                     	;# 
    62  0008                     	;# 
    63  0009                     	;# 
    64  000A                     	;# 
    65  000B                     	;# 
    66  000C                     	;# 
    67  000D                     	;# 
    68  000E                     	;# 
    69  0011                     	;# 
    70  0012                     	;# 
    71  0013                     	;# 
    72  0015                     	;# 
    73  0016                     	;# 
    74  0016                     	;# 
    75  0017                     	;# 
    76  0018                     	;# 
    77  0019                     	;# 
    78  001A                     	;# 
    79  001B                     	;# 
    80  001C                     	;# 
    81  008C                     	;# 
    82  008D                     	;# 
    83  008E                     	;# 
    84  0091                     	;# 
    85  0092                     	;# 
    86  0093                     	;# 
    87  0095                     	;# 
    88  0096                     	;# 
    89  0097                     	;# 
    90  0099                     	;# 
    91  009A                     	;# 
    92  009B                     	;# 
    93  009B                     	;# 
    94  009C                     	;# 
    95  009D                     	;# 
    96  009E                     	;# 
    97  009F                     	;# 
    98  010C                     	;# 
    99  010D                     	;# 
   100  010E                     	;# 
   101  0111                     	;# 
   102  0112                     	;# 
   103  0113                     	;# 
   104  0114                     	;# 
   105  0115                     	;# 
   106  0116                     	;# 
   107  0117                     	;# 
   108  0118                     	;# 
   109  0119                     	;# 
   110  011D                     	;# 
   111  018C                     	;# 
   112  018D                     	;# 
   113  018E                     	;# 
   114  0191                     	;# 
   115  0191                     	;# 
   116  0192                     	;# 
   117  0193                     	;# 
   118  0193                     	;# 
   119  0194                     	;# 
   120  0195                     	;# 
   121  0196                     	;# 
   122  0197                     	;# 
   123  0199                     	;# 
   124  019A                     	;# 
   125  019B                     	;# 
   126  019B                     	;# 
   127  019C                     	;# 
   128  019D                     	;# 
   129  019E                     	;# 
   130  019F                     	;# 
   131  020C                     	;# 
   132  020D                     	;# 
   133  0211                     	;# 
   134  0211                     	;# 
   135  0212                     	;# 
   136  0212                     	;# 
   137  0213                     	;# 
   138  0213                     	;# 
   139  0214                     	;# 
   140  0214                     	;# 
   141  0215                     	;# 
   142  0215                     	;# 
   143  0215                     	;# 
   144  0216                     	;# 
   145  0216                     	;# 
   146  0217                     	;# 
   147  0217                     	;# 
   148  0391                     	;# 
   149  0392                     	;# 
   150  0393                     	;# 
   151  0394                     	;# 
   152  0395                     	;# 
   153  0396                     	;# 
   154  0498                     	;# 
   155  0498                     	;# 
   156  0499                     	;# 
   157  049A                     	;# 
   158  049B                     	;# 
   159  049B                     	;# 
   160  049C                     	;# 
   161  049D                     	;# 
   162  049E                     	;# 
   163  049F                     	;# 
   164  0611                     	;# 
   165  0612                     	;# 
   166  0613                     	;# 
   167  0613                     	;# 
   168  0614                     	;# 
   169  0615                     	;# 
   170  0616                     	;# 
   171  0616                     	;# 
   172  0617                     	;# 
   173  0618                     	;# 
   174  0619                     	;# 
   175  0619                     	;# 
   176  061A                     	;# 
   177  061B                     	;# 
   178  061C                     	;# 
   179  061C                     	;# 
   180  0691                     	;# 
   181  0692                     	;# 
   182  0693                     	;# 
   183  0694                     	;# 
   184  0695                     	;# 
   185  0F0F                     	;# 
   186  0F10                     	;# 
   187  0F11                     	;# 
   188  0F12                     	;# 
   189  0F13                     	;# 
   190  0F14                     	;# 
   191  0F15                     	;# 
   192  0F16                     	;# 
   193  0F17                     	;# 
   194  0F18                     	;# 
   195  0F19                     	;# 
   196  0F1A                     	;# 
   197  0F1B                     	;# 
   198  0F1C                     	;# 
   199  0F1D                     	;# 
   200  0F1E                     	;# 
   201  0F1F                     	;# 
   202  0F20                     	;# 
   203  0F21                     	;# 
   204  0F22                     	;# 
   205  0F23                     	;# 
   206  0F24                     	;# 
   207  0F25                     	;# 
   208  0F26                     	;# 
   209  0F27                     	;# 
   210  0F28                     	;# 
   211  0F29                     	;# 
   212  0F2A                     	;# 
   213  0F2B                     	;# 
   214  0F2C                     	;# 
   215  0F2D                     	;# 
   216  0F2E                     	;# 
   217  0F2F                     	;# 
   218  0F8C                     	;# 
   219  0F8D                     	;# 
   220  0F91                     	;# 
   221  0F95                     	;# 
   222  0F96                     	;# 
   223  0F97                     	;# 
   224  0F9C                     	;# 
   225  0F9D                     	;# 
   226  0F9E                     	;# 
   227  0FE3                     	;# 
   228  0FE4                     	;# 
   229  0FE5                     	;# 
   230  0FE6                     	;# 
   231  0FE7                     	;# 
   232  0FE8                     	;# 
   233  0FE9                     	;# 
   234  0FEA                     	;# 
   235  0FEB                     	;# 
   236  0FED                     	;# 
   237  0FEE                     	;# 
   238  0FEF                     	;# 
   239                           
   240                           	psect	idataBANK0
   241  0638                     __pidataBANK0:
   242                           
   243                           ;initializer for _mang
   244  0638  34C0               	retlw	192
   245  0639  34F9               	retlw	249
   246  063A  34A4               	retlw	164
   247  063B  34B0               	retlw	176
   248  063C  3499               	retlw	153
   249  063D  3492               	retlw	146
   250  063E  3482               	retlw	130
   251  063F  3478               	retlw	120
   252  0640  3480               	retlw	128
   253  0641  3490               	retlw	144
   254  0642  3400               	retlw	0
   255  0643  3400               	retlw	0
   256  0644  3400               	retlw	0
   257  0645  3400               	retlw	0
   258  0646  3400               	retlw	0
   259  0647  3400               	retlw	0
   260  0648  3400               	retlw	0
   261  0649  3400               	retlw	0
   262  064A  3400               	retlw	0
   263  064B  3400               	retlw	0
   264  000E                     _PORTCbits	set	14
   265  008E                     _TRISCbits	set	142
   266  010E                     _LATCbits	set	270
   267                           
   268                           	psect	cinit
   269  07EF                     start_initialization:	
   270                           ; #config settings
   271                           
   272  07EF                     __initialization:
   273                           
   274                           ; Initialize objects allocated to BANK0
   275  07EF  3038               	movlw	low __pidataBANK0
   276  07F0  0084               	movwf	4
   277  07F1  3086               	movlw	(high __pidataBANK0)| (0+128)
   278  07F2  0085               	movwf	5
   279  07F3  3035               	movlw	low __pdataBANK0
   280  07F4  0086               	movwf	6
   281  07F5  3000               	movlw	high __pdataBANK0
   282  07F6  0087               	movwf	7
   283  07F7  3014               	movlw	20
   284  07F8  3186  2632  3187   	fcall	init_ram
   285                           
   286                           ; Clear objects allocated to BANK0
   287  07FB  01C9               	clrf	__pbssBANK0& (0+127)
   288  07FC  01CA               	clrf	(__pbssBANK0+1)& (0+127)
   289  07FD                     end_of_initialization:	
   290                           ;End of C runtime variable initialization code
   291                           
   292  07FD                     __end_of__initialization:
   293  07FD  0020               	movlb	0
   294  07FE  3186  2EBC         	ljmp	_main	;jump to C main() function
   295                           
   296                           	psect	bssBANK0
   297  0049                     __pbssBANK0:
   298  0049                     _dem:
   299  0049                     	ds	1
   300  004A                     _j:
   301  004A                     	ds	1
   302                           
   303                           	psect	dataBANK0
   304  0035                     __pdataBANK0:
   305  0035                     _mang:
   306  0035                     	ds	20
   307                           
   308                           	psect	inittext
   309  0632                     init_ram:
   310  0632  00FE               	movwf	btemp
   311  0633                     initloop:
   312  0633  0012               	moviw fsr0++
   313  0634  001E               	movwi fsr1++
   314  0635  0BFE               	decfsz	btemp,f
   315  0636  2E33               	goto	initloop
   316  0637  3400               	retlw	0
   317                           
   318                           	psect	cstackCOMMON
   319  0070                     __pcstackCOMMON:
   320  0070                     ?_main:
   321  0070                     ?___lwdiv:	
   322                           ; 1 bytes @ 0x0
   323                           
   324  0070                     ___lwdiv@divisor:	
   325                           ; 2 bytes @ 0x0
   326                           
   327                           
   328                           ; 2 bytes @ 0x0
   329  0070                     	ds	2
   330  0072                     ___lwdiv@dividend:
   331                           
   332                           ; 2 bytes @ 0x2
   333  0072                     	ds	2
   334  0074                     ??___lwdiv:
   335                           
   336                           ; 1 bytes @ 0x4
   337  0074                     	ds	1
   338  0075                     ___lwdiv@quotient:
   339                           
   340                           ; 2 bytes @ 0x5
   341  0075                     	ds	2
   342  0077                     ___lwdiv@counter:
   343                           
   344                           ; 1 bytes @ 0x7
   345  0077                     	ds	1
   346  0078                     ?___lwmod:
   347  0078                     ___lwmod@divisor:	
   348                           ; 2 bytes @ 0x8
   349                           
   350                           
   351                           ; 2 bytes @ 0x8
   352  0078                     	ds	2
   353  007A                     ___lwmod@dividend:
   354                           
   355                           ; 2 bytes @ 0xA
   356  007A                     	ds	2
   357  007C                     ??___lwmod:
   358                           
   359                           ; 1 bytes @ 0xC
   360  007C                     	ds	1
   361  007D                     ___lwmod@counter:
   362                           
   363                           ; 1 bytes @ 0xD
   364  007D                     	ds	1
   365                           
   366                           	psect	cstackBANK0
   367  0020                     __pcstackBANK0:
   368  0020                     ?_Nhan_so:
   369  0020                     Nhan_so@i:	
   370                           ; 1 bytes @ 0x0
   371                           
   372                           
   373                           ; 2 bytes @ 0x0
   374  0020                     	ds	2
   375  0022                     ??_Nhan_so:
   376                           
   377                           ; 1 bytes @ 0x2
   378  0022                     	ds	2
   379  0024                     Nhan_so@hang_don_vi:
   380                           
   381                           ; 2 bytes @ 0x4
   382  0024                     	ds	2
   383  0026                     Nhan_so@hang_chuc:
   384                           
   385                           ; 2 bytes @ 0x6
   386  0026                     	ds	2
   387  0028                     Nhan_so@hang_tram:
   388                           
   389                           ; 2 bytes @ 0x8
   390  0028                     	ds	2
   391  002A                     Nhan_so@b:
   392                           
   393                           ; 2 bytes @ 0xA
   394  002A                     	ds	2
   395  002C                     Nhan_so@c:
   396                           
   397                           ; 2 bytes @ 0xC
   398  002C                     	ds	2
   399  002E                     Nhan_so@d:
   400                           
   401                           ; 2 bytes @ 0xE
   402  002E                     	ds	2
   403  0030                     Nhan_so@a:
   404                           
   405                           ; 1 bytes @ 0x10
   406  0030                     	ds	1
   407  0031                     ??_main:
   408                           
   409                           ; 1 bytes @ 0x11
   410  0031                     	ds	2
   411  0033                     main@S1_state:
   412                           
   413                           ; 2 bytes @ 0x13
   414  0033                     	ds	2
   415                           
   416                           	psect	maintext
   417  06BC                     __pmaintext:	
   418 ;;
   419 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   420 ;;
   421 ;; *************** function _main *****************
   422 ;; Defined at:
   423 ;;		line 63 in file "KIEMTRA 01.c"
   424 ;; Parameters:    Size  Location     Type
   425 ;;		None
   426 ;; Auto vars:     Size  Location     Type
   427 ;;  S1_state        2   19[BANK0 ] int 
   428 ;;  a               2    0        int 
   429 ;; Return value:  Size  Location     Type
   430 ;;                  1    wreg      void 
   431 ;; Registers used:
   432 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
   433 ;; Tracked objects:
   434 ;;		On entry : B1F/0
   435 ;;		On exit  : 0/0
   436 ;;		Unchanged: 0/0
   437 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
   438 ;;      Params:         0       0       0       0       0       0       0       0
   439 ;;      Locals:         0       2       0       0       0       0       0       0
   440 ;;      Temps:          0       2       0       0       0       0       0       0
   441 ;;      Totals:         0       4       0       0       0       0       0       0
   442 ;;Total ram usage:        4 bytes
   443 ;; Hardware stack levels required when called: 2
   444 ;; This function calls:
   445 ;;		_Nhan_so
   446 ;; This function is called by:
   447 ;;		Startup code after reset
   448 ;; This function uses a non-reentrant model
   449 ;;
   450                           
   451  06BC                     _main:	
   452                           ;psect for function _main
   453                           
   454  06BC                     l841:	
   455                           ;incstack = 0
   456                           ; Regs used in _main: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
   457                           
   458                           
   459                           ;KIEMTRA 01.c: 64:     int S1_state =0 ;
   460  06BC  0020               	movlb	0	; select bank0
   461  06BD  01B3               	clrf	main@S1_state
   462  06BE  01B4               	clrf	main@S1_state+1
   463  06BF                     l843:
   464                           
   465                           ;KIEMTRA 01.c: 66:     TRISCbits.TRISC3 =1;
   466  06BF  0021               	movlb	1	; select bank1
   467  06C0  158E               	bsf	14,3	;volatile
   468  06C1                     l845:
   469                           
   470                           ;KIEMTRA 01.c: 67:     TRISCbits.TRISC0 =0;
   471  06C1  100E               	bcf	14,0	;volatile
   472  06C2                     l847:
   473                           
   474                           ;KIEMTRA 01.c: 68:     TRISCbits.TRISC1 =0;
   475  06C2  108E               	bcf	14,1	;volatile
   476  06C3                     l849:
   477                           
   478                           ;KIEMTRA 01.c: 69:     TRISCbits.TRISC2 =0;
   479  06C3  110E               	bcf	14,2	;volatile
   480  06C4                     l851:
   481                           
   482                           ;KIEMTRA 01.c: 70:     TRISCbits.TRISC4 =0;
   483  06C4  120E               	bcf	14,4	;volatile
   484  06C5                     l853:
   485                           
   486                           ;KIEMTRA 01.c: 71:     TRISCbits.TRISC5 =1;
   487  06C5  168E               	bsf	14,5	;volatile
   488  06C6                     l855:
   489                           
   490                           ;KIEMTRA 01.c: 72:     TRISCbits.TRISC6 =1;
   491  06C6  170E               	bsf	14,6	;volatile
   492  06C7                     l857:
   493                           
   494                           ;KIEMTRA 01.c: 75:     if (PORTCbits.RC5 == 1){
   495  06C7  0020               	movlb	0	; select bank0
   496  06C8  1E8E               	btfss	14,5	;volatile
   497  06C9  2ECB               	goto	u481
   498  06CA  2ECC               	goto	u480
   499  06CB                     u481:
   500  06CB  2EC7               	goto	l857
   501  06CC                     u480:
   502  06CC                     l859:
   503                           
   504                           ;KIEMTRA 01.c: 76:     if (PORTCbits.RC3 == 0 && S1_state == 0) S1_state = 1,a=1;
   505  06CC  198E               	btfsc	14,3	;volatile
   506  06CD  2ECF               	goto	u491
   507  06CE  2ED0               	goto	u490
   508  06CF                     u491:
   509  06CF  2EDA               	goto	l865
   510  06D0                     u490:
   511  06D0                     l861:
   512  06D0  0833               	movf	main@S1_state,w
   513  06D1  0434               	iorwf	main@S1_state+1,w
   514  06D2  1D03               	btfss	3,2
   515  06D3  2ED5               	goto	u501
   516  06D4  2ED6               	goto	u500
   517  06D5                     u501:
   518  06D5  2EDA               	goto	l865
   519  06D6                     u500:
   520  06D6                     l863:
   521  06D6  3001               	movlw	1
   522  06D7  00B3               	movwf	main@S1_state
   523  06D8  3000               	movlw	0
   524  06D9  00B4               	movwf	main@S1_state+1
   525  06DA                     l865:
   526                           
   527                           ;KIEMTRA 01.c: 77:     if (PORTCbits.RC3 == 1 && S1_state == 1) S1_state = 2,a=2;
   528  06DA  1D8E               	btfss	14,3	;volatile
   529  06DB  2EDD               	goto	u511
   530  06DC  2EDE               	goto	u510
   531  06DD                     u511:
   532  06DD  2EE8               	goto	l871
   533  06DE                     u510:
   534  06DE                     l867:
   535  06DE  0333               	decf	main@S1_state,w
   536  06DF  0434               	iorwf	main@S1_state+1,w
   537  06E0  1D03               	btfss	3,2
   538  06E1  2EE3               	goto	u521
   539  06E2  2EE4               	goto	u520
   540  06E3                     u521:
   541  06E3  2EE8               	goto	l871
   542  06E4                     u520:
   543  06E4                     l869:
   544  06E4  3002               	movlw	2
   545  06E5  00B3               	movwf	main@S1_state
   546  06E6  3000               	movlw	0
   547  06E7  00B4               	movwf	main@S1_state+1
   548  06E8                     l871:
   549                           
   550                           ;KIEMTRA 01.c: 78:     if (PORTCbits.RC3 == 0 && S1_state == 2) S1_state = 3,a=3;
   551  06E8  198E               	btfsc	14,3	;volatile
   552  06E9  2EEB               	goto	u531
   553  06EA  2EEC               	goto	u530
   554  06EB                     u531:
   555  06EB  2EF7               	goto	l877
   556  06EC                     u530:
   557  06EC                     l873:
   558  06EC  3002               	movlw	2
   559  06ED  0633               	xorwf	main@S1_state,w
   560  06EE  0434               	iorwf	main@S1_state+1,w
   561  06EF  1D03               	btfss	3,2
   562  06F0  2EF2               	goto	u541
   563  06F1  2EF3               	goto	u540
   564  06F2                     u541:
   565  06F2  2EF7               	goto	l877
   566  06F3                     u540:
   567  06F3                     l875:
   568  06F3  3003               	movlw	3
   569  06F4  00B3               	movwf	main@S1_state
   570  06F5  3000               	movlw	0
   571  06F6  00B4               	movwf	main@S1_state+1
   572  06F7                     l877:
   573                           
   574                           ;KIEMTRA 01.c: 79:     if (S1_state == 3){
   575  06F7  3003               	movlw	3
   576  06F8  0633               	xorwf	main@S1_state,w
   577  06F9  0434               	iorwf	main@S1_state+1,w
   578  06FA  1D03               	btfss	3,2
   579  06FB  2EFD               	goto	u551
   580  06FC  2EFE               	goto	u550
   581  06FD                     u551:
   582  06FD  2F05               	goto	l883
   583  06FE                     u550:
   584  06FE                     l879:
   585                           
   586                           ;KIEMTRA 01.c: 80:     dem = dem+1 ;
   587  06FE  0849               	movf	_dem,w
   588  06FF  3E01               	addlw	1
   589  0700  00B1               	movwf	??_main
   590  0701  0831               	movf	??_main,w
   591  0702  00C9               	movwf	_dem
   592  0703                     l881:
   593                           
   594                           ;KIEMTRA 01.c: 83:         S1_state =0;
   595  0703  01B3               	clrf	main@S1_state
   596  0704  01B4               	clrf	main@S1_state+1
   597  0705                     l883:
   598                           
   599                           ;KIEMTRA 01.c: 87:      _delay((unsigned long)((10)*(1000000/4000.0))) ;
   600  0705  3004               	movlw	4
   601  0706  0020               	movlb	0	; select bank0
   602  0707  00B1               	movwf	??_main
   603  0708  303D               	movlw	61
   604  0709                     u577:
   605  0709  0B89               	decfsz	9,f
   606  070A  2F09               	goto	u577
   607  070B  0BB1               	decfsz	??_main,f
   608  070C  2F09               	goto	u577
   609  070D  3200               	nop2
   610  070E                     l885:
   611                           
   612                           ;KIEMTRA 01.c: 88:     Nhan_so(dem);
   613  070E  0020               	movlb	0	; select bank0
   614  070F  0849               	movf	_dem,w
   615  0710  00B1               	movwf	??_main
   616  0711  01B2               	clrf	??_main+1
   617  0712  0831               	movf	??_main,w
   618  0713  00A0               	movwf	Nhan_so@i
   619  0714  0832               	movf	??_main+1,w
   620  0715  00A1               	movwf	Nhan_so@i+1
   621  0716  3187  272A  3186   	fcall	_Nhan_so
   622  0719                     l887:
   623                           
   624                           ;KIEMTRA 01.c: 89:     if (PORTCbits.RC6 == 1){
   625  0719  0020               	movlb	0	; select bank0
   626  071A  1F0E               	btfss	14,6	;volatile
   627  071B  2F1D               	goto	u561
   628  071C  2F1E               	goto	u560
   629  071D                     u561:
   630  071D  2EC7               	goto	l857
   631  071E                     u560:
   632  071E                     l889:
   633                           
   634                           ;KIEMTRA 01.c: 90:     dem = 0 ;
   635  071E  01C9               	clrf	_dem
   636                           
   637                           ;KIEMTRA 01.c: 91:     S1_state =0;
   638  071F  01B3               	clrf	main@S1_state
   639  0720  01B4               	clrf	main@S1_state+1
   640  0721                     l891:
   641                           
   642                           ;KIEMTRA 01.c: 92:     Nhan_so(dem);}
   643  0721  3000               	movlw	0
   644  0722  00A0               	movwf	Nhan_so@i
   645  0723  00A1               	movwf	Nhan_so@i+1
   646  0724  3187  272A  3186   	fcall	_Nhan_so
   647  0727  2EC7               	goto	l857
   648  0728  3180  2802         	ljmp	start
   649  072A                     __end_of_main:
   650                           
   651                           	psect	text1
   652  072A                     __ptext1:	
   653 ;; *************** function _Nhan_so *****************
   654 ;; Defined at:
   655 ;;		line 31 in file "KIEMTRA 01.c"
   656 ;; Parameters:    Size  Location     Type
   657 ;;  i               2    0[BANK0 ] unsigned int 
   658 ;; Auto vars:     Size  Location     Type
   659 ;;  d               2   14[BANK0 ] int 
   660 ;;  c               2   12[BANK0 ] int 
   661 ;;  b               2   10[BANK0 ] int 
   662 ;;  hang_tram       2    8[BANK0 ] int 
   663 ;;  hang_chuc       2    6[BANK0 ] int 
   664 ;;  hang_don_vi     2    4[BANK0 ] int 
   665 ;;  a               1   16[BANK0 ] unsigned char 
   666 ;; Return value:  Size  Location     Type
   667 ;;                  1    wreg      void 
   668 ;; Registers used:
   669 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
   670 ;; Tracked objects:
   671 ;;		On entry : 0/0
   672 ;;		On exit  : 0/0
   673 ;;		Unchanged: 0/0
   674 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
   675 ;;      Params:         0       2       0       0       0       0       0       0
   676 ;;      Locals:         0      13       0       0       0       0       0       0
   677 ;;      Temps:          0       2       0       0       0       0       0       0
   678 ;;      Totals:         0      17       0       0       0       0       0       0
   679 ;;Total ram usage:       17 bytes
   680 ;; Hardware stack levels used: 1
   681 ;; Hardware stack levels required when called: 1
   682 ;; This function calls:
   683 ;;		___lwdiv
   684 ;;		___lwmod
   685 ;; This function is called by:
   686 ;;		_main
   687 ;; This function uses a non-reentrant model
   688 ;;
   689                           
   690  072A                     _Nhan_so:	
   691                           ;psect for function _Nhan_so
   692                           
   693  072A                     l779:	
   694                           ;incstack = 0
   695                           ; Regs used in _Nhan_so: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
   696                           
   697                           
   698                           ;KIEMTRA 01.c: 32:   unsigned char a = 0x80 ;
   699  072A  3080               	movlw	128
   700  072B  0020               	movlb	0	; select bank0
   701  072C  00A2               	movwf	??_Nhan_so
   702  072D  0822               	movf	??_Nhan_so,w
   703  072E  00B0               	movwf	Nhan_so@a
   704  072F                     l781:
   705                           
   706                           ;KIEMTRA 01.c: 33:   int hang_don_vi = i%10;
   707  072F  300A               	movlw	10
   708  0730  00F8               	movwf	___lwmod@divisor
   709  0731  3000               	movlw	0
   710  0732  00F9               	movwf	___lwmod@divisor+1
   711  0733  0821               	movf	Nhan_so@i+1,w
   712  0734  00FB               	movwf	___lwmod@dividend+1
   713  0735  0820               	movf	Nhan_so@i,w
   714  0736  00FA               	movwf	___lwmod@dividend
   715  0737  3186  264C  3187   	fcall	___lwmod
   716  073A  0879               	movf	?___lwmod+1,w
   717  073B  0020               	movlb	0	; select bank0
   718  073C  00A5               	movwf	Nhan_so@hang_don_vi+1
   719  073D  0878               	movf	?___lwmod,w
   720  073E  00A4               	movwf	Nhan_so@hang_don_vi
   721  073F                     l783:
   722                           
   723                           ;KIEMTRA 01.c: 34:   int hang_chuc = (i/10)%10 ;
   724  073F  300A               	movlw	10
   725  0740  00F8               	movwf	___lwmod@divisor
   726  0741  3000               	movlw	0
   727  0742  00F9               	movwf	___lwmod@divisor+1
   728  0743  300A               	movlw	10
   729  0744  00F0               	movwf	___lwdiv@divisor
   730  0745  3000               	movlw	0
   731  0746  00F1               	movwf	___lwdiv@divisor+1
   732  0747  0821               	movf	Nhan_so@i+1,w
   733  0748  00F3               	movwf	___lwdiv@dividend+1
   734  0749  0820               	movf	Nhan_so@i,w
   735  074A  00F2               	movwf	___lwdiv@dividend
   736  074B  3186  2680  3187   	fcall	___lwdiv
   737  074E  0871               	movf	?___lwdiv+1,w
   738  074F  00FB               	movwf	___lwmod@dividend+1
   739  0750  0870               	movf	?___lwdiv,w
   740  0751  00FA               	movwf	___lwmod@dividend
   741  0752  3186  264C  3187   	fcall	___lwmod
   742  0755  0879               	movf	?___lwmod+1,w
   743  0756  0020               	movlb	0	; select bank0
   744  0757  00A7               	movwf	Nhan_so@hang_chuc+1
   745  0758  0878               	movf	?___lwmod,w
   746  0759  00A6               	movwf	Nhan_so@hang_chuc
   747  075A                     l785:
   748                           
   749                           ;KIEMTRA 01.c: 35:   int hang_tram = i/100 ;
   750  075A  3064               	movlw	100
   751  075B  00F0               	movwf	___lwdiv@divisor
   752  075C  3000               	movlw	0
   753  075D  00F1               	movwf	___lwdiv@divisor+1
   754  075E  0821               	movf	Nhan_so@i+1,w
   755  075F  00F3               	movwf	___lwdiv@dividend+1
   756  0760  0820               	movf	Nhan_so@i,w
   757  0761  00F2               	movwf	___lwdiv@dividend
   758  0762  3186  2680  3187   	fcall	___lwdiv
   759  0765  0871               	movf	?___lwdiv+1,w
   760  0766  0020               	movlb	0	; select bank0
   761  0767  00A9               	movwf	Nhan_so@hang_tram+1
   762  0768  0870               	movf	?___lwdiv,w
   763  0769  00A8               	movwf	Nhan_so@hang_tram
   764  076A                     l787:
   765                           
   766                           ;KIEMTRA 01.c: 36:   int b = mang[hang_don_vi] ;
   767  076A  0824               	movf	Nhan_so@hang_don_vi,w
   768  076B  3E35               	addlw	(low (_mang| 0))& (0+255)
   769  076C  0086               	movwf	6
   770  076D  0187               	clrf	7
   771  076E  0801               	movf	1,w
   772  076F  00A2               	movwf	??_Nhan_so
   773  0770  01A3               	clrf	??_Nhan_so+1
   774  0771  0822               	movf	??_Nhan_so,w
   775  0772  00AA               	movwf	Nhan_so@b
   776  0773  0823               	movf	??_Nhan_so+1,w
   777  0774  00AB               	movwf	Nhan_so@b+1
   778  0775                     l789:
   779                           
   780                           ;KIEMTRA 01.c: 37:   int c = mang[hang_chuc] ;
   781  0775  0826               	movf	Nhan_so@hang_chuc,w
   782  0776  3E35               	addlw	(low (_mang| 0))& (0+255)
   783  0777  0086               	movwf	6
   784  0778  0187               	clrf	7
   785  0779  0801               	movf	1,w
   786  077A  00A2               	movwf	??_Nhan_so
   787  077B  01A3               	clrf	??_Nhan_so+1
   788  077C  0822               	movf	??_Nhan_so,w
   789  077D  00AC               	movwf	Nhan_so@c
   790  077E  0823               	movf	??_Nhan_so+1,w
   791  077F  00AD               	movwf	Nhan_so@c+1
   792  0780                     l791:
   793                           
   794                           ;KIEMTRA 01.c: 38:   int d = mang[hang_tram] ;
   795  0780  0828               	movf	Nhan_so@hang_tram,w
   796  0781  3E35               	addlw	(low (_mang| 0))& (0+255)
   797  0782  0086               	movwf	6
   798  0783  0187               	clrf	7
   799  0784  0801               	movf	1,w
   800  0785  00A2               	movwf	??_Nhan_so
   801  0786  01A3               	clrf	??_Nhan_so+1
   802  0787  0822               	movf	??_Nhan_so,w
   803  0788  00AE               	movwf	Nhan_so@d
   804  0789  0823               	movf	??_Nhan_so+1,w
   805  078A  00AF               	movwf	Nhan_so@d+1
   806  078B                     l793:
   807                           
   808                           ;KIEMTRA 01.c: 39:     for (j=0;j<8;j++){
   809  078B  01CA               	clrf	_j
   810  078C                     l799:
   811                           
   812                           ;KIEMTRA 01.c: 40:  if ((b&a) == a) LATCbits.LATC1 = 1 ;
   813  078C  082A               	movf	Nhan_so@b,w
   814  078D  0530               	andwf	Nhan_so@a,w
   815  078E  00A2               	movwf	??_Nhan_so
   816  078F  0822               	movf	??_Nhan_so,w
   817  0790  0630               	xorwf	Nhan_so@a,w
   818  0791  1D03               	skipz
   819  0792  2F94               	goto	u421
   820  0793  2F95               	goto	u420
   821  0794                     u421:
   822  0794  2F98               	goto	l19
   823  0795                     u420:
   824  0795                     l801:
   825  0795  0022               	movlb	2	; select bank2
   826  0796  148E               	bsf	14,1	;volatile
   827  0797  2F9A               	goto	l20
   828  0798                     l19:	
   829                           ;KIEMTRA 01.c: 41:  else LATCbits.LATC1 = 0 ;
   830                           
   831  0798  0022               	movlb	2	; select bank2
   832  0799  108E               	bcf	14,1	;volatile
   833  079A                     l20:
   834                           
   835                           ;KIEMTRA 01.c: 42:  LATCbits.LATC0 = 1;
   836  079A  140E               	bsf	14,0	;volatile
   837                           
   838                           ;KIEMTRA 01.c: 43:  LATCbits.LATC0 = 0;
   839  079B  100E               	bcf	14,0	;volatile
   840  079C                     l803:
   841                           
   842                           ;KIEMTRA 01.c: 44:  b= b<<1 ;
   843  079C  0020               	movlb	0	; select bank0
   844  079D  352A               	lslf	Nhan_so@b,w
   845  079E  00AA               	movwf	Nhan_so@b
   846  079F  0D2B               	rlf	Nhan_so@b+1,w
   847  07A0  00AB               	movwf	Nhan_so@b+1
   848  07A1                     l805:
   849                           
   850                           ;KIEMTRA 01.c: 45:  }
   851  07A1  3001               	movlw	1
   852  07A2  00A2               	movwf	??_Nhan_so
   853  07A3  0822               	movf	??_Nhan_so,w
   854  07A4  07CA               	addwf	_j,f
   855  07A5                     l807:
   856  07A5  3008               	movlw	8
   857  07A6  024A               	subwf	_j,w
   858  07A7  1C03               	skipc
   859  07A8  2FAA               	goto	u431
   860  07A9  2FAB               	goto	u430
   861  07AA                     u431:
   862  07AA  2F8C               	goto	l799
   863  07AB                     u430:
   864  07AB                     l809:
   865                           
   866                           ;KIEMTRA 01.c: 46:   for (j=0;j<8;j++){
   867  07AB  01CA               	clrf	_j
   868  07AC                     l815:
   869                           
   870                           ;KIEMTRA 01.c: 47:  if ((c&a) == a) LATCbits.LATC1 = 1 ;
   871  07AC  082C               	movf	Nhan_so@c,w
   872  07AD  0530               	andwf	Nhan_so@a,w
   873  07AE  00A2               	movwf	??_Nhan_so
   874  07AF  0822               	movf	??_Nhan_so,w
   875  07B0  0630               	xorwf	Nhan_so@a,w
   876  07B1  1D03               	skipz
   877  07B2  2FB4               	goto	u441
   878  07B3  2FB5               	goto	u440
   879  07B4                     u441:
   880  07B4  2FB8               	goto	l23
   881  07B5                     u440:
   882  07B5                     l817:
   883  07B5  0022               	movlb	2	; select bank2
   884  07B6  148E               	bsf	14,1	;volatile
   885  07B7  2FBA               	goto	l24
   886  07B8                     l23:	
   887                           ;KIEMTRA 01.c: 48:  else LATCbits.LATC1 = 0 ;
   888                           
   889  07B8  0022               	movlb	2	; select bank2
   890  07B9  108E               	bcf	14,1	;volatile
   891  07BA                     l24:
   892                           
   893                           ;KIEMTRA 01.c: 49:  LATCbits.LATC0 = 1;
   894  07BA  140E               	bsf	14,0	;volatile
   895                           
   896                           ;KIEMTRA 01.c: 50:  LATCbits.LATC0 = 0;
   897  07BB  100E               	bcf	14,0	;volatile
   898  07BC                     l819:
   899                           
   900                           ;KIEMTRA 01.c: 51:  c= c<<1 ;
   901  07BC  0020               	movlb	0	; select bank0
   902  07BD  352C               	lslf	Nhan_so@c,w
   903  07BE  00AC               	movwf	Nhan_so@c
   904  07BF  0D2D               	rlf	Nhan_so@c+1,w
   905  07C0  00AD               	movwf	Nhan_so@c+1
   906  07C1                     l821:
   907                           
   908                           ;KIEMTRA 01.c: 52:  }
   909  07C1  3001               	movlw	1
   910  07C2  00A2               	movwf	??_Nhan_so
   911  07C3  0822               	movf	??_Nhan_so,w
   912  07C4  07CA               	addwf	_j,f
   913  07C5                     l823:
   914  07C5  3008               	movlw	8
   915  07C6  024A               	subwf	_j,w
   916  07C7  1C03               	skipc
   917  07C8  2FCA               	goto	u451
   918  07C9  2FCB               	goto	u450
   919  07CA                     u451:
   920  07CA  2FAC               	goto	l815
   921  07CB                     u450:
   922  07CB                     l825:
   923                           
   924                           ;KIEMTRA 01.c: 53:  for (j=0;j<8;j++){
   925  07CB  01CA               	clrf	_j
   926  07CC                     l831:
   927                           
   928                           ;KIEMTRA 01.c: 54:  if ((d&a) == a) LATCbits.LATC1 = 1 ;
   929  07CC  082E               	movf	Nhan_so@d,w
   930  07CD  0530               	andwf	Nhan_so@a,w
   931  07CE  00A2               	movwf	??_Nhan_so
   932  07CF  0822               	movf	??_Nhan_so,w
   933  07D0  0630               	xorwf	Nhan_so@a,w
   934  07D1  1D03               	skipz
   935  07D2  2FD4               	goto	u461
   936  07D3  2FD5               	goto	u460
   937  07D4                     u461:
   938  07D4  2FD8               	goto	l27
   939  07D5                     u460:
   940  07D5                     l833:
   941  07D5  0022               	movlb	2	; select bank2
   942  07D6  148E               	bsf	14,1	;volatile
   943  07D7  2FDA               	goto	l28
   944  07D8                     l27:	
   945                           ;KIEMTRA 01.c: 55:  else LATCbits.LATC1 = 0 ;
   946                           
   947  07D8  0022               	movlb	2	; select bank2
   948  07D9  108E               	bcf	14,1	;volatile
   949  07DA                     l28:
   950                           
   951                           ;KIEMTRA 01.c: 56:  LATCbits.LATC0 = 1;
   952  07DA  140E               	bsf	14,0	;volatile
   953                           
   954                           ;KIEMTRA 01.c: 57:  LATCbits.LATC0 = 0;
   955  07DB  100E               	bcf	14,0	;volatile
   956  07DC                     l835:
   957                           
   958                           ;KIEMTRA 01.c: 58:  d= d<<1 ;
   959  07DC  0020               	movlb	0	; select bank0
   960  07DD  352E               	lslf	Nhan_so@d,w
   961  07DE  00AE               	movwf	Nhan_so@d
   962  07DF  0D2F               	rlf	Nhan_so@d+1,w
   963  07E0  00AF               	movwf	Nhan_so@d+1
   964  07E1                     l837:
   965                           
   966                           ;KIEMTRA 01.c: 59:  }
   967  07E1  3001               	movlw	1
   968  07E2  00A2               	movwf	??_Nhan_so
   969  07E3  0822               	movf	??_Nhan_so,w
   970  07E4  07CA               	addwf	_j,f
   971  07E5                     l839:
   972  07E5  3008               	movlw	8
   973  07E6  024A               	subwf	_j,w
   974  07E7  1C03               	skipc
   975  07E8  2FEA               	goto	u471
   976  07E9  2FEB               	goto	u470
   977  07EA                     u471:
   978  07EA  2FCC               	goto	l831
   979  07EB                     u470:
   980  07EB                     l26:
   981                           
   982                           ;KIEMTRA 01.c: 60:  LATCbits.LATC2 = 1;
   983  07EB  0022               	movlb	2	; select bank2
   984  07EC  150E               	bsf	14,2	;volatile
   985                           
   986                           ;KIEMTRA 01.c: 61: LATCbits.LATC2 = 0;
   987  07ED  110E               	bcf	14,2	;volatile
   988  07EE                     l29:
   989  07EE  0008               	return
   990  07EF                     __end_of_Nhan_so:
   991                           
   992                           	psect	text2
   993  064C                     __ptext2:	
   994 ;; *************** function ___lwmod *****************
   995 ;; Defined at:
   996 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\lwmod.c"
   997 ;; Parameters:    Size  Location     Type
   998 ;;  divisor         2    8[COMMON] unsigned int 
   999 ;;  dividend        2   10[COMMON] unsigned int 
  1000 ;; Auto vars:     Size  Location     Type
  1001 ;;  counter         1   13[COMMON] unsigned char 
  1002 ;; Return value:  Size  Location     Type
  1003 ;;                  2    8[COMMON] unsigned int 
  1004 ;; Registers used:
  1005 ;;		wreg, status,2, status,0
  1006 ;; Tracked objects:
  1007 ;;		On entry : 0/0
  1008 ;;		On exit  : 0/0
  1009 ;;		Unchanged: 0/0
  1010 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  1011 ;;      Params:         4       0       0       0       0       0       0       0
  1012 ;;      Locals:         1       0       0       0       0       0       0       0
  1013 ;;      Temps:          1       0       0       0       0       0       0       0
  1014 ;;      Totals:         6       0       0       0       0       0       0       0
  1015 ;;Total ram usage:        6 bytes
  1016 ;; Hardware stack levels used: 1
  1017 ;; This function calls:
  1018 ;;		Nothing
  1019 ;; This function is called by:
  1020 ;;		_Nhan_so
  1021 ;; This function uses a non-reentrant model
  1022 ;;
  1023                           
  1024  064C                     ___lwmod:	
  1025                           ;psect for function ___lwmod
  1026                           
  1027  064C                     l757:	
  1028                           ;incstack = 0
  1029                           ; Regs used in ___lwmod: [wreg+status,2+status,0]
  1030                           
  1031  064C  0878               	movf	___lwmod@divisor,w
  1032  064D  0479               	iorwf	___lwmod@divisor+1,w
  1033  064E  1903               	btfsc	3,2
  1034  064F  2E51               	goto	u361
  1035  0650  2E52               	goto	u360
  1036  0651                     u361:
  1037  0651  2E7B               	goto	l775
  1038  0652                     u360:
  1039  0652                     l759:
  1040  0652  01FD               	clrf	___lwmod@counter
  1041  0653  0AFD               	incf	___lwmod@counter,f
  1042  0654  2E5E               	goto	l765
  1043  0655                     l761:
  1044  0655  3001               	movlw	1
  1045  0656                     u375:
  1046  0656  35F8               	lslf	___lwmod@divisor,f
  1047  0657  0DF9               	rlf	___lwmod@divisor+1,f
  1048  0658  0B89               	decfsz	9,f
  1049  0659  2E56               	goto	u375
  1050  065A                     l763:
  1051  065A  3001               	movlw	1
  1052  065B  00FC               	movwf	??___lwmod
  1053  065C  087C               	movf	??___lwmod,w
  1054  065D  07FD               	addwf	___lwmod@counter,f
  1055  065E                     l765:
  1056  065E  1FF9               	btfss	___lwmod@divisor+1,7
  1057  065F  2E61               	goto	u381
  1058  0660  2E62               	goto	u380
  1059  0661                     u381:
  1060  0661  2E55               	goto	l761
  1061  0662                     u380:
  1062  0662                     l767:
  1063  0662  0879               	movf	___lwmod@divisor+1,w
  1064  0663  027B               	subwf	___lwmod@dividend+1,w
  1065  0664  1D03               	skipz
  1066  0665  2E68               	goto	u395
  1067  0666  0878               	movf	___lwmod@divisor,w
  1068  0667  027A               	subwf	___lwmod@dividend,w
  1069  0668                     u395:
  1070  0668  1C03               	skipc
  1071  0669  2E6B               	goto	u391
  1072  066A  2E6C               	goto	u390
  1073  066B                     u391:
  1074  066B  2E70               	goto	l771
  1075  066C                     u390:
  1076  066C                     l769:
  1077  066C  0878               	movf	___lwmod@divisor,w
  1078  066D  02FA               	subwf	___lwmod@dividend,f
  1079  066E  0879               	movf	___lwmod@divisor+1,w
  1080  066F  3BFB               	subwfb	___lwmod@dividend+1,f
  1081  0670                     l771:
  1082  0670  3001               	movlw	1
  1083  0671                     u405:
  1084  0671  36F9               	lsrf	___lwmod@divisor+1,f
  1085  0672  0CF8               	rrf	___lwmod@divisor,f
  1086  0673  0B89               	decfsz	9,f
  1087  0674  2E71               	goto	u405
  1088  0675                     l773:
  1089  0675  3001               	movlw	1
  1090  0676  02FD               	subwf	___lwmod@counter,f
  1091  0677  1D03               	btfss	3,2
  1092  0678  2E7A               	goto	u411
  1093  0679  2E7B               	goto	u410
  1094  067A                     u411:
  1095  067A  2E62               	goto	l767
  1096  067B                     u410:
  1097  067B                     l775:
  1098  067B  087B               	movf	___lwmod@dividend+1,w
  1099  067C  00F9               	movwf	?___lwmod+1
  1100  067D  087A               	movf	___lwmod@dividend,w
  1101  067E  00F8               	movwf	?___lwmod
  1102  067F                     l401:
  1103  067F  0008               	return
  1104  0680                     __end_of___lwmod:
  1105                           
  1106                           	psect	text3
  1107  0680                     __ptext3:	
  1108 ;; *************** function ___lwdiv *****************
  1109 ;; Defined at:
  1110 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\lwdiv.c"
  1111 ;; Parameters:    Size  Location     Type
  1112 ;;  divisor         2    0[COMMON] unsigned int 
  1113 ;;  dividend        2    2[COMMON] unsigned int 
  1114 ;; Auto vars:     Size  Location     Type
  1115 ;;  quotient        2    5[COMMON] unsigned int 
  1116 ;;  counter         1    7[COMMON] unsigned char 
  1117 ;; Return value:  Size  Location     Type
  1118 ;;                  2    0[COMMON] unsigned int 
  1119 ;; Registers used:
  1120 ;;		wreg, status,2, status,0
  1121 ;; Tracked objects:
  1122 ;;		On entry : 0/0
  1123 ;;		On exit  : 0/0
  1124 ;;		Unchanged: 0/0
  1125 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  1126 ;;      Params:         4       0       0       0       0       0       0       0
  1127 ;;      Locals:         3       0       0       0       0       0       0       0
  1128 ;;      Temps:          1       0       0       0       0       0       0       0
  1129 ;;      Totals:         8       0       0       0       0       0       0       0
  1130 ;;Total ram usage:        8 bytes
  1131 ;; Hardware stack levels used: 1
  1132 ;; This function calls:
  1133 ;;		Nothing
  1134 ;; This function is called by:
  1135 ;;		_Nhan_so
  1136 ;; This function uses a non-reentrant model
  1137 ;;
  1138                           
  1139  0680                     ___lwdiv:	
  1140                           ;psect for function ___lwdiv
  1141                           
  1142  0680                     l731:	
  1143                           ;incstack = 0
  1144                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
  1145                           
  1146  0680  01F5               	clrf	___lwdiv@quotient
  1147  0681  01F6               	clrf	___lwdiv@quotient+1
  1148  0682                     l733:
  1149  0682  0870               	movf	___lwdiv@divisor,w
  1150  0683  0471               	iorwf	___lwdiv@divisor+1,w
  1151  0684  1903               	btfsc	3,2
  1152  0685  2E87               	goto	u291
  1153  0686  2E88               	goto	u290
  1154  0687                     u291:
  1155  0687  2EB7               	goto	l753
  1156  0688                     u290:
  1157  0688                     l735:
  1158  0688  01F7               	clrf	___lwdiv@counter
  1159  0689  0AF7               	incf	___lwdiv@counter,f
  1160  068A  2E94               	goto	l741
  1161  068B                     l737:
  1162  068B  3001               	movlw	1
  1163  068C                     u305:
  1164  068C  35F0               	lslf	___lwdiv@divisor,f
  1165  068D  0DF1               	rlf	___lwdiv@divisor+1,f
  1166  068E  0B89               	decfsz	9,f
  1167  068F  2E8C               	goto	u305
  1168  0690                     l739:
  1169  0690  3001               	movlw	1
  1170  0691  00F4               	movwf	??___lwdiv
  1171  0692  0874               	movf	??___lwdiv,w
  1172  0693  07F7               	addwf	___lwdiv@counter,f
  1173  0694                     l741:
  1174  0694  1FF1               	btfss	___lwdiv@divisor+1,7
  1175  0695  2E97               	goto	u311
  1176  0696  2E98               	goto	u310
  1177  0697                     u311:
  1178  0697  2E8B               	goto	l737
  1179  0698                     u310:
  1180  0698                     l743:
  1181  0698  3001               	movlw	1
  1182  0699                     u325:
  1183  0699  35F5               	lslf	___lwdiv@quotient,f
  1184  069A  0DF6               	rlf	___lwdiv@quotient+1,f
  1185  069B  0B89               	decfsz	9,f
  1186  069C  2E99               	goto	u325
  1187  069D  0871               	movf	___lwdiv@divisor+1,w
  1188  069E  0273               	subwf	___lwdiv@dividend+1,w
  1189  069F  1D03               	skipz
  1190  06A0  2EA3               	goto	u335
  1191  06A1  0870               	movf	___lwdiv@divisor,w
  1192  06A2  0272               	subwf	___lwdiv@dividend,w
  1193  06A3                     u335:
  1194  06A3  1C03               	skipc
  1195  06A4  2EA6               	goto	u331
  1196  06A5  2EA7               	goto	u330
  1197  06A6                     u331:
  1198  06A6  2EAC               	goto	l749
  1199  06A7                     u330:
  1200  06A7                     l745:
  1201  06A7  0870               	movf	___lwdiv@divisor,w
  1202  06A8  02F2               	subwf	___lwdiv@dividend,f
  1203  06A9  0871               	movf	___lwdiv@divisor+1,w
  1204  06AA  3BF3               	subwfb	___lwdiv@dividend+1,f
  1205  06AB                     l747:
  1206  06AB  1475               	bsf	___lwdiv@quotient,0
  1207  06AC                     l749:
  1208  06AC  3001               	movlw	1
  1209  06AD                     u345:
  1210  06AD  36F1               	lsrf	___lwdiv@divisor+1,f
  1211  06AE  0CF0               	rrf	___lwdiv@divisor,f
  1212  06AF  0B89               	decfsz	9,f
  1213  06B0  2EAD               	goto	u345
  1214  06B1                     l751:
  1215  06B1  3001               	movlw	1
  1216  06B2  02F7               	subwf	___lwdiv@counter,f
  1217  06B3  1D03               	btfss	3,2
  1218  06B4  2EB6               	goto	u351
  1219  06B5  2EB7               	goto	u350
  1220  06B6                     u351:
  1221  06B6  2E98               	goto	l743
  1222  06B7                     u350:
  1223  06B7                     l753:
  1224  06B7  0876               	movf	___lwdiv@quotient+1,w
  1225  06B8  00F1               	movwf	?___lwdiv+1
  1226  06B9  0875               	movf	___lwdiv@quotient,w
  1227  06BA  00F0               	movwf	?___lwdiv
  1228  06BB                     l391:
  1229  06BB  0008               	return
  1230  06BC                     __end_of___lwdiv:
  1231  007E                     btemp	set	126	;btemp
  1232  007E                     wtemp0	set	126
  1233                           
  1234                           	psect	idloc
  1235                           
  1236                           ;Config register IDLOC0 @ 0x8000
  1237                           ;	unspecified, using default values
  1238  8000                     	org	32768
  1239  8000  3FFF               	dw	16383
  1240                           
  1241                           ;Config register IDLOC1 @ 0x8001
  1242                           ;	unspecified, using default values
  1243  8001                     	org	32769
  1244  8001  3FFF               	dw	16383
  1245                           
  1246                           ;Config register IDLOC2 @ 0x8002
  1247                           ;	unspecified, using default values
  1248  8002                     	org	32770
  1249  8002  3FFF               	dw	16383
  1250                           
  1251                           ;Config register IDLOC3 @ 0x8003
  1252                           ;	unspecified, using default values
  1253  8003                     	org	32771
  1254  8003  3FFF               	dw	16383
  1255                           
  1256                           	psect	config
  1257                           
  1258                           ;Config register CONFIG1 @ 0x8007
  1259                           ;	Oscillator Selection Bits
  1260                           ;	FOSC = ECH, ECH, External Clock, High Power Mode (4-20 MHz): device clock supplied to 
      +                          CLKIN pins
  1261                           ;	Watchdog Timer Enable
  1262                           ;	WDTE = OFF, WDT disabled
  1263                           ;	Power-up Timer Enable
  1264                           ;	PWRTE = OFF, PWRT disabled
  1265                           ;	MCLR Pin Function Select
  1266                           ;	MCLRE = OFF, MCLR/VPP pin function is digital input
  1267                           ;	Flash Program Memory Code Protection
  1268                           ;	CP = OFF, Program memory code protection is disabled
  1269                           ;	Brown-out Reset Enable
  1270                           ;	BOREN = OFF, Brown-out Reset disabled
  1271                           ;	Clock Out Enable
  1272                           ;	CLKOUTEN = OFF, CLKOUT function is disabled. I/O or oscillator function on the CLKOUT 
      +                          pin
  1273                           ;	Internal/External Switchover Mode
  1274                           ;	IESO = OFF, Internal/External Switchover Mode is disabled
  1275                           ;	Fail-Safe Clock Monitor Enable
  1276                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
  1277  8007                     	org	32775
  1278  8007  09A7               	dw	2471
  1279                           
  1280                           ;Config register CONFIG2 @ 0x8008
  1281                           ;	Flash Memory Self-Write Protection
  1282                           ;	WRT = OFF, Write protection off
  1283                           ;	Stack Overflow/Underflow Reset Enable
  1284                           ;	STVREN = OFF, Stack Overflow or Underflow will not cause a Reset
  1285                           ;	Brown-out Reset Voltage Selection
  1286                           ;	BORV = LO, Brown-out Reset Voltage (Vbor), low trip point selected.
  1287                           ;	Low-Power Brown Out Reset
  1288                           ;	LPBOR = OFF, Low-Power BOR is disabled
  1289                           ;	Low-Voltage Programming Enable
  1290                           ;	LVP = OFF, High-voltage on MCLR/VPP must be used for programming
  1291  8008                     	org	32776
  1292  8008  1DFF               	dw	7679

Data Sizes:
    Strings     0
    Constant    0
    Data        20
    BSS         2
    Persistent  32
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     21      43
    BANK1            80      0       0
    BANK2            80      0       0
    BANK3            80      0       0
    BANK4            80      0       0
    BANK5            80      0       0
    BANK6            16      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    _Nhan_so->___lwmod
    ___lwmod->___lwdiv

Critical Paths under _main in BANK0

    _main->_Nhan_so

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 6     6      0    1585
                                             17 BANK0      4     4      0
                            _Nhan_so
 ---------------------------------------------------------------------------------
 (1) _Nhan_so                                             17    15      2    1487
                                              0 BANK0     17    15      2
                            ___lwdiv
                            ___lwmod
 ---------------------------------------------------------------------------------
 (2) ___lwmod                                              6     2      4     463
                                              8 COMMON     6     2      4
                            ___lwdiv (ARG)
 ---------------------------------------------------------------------------------
 (2) ___lwdiv                                              8     4      4     466
                                              0 COMMON     8     4      4
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Nhan_so
     ___lwdiv
     ___lwmod
       ___lwdiv (ARG)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             1F0      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      E       E       2      100.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
ABS                  0      0      39       4        0.0%
BITBANK0            50      0       0       5        0.0%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BANK0               50     15      2B       6       53.8%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BITBANK1            50      0       0       7        0.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BANK1               50      0       0       8        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BITBANK2            50      0       0       9        0.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BANK2               50      0       0      10        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BITBANK3            50      0       0      11        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BANK3               50      0       0      12        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BITBANK4            50      0       0      13        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BANK4               50      0       0      14        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BITBANK5            50      0       0      15        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BANK5               50      0       0      16        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BITBANK6            10      0       0      17        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BANK6               10      0       0      18        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
DATA                 0      0      39      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V2.36 build 20220127204148 
Symbol Table                                                                                   Mon Apr 04 00:34:32 2022

                      _j 004A                       l20 079A                       l23 07B8  
                     l24 07BA                       l26 07EB                       l27 07D8  
                     l19 0798                       l28 07DA                       l29 07EE  
                    l401 067F                      l391 06BB                      l801 0795  
                    l731 0680                      l803 079C                      l741 0694  
                    l733 0682                      l821 07C1                      l805 07A1  
                    l751 06B1                      l743 0698                      l735 0688  
                    l831 07CC                      l823 07C5                      l815 07AC  
                    l807 07A5                      l745 06A7                      l737 068B  
                    l753 06B7                      l761 0655                      l833 07D5  
                    l825 07CB                      l817 07B5                      l809 07AB  
                    l841 06BC                      l747 06AB                      l739 0690  
                    l771 0670                      l763 065A                      l835 07DC  
                    l819 07BC                      l851 06C4                      l843 06BF  
                    l749 06AC                      l773 0675                      l765 065E  
                    l757 064C                      l837 07E1                      l781 072F  
                    l861 06D0                      l853 06C5                      l845 06C1  
                    l767 0662                      l759 0652                      l775 067B  
                    l839 07E5                      l791 0780                      l783 073F  
                    l871 06E8                      l863 06D6                      l855 06C6  
                    l847 06C2                      l769 066C                      l793 078B  
                    l785 075A                      l881 0703                      l873 06EC  
                    l865 06DA                      l857 06C7                      l849 06C3  
                    l787 076A                      l779 072A                      l891 0721  
                    l883 0705                      l875 06F3                      l867 06DE  
                    l859 06CC                      l789 0775                      l885 070E  
                    l877 06F7                      l869 06E4                      l799 078C  
                    l887 0719                      l879 06FE                      l889 071E  
                    u310 0698                      u311 0697                      u305 068C  
                    u330 06A7                      u410 067B                      u331 06A6  
                    u411 067A                      u420 0795                      u500 06D6  
                    u325 0699                      u405 0671                      u421 0794  
                    u501 06D5                      u350 06B7                      u430 07AB  
                    u510 06DE                      u351 06B6                      u335 06A3  
                    u431 07AA                      u511 06DD                      u360 0652  
                    u440 07B5                      u520 06E4                      u345 06AD  
                    u361 0651                      u441 07B4                      u521 06E3  
                    u290 0688                      u450 07CB                      u530 06EC  
                    u291 0687                      u451 07CA                      u531 06EB  
                    u380 0662                      u460 07D5                      u540 06F3  
                    u381 0661                      u461 07D4                      u541 06F2  
                    u390 066C                      u470 07EB                      u550 06FE  
                    u391 066B                      u375 0656                      u471 07EA  
                    u551 06FD                      u560 071E                      u480 06CC  
                    u561 071D                      u481 06CB                      u490 06D0  
                    u395 0668                      u491 06CF                      u577 0709  
                    _dem 0049                      wreg 0009                     _main 06BC  
                   _mang 0035                     fsr0h 0005                     fsr1h 0007  
                   fsr0l 0004                     indf1 0001                     fsr1l 0006  
                   btemp 007E                     start 0002          __end_of_Nhan_so 07EF  
                  ?_main 0070          __end_of___lwdiv 06BC          __end_of___lwmod 0680  
                  status 0003                    wtemp0 007E          __initialization 07EF  
           __end_of_main 072A                   ??_main 0031                ??_Nhan_so 0022  
              ??___lwdiv 0074                ??___lwmod 007C  __end_of__initialization 07FD  
         __pcstackCOMMON 0070             __pidataBANK0 0638               __pbssBANK0 0049  
             __pmaintext 06BC                  _Nhan_so 072A                  ___lwdiv 0680  
                ___lwmod 064C                  __ptext1 072A                  __ptext2 064C  
                __ptext3 0680     end_of_initialization 07FD                  init_ram 0632  
                initloop 0633       Nhan_so@hang_don_vi 0024                _PORTCbits 000E  
              _TRISCbits 008E      start_initialization 07EF              __pdataBANK0 0035  
       Nhan_so@hang_chuc 0026         Nhan_so@hang_tram 0028                ___latbits 0002  
          __pcstackBANK0 0020                 ?_Nhan_so 0020         ___lwdiv@dividend 0072  
               ?___lwdiv 0070                 ?___lwmod 0078         ___lwdiv@quotient 0075  
               _LATCbits 010E                 Nhan_so@a 0030                 Nhan_so@b 002A  
               Nhan_so@c 002C                 Nhan_so@d 002E                 Nhan_so@i 0020  
        ___lwdiv@divisor 0070          ___lwdiv@counter 0077         ___lwmod@dividend 007A  
        ___lwmod@divisor 0078          ___lwmod@counter 007D             main@S1_state 0033  
