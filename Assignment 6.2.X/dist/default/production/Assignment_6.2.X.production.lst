

Microchip MPLAB XC8 Assembler V2.36 build 20220127204148 
                                                                                               Thu Apr 28 13:19:25 2022

Microchip MPLAB XC8 C Compiler v2.36 (Free license) build 20220127204148 Og1 
     1                           	processor	16F1509
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	stringtext1,global,class=STRCODE,delta=2,noexec
     5                           	psect	stringtext2,global,class=STRCODE,delta=2,noexec
     6                           	psect	stringtext3,global,class=STRCODE,delta=2,noexec
     7                           	psect	cinit,global,class=CODE,merge=1,delta=2
     8                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     9                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    10                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    11                           	psect	text1,local,class=CODE,merge=1,delta=2
    12                           	psect	text2,local,class=CODE,merge=1,delta=2
    13                           	psect	text3,local,class=CODE,merge=1,delta=2,group=2
    14                           	psect	text4,local,class=CODE,merge=1,delta=2
    15                           	psect	text5,local,class=CODE,merge=1,delta=2
    16                           	psect	text6,local,class=CODE,merge=1,delta=2
    17                           	psect	text7,local,class=CODE,merge=1,delta=2
    18                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=2,noexec
    19                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    20                           	dabs	1,0x7E,2
    21  0000                     
    22                           ; Version 2.40
    23                           ; Generated 17/11/2021 GMT
    24                           ; 
    25                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
    26                           ; All rights reserved.
    27                           ; 
    28                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    29                           ; 
    30                           ; Redistribution and use in source and binary forms, with or without modification, are
    31                           ; permitted provided that the following conditions are met:
    32                           ; 
    33                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    34                           ;        conditions and the following disclaimer.
    35                           ; 
    36                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    37                           ;        of conditions and the following disclaimer in the documentation and/or other
    38                           ;        materials provided with the distribution. Publication is not required when
    39                           ;        this file is used in an embedded application.
    40                           ; 
    41                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    42                           ;        software without specific prior written permission.
    43                           ; 
    44                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    45                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    46                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    47                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    48                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    49                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    50                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    51                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    52                           ; 
    53                           ; 
    54                           ; Code-generator required, PIC16F1509 Definitions
    55                           ; 
    56                           ; SFR Addresses
    57  0000                     	;# 
    58  0001                     	;# 
    59  0002                     	;# 
    60  0003                     	;# 
    61  0004                     	;# 
    62  0005                     	;# 
    63  0006                     	;# 
    64  0007                     	;# 
    65  0008                     	;# 
    66  0009                     	;# 
    67  000A                     	;# 
    68  000B                     	;# 
    69  000C                     	;# 
    70  000D                     	;# 
    71  000E                     	;# 
    72  0011                     	;# 
    73  0012                     	;# 
    74  0013                     	;# 
    75  0015                     	;# 
    76  0016                     	;# 
    77  0016                     	;# 
    78  0017                     	;# 
    79  0018                     	;# 
    80  0019                     	;# 
    81  001A                     	;# 
    82  001B                     	;# 
    83  001C                     	;# 
    84  008C                     	;# 
    85  008D                     	;# 
    86  008E                     	;# 
    87  0091                     	;# 
    88  0092                     	;# 
    89  0093                     	;# 
    90  0095                     	;# 
    91  0096                     	;# 
    92  0097                     	;# 
    93  0099                     	;# 
    94  009A                     	;# 
    95  009B                     	;# 
    96  009B                     	;# 
    97  009C                     	;# 
    98  009D                     	;# 
    99  009E                     	;# 
   100  009F                     	;# 
   101  010C                     	;# 
   102  010D                     	;# 
   103  010E                     	;# 
   104  0111                     	;# 
   105  0112                     	;# 
   106  0113                     	;# 
   107  0114                     	;# 
   108  0115                     	;# 
   109  0116                     	;# 
   110  0117                     	;# 
   111  0118                     	;# 
   112  0119                     	;# 
   113  011D                     	;# 
   114  018C                     	;# 
   115  018D                     	;# 
   116  018E                     	;# 
   117  0191                     	;# 
   118  0191                     	;# 
   119  0192                     	;# 
   120  0193                     	;# 
   121  0193                     	;# 
   122  0194                     	;# 
   123  0195                     	;# 
   124  0196                     	;# 
   125  0197                     	;# 
   126  0199                     	;# 
   127  019A                     	;# 
   128  019B                     	;# 
   129  019B                     	;# 
   130  019C                     	;# 
   131  019D                     	;# 
   132  019E                     	;# 
   133  019F                     	;# 
   134  020C                     	;# 
   135  020D                     	;# 
   136  0211                     	;# 
   137  0211                     	;# 
   138  0212                     	;# 
   139  0212                     	;# 
   140  0213                     	;# 
   141  0213                     	;# 
   142  0214                     	;# 
   143  0214                     	;# 
   144  0215                     	;# 
   145  0215                     	;# 
   146  0215                     	;# 
   147  0216                     	;# 
   148  0216                     	;# 
   149  0217                     	;# 
   150  0217                     	;# 
   151  0391                     	;# 
   152  0392                     	;# 
   153  0393                     	;# 
   154  0394                     	;# 
   155  0395                     	;# 
   156  0396                     	;# 
   157  0498                     	;# 
   158  0498                     	;# 
   159  0499                     	;# 
   160  049A                     	;# 
   161  049B                     	;# 
   162  049B                     	;# 
   163  049C                     	;# 
   164  049D                     	;# 
   165  049E                     	;# 
   166  049F                     	;# 
   167  0611                     	;# 
   168  0612                     	;# 
   169  0613                     	;# 
   170  0613                     	;# 
   171  0614                     	;# 
   172  0615                     	;# 
   173  0616                     	;# 
   174  0616                     	;# 
   175  0617                     	;# 
   176  0618                     	;# 
   177  0619                     	;# 
   178  0619                     	;# 
   179  061A                     	;# 
   180  061B                     	;# 
   181  061C                     	;# 
   182  061C                     	;# 
   183  0691                     	;# 
   184  0692                     	;# 
   185  0693                     	;# 
   186  0694                     	;# 
   187  0695                     	;# 
   188  0F0F                     	;# 
   189  0F10                     	;# 
   190  0F11                     	;# 
   191  0F12                     	;# 
   192  0F13                     	;# 
   193  0F14                     	;# 
   194  0F15                     	;# 
   195  0F16                     	;# 
   196  0F17                     	;# 
   197  0F18                     	;# 
   198  0F19                     	;# 
   199  0F1A                     	;# 
   200  0F1B                     	;# 
   201  0F1C                     	;# 
   202  0F1D                     	;# 
   203  0F1E                     	;# 
   204  0F1F                     	;# 
   205  0F20                     	;# 
   206  0F21                     	;# 
   207  0F22                     	;# 
   208  0F23                     	;# 
   209  0F24                     	;# 
   210  0F25                     	;# 
   211  0F26                     	;# 
   212  0F27                     	;# 
   213  0F28                     	;# 
   214  0F29                     	;# 
   215  0F2A                     	;# 
   216  0F2B                     	;# 
   217  0F2C                     	;# 
   218  0F2D                     	;# 
   219  0F2E                     	;# 
   220  0F2F                     	;# 
   221  0F8C                     	;# 
   222  0F8D                     	;# 
   223  0F91                     	;# 
   224  0F95                     	;# 
   225  0F96                     	;# 
   226  0F97                     	;# 
   227  0F9C                     	;# 
   228  0F9D                     	;# 
   229  0F9E                     	;# 
   230  0FE3                     	;# 
   231  0FE4                     	;# 
   232  0FE5                     	;# 
   233  0FE6                     	;# 
   234  0FE7                     	;# 
   235  0FE8                     	;# 
   236  0FE9                     	;# 
   237  0FEA                     	;# 
   238  0FEB                     	;# 
   239  0FED                     	;# 
   240  0FEE                     	;# 
   241  0FEF                     	;# 
   242  0000                     	;# 
   243  0001                     	;# 
   244  0002                     	;# 
   245  0003                     	;# 
   246  0004                     	;# 
   247  0005                     	;# 
   248  0006                     	;# 
   249  0007                     	;# 
   250  0008                     	;# 
   251  0009                     	;# 
   252  000A                     	;# 
   253  000B                     	;# 
   254  000C                     	;# 
   255  000D                     	;# 
   256  000E                     	;# 
   257  0011                     	;# 
   258  0012                     	;# 
   259  0013                     	;# 
   260  0015                     	;# 
   261  0016                     	;# 
   262  0016                     	;# 
   263  0017                     	;# 
   264  0018                     	;# 
   265  0019                     	;# 
   266  001A                     	;# 
   267  001B                     	;# 
   268  001C                     	;# 
   269  008C                     	;# 
   270  008D                     	;# 
   271  008E                     	;# 
   272  0091                     	;# 
   273  0092                     	;# 
   274  0093                     	;# 
   275  0095                     	;# 
   276  0096                     	;# 
   277  0097                     	;# 
   278  0099                     	;# 
   279  009A                     	;# 
   280  009B                     	;# 
   281  009B                     	;# 
   282  009C                     	;# 
   283  009D                     	;# 
   284  009E                     	;# 
   285  009F                     	;# 
   286  010C                     	;# 
   287  010D                     	;# 
   288  010E                     	;# 
   289  0111                     	;# 
   290  0112                     	;# 
   291  0113                     	;# 
   292  0114                     	;# 
   293  0115                     	;# 
   294  0116                     	;# 
   295  0117                     	;# 
   296  0118                     	;# 
   297  0119                     	;# 
   298  011D                     	;# 
   299  018C                     	;# 
   300  018D                     	;# 
   301  018E                     	;# 
   302  0191                     	;# 
   303  0191                     	;# 
   304  0192                     	;# 
   305  0193                     	;# 
   306  0193                     	;# 
   307  0194                     	;# 
   308  0195                     	;# 
   309  0196                     	;# 
   310  0197                     	;# 
   311  0199                     	;# 
   312  019A                     	;# 
   313  019B                     	;# 
   314  019B                     	;# 
   315  019C                     	;# 
   316  019D                     	;# 
   317  019E                     	;# 
   318  019F                     	;# 
   319  020C                     	;# 
   320  020D                     	;# 
   321  0211                     	;# 
   322  0211                     	;# 
   323  0212                     	;# 
   324  0212                     	;# 
   325  0213                     	;# 
   326  0213                     	;# 
   327  0214                     	;# 
   328  0214                     	;# 
   329  0215                     	;# 
   330  0215                     	;# 
   331  0215                     	;# 
   332  0216                     	;# 
   333  0216                     	;# 
   334  0217                     	;# 
   335  0217                     	;# 
   336  0391                     	;# 
   337  0392                     	;# 
   338  0393                     	;# 
   339  0394                     	;# 
   340  0395                     	;# 
   341  0396                     	;# 
   342  0498                     	;# 
   343  0498                     	;# 
   344  0499                     	;# 
   345  049A                     	;# 
   346  049B                     	;# 
   347  049B                     	;# 
   348  049C                     	;# 
   349  049D                     	;# 
   350  049E                     	;# 
   351  049F                     	;# 
   352  0611                     	;# 
   353  0612                     	;# 
   354  0613                     	;# 
   355  0613                     	;# 
   356  0614                     	;# 
   357  0615                     	;# 
   358  0616                     	;# 
   359  0616                     	;# 
   360  0617                     	;# 
   361  0618                     	;# 
   362  0619                     	;# 
   363  0619                     	;# 
   364  061A                     	;# 
   365  061B                     	;# 
   366  061C                     	;# 
   367  061C                     	;# 
   368  0691                     	;# 
   369  0692                     	;# 
   370  0693                     	;# 
   371  0694                     	;# 
   372  0695                     	;# 
   373  0F0F                     	;# 
   374  0F10                     	;# 
   375  0F11                     	;# 
   376  0F12                     	;# 
   377  0F13                     	;# 
   378  0F14                     	;# 
   379  0F15                     	;# 
   380  0F16                     	;# 
   381  0F17                     	;# 
   382  0F18                     	;# 
   383  0F19                     	;# 
   384  0F1A                     	;# 
   385  0F1B                     	;# 
   386  0F1C                     	;# 
   387  0F1D                     	;# 
   388  0F1E                     	;# 
   389  0F1F                     	;# 
   390  0F20                     	;# 
   391  0F21                     	;# 
   392  0F22                     	;# 
   393  0F23                     	;# 
   394  0F24                     	;# 
   395  0F25                     	;# 
   396  0F26                     	;# 
   397  0F27                     	;# 
   398  0F28                     	;# 
   399  0F29                     	;# 
   400  0F2A                     	;# 
   401  0F2B                     	;# 
   402  0F2C                     	;# 
   403  0F2D                     	;# 
   404  0F2E                     	;# 
   405  0F2F                     	;# 
   406  0F8C                     	;# 
   407  0F8D                     	;# 
   408  0F91                     	;# 
   409  0F95                     	;# 
   410  0F96                     	;# 
   411  0F97                     	;# 
   412  0F9C                     	;# 
   413  0F9D                     	;# 
   414  0F9E                     	;# 
   415  0FE3                     	;# 
   416  0FE4                     	;# 
   417  0FE5                     	;# 
   418  0FE6                     	;# 
   419  0FE7                     	;# 
   420  0FE8                     	;# 
   421  0FE9                     	;# 
   422  0FEA                     	;# 
   423  0FEB                     	;# 
   424  0FED                     	;# 
   425  0FEE                     	;# 
   426  0FEF                     	;# 
   427  000E                     _PORTCbits	set	14
   428  000E                     _PORTC	set	14
   429  008E                     _TRISC	set	142
   430                           
   431                           	psect	stringtext1
   432  0800                     __pstringtext1:
   433  0800                     STR_1:
   434  0800  3450               	retlw	80	;'P'
   435  0801  3449               	retlw	73	;'I'
   436  0802  3443               	retlw	67	;'C'
   437  0803  3431               	retlw	49	;'1'
   438  0804  3436               	retlw	54	;'6'
   439  0805  3446               	retlw	70	;'F'
   440  0806  3431               	retlw	49	;'1'
   441  0807  3435               	retlw	53	;'5'
   442  0808  3430               	retlw	48	;'0'
   443  0809  3439               	retlw	57	;'9'
   444  080A  3420               	retlw	32	;' '
   445  080B  344D               	retlw	77	;'M'
   446  080C  3443               	retlw	67	;'C'
   447  080D  3455               	retlw	85	;'U'
   448  080E  3400               	retlw	0
   449                           
   450                           	psect	stringtext2
   451  080F                     __pstringtext2:
   452  080F                     STR_2:
   453  080F  3432               	retlw	50	;'2'
   454  0810  3433               	retlw	51	;'3'
   455  0811  343A               	retlw	58	;':'
   456  0812  3435               	retlw	53	;'5'
   457  0813  3439               	retlw	57	;'9'
   458  0814  343A               	retlw	58	;':'
   459  0815  3430               	retlw	48	;'0'
   460  0816  3430               	retlw	48	;'0'
   461  0817  3400               	retlw	0
   462                           
   463                           	psect	stringtext3
   464  0000                     __pstringtext3:
   465                           
   466                           	psect	cinit
   467  07FD                     start_initialization:	
   468                           ; #config settings
   469                           
   470  07FD                     __initialization:
   471  07FD                     end_of_initialization:	
   472                           ;End of C runtime variable initialization code
   473                           
   474  07FD                     __end_of__initialization:
   475  07FD  0020               	movlb	0
   476  07FE  3186  2EB0         	ljmp	_main	;jump to C main() function
   477                           
   478                           	psect	cstackCOMMON
   479  0070                     __pcstackCOMMON:
   480  0070                     ?_LCD_Initialize:
   481  0070                     ?_LCDPutCmd:	
   482                           ; 1 bytes @ 0x0
   483                           
   484  0070                     ?_main:	
   485                           ; 1 bytes @ 0x0
   486                           
   487  0070                     ?_LCDWriteNibble:	
   488                           ; 1 bytes @ 0x0
   489                           
   490  0070                     ?_LCDPutChar:	
   491                           ; 1 bytes @ 0x0
   492                           
   493  0070                     ?_strlen:	
   494                           ; 1 bytes @ 0x0
   495                           
   496  0070                     LCDWriteNibble@rs:	
   497                           ; 2 bytes @ 0x0
   498                           
   499  0070                     strlen@s:	
   500                           ; 1 bytes @ 0x0
   501                           
   502                           
   503                           ; 2 bytes @ 0x0
   504  0070                     	ds	1
   505  0071                     ??_LCDWriteNibble:
   506                           
   507                           ; 1 bytes @ 0x1
   508  0071                     	ds	1
   509  0072                     ??_strlen:
   510                           
   511                           ; 1 bytes @ 0x2
   512  0072                     	ds	1
   513  0073                     LCDWriteNibble@ch:
   514  0073                     strlen@a:	
   515                           ; 1 bytes @ 0x3
   516                           
   517                           
   518                           ; 2 bytes @ 0x3
   519  0073                     	ds	1
   520  0074                     ??_LCDPutCmd:
   521  0074                     ??_LCDPutChar:	
   522                           ; 1 bytes @ 0x4
   523                           
   524                           
   525                           ; 1 bytes @ 0x4
   526  0074                     	ds	2
   527  0076                     LCDPutChar@ch:
   528  0076                     LCDPutCmd@ch:	
   529                           ; 1 bytes @ 0x6
   530                           
   531                           
   532                           ; 1 bytes @ 0x6
   533  0076                     	ds	1
   534  0077                     ??_LCD_Initialize:
   535  0077                     ?_LCDPutStr2:	
   536                           ; 1 bytes @ 0x7
   537                           
   538  0077                     ?_LCDPutStr3:	
   539                           ; 1 bytes @ 0x7
   540                           
   541  0077                     LCDPutStr2@str:	
   542                           ; 1 bytes @ 0x7
   543                           
   544  0077                     LCDPutStr3@str:	
   545                           ; 2 bytes @ 0x7
   546                           
   547                           
   548                           ; 2 bytes @ 0x7
   549  0077                     	ds	2
   550  0079                     LCDPutStr2@pos:
   551  0079                     LCDPutStr3@ln:	
   552                           ; 1 bytes @ 0x9
   553                           
   554                           
   555                           ; 1 bytes @ 0x9
   556  0079                     	ds	1
   557  007A                     ??_LCDPutStr3:
   558  007A                     LCDPutStr2@ln:	
   559                           ; 1 bytes @ 0xA
   560                           
   561                           
   562                           ; 1 bytes @ 0xA
   563  007A                     	ds	1
   564  007B                     ??_LCDPutStr2:
   565                           
   566                           ; 1 bytes @ 0xB
   567  007B                     	ds	3
   568  007E                     ??_main:
   569                           
   570                           	psect	cstackBANK0
   571  0020                     __pcstackBANK0:	
   572                           ; 1 bytes @ 0xE
   573                           
   574  0020                     _LCDPutStr2$113:
   575  0020                     _LCDPutStr3$121:	
   576                           ; 2 bytes @ 0x0
   577                           
   578                           
   579                           ; 2 bytes @ 0x0
   580  0020                     	ds	2
   581  0022                     LCDPutStr2@h:
   582  0022                     LCDPutStr3@x:	
   583                           ; 1 bytes @ 0x2
   584                           
   585                           
   586                           ; 1 bytes @ 0x2
   587  0022                     	ds	1
   588  0023                     LCDPutStr2@y:
   589  0023                     LCDPutStr3@y:	
   590                           ; 1 bytes @ 0x3
   591                           
   592                           
   593                           ; 1 bytes @ 0x3
   594  0023                     	ds	1
   595  0024                     LCDPutStr2@i:
   596  0024                     LCDPutStr3@i:	
   597                           ; 1 bytes @ 0x4
   598                           
   599                           
   600                           ; 1 bytes @ 0x4
   601  0024                     	ds	1
   602  0025                     LCDPutStr2@x:
   603                           
   604                           ; 1 bytes @ 0x5
   605  0025                     	ds	1
   606                           
   607                           	psect	maintext
   608  06B0                     __pmaintext:	
   609 ;;
   610 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   611 ;;
   612 ;; *************** function _main *****************
   613 ;; Defined at:
   614 ;;		line 6 in file "Assignment 62.c"
   615 ;; Parameters:    Size  Location     Type
   616 ;;		None
   617 ;; Auto vars:     Size  Location     Type
   618 ;;		None
   619 ;; Return value:  Size  Location     Type
   620 ;;                  1    wreg      void 
   621 ;; Registers used:
   622 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   623 ;; Tracked objects:
   624 ;;		On entry : B1F/0
   625 ;;		On exit  : 0/0
   626 ;;		Unchanged: 0/0
   627 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
   628 ;;      Params:         0       0       0       0       0       0       0       0
   629 ;;      Locals:         0       0       0       0       0       0       0       0
   630 ;;      Temps:          0       0       0       0       0       0       0       0
   631 ;;      Totals:         0       0       0       0       0       0       0       0
   632 ;;Total ram usage:        0 bytes
   633 ;; Hardware stack levels required when called: 3
   634 ;; This function calls:
   635 ;;		_LCDPutStr2
   636 ;;		_LCDPutStr3
   637 ;;		_LCD_Initialize
   638 ;; This function is called by:
   639 ;;		Startup code after reset
   640 ;; This function uses a non-reentrant model
   641 ;;
   642                           
   643  06B0                     _main:	
   644                           ;psect for function _main
   645                           
   646  06B0                     l852:	
   647                           ;incstack = 0
   648                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   649                           
   650                           
   651                           ;Assignment 62.c: 7:     LCD_Initialize();
   652  06B0  3187  2725  3186   	fcall	_LCD_Initialize
   653  06B3                     l854:
   654                           
   655                           ;Assignment 62.c: 8:     LCDPutStr2("PIC16F1509 MCU",1,0);
   656  06B3  3000               	movlw	low (STR_1| (0+32768))
   657  06B4  00F7               	movwf	LCDPutStr2@str
   658  06B5  3088               	movlw	high (STR_1| (0+32768))
   659  06B6  00F8               	movwf	LCDPutStr2@str+1
   660  06B7  01F9               	clrf	LCDPutStr2@pos
   661  06B8  0AF9               	incf	LCDPutStr2@pos,f
   662  06B9  01FA               	clrf	LCDPutStr2@ln
   663  06BA  3187  2745  3186   	fcall	_LCDPutStr2
   664  06BD                     l856:
   665                           
   666                           ;Assignment 62.c: 9:     LCDPutStr3("23:59:00",1);
   667  06BD  300F               	movlw	low (STR_2| (0+32768))
   668  06BE  00F7               	movwf	LCDPutStr3@str
   669  06BF  3088               	movlw	high (STR_2| (0+32768))
   670  06C0  00F8               	movwf	LCDPutStr3@str+1
   671  06C1  01F9               	clrf	LCDPutStr3@ln
   672  06C2  0AF9               	incf	LCDPutStr3@ln,f
   673  06C3  3187  279F  3186   	fcall	_LCDPutStr3
   674  06C6                     l11:	
   675                           ;Assignment 62.c: 11:     while(1);
   676                           
   677  06C6                     l12:
   678  06C6  2EC6               	goto	l11
   679  06C7  3180  2802         	ljmp	start
   680  06C9                     __end_of_main:
   681                           
   682                           	psect	text1
   683  0725                     __ptext1:	
   684 ;; *************** function _LCD_Initialize *****************
   685 ;; Defined at:
   686 ;;		line 47 in file "lcd.c"
   687 ;; Parameters:    Size  Location     Type
   688 ;;		None
   689 ;; Auto vars:     Size  Location     Type
   690 ;;		None
   691 ;; Return value:  Size  Location     Type
   692 ;;                  1    wreg      void 
   693 ;; Registers used:
   694 ;;		wreg, status,2, status,0, pclath, cstack
   695 ;; Tracked objects:
   696 ;;		On entry : 0/0
   697 ;;		On exit  : 0/0
   698 ;;		Unchanged: 0/0
   699 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
   700 ;;      Params:         0       0       0       0       0       0       0       0
   701 ;;      Locals:         0       0       0       0       0       0       0       0
   702 ;;      Temps:          1       0       0       0       0       0       0       0
   703 ;;      Totals:         1       0       0       0       0       0       0       0
   704 ;;Total ram usage:        1 bytes
   705 ;; Hardware stack levels used: 1
   706 ;; Hardware stack levels required when called: 2
   707 ;; This function calls:
   708 ;;		_LCDPutCmd
   709 ;; This function is called by:
   710 ;;		_main
   711 ;; This function uses a non-reentrant model
   712 ;;
   713                           
   714  0725                     _LCD_Initialize:	
   715                           ;psect for function _LCD_Initialize
   716                           
   717  0725                     l788:	
   718                           ;incstack = 0
   719                           ; Regs used in _LCD_Initialize: [wreg+status,2+status,0+pclath+cstack]
   720                           
   721                           
   722                           ;lcd.c: 50:     PORTC = 0;
   723  0725  0020               	movlb	0	; select bank0
   724  0726  018E               	clrf	14	;volatile
   725                           
   726                           ;lcd.c: 52:     TRISC = 0x00;
   727  0727  0021               	movlb	1	; select bank1
   728  0728  018E               	clrf	14	;volatile
   729  0729                     l790:
   730                           
   731                           ;lcd.c: 58:     _delay((unsigned long)((15)*(1000000/4000.0)));
   732  0729  3005               	movlw	5
   733  072A  00F7               	movwf	??_LCD_Initialize
   734  072B  30DE               	movlw	222
   735  072C                     u317:
   736  072C  0B89               	decfsz	9,f
   737  072D  2F2C               	goto	u317
   738  072E  0BF7               	decfsz	??_LCD_Initialize,f
   739  072F  2F2C               	goto	u317
   740  0730                     l792:
   741                           
   742                           ;lcd.c: 61:     LCDPutCmd(0x32);
   743  0730  3032               	movlw	50
   744  0731  3186  26E6  3187   	fcall	_LCDPutCmd
   745  0734                     l794:
   746                           
   747                           ;lcd.c: 64:     LCDPutCmd(0x28);
   748  0734  3028               	movlw	40
   749  0735  3186  26E6  3187   	fcall	_LCDPutCmd
   750  0738                     l796:
   751                           
   752                           ;lcd.c: 67:     LCDPutCmd(0x0C);
   753  0738  300C               	movlw	12
   754  0739  3186  26E6  3187   	fcall	_LCDPutCmd
   755  073C                     l798:
   756                           
   757                           ;lcd.c: 69:     LCDPutCmd(0x01);
   758  073C  3001               	movlw	1
   759  073D  3186  26E6  3187   	fcall	_LCDPutCmd
   760  0740                     l800:
   761                           
   762                           ;lcd.c: 72:     LCDPutCmd(0x06);
   763  0740  3006               	movlw	6
   764  0741  3186  26E6  3187   	fcall	_LCDPutCmd
   765  0744                     l29:
   766  0744  0008               	return
   767  0745                     __end_of_LCD_Initialize:
   768                           
   769                           	psect	text2
   770  079F                     __ptext2:	
   771 ;; *************** function _LCDPutStr3 *****************
   772 ;; Defined at:
   773 ;;		line 169 in file "lcd.c"
   774 ;; Parameters:    Size  Location     Type
   775 ;;  str             2    7[COMMON] PTR const unsigned char 
   776 ;;		 -> STR_2(9), 
   777 ;;  ln              1    9[COMMON] unsigned char 
   778 ;; Auto vars:     Size  Location     Type
   779 ;;  i               1    4[BANK0 ] unsigned char 
   780 ;;  y               1    3[BANK0 ] unsigned char 
   781 ;;  x               1    2[BANK0 ] unsigned char 
   782 ;; Return value:  Size  Location     Type
   783 ;;                  1    wreg      void 
   784 ;; Registers used:
   785 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   786 ;; Tracked objects:
   787 ;;		On entry : 0/0
   788 ;;		On exit  : 0/0
   789 ;;		Unchanged: 0/0
   790 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
   791 ;;      Params:         3       0       0       0       0       0       0       0
   792 ;;      Locals:         0       5       0       0       0       0       0       0
   793 ;;      Temps:          3       0       0       0       0       0       0       0
   794 ;;      Totals:         6       5       0       0       0       0       0       0
   795 ;;Total ram usage:       11 bytes
   796 ;; Hardware stack levels used: 1
   797 ;; Hardware stack levels required when called: 2
   798 ;; This function calls:
   799 ;;		_LCDPutChar
   800 ;;		_LCDPutCmd
   801 ;;		_strlen
   802 ;; This function is called by:
   803 ;;		_main
   804 ;; This function uses a non-reentrant model
   805 ;;
   806                           
   807  079F                     _LCDPutStr3:	
   808                           ;psect for function _LCDPutStr3
   809                           
   810  079F                     l826:	
   811                           ;incstack = 0
   812                           ; Regs used in _LCDPutStr3: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   813                           
   814                           
   815                           ;lcd.c: 169: void LCDPutStr3(const char *str , char ln);lcd.c: 170: {;lcd.c: 171:     ui
      +                          nt8_t x = 8 -((strlen(str))/2);
   816  079F  0878               	movf	LCDPutStr3@str+1,w
   817  07A0  00F1               	movwf	strlen@s+1
   818  07A1  0877               	movf	LCDPutStr3@str,w
   819  07A2  00F0               	movwf	strlen@s
   820  07A3  3186  2697  3187   	fcall	_strlen
   821  07A6  0870               	movf	?_strlen,w
   822  07A7  00FA               	movwf	??_LCDPutStr3
   823  07A8  0871               	movf	?_strlen+1,w
   824  07A9  00FB               	movwf	??_LCDPutStr3+1
   825  07AA  36FB               	lsrf	??_LCDPutStr3+1,f
   826  07AB  0CFA               	rrf	??_LCDPutStr3,f
   827  07AC  087A               	movf	??_LCDPutStr3,w
   828  07AD  3C08               	sublw	8
   829  07AE  00FC               	movwf	??_LCDPutStr3+2
   830  07AF  087C               	movf	??_LCDPutStr3+2,w
   831  07B0  0020               	movlb	0	; select bank0
   832  07B1  00A2               	movwf	LCDPutStr3@x
   833  07B2                     l828:
   834                           
   835                           ;lcd.c: 172:     uint8_t y = ln;
   836  07B2  0879               	movf	LCDPutStr3@ln,w
   837  07B3  00FA               	movwf	??_LCDPutStr3
   838  07B4  087A               	movf	??_LCDPutStr3,w
   839  07B5  00A3               	movwf	LCDPutStr3@y
   840  07B6                     l830:
   841                           
   842                           ;lcd.c: 173:     if ((y > (2 -1)))
   843  07B6  3002               	movlw	2
   844  07B7  0223               	subwf	LCDPutStr3@y,w
   845  07B8  1C03               	skipc
   846  07B9  2FBB               	goto	u241
   847  07BA  2FBC               	goto	u240
   848  07BB                     u241:
   849  07BB  2FBD               	goto	l834
   850  07BC                     u240:
   851  07BC  2FFC               	goto	l61
   852  07BD                     l834:
   853                           
   854                           ;lcd.c: 177:     LCDPutCmd((y == 1) ? (0xC0 | x) : (0x80 | x));
   855  07BD  0323               	decf	LCDPutStr3@y,w
   856  07BE  1903               	btfsc	3,2
   857  07BF  2FC1               	goto	u251
   858  07C0  2FC2               	goto	u250
   859  07C1                     u251:
   860  07C1  2FC8               	goto	l838
   861  07C2                     u250:
   862  07C2                     l836:
   863  07C2  3080               	movlw	128
   864  07C3  0422               	iorwf	LCDPutStr3@x,w
   865  07C4  00A0               	movwf	_LCDPutStr3$121
   866  07C5  3000               	movlw	0
   867  07C6  00A1               	movwf	_LCDPutStr3$121+1
   868  07C7  2FCD               	goto	l840
   869  07C8                     l838:
   870  07C8  30C0               	movlw	192
   871  07C9  0422               	iorwf	LCDPutStr3@x,w
   872  07CA  00A0               	movwf	_LCDPutStr3$121
   873  07CB  3000               	movlw	0
   874  07CC  00A1               	movwf	_LCDPutStr3$121+1
   875  07CD                     l840:
   876  07CD  0820               	movf	_LCDPutStr3$121,w
   877  07CE  3186  26E6  3187   	fcall	_LCDPutCmd
   878  07D1                     l842:
   879                           
   880                           ;lcd.c: 178:     _delay((unsigned long)((5)*(1000000/4000.0)));
   881  07D1  30FA               	movlw	250
   882  07D2                     u327:
   883  07D2  3200               	nop2
   884  07D3  0B89               	decfsz	9,f
   885  07D4  2FD2               	goto	u327
   886  07D5                     l844:
   887                           
   888                           ;lcd.c: 180:     uint8_t i=0;
   889  07D5  0020               	movlb	0	; select bank0
   890  07D6  01A4               	clrf	LCDPutStr3@i
   891                           
   892                           ;lcd.c: 181:     while (str[i])
   893  07D7  2FEC               	goto	l850
   894  07D8                     l846:
   895                           
   896                           ;lcd.c: 182:     {;lcd.c: 183:         LCDPutChar(str[i++]);
   897  07D8  0878               	movf	LCDPutStr3@str+1,w
   898  07D9  00FB               	movwf	??_LCDPutStr3+1
   899  07DA  0877               	movf	LCDPutStr3@str,w
   900  07DB  00FA               	movwf	??_LCDPutStr3
   901  07DC  0824               	movf	LCDPutStr3@i,w
   902  07DD  077A               	addwf	??_LCDPutStr3,w
   903  07DE  0084               	movwf	4
   904  07DF  087B               	movf	??_LCDPutStr3+1,w
   905  07E0  1803               	skipnc
   906  07E1  0A7B               	incf	??_LCDPutStr3+1,w
   907  07E2  0085               	movwf	5
   908  07E3  0800               	movf	0,w	;code access
   909  07E4  3186  26C9  3187   	fcall	_LCDPutChar
   910  07E7                     l848:
   911  07E7  3001               	movlw	1
   912  07E8  00FA               	movwf	??_LCDPutStr3
   913  07E9  087A               	movf	??_LCDPutStr3,w
   914  07EA  0020               	movlb	0	; select bank0
   915  07EB  07A4               	addwf	LCDPutStr3@i,f
   916  07EC                     l850:
   917                           
   918                           ;lcd.c: 181:     while (str[i])
   919  07EC  0878               	movf	LCDPutStr3@str+1,w
   920  07ED  00FB               	movwf	??_LCDPutStr3+1
   921  07EE  0877               	movf	LCDPutStr3@str,w
   922  07EF  00FA               	movwf	??_LCDPutStr3
   923  07F0  0824               	movf	LCDPutStr3@i,w
   924  07F1  077A               	addwf	??_LCDPutStr3,w
   925  07F2  0084               	movwf	4
   926  07F3  087B               	movf	??_LCDPutStr3+1,w
   927  07F4  1803               	skipnc
   928  07F5  0A7B               	incf	??_LCDPutStr3+1,w
   929  07F6  0085               	movwf	5
   930  07F7  0012               	moviw fsr0++
   931  07F8  1D03               	btfss	3,2
   932  07F9  2FFB               	goto	u261
   933  07FA  2FFC               	goto	u260
   934  07FB                     u261:
   935  07FB  2FD8               	goto	l846
   936  07FC                     u260:
   937  07FC                     l61:
   938  07FC  0008               	return
   939  07FD                     __end_of_LCDPutStr3:
   940                           
   941                           	psect	text3
   942  0697                     __ptext3:	
   943 ;; *************** function _strlen *****************
   944 ;; Defined at:
   945 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\strlen.c"
   946 ;; Parameters:    Size  Location     Type
   947 ;;  s               2    0[COMMON] PTR const unsigned char 
   948 ;;		 -> STR_2(9), 
   949 ;; Auto vars:     Size  Location     Type
   950 ;;  a               2    3[COMMON] PTR const unsigned char 
   951 ;;		 -> STR_2(9), 
   952 ;; Return value:  Size  Location     Type
   953 ;;                  2    0[COMMON] unsigned int 
   954 ;; Registers used:
   955 ;;		wreg, fsr0l, fsr0h, status,2, status,0
   956 ;; Tracked objects:
   957 ;;		On entry : 0/0
   958 ;;		On exit  : 0/0
   959 ;;		Unchanged: 0/0
   960 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
   961 ;;      Params:         2       0       0       0       0       0       0       0
   962 ;;      Locals:         2       0       0       0       0       0       0       0
   963 ;;      Temps:          1       0       0       0       0       0       0       0
   964 ;;      Totals:         5       0       0       0       0       0       0       0
   965 ;;Total ram usage:        5 bytes
   966 ;; Hardware stack levels used: 1
   967 ;; This function calls:
   968 ;;		Nothing
   969 ;; This function is called by:
   970 ;;		_LCDPutStr3
   971 ;; This function uses a non-reentrant model
   972 ;;
   973                           
   974  0697                     _strlen:	
   975                           ;psect for function _strlen
   976                           
   977  0697                     l778:	
   978                           ;incstack = 0
   979                           ; Regs used in _strlen: [wreg-fsr0h+status,2+status,0]
   980                           
   981  0697  0871               	movf	strlen@s+1,w
   982  0698  00F4               	movwf	strlen@a+1
   983  0699  0870               	movf	strlen@s,w
   984  069A  00F3               	movwf	strlen@a
   985  069B  2EA0               	goto	l782
   986  069C                     l780:
   987  069C  3001               	movlw	1
   988  069D  07F0               	addwf	strlen@s,f
   989  069E  3000               	movlw	0
   990  069F  3DF1               	addwfc	strlen@s+1,f
   991  06A0                     l782:
   992  06A0  0870               	movf	strlen@s,w
   993  06A1  0084               	movwf	4
   994  06A2  0871               	movf	strlen@s+1,w
   995  06A3  0085               	movwf	5
   996  06A4  0012               	moviw fsr0++
   997  06A5  1D03               	btfss	3,2
   998  06A6  2EA8               	goto	u191
   999  06A7  2EA9               	goto	u190
  1000  06A8                     u191:
  1001  06A8  2E9C               	goto	l780
  1002  06A9                     u190:
  1003  06A9                     l784:
  1004  06A9  0873               	movf	strlen@a,w
  1005  06AA  0270               	subwf	strlen@s,w
  1006  06AB  00F0               	movwf	?_strlen
  1007  06AC  0874               	movf	strlen@a+1,w
  1008  06AD  3B71               	subwfb	strlen@s+1,w
  1009  06AE  00F1               	movwf	?_strlen+1
  1010  06AF                     l608:
  1011  06AF  0008               	return
  1012  06B0                     __end_of_strlen:
  1013                           
  1014                           	psect	text4
  1015  0745                     __ptext4:	
  1016 ;; *************** function _LCDPutStr2 *****************
  1017 ;; Defined at:
  1018 ;;		line 150 in file "lcd.c"
  1019 ;; Parameters:    Size  Location     Type
  1020 ;;  str             2    7[COMMON] PTR const unsigned char 
  1021 ;;		 -> STR_1(15), 
  1022 ;;  pos             1    9[COMMON] unsigned char 
  1023 ;;  ln              1   10[COMMON] unsigned char 
  1024 ;; Auto vars:     Size  Location     Type
  1025 ;;  h               1    2[BANK0 ] unsigned char 
  1026 ;;  x               1    5[BANK0 ] unsigned char 
  1027 ;;  i               1    4[BANK0 ] unsigned char 
  1028 ;;  y               1    3[BANK0 ] unsigned char 
  1029 ;; Return value:  Size  Location     Type
  1030 ;;                  1    wreg      void 
  1031 ;; Registers used:
  1032 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1033 ;; Tracked objects:
  1034 ;;		On entry : 0/0
  1035 ;;		On exit  : 0/0
  1036 ;;		Unchanged: 0/0
  1037 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  1038 ;;      Params:         4       0       0       0       0       0       0       0
  1039 ;;      Locals:         0       6       0       0       0       0       0       0
  1040 ;;      Temps:          3       0       0       0       0       0       0       0
  1041 ;;      Totals:         7       6       0       0       0       0       0       0
  1042 ;;Total ram usage:       13 bytes
  1043 ;; Hardware stack levels used: 1
  1044 ;; Hardware stack levels required when called: 2
  1045 ;; This function calls:
  1046 ;;		_LCDPutChar
  1047 ;;		_LCDPutCmd
  1048 ;; This function is called by:
  1049 ;;		_main
  1050 ;; This function uses a non-reentrant model
  1051 ;;
  1052                           
  1053  0745                     _LCDPutStr2:	
  1054                           ;psect for function _LCDPutStr2
  1055                           
  1056  0745                     l802:	
  1057                           ;incstack = 0
  1058                           ; Regs used in _LCDPutStr2: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1059                           
  1060                           
  1061                           ;lcd.c: 150: void LCDPutStr2(const char *str , char pos , char ln);lcd.c: 151: {;lcd.c: 
      +                          152:     uint8_t x = pos;
  1062  0745  0879               	movf	LCDPutStr2@pos,w
  1063  0746  00FB               	movwf	??_LCDPutStr2
  1064  0747  087B               	movf	??_LCDPutStr2,w
  1065  0748  0020               	movlb	0	; select bank0
  1066  0749  00A5               	movwf	LCDPutStr2@x
  1067                           
  1068                           ;lcd.c: 153:     uint8_t y = ln;
  1069  074A  087A               	movf	LCDPutStr2@ln,w
  1070  074B  00FB               	movwf	??_LCDPutStr2
  1071  074C  087B               	movf	??_LCDPutStr2,w
  1072  074D  00A3               	movwf	LCDPutStr2@y
  1073                           
  1074                           ;lcd.c: 154:     if ((y > (2 -1)) || (x > (16 -1)))
  1075  074E  3002               	movlw	2
  1076  074F  0223               	subwf	LCDPutStr2@y,w
  1077  0750  1803               	skipnc
  1078  0751  2F53               	goto	u201
  1079  0752  2F54               	goto	u200
  1080  0753                     u201:
  1081  0753  2F9E               	goto	l50
  1082  0754                     u200:
  1083  0754                     l804:
  1084  0754  3010               	movlw	16
  1085  0755  0225               	subwf	LCDPutStr2@x,w
  1086  0756  1C03               	skipc
  1087  0757  2F59               	goto	u211
  1088  0758  2F5A               	goto	u210
  1089  0759                     u211:
  1090  0759  2F5B               	goto	l806
  1091  075A                     u210:
  1092  075A  2F9E               	goto	l50
  1093  075B                     l806:
  1094                           
  1095                           ;lcd.c: 158:     LCDPutCmd((y == 1) ? (0xC0 | x) : (0x80 | x));
  1096  075B  0323               	decf	LCDPutStr2@y,w
  1097  075C  1903               	btfsc	3,2
  1098  075D  2F5F               	goto	u221
  1099  075E  2F60               	goto	u220
  1100  075F                     u221:
  1101  075F  2F66               	goto	l810
  1102  0760                     u220:
  1103  0760                     l808:
  1104  0760  3080               	movlw	128
  1105  0761  0425               	iorwf	LCDPutStr2@x,w
  1106  0762  00A0               	movwf	_LCDPutStr2$113
  1107  0763  3000               	movlw	0
  1108  0764  00A1               	movwf	_LCDPutStr2$113+1
  1109  0765  2F6B               	goto	l812
  1110  0766                     l810:
  1111  0766  30C0               	movlw	192
  1112  0767  0425               	iorwf	LCDPutStr2@x,w
  1113  0768  00A0               	movwf	_LCDPutStr2$113
  1114  0769  3000               	movlw	0
  1115  076A  00A1               	movwf	_LCDPutStr2$113+1
  1116  076B                     l812:
  1117  076B  0820               	movf	_LCDPutStr2$113,w
  1118  076C  3186  26E6  3187   	fcall	_LCDPutCmd
  1119  076F                     l814:
  1120                           
  1121                           ;lcd.c: 159:     _delay((unsigned long)((5)*(1000000/4000.0)));
  1122  076F  30FA               	movlw	250
  1123  0770                     u337:
  1124  0770  3200               	nop2
  1125  0771  0B89               	decfsz	9,f
  1126  0772  2F70               	goto	u337
  1127  0773                     l816:
  1128                           
  1129                           ;lcd.c: 161:     uint8_t i=0;
  1130  0773  0020               	movlb	0	; select bank0
  1131  0774  01A4               	clrf	LCDPutStr2@i
  1132                           
  1133                           ;lcd.c: 162:     while (str[i])
  1134  0775  2F8D               	goto	l824
  1135  0776                     l818:
  1136                           
  1137                           ;lcd.c: 163:     {;lcd.c: 164:         uint8_t h = i++;
  1138  0776  0824               	movf	LCDPutStr2@i,w
  1139  0777  00FB               	movwf	??_LCDPutStr2
  1140  0778  087B               	movf	??_LCDPutStr2,w
  1141  0779  00A2               	movwf	LCDPutStr2@h
  1142  077A                     l820:
  1143  077A  3001               	movlw	1
  1144  077B  00FB               	movwf	??_LCDPutStr2
  1145  077C  087B               	movf	??_LCDPutStr2,w
  1146  077D  07A4               	addwf	LCDPutStr2@i,f
  1147  077E                     l822:
  1148                           
  1149                           ;lcd.c: 165:         LCDPutChar(str[h]);
  1150  077E  0878               	movf	LCDPutStr2@str+1,w
  1151  077F  00FC               	movwf	??_LCDPutStr2+1
  1152  0780  0877               	movf	LCDPutStr2@str,w
  1153  0781  00FB               	movwf	??_LCDPutStr2
  1154  0782  0822               	movf	LCDPutStr2@h,w
  1155  0783  077B               	addwf	??_LCDPutStr2,w
  1156  0784  0084               	movwf	4
  1157  0785  087C               	movf	??_LCDPutStr2+1,w
  1158  0786  1803               	skipnc
  1159  0787  0A7C               	incf	??_LCDPutStr2+1,w
  1160  0788  0085               	movwf	5
  1161  0789  0800               	movf	0,w	;code access
  1162  078A  3186  26C9  3187   	fcall	_LCDPutChar
  1163  078D                     l824:
  1164                           
  1165                           ;lcd.c: 162:     while (str[i])
  1166  078D  0878               	movf	LCDPutStr2@str+1,w
  1167  078E  00FC               	movwf	??_LCDPutStr2+1
  1168  078F  0877               	movf	LCDPutStr2@str,w
  1169  0790  00FB               	movwf	??_LCDPutStr2
  1170  0791  0020               	movlb	0	; select bank0
  1171  0792  0824               	movf	LCDPutStr2@i,w
  1172  0793  077B               	addwf	??_LCDPutStr2,w
  1173  0794  0084               	movwf	4
  1174  0795  087C               	movf	??_LCDPutStr2+1,w
  1175  0796  1803               	skipnc
  1176  0797  0A7C               	incf	??_LCDPutStr2+1,w
  1177  0798  0085               	movwf	5
  1178  0799  0012               	moviw fsr0++
  1179  079A  1D03               	btfss	3,2
  1180  079B  2F9D               	goto	u231
  1181  079C  2F9E               	goto	u230
  1182  079D                     u231:
  1183  079D  2F76               	goto	l818
  1184  079E                     u230:
  1185  079E                     l50:
  1186  079E  0008               	return
  1187  079F                     __end_of_LCDPutStr2:
  1188                           
  1189                           	psect	text5
  1190  06E6                     __ptext5:	
  1191 ;; *************** function _LCDPutCmd *****************
  1192 ;; Defined at:
  1193 ;;		line 119 in file "lcd.c"
  1194 ;; Parameters:    Size  Location     Type
  1195 ;;  ch              1    wreg     unsigned char 
  1196 ;; Auto vars:     Size  Location     Type
  1197 ;;  ch              1    6[COMMON] unsigned char 
  1198 ;; Return value:  Size  Location     Type
  1199 ;;                  1    wreg      void 
  1200 ;; Registers used:
  1201 ;;		wreg, status,2, status,0, pclath, cstack
  1202 ;; Tracked objects:
  1203 ;;		On entry : 0/0
  1204 ;;		On exit  : 0/0
  1205 ;;		Unchanged: 0/0
  1206 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  1207 ;;      Params:         0       0       0       0       0       0       0       0
  1208 ;;      Locals:         1       0       0       0       0       0       0       0
  1209 ;;      Temps:          2       0       0       0       0       0       0       0
  1210 ;;      Totals:         3       0       0       0       0       0       0       0
  1211 ;;Total ram usage:        3 bytes
  1212 ;; Hardware stack levels used: 1
  1213 ;; Hardware stack levels required when called: 1
  1214 ;; This function calls:
  1215 ;;		_LCDWriteNibble
  1216 ;; This function is called by:
  1217 ;;		_LCD_Initialize
  1218 ;;		_LCDPutStr2
  1219 ;;		_LCDPutStr3
  1220 ;;		_LCDGoto
  1221 ;; This function uses a non-reentrant model
  1222 ;;
  1223                           
  1224  06E6                     _LCDPutCmd:	
  1225                           ;psect for function _LCDPutCmd
  1226                           
  1227                           
  1228                           ;incstack = 0
  1229                           ; Regs used in _LCDPutCmd: [wreg+status,2+status,0+pclath+cstack]
  1230                           ;LCDPutCmd@ch stored from wreg
  1231  06E6  00F6               	movwf	LCDPutCmd@ch
  1232  06E7                     l760:
  1233                           
  1234                           ;lcd.c: 119: void LCDPutCmd(uint8_t ch);lcd.c: 120: {;lcd.c: 121:     _delay((unsigned l
      +                          ong)((5)*(1000000/4000.0)));
  1235  06E7  30FA               	movlw	250
  1236  06E8                     u347:
  1237  06E8  3200               	nop2
  1238  06E9  0B89               	decfsz	9,f
  1239  06EA  2EE8               	goto	u347
  1240  06EB                     l762:
  1241                           
  1242                           ;lcd.c: 124:     LCDWriteNibble(ch,0);
  1243  06EB  01F0               	clrf	LCDWriteNibble@rs
  1244  06EC  0876               	movf	LCDPutCmd@ch,w
  1245  06ED  3187  2705  3186   	fcall	_LCDWriteNibble
  1246  06F0                     l764:
  1247                           
  1248                           ;lcd.c: 127:     ch = (ch << 4);
  1249  06F0  0876               	movf	LCDPutCmd@ch,w
  1250  06F1  00F4               	movwf	??_LCDPutCmd
  1251  06F2  3003               	movlw	3
  1252  06F3                     u175:
  1253  06F3  35F4               	lslf	??_LCDPutCmd,f
  1254  06F4  3EFF               	addlw	-1
  1255  06F5  1D03               	skipz
  1256  06F6  2EF3               	goto	u175
  1257  06F7  3574               	lslf	??_LCDPutCmd,w
  1258  06F8  00F5               	movwf	??_LCDPutCmd+1
  1259  06F9  0875               	movf	??_LCDPutCmd+1,w
  1260  06FA  00F6               	movwf	LCDPutCmd@ch
  1261  06FB                     l766:
  1262                           
  1263                           ;lcd.c: 129:     _delay((unsigned long)((1)*(1000000/4000.0)));
  1264  06FB  3053               	movlw	83
  1265  06FC                     u357:
  1266  06FC  0B89               	decfsz	9,f
  1267  06FD  2EFC               	goto	u357
  1268  06FE  0000               	nop
  1269  06FF                     l768:
  1270                           
  1271                           ;lcd.c: 132:     LCDWriteNibble(ch,0);
  1272  06FF  01F0               	clrf	LCDWriteNibble@rs
  1273  0700  0876               	movf	LCDPutCmd@ch,w
  1274  0701  3187  2705  3186   	fcall	_LCDWriteNibble
  1275  0704                     l38:
  1276  0704  0008               	return
  1277  0705                     __end_of_LCDPutCmd:
  1278                           
  1279                           	psect	text6
  1280  06C9                     __ptext6:	
  1281 ;; *************** function _LCDPutChar *****************
  1282 ;; Defined at:
  1283 ;;		line 104 in file "lcd.c"
  1284 ;; Parameters:    Size  Location     Type
  1285 ;;  ch              1    wreg     unsigned char 
  1286 ;; Auto vars:     Size  Location     Type
  1287 ;;  ch              1    6[COMMON] unsigned char 
  1288 ;; Return value:  Size  Location     Type
  1289 ;;                  1    wreg      void 
  1290 ;; Registers used:
  1291 ;;		wreg, status,2, status,0, pclath, cstack
  1292 ;; Tracked objects:
  1293 ;;		On entry : 0/0
  1294 ;;		On exit  : 0/0
  1295 ;;		Unchanged: 0/0
  1296 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  1297 ;;      Params:         0       0       0       0       0       0       0       0
  1298 ;;      Locals:         1       0       0       0       0       0       0       0
  1299 ;;      Temps:          2       0       0       0       0       0       0       0
  1300 ;;      Totals:         3       0       0       0       0       0       0       0
  1301 ;;Total ram usage:        3 bytes
  1302 ;; Hardware stack levels used: 1
  1303 ;; Hardware stack levels required when called: 1
  1304 ;; This function calls:
  1305 ;;		_LCDWriteNibble
  1306 ;; This function is called by:
  1307 ;;		_LCDPutStr2
  1308 ;;		_LCDPutStr3
  1309 ;;		_LCDPutStr
  1310 ;; This function uses a non-reentrant model
  1311 ;;
  1312                           
  1313  06C9                     _LCDPutChar:	
  1314                           ;psect for function _LCDPutChar
  1315                           
  1316                           
  1317                           ;incstack = 0
  1318                           ; Regs used in _LCDPutChar: [wreg+status,2+status,0+pclath+cstack]
  1319                           ;LCDPutChar@ch stored from wreg
  1320  06C9  00F6               	movwf	LCDPutChar@ch
  1321  06CA                     l770:
  1322                           
  1323                           ;lcd.c: 104: void LCDPutChar(uint8_t ch);lcd.c: 105: {;lcd.c: 106:     _delay((unsigned 
      +                          long)((5)*(1000000/4000.0)));
  1324  06CA  30FA               	movlw	250
  1325  06CB                     u367:
  1326  06CB  3200               	nop2
  1327  06CC  0B89               	decfsz	9,f
  1328  06CD  2ECB               	goto	u367
  1329  06CE                     l772:
  1330                           
  1331                           ;lcd.c: 109:     LCDWriteNibble(ch,1);
  1332  06CE  01F0               	clrf	LCDWriteNibble@rs
  1333  06CF  0AF0               	incf	LCDWriteNibble@rs,f
  1334  06D0  0876               	movf	LCDPutChar@ch,w
  1335  06D1  3187  2705  3186   	fcall	_LCDWriteNibble
  1336  06D4                     l774:
  1337                           
  1338                           ;lcd.c: 112:     ch = (ch << 4);
  1339  06D4  0876               	movf	LCDPutChar@ch,w
  1340  06D5  00F4               	movwf	??_LCDPutChar
  1341  06D6  3003               	movlw	3
  1342  06D7                     u185:
  1343  06D7  35F4               	lslf	??_LCDPutChar,f
  1344  06D8  3EFF               	addlw	-1
  1345  06D9  1D03               	skipz
  1346  06DA  2ED7               	goto	u185
  1347  06DB  3574               	lslf	??_LCDPutChar,w
  1348  06DC  00F5               	movwf	??_LCDPutChar+1
  1349  06DD  0875               	movf	??_LCDPutChar+1,w
  1350  06DE  00F6               	movwf	LCDPutChar@ch
  1351  06DF                     l776:
  1352                           
  1353                           ;lcd.c: 115:     LCDWriteNibble(ch,1);
  1354  06DF  01F0               	clrf	LCDWriteNibble@rs
  1355  06E0  0AF0               	incf	LCDWriteNibble@rs,f
  1356  06E1  0876               	movf	LCDPutChar@ch,w
  1357  06E2  3187  2705  3186   	fcall	_LCDWriteNibble
  1358  06E5                     l35:
  1359  06E5  0008               	return
  1360  06E6                     __end_of_LCDPutChar:
  1361                           
  1362                           	psect	text7
  1363  0705                     __ptext7:	
  1364 ;; *************** function _LCDWriteNibble *****************
  1365 ;; Defined at:
  1366 ;;		line 77 in file "lcd.c"
  1367 ;; Parameters:    Size  Location     Type
  1368 ;;  ch              1    wreg     unsigned char 
  1369 ;;  rs              1    0[COMMON] unsigned char 
  1370 ;; Auto vars:     Size  Location     Type
  1371 ;;  ch              1    3[COMMON] unsigned char 
  1372 ;; Return value:  Size  Location     Type
  1373 ;;                  1    wreg      void 
  1374 ;; Registers used:
  1375 ;;		wreg, status,2, status,0
  1376 ;; Tracked objects:
  1377 ;;		On entry : 0/0
  1378 ;;		On exit  : 0/0
  1379 ;;		Unchanged: 0/0
  1380 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  1381 ;;      Params:         1       0       0       0       0       0       0       0
  1382 ;;      Locals:         1       0       0       0       0       0       0       0
  1383 ;;      Temps:          2       0       0       0       0       0       0       0
  1384 ;;      Totals:         4       0       0       0       0       0       0       0
  1385 ;;Total ram usage:        4 bytes
  1386 ;; Hardware stack levels used: 1
  1387 ;; This function calls:
  1388 ;;		Nothing
  1389 ;; This function is called by:
  1390 ;;		_LCDPutChar
  1391 ;;		_LCDPutCmd
  1392 ;; This function uses a non-reentrant model
  1393 ;;
  1394                           
  1395  0705                     _LCDWriteNibble:	
  1396                           ;psect for function _LCDWriteNibble
  1397                           
  1398                           
  1399                           ;incstack = 0
  1400                           ; Regs used in _LCDWriteNibble: [wreg+status,2+status,0]
  1401                           ;LCDWriteNibble@ch stored from wreg
  1402  0705  00F3               	movwf	LCDWriteNibble@ch
  1403  0706                     l746:
  1404                           
  1405                           ;lcd.c: 77: void LCDWriteNibble(uint8_t ch,uint8_t rs);lcd.c: 78: {;lcd.c: 80:     ch = 
      +                          (ch >> 4);
  1406  0706  0873               	movf	LCDWriteNibble@ch,w
  1407  0707  00F1               	movwf	??_LCDWriteNibble
  1408  0708  3004               	movlw	4
  1409  0709                     u165:
  1410  0709  36F1               	lsrf	??_LCDWriteNibble,f
  1411  070A  0B89               	decfsz	9,f
  1412  070B  2F09               	goto	u165
  1413  070C  0871               	movf	??_LCDWriteNibble,w
  1414  070D  00F2               	movwf	??_LCDWriteNibble+1
  1415  070E  0872               	movf	??_LCDWriteNibble+1,w
  1416  070F  00F3               	movwf	LCDWriteNibble@ch
  1417  0710                     l748:
  1418                           
  1419                           ;lcd.c: 83:     ch = (ch & 0x0F);
  1420  0710  0873               	movf	LCDWriteNibble@ch,w
  1421  0711  390F               	andlw	15
  1422  0712  00F1               	movwf	??_LCDWriteNibble
  1423  0713  0871               	movf	??_LCDWriteNibble,w
  1424  0714  00F3               	movwf	LCDWriteNibble@ch
  1425  0715                     l750:
  1426                           
  1427                           ;lcd.c: 86:     PORTC = (PORTC & 0xF0);
  1428  0715  0020               	movlb	0	; select bank0
  1429  0716  080E               	movf	14,w	;volatile
  1430  0717  39F0               	andlw	240
  1431  0718  008E               	movwf	14	;volatile
  1432                           
  1433                           ;lcd.c: 89:     PORTC = (PORTC | ch);
  1434  0719  080E               	movf	14,w	;volatile
  1435  071A  0473               	iorwf	LCDWriteNibble@ch,w
  1436  071B  008E               	movwf	14	;volatile
  1437  071C                     l752:
  1438                           
  1439                           ;lcd.c: 92:     PORTCbits.RC4 = rs;
  1440  071C  0C70               	rrf	LCDWriteNibble@rs,w
  1441  071D  1C03               	skipc
  1442  071E  120E               	bcf	14,4	;volatile
  1443  071F  1803               	skipnc
  1444  0720  160E               	bsf	14,4	;volatile
  1445  0721                     l754:
  1446                           
  1447                           ;lcd.c: 95:     PORTCbits.RC5 = 0;
  1448  0721  128E               	bcf	14,5	;volatile
  1449  0722                     l756:
  1450                           
  1451                           ;lcd.c: 98:     PORTCbits.RC6 = 1;
  1452  0722  170E               	bsf	14,6	;volatile
  1453  0723                     l758:
  1454                           
  1455                           ;lcd.c: 101:     PORTCbits.RC6 = 0;
  1456  0723  130E               	bcf	14,6	;volatile
  1457  0724                     l32:
  1458  0724  0008               	return
  1459  0725                     __end_of_LCDWriteNibble:
  1460  007E                     btemp	set	126	;btemp
  1461  007E                     wtemp0	set	126
  1462                           
  1463                           	psect	idloc
  1464                           
  1465                           ;Config register IDLOC0 @ 0x8000
  1466                           ;	unspecified, using default values
  1467  8000                     	org	32768
  1468  8000  3FFF               	dw	16383
  1469                           
  1470                           ;Config register IDLOC1 @ 0x8001
  1471                           ;	unspecified, using default values
  1472  8001                     	org	32769
  1473  8001  3FFF               	dw	16383
  1474                           
  1475                           ;Config register IDLOC2 @ 0x8002
  1476                           ;	unspecified, using default values
  1477  8002                     	org	32770
  1478  8002  3FFF               	dw	16383
  1479                           
  1480                           ;Config register IDLOC3 @ 0x8003
  1481                           ;	unspecified, using default values
  1482  8003                     	org	32771
  1483  8003  3FFF               	dw	16383
  1484                           
  1485                           	psect	config
  1486                           
  1487                           ;Config register CONFIG1 @ 0x8007
  1488                           ;	Oscillator Selection Bits
  1489                           ;	FOSC = INTOSC, INTOSC oscillator: I/O function on CLKIN pin
  1490                           ;	Watchdog Timer Enable
  1491                           ;	WDTE = OFF, WDT disabled
  1492                           ;	Power-up Timer Enable
  1493                           ;	PWRTE = OFF, PWRT disabled
  1494                           ;	MCLR Pin Function Select
  1495                           ;	MCLRE = OFF, MCLR/VPP pin function is digital input
  1496                           ;	Flash Program Memory Code Protection
  1497                           ;	CP = OFF, Program memory code protection is disabled
  1498                           ;	Brown-out Reset Enable
  1499                           ;	BOREN = OFF, Brown-out Reset disabled
  1500                           ;	Clock Out Enable
  1501                           ;	CLKOUTEN = OFF, CLKOUT function is disabled. I/O or oscillator function on the CLKOUT 
      +                          pin
  1502                           ;	Internal/External Switchover Mode
  1503                           ;	IESO = OFF, Internal/External Switchover Mode is disabled
  1504                           ;	Fail-Safe Clock Monitor Enable
  1505                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
  1506  8007                     	org	32775
  1507  8007  09A4               	dw	2468
  1508                           
  1509                           ;Config register CONFIG2 @ 0x8008
  1510                           ;	Flash Memory Self-Write Protection
  1511                           ;	WRT = OFF, Write protection off
  1512                           ;	Stack Overflow/Underflow Reset Enable
  1513                           ;	STVREN = OFF, Stack Overflow or Underflow will not cause a Reset
  1514                           ;	Brown-out Reset Voltage Selection
  1515                           ;	BORV = LO, Brown-out Reset Voltage (Vbor), low trip point selected.
  1516                           ;	Low-Power Brown Out Reset
  1517                           ;	LPBOR = OFF, Low-Power BOR is disabled
  1518                           ;	Low-Voltage Programming Enable
  1519                           ;	LVP = OFF, High-voltage on MCLR/VPP must be used for programming
  1520  8008                     	org	32776
  1521  8008  1DFF               	dw	7679

Data Sizes:
    Strings     24
    Constant    0
    Data        0
    BSS         0
    Persistent  32
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80      6       6
    BANK1            80      0       0
    BANK2            80      0       0
    BANK3            80      0       0
    BANK4            80      0       0
    BANK5            80      0       0
    BANK6            16      0       0

Pointer List with Targets:

    strlen@s	PTR const unsigned char  size(2) Largest target is 9
		 -> STR_2(CODE[9]), 

    strlen@a	PTR const unsigned char  size(2) Largest target is 9
		 -> STR_2(CODE[9]), 

    LCDPutStr3@str	PTR const unsigned char  size(2) Largest target is 9
		 -> STR_2(CODE[9]), 

    LCDPutStr2@str	PTR const unsigned char  size(2) Largest target is 15
		 -> STR_1(CODE[15]), 


Critical Paths under _main in COMMON

    _main->_LCDPutStr2
    _LCD_Initialize->_LCDPutCmd
    _LCDPutStr3->_LCDPutChar
    _LCDPutStr3->_LCDPutCmd
    _LCDPutStr2->_LCDPutChar
    _LCDPutStr2->_LCDPutCmd
    _LCDPutCmd->_LCDWriteNibble
    _LCDPutChar->_LCDWriteNibble

Critical Paths under _main in BANK0

    _main->_LCDPutStr2

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0    3392
                         _LCDPutStr2
                         _LCDPutStr3
                     _LCD_Initialize
 ---------------------------------------------------------------------------------
 (1) _LCD_Initialize                                       1     1      0     461
                                              7 COMMON     1     1      0
                          _LCDPutCmd
 ---------------------------------------------------------------------------------
 (1) _LCDPutStr3                                          11     8      3    1488
                                              7 COMMON     6     3      3
                                              0 BANK0      5     5      0
                         _LCDPutChar
                          _LCDPutCmd
                             _strlen
 ---------------------------------------------------------------------------------
 (2) _strlen                                               5     3      2     166
                                              0 COMMON     5     3      2
 ---------------------------------------------------------------------------------
 (1) _LCDPutStr2                                          13     9      4    1443
                                              7 COMMON     7     3      4
                                              0 BANK0      6     6      0
                         _LCDPutChar
                          _LCDPutCmd
 ---------------------------------------------------------------------------------
 (2) _LCDPutCmd                                            3     3      0     461
                                              4 COMMON     3     3      0
                     _LCDWriteNibble
 ---------------------------------------------------------------------------------
 (2) _LCDPutChar                                           3     3      0     461
                                              4 COMMON     3     3      0
                     _LCDWriteNibble
 ---------------------------------------------------------------------------------
 (3) _LCDWriteNibble                                       4     3      1     394
                                              0 COMMON     4     3      1
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _LCDPutStr2
     _LCDPutChar
       _LCDWriteNibble
     _LCDPutCmd
       _LCDWriteNibble
   _LCDPutStr3
     _LCDPutChar
     _LCDPutCmd
     _strlen
   _LCD_Initialize
     _LCDPutCmd

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             1F0      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      E       E       2      100.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
ABS                  0      0       0       4        0.0%
BITBANK0            50      0       0       5        0.0%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BANK0               50      6       6       6        7.5%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BITBANK1            50      0       0       7        0.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BANK1               50      0       0       8        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BITBANK2            50      0       0       9        0.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BANK2               50      0       0      10        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BITBANK3            50      0       0      11        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BANK3               50      0       0      12        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BITBANK4            50      0       0      13        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BANK4               50      0       0      14        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BITBANK5            50      0       0      15        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BANK5               50      0       0      16        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BITBANK6            10      0       0      17        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BANK6               10      0       0      18        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
DATA                 0      0       0      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V2.36 build 20220127204148 
Symbol Table                                                                                   Thu Apr 28 13:19:25 2022

         _LCD_Initialize 0725                       l11 06C6                       l12 06C6  
                     l32 0724                       l50 079E                       l35 06E5  
            ?_LCDPutChar 0070                       l61 07FC                       l29 0744  
                     l38 0704              ?_LCDPutStr2 0077              ?_LCDPutStr3 0077  
                    l608 06AF                      l800 0740                      l810 0766  
                    l802 0745                      l820 077A                      l812 076B  
                    l804 0754                      l750 0715                      l822 077E  
                    l814 076F                      l806 075B                      l830 07B6  
                    l752 071C                      l760 06E7                      l824 078D  
                    l816 0773                      l808 0760                      l840 07CD  
                    l754 0721                      l746 0706                      l770 06CA  
                    l762 06EB                      l818 0776                      l850 07EC  
                    l842 07D1                      l834 07BD                      l826 079F  
                    l756 0722                      l748 0710                      l772 06CE  
                    l764 06F0                      l780 069C                      l844 07D5  
                    l836 07C2                      l828 07B2                      l852 06B0  
                    l758 0723                      l774 06D4                      l766 06FB  
                    l782 06A0                      l846 07D8                      l838 07C8  
                    l790 0729                      l854 06B3                      l776 06DF  
                    l768 06FF                      l784 06A9                      l848 07E7  
                    l792 0730                      l856 06BD                      l778 0697  
                    l794 0734                      l796 0738                      l788 0725  
                    l798 073C                      u200 0754                      u201 0753  
                    u210 075A                      u211 0759                      u220 0760  
                    u221 075F                      u230 079E                      u231 079D  
                    u240 07BC                      u241 07BB                      u250 07C2  
                    u251 07C1                      u260 07FC                      u165 0709  
                    u261 07FB                      u317 072C                      u190 06A9  
                    u175 06F3                      u191 06A8                      u327 07D2  
                    u185 06D7                      u337 0770                      u347 06E8  
                    u357 06FC                      u367 06CB                      wreg 0009  
                   STR_1 0800                     STR_2 080F                     _main 06B0  
                   fsr0h 0005                     indf0 0000                     fsr0l 0004  
                   btemp 007E                     start 0002   __end_of_LCD_Initialize 0745  
            LCDPutCmd@ch 0076           _LCDPutStr2$113 0020           _LCDPutStr3$121 0020  
                  ?_main 0070              LCDPutStr2@h 0022              LCDPutStr2@i 0024  
            LCDPutStr3@i 0024              LCDPutStr2@x 0025              LCDPutStr2@y 0023  
            LCDPutStr3@x 0022              LCDPutStr3@y 0023                    _PORTC 000E  
                  _TRISC 008E                    status 0003                    wtemp0 007E  
        ?_LCD_Initialize 0070          __initialization 07FD             __end_of_main 06C9  
                 ??_main 007E        __end_of_LCDPutCmd 0705             LCDPutChar@ch 0076  
           LCDPutStr2@ln 007A             LCDPutStr3@ln 0079           _LCDWriteNibble 0705  
                 _strlen 0697   __end_of_LCDWriteNibble 0725  __end_of__initialization 07FD  
         __pcstackCOMMON 0070             ??_LCDPutChar 0074             ??_LCDPutStr2 007B  
           ??_LCDPutStr3 007A          ?_LCDWriteNibble 0070       __end_of_LCDPutChar 06E6  
     __end_of_LCDPutStr2 079F       __end_of_LCDPutStr3 07FD               __pmaintext 06B0  
                ?_strlen 0070            LCDPutStr2@pos 0079            LCDPutStr2@str 0077  
          LCDPutStr3@str 0077         ??_LCD_Initialize 0077                  __ptext1 0725  
                __ptext2 079F                  __ptext3 0697                  __ptext4 0745  
                __ptext5 06E6                  __ptext6 06C9                  __ptext7 0705  
              _LCDPutCmd 06E6     end_of_initialization 07FD                  strlen@a 0073  
                strlen@s 0070                _PORTCbits 000E               ?_LCDPutCmd 0070  
         __end_of_strlen 06B0      start_initialization 07FD         ??_LCDWriteNibble 0071  
               ??_strlen 0072                ___latbits 0002            __pcstackBANK0 0020  
            ??_LCDPutCmd 0074         LCDWriteNibble@ch 0073         LCDWriteNibble@rs 0070  
             _LCDPutChar 06C9               _LCDPutStr2 0745               _LCDPutStr3 079F  
          __pstringtext1 0800            __pstringtext2 080F            __pstringtext3 0000  
