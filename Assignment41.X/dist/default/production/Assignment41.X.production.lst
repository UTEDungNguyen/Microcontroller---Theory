

Microchip MPLAB XC8 Assembler V2.36 build 20220127204148 
                                                                                               Fri Apr 01 21:02:11 2022

Microchip MPLAB XC8 C Compiler v2.36 (Free license) build 20220127204148 Og1 
     1                           	processor	16F1509
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataBANK0,global,class=CODE,delta=2,noexec
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     7                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,noexec
     8                           	psect	inittext,global,class=CODE,delta=2
     9                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    10                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    11                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    12                           	psect	text1,local,class=CODE,merge=1,delta=2
    13                           	psect	text2,local,class=CODE,merge=1,delta=2,group=1
    14                           	psect	text3,local,class=CODE,merge=1,delta=2,group=1
    15                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=2,noexec
    16                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    17                           	dabs	1,0x7E,2
    18  0000                     
    19                           ; Version 2.40
    20                           ; Generated 17/11/2021 GMT
    21                           ; 
    22                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
    23                           ; All rights reserved.
    24                           ; 
    25                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    26                           ; 
    27                           ; Redistribution and use in source and binary forms, with or without modification, are
    28                           ; permitted provided that the following conditions are met:
    29                           ; 
    30                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    31                           ;        conditions and the following disclaimer.
    32                           ; 
    33                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    34                           ;        of conditions and the following disclaimer in the documentation and/or other
    35                           ;        materials provided with the distribution. Publication is not required when
    36                           ;        this file is used in an embedded application.
    37                           ; 
    38                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    39                           ;        software without specific prior written permission.
    40                           ; 
    41                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    42                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    43                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    44                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    45                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    46                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    47                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    48                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    49                           ; 
    50                           ; 
    51                           ; Code-generator required, PIC16F1509 Definitions
    52                           ; 
    53                           ; SFR Addresses
    54  0000                     	;# 
    55  0001                     	;# 
    56  0002                     	;# 
    57  0003                     	;# 
    58  0004                     	;# 
    59  0005                     	;# 
    60  0006                     	;# 
    61  0007                     	;# 
    62  0008                     	;# 
    63  0009                     	;# 
    64  000A                     	;# 
    65  000B                     	;# 
    66  000C                     	;# 
    67  000D                     	;# 
    68  000E                     	;# 
    69  0011                     	;# 
    70  0012                     	;# 
    71  0013                     	;# 
    72  0015                     	;# 
    73  0016                     	;# 
    74  0016                     	;# 
    75  0017                     	;# 
    76  0018                     	;# 
    77  0019                     	;# 
    78  001A                     	;# 
    79  001B                     	;# 
    80  001C                     	;# 
    81  008C                     	;# 
    82  008D                     	;# 
    83  008E                     	;# 
    84  0091                     	;# 
    85  0092                     	;# 
    86  0093                     	;# 
    87  0095                     	;# 
    88  0096                     	;# 
    89  0097                     	;# 
    90  0099                     	;# 
    91  009A                     	;# 
    92  009B                     	;# 
    93  009B                     	;# 
    94  009C                     	;# 
    95  009D                     	;# 
    96  009E                     	;# 
    97  009F                     	;# 
    98  010C                     	;# 
    99  010D                     	;# 
   100  010E                     	;# 
   101  0111                     	;# 
   102  0112                     	;# 
   103  0113                     	;# 
   104  0114                     	;# 
   105  0115                     	;# 
   106  0116                     	;# 
   107  0117                     	;# 
   108  0118                     	;# 
   109  0119                     	;# 
   110  011D                     	;# 
   111  018C                     	;# 
   112  018D                     	;# 
   113  018E                     	;# 
   114  0191                     	;# 
   115  0191                     	;# 
   116  0192                     	;# 
   117  0193                     	;# 
   118  0193                     	;# 
   119  0194                     	;# 
   120  0195                     	;# 
   121  0196                     	;# 
   122  0197                     	;# 
   123  0199                     	;# 
   124  019A                     	;# 
   125  019B                     	;# 
   126  019B                     	;# 
   127  019C                     	;# 
   128  019D                     	;# 
   129  019E                     	;# 
   130  019F                     	;# 
   131  020C                     	;# 
   132  020D                     	;# 
   133  0211                     	;# 
   134  0211                     	;# 
   135  0212                     	;# 
   136  0212                     	;# 
   137  0213                     	;# 
   138  0213                     	;# 
   139  0214                     	;# 
   140  0214                     	;# 
   141  0215                     	;# 
   142  0215                     	;# 
   143  0215                     	;# 
   144  0216                     	;# 
   145  0216                     	;# 
   146  0217                     	;# 
   147  0217                     	;# 
   148  0391                     	;# 
   149  0392                     	;# 
   150  0393                     	;# 
   151  0394                     	;# 
   152  0395                     	;# 
   153  0396                     	;# 
   154  0498                     	;# 
   155  0498                     	;# 
   156  0499                     	;# 
   157  049A                     	;# 
   158  049B                     	;# 
   159  049B                     	;# 
   160  049C                     	;# 
   161  049D                     	;# 
   162  049E                     	;# 
   163  049F                     	;# 
   164  0611                     	;# 
   165  0612                     	;# 
   166  0613                     	;# 
   167  0613                     	;# 
   168  0614                     	;# 
   169  0615                     	;# 
   170  0616                     	;# 
   171  0616                     	;# 
   172  0617                     	;# 
   173  0618                     	;# 
   174  0619                     	;# 
   175  0619                     	;# 
   176  061A                     	;# 
   177  061B                     	;# 
   178  061C                     	;# 
   179  061C                     	;# 
   180  0691                     	;# 
   181  0692                     	;# 
   182  0693                     	;# 
   183  0694                     	;# 
   184  0695                     	;# 
   185  0F0F                     	;# 
   186  0F10                     	;# 
   187  0F11                     	;# 
   188  0F12                     	;# 
   189  0F13                     	;# 
   190  0F14                     	;# 
   191  0F15                     	;# 
   192  0F16                     	;# 
   193  0F17                     	;# 
   194  0F18                     	;# 
   195  0F19                     	;# 
   196  0F1A                     	;# 
   197  0F1B                     	;# 
   198  0F1C                     	;# 
   199  0F1D                     	;# 
   200  0F1E                     	;# 
   201  0F1F                     	;# 
   202  0F20                     	;# 
   203  0F21                     	;# 
   204  0F22                     	;# 
   205  0F23                     	;# 
   206  0F24                     	;# 
   207  0F25                     	;# 
   208  0F26                     	;# 
   209  0F27                     	;# 
   210  0F28                     	;# 
   211  0F29                     	;# 
   212  0F2A                     	;# 
   213  0F2B                     	;# 
   214  0F2C                     	;# 
   215  0F2D                     	;# 
   216  0F2E                     	;# 
   217  0F2F                     	;# 
   218  0F8C                     	;# 
   219  0F8D                     	;# 
   220  0F91                     	;# 
   221  0F95                     	;# 
   222  0F96                     	;# 
   223  0F97                     	;# 
   224  0F9C                     	;# 
   225  0F9D                     	;# 
   226  0F9E                     	;# 
   227  0FE3                     	;# 
   228  0FE4                     	;# 
   229  0FE5                     	;# 
   230  0FE6                     	;# 
   231  0FE7                     	;# 
   232  0FE8                     	;# 
   233  0FE9                     	;# 
   234  0FEA                     	;# 
   235  0FEB                     	;# 
   236  0FED                     	;# 
   237  0FEE                     	;# 
   238  0FEF                     	;# 
   239                           
   240                           	psect	idataBANK0
   241  0622                     __pidataBANK0:
   242                           
   243                           ;initializer for _mang
   244  0622  34C0               	retlw	192
   245  0623  34F9               	retlw	249
   246  0624  34A4               	retlw	164
   247  0625  34B0               	retlw	176
   248  0626  3499               	retlw	153
   249  0627  3492               	retlw	146
   250  0628  3482               	retlw	130
   251  0629  3478               	retlw	120
   252  062A  3480               	retlw	128
   253  062B  3490               	retlw	144
   254  062C  3400               	retlw	0
   255  062D  3400               	retlw	0
   256  062E  3400               	retlw	0
   257  062F  3400               	retlw	0
   258  0630  3400               	retlw	0
   259  0631  3400               	retlw	0
   260  0632  3400               	retlw	0
   261  0633  3400               	retlw	0
   262  0634  3400               	retlw	0
   263  0635  3400               	retlw	0
   264  000E                     _PORTCbits	set	14
   265  008E                     _TRISCbits	set	142
   266  010E                     _LATCbits	set	270
   267                           
   268                           	psect	cinit
   269  07EF                     start_initialization:	
   270                           ; #config settings
   271                           
   272  07EF                     __initialization:
   273                           
   274                           ; Initialize objects allocated to BANK0
   275  07EF  3022               	movlw	low __pidataBANK0
   276  07F0  0084               	movwf	4
   277  07F1  3086               	movlw	(high __pidataBANK0)| (0+128)
   278  07F2  0085               	movwf	5
   279  07F3  3035               	movlw	low __pdataBANK0
   280  07F4  0086               	movwf	6
   281  07F5  3000               	movlw	high __pdataBANK0
   282  07F6  0087               	movwf	7
   283  07F7  3014               	movlw	20
   284  07F8  3186  261C  3187   	fcall	init_ram
   285                           
   286                           ; Clear objects allocated to BANK0
   287  07FB  01C9               	clrf	__pbssBANK0& (0+127)
   288  07FC  01CA               	clrf	(__pbssBANK0+1)& (0+127)
   289  07FD                     end_of_initialization:	
   290                           ;End of C runtime variable initialization code
   291                           
   292  07FD                     __end_of__initialization:
   293  07FD  0020               	movlb	0
   294  07FE  3186  2EA6         	ljmp	_main	;jump to C main() function
   295                           
   296                           	psect	bssBANK0
   297  0049                     __pbssBANK0:
   298  0049                     _dem:
   299  0049                     	ds	1
   300  004A                     _j:
   301  004A                     	ds	1
   302                           
   303                           	psect	dataBANK0
   304  0035                     __pdataBANK0:
   305  0035                     _mang:
   306  0035                     	ds	20
   307                           
   308                           	psect	inittext
   309  061C                     init_ram:
   310  061C  00FE               	movwf	btemp
   311  061D                     initloop:
   312  061D  0012               	moviw fsr0++
   313  061E  001E               	movwi fsr1++
   314  061F  0BFE               	decfsz	btemp,f
   315  0620  2E1D               	goto	initloop
   316  0621  3400               	retlw	0
   317                           
   318                           	psect	cstackCOMMON
   319  0070                     __pcstackCOMMON:
   320  0070                     ?_main:
   321  0070                     ?___lwdiv:	
   322                           ; 1 bytes @ 0x0
   323                           
   324  0070                     ___lwdiv@divisor:	
   325                           ; 2 bytes @ 0x0
   326                           
   327                           
   328                           ; 2 bytes @ 0x0
   329  0070                     	ds	2
   330  0072                     ___lwdiv@dividend:
   331                           
   332                           ; 2 bytes @ 0x2
   333  0072                     	ds	2
   334  0074                     ??___lwdiv:
   335                           
   336                           ; 1 bytes @ 0x4
   337  0074                     	ds	1
   338  0075                     ___lwdiv@quotient:
   339                           
   340                           ; 2 bytes @ 0x5
   341  0075                     	ds	2
   342  0077                     ___lwdiv@counter:
   343                           
   344                           ; 1 bytes @ 0x7
   345  0077                     	ds	1
   346  0078                     ?___lwmod:
   347  0078                     ___lwmod@divisor:	
   348                           ; 2 bytes @ 0x8
   349                           
   350                           
   351                           ; 2 bytes @ 0x8
   352  0078                     	ds	2
   353  007A                     ___lwmod@dividend:
   354                           
   355                           ; 2 bytes @ 0xA
   356  007A                     	ds	2
   357  007C                     ??___lwmod:
   358                           
   359                           ; 1 bytes @ 0xC
   360  007C                     	ds	1
   361  007D                     ___lwmod@counter:
   362                           
   363                           ; 1 bytes @ 0xD
   364  007D                     	ds	1
   365                           
   366                           	psect	cstackBANK0
   367  0020                     __pcstackBANK0:
   368  0020                     ?_Nhan_so:
   369  0020                     Nhan_so@i:	
   370                           ; 1 bytes @ 0x0
   371                           
   372                           
   373                           ; 2 bytes @ 0x0
   374  0020                     	ds	2
   375  0022                     ??_Nhan_so:
   376                           
   377                           ; 1 bytes @ 0x2
   378  0022                     	ds	2
   379  0024                     Nhan_so@hang_don_vi:
   380                           
   381                           ; 2 bytes @ 0x4
   382  0024                     	ds	2
   383  0026                     Nhan_so@hang_chuc:
   384                           
   385                           ; 2 bytes @ 0x6
   386  0026                     	ds	2
   387  0028                     Nhan_so@hang_tram:
   388                           
   389                           ; 2 bytes @ 0x8
   390  0028                     	ds	2
   391  002A                     Nhan_so@b:
   392                           
   393                           ; 2 bytes @ 0xA
   394  002A                     	ds	2
   395  002C                     Nhan_so@c:
   396                           
   397                           ; 2 bytes @ 0xC
   398  002C                     	ds	2
   399  002E                     Nhan_so@d:
   400                           
   401                           ; 2 bytes @ 0xE
   402  002E                     	ds	2
   403  0030                     Nhan_so@a:
   404                           
   405                           ; 1 bytes @ 0x10
   406  0030                     	ds	1
   407  0031                     ??_main:
   408                           
   409                           ; 1 bytes @ 0x11
   410  0031                     	ds	2
   411  0033                     main@S1_state:
   412                           
   413                           ; 2 bytes @ 0x13
   414  0033                     	ds	2
   415                           
   416                           	psect	maintext
   417  06A6                     __pmaintext:	
   418 ;;
   419 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   420 ;;
   421 ;; *************** function _main *****************
   422 ;; Defined at:
   423 ;;		line 70 in file "Assignment41.c"
   424 ;; Parameters:    Size  Location     Type
   425 ;;		None
   426 ;; Auto vars:     Size  Location     Type
   427 ;;  S1_state        2   19[BANK0 ] int 
   428 ;;  a               2    0        int 
   429 ;; Return value:  Size  Location     Type
   430 ;;                  1    wreg      void 
   431 ;; Registers used:
   432 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
   433 ;; Tracked objects:
   434 ;;		On entry : B1F/0
   435 ;;		On exit  : 0/0
   436 ;;		Unchanged: 0/0
   437 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
   438 ;;      Params:         0       0       0       0       0       0       0       0
   439 ;;      Locals:         0       2       0       0       0       0       0       0
   440 ;;      Temps:          0       2       0       0       0       0       0       0
   441 ;;      Totals:         0       4       0       0       0       0       0       0
   442 ;;Total ram usage:        4 bytes
   443 ;; Hardware stack levels required when called: 2
   444 ;; This function calls:
   445 ;;		_Nhan_so
   446 ;; This function is called by:
   447 ;;		Startup code after reset
   448 ;; This function uses a non-reentrant model
   449 ;;
   450                           
   451  06A6                     _main:	
   452                           ;psect for function _main
   453                           
   454  06A6                     l849:	
   455                           ;incstack = 0
   456                           ; Regs used in _main: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
   457                           
   458                           
   459                           ;Assignment41.c: 71:     int S1_state =0 ;
   460  06A6  0020               	movlb	0	; select bank0
   461  06A7  01B3               	clrf	main@S1_state
   462  06A8  01B4               	clrf	main@S1_state+1
   463  06A9                     l851:
   464                           
   465                           ;Assignment41.c: 73:     TRISCbits.TRISC3 =1;
   466  06A9  0021               	movlb	1	; select bank1
   467  06AA  158E               	bsf	14,3	;volatile
   468  06AB                     l853:
   469                           
   470                           ;Assignment41.c: 74:     TRISCbits.TRISC0 =0;
   471  06AB  100E               	bcf	14,0	;volatile
   472  06AC                     l855:
   473                           
   474                           ;Assignment41.c: 75:     TRISCbits.TRISC1 =0;
   475  06AC  108E               	bcf	14,1	;volatile
   476  06AD                     l857:
   477                           
   478                           ;Assignment41.c: 76:     TRISCbits.TRISC2 =0;
   479  06AD  110E               	bcf	14,2	;volatile
   480  06AE                     l859:
   481                           
   482                           ;Assignment41.c: 77:     TRISCbits.TRISC4 =0;
   483  06AE  120E               	bcf	14,4	;volatile
   484  06AF                     l861:
   485                           
   486                           ;Assignment41.c: 78:     TRISCbits.TRISC5 =1;
   487  06AF  168E               	bsf	14,5	;volatile
   488  06B0                     l863:
   489                           
   490                           ;Assignment41.c: 79:     TRISCbits.TRISC6 =1;
   491  06B0  170E               	bsf	14,6	;volatile
   492  06B1                     l865:
   493                           
   494                           ;Assignment41.c: 80:     Nhan_so(20);
   495  06B1  3014               	movlw	20
   496  06B2  0020               	movlb	0	; select bank0
   497  06B3  00A0               	movwf	Nhan_so@i
   498  06B4  3000               	movlw	0
   499  06B5  00A1               	movwf	Nhan_so@i+1
   500  06B6  3187  272A  3186   	fcall	_Nhan_so
   501  06B9                     l867:
   502                           
   503                           ;Assignment41.c: 82:     if (PORTCbits.RC5 == 1){
   504  06B9  0020               	movlb	0	; select bank0
   505  06BA  1E8E               	btfss	14,5	;volatile
   506  06BB  2EBD               	goto	u481
   507  06BC  2EBE               	goto	u480
   508  06BD                     u481:
   509  06BD  2EB9               	goto	l867
   510  06BE                     u480:
   511  06BE                     l869:
   512                           
   513                           ;Assignment41.c: 83:     if (PORTCbits.RC3 == 0 && S1_state == 0) S1_state = 1,a=1;
   514  06BE  198E               	btfsc	14,3	;volatile
   515  06BF  2EC1               	goto	u491
   516  06C0  2EC2               	goto	u490
   517  06C1                     u491:
   518  06C1  2ECC               	goto	l875
   519  06C2                     u490:
   520  06C2                     l871:
   521  06C2  0833               	movf	main@S1_state,w
   522  06C3  0434               	iorwf	main@S1_state+1,w
   523  06C4  1D03               	btfss	3,2
   524  06C5  2EC7               	goto	u501
   525  06C6  2EC8               	goto	u500
   526  06C7                     u501:
   527  06C7  2ECC               	goto	l875
   528  06C8                     u500:
   529  06C8                     l873:
   530  06C8  3001               	movlw	1
   531  06C9  00B3               	movwf	main@S1_state
   532  06CA  3000               	movlw	0
   533  06CB  00B4               	movwf	main@S1_state+1
   534  06CC                     l875:
   535                           
   536                           ;Assignment41.c: 84:     if (PORTCbits.RC3 == 1 && S1_state == 1) S1_state = 2,a=2;
   537  06CC  1D8E               	btfss	14,3	;volatile
   538  06CD  2ECF               	goto	u511
   539  06CE  2ED0               	goto	u510
   540  06CF                     u511:
   541  06CF  2EDA               	goto	l881
   542  06D0                     u510:
   543  06D0                     l877:
   544  06D0  0333               	decf	main@S1_state,w
   545  06D1  0434               	iorwf	main@S1_state+1,w
   546  06D2  1D03               	btfss	3,2
   547  06D3  2ED5               	goto	u521
   548  06D4  2ED6               	goto	u520
   549  06D5                     u521:
   550  06D5  2EDA               	goto	l881
   551  06D6                     u520:
   552  06D6                     l879:
   553  06D6  3002               	movlw	2
   554  06D7  00B3               	movwf	main@S1_state
   555  06D8  3000               	movlw	0
   556  06D9  00B4               	movwf	main@S1_state+1
   557  06DA                     l881:
   558                           
   559                           ;Assignment41.c: 85:     if (PORTCbits.RC3 == 0 && S1_state == 2) S1_state = 3,a=3;
   560  06DA  198E               	btfsc	14,3	;volatile
   561  06DB  2EDD               	goto	u531
   562  06DC  2EDE               	goto	u530
   563  06DD                     u531:
   564  06DD  2EE9               	goto	l887
   565  06DE                     u530:
   566  06DE                     l883:
   567  06DE  3002               	movlw	2
   568  06DF  0633               	xorwf	main@S1_state,w
   569  06E0  0434               	iorwf	main@S1_state+1,w
   570  06E1  1D03               	btfss	3,2
   571  06E2  2EE4               	goto	u541
   572  06E3  2EE5               	goto	u540
   573  06E4                     u541:
   574  06E4  2EE9               	goto	l887
   575  06E5                     u540:
   576  06E5                     l885:
   577  06E5  3003               	movlw	3
   578  06E6  00B3               	movwf	main@S1_state
   579  06E7  3000               	movlw	0
   580  06E8  00B4               	movwf	main@S1_state+1
   581  06E9                     l887:
   582                           
   583                           ;Assignment41.c: 86:     if (S1_state == 3){
   584  06E9  3003               	movlw	3
   585  06EA  0633               	xorwf	main@S1_state,w
   586  06EB  0434               	iorwf	main@S1_state+1,w
   587  06EC  1D03               	btfss	3,2
   588  06ED  2EEF               	goto	u551
   589  06EE  2EF0               	goto	u550
   590  06EF                     u551:
   591  06EF  2F05               	goto	l899
   592  06F0                     u550:
   593  06F0                     l889:
   594                           
   595                           ;Assignment41.c: 87:     dem = dem+1 ;
   596  06F0  0849               	movf	_dem,w
   597  06F1  3E01               	addlw	1
   598  06F2  00B1               	movwf	??_main
   599  06F3  0831               	movf	??_main,w
   600  06F4  00C9               	movwf	_dem
   601  06F5                     l891:
   602                           
   603                           ;Assignment41.c: 88:     LATCbits.LATC4 = 1;
   604  06F5  0022               	movlb	2	; select bank2
   605  06F6  160E               	bsf	14,4	;volatile
   606  06F7                     l893:
   607                           
   608                           ;Assignment41.c: 89:      _delay((unsigned long)((100)*(1000000/4000.0))) ;
   609  06F7  3021               	movlw	33
   610  06F8  0020               	movlb	0	; select bank0
   611  06F9  00B1               	movwf	??_main
   612  06FA  3076               	movlw	118
   613  06FB                     u577:
   614  06FB  0B89               	decfsz	9,f
   615  06FC  2EFB               	goto	u577
   616  06FD  0BB1               	decfsz	??_main,f
   617  06FE  2EFB               	goto	u577
   618  06FF  0000               	nop
   619  0700                     l895:
   620                           
   621                           ;Assignment41.c: 90:     S1_state =0;
   622  0700  0020               	movlb	0	; select bank0
   623  0701  01B3               	clrf	main@S1_state
   624  0702  01B4               	clrf	main@S1_state+1
   625  0703                     l897:
   626                           
   627                           ;Assignment41.c: 91:     LATCbits.LATC4 = 0;
   628  0703  0022               	movlb	2	; select bank2
   629  0704  120E               	bcf	14,4	;volatile
   630  0705                     l899:
   631                           
   632                           ;Assignment41.c: 94:      _delay((unsigned long)((10)*(1000000/4000.0))) ;
   633  0705  3004               	movlw	4
   634  0706  0020               	movlb	0	; select bank0
   635  0707  00B1               	movwf	??_main
   636  0708  303D               	movlw	61
   637  0709                     u587:
   638  0709  0B89               	decfsz	9,f
   639  070A  2F09               	goto	u587
   640  070B  0BB1               	decfsz	??_main,f
   641  070C  2F09               	goto	u587
   642  070D  3200               	nop2
   643  070E                     l901:
   644                           
   645                           ;Assignment41.c: 95:     Nhan_so(dem);
   646  070E  0020               	movlb	0	; select bank0
   647  070F  0849               	movf	_dem,w
   648  0710  00B1               	movwf	??_main
   649  0711  01B2               	clrf	??_main+1
   650  0712  0831               	movf	??_main,w
   651  0713  00A0               	movwf	Nhan_so@i
   652  0714  0832               	movf	??_main+1,w
   653  0715  00A1               	movwf	Nhan_so@i+1
   654  0716  3187  272A  3186   	fcall	_Nhan_so
   655  0719                     l903:
   656                           
   657                           ;Assignment41.c: 96:     if (PORTCbits.RC6 == 1){
   658  0719  0020               	movlb	0	; select bank0
   659  071A  1F0E               	btfss	14,6	;volatile
   660  071B  2F1D               	goto	u561
   661  071C  2F1E               	goto	u560
   662  071D                     u561:
   663  071D  2EB9               	goto	l867
   664  071E                     u560:
   665  071E                     l905:
   666                           
   667                           ;Assignment41.c: 97:     dem = 0 ;
   668  071E  01C9               	clrf	_dem
   669                           
   670                           ;Assignment41.c: 98:     S1_state =0;
   671  071F  01B3               	clrf	main@S1_state
   672  0720  01B4               	clrf	main@S1_state+1
   673  0721                     l907:
   674                           
   675                           ;Assignment41.c: 99:     Nhan_so(dem);}
   676  0721  3000               	movlw	0
   677  0722  00A0               	movwf	Nhan_so@i
   678  0723  00A1               	movwf	Nhan_so@i+1
   679  0724  3187  272A  3186   	fcall	_Nhan_so
   680  0727  2EB9               	goto	l867
   681  0728  3180  2802         	ljmp	start
   682  072A                     __end_of_main:
   683                           
   684                           	psect	text1
   685  072A                     __ptext1:	
   686 ;; *************** function _Nhan_so *****************
   687 ;; Defined at:
   688 ;;		line 38 in file "Assignment41.c"
   689 ;; Parameters:    Size  Location     Type
   690 ;;  i               2    0[BANK0 ] unsigned int 
   691 ;; Auto vars:     Size  Location     Type
   692 ;;  d               2   14[BANK0 ] int 
   693 ;;  c               2   12[BANK0 ] int 
   694 ;;  b               2   10[BANK0 ] int 
   695 ;;  hang_tram       2    8[BANK0 ] int 
   696 ;;  hang_chuc       2    6[BANK0 ] int 
   697 ;;  hang_don_vi     2    4[BANK0 ] int 
   698 ;;  a               1   16[BANK0 ] unsigned char 
   699 ;; Return value:  Size  Location     Type
   700 ;;                  1    wreg      void 
   701 ;; Registers used:
   702 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
   703 ;; Tracked objects:
   704 ;;		On entry : 0/0
   705 ;;		On exit  : 0/0
   706 ;;		Unchanged: 0/0
   707 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
   708 ;;      Params:         0       2       0       0       0       0       0       0
   709 ;;      Locals:         0      13       0       0       0       0       0       0
   710 ;;      Temps:          0       2       0       0       0       0       0       0
   711 ;;      Totals:         0      17       0       0       0       0       0       0
   712 ;;Total ram usage:       17 bytes
   713 ;; Hardware stack levels used: 1
   714 ;; Hardware stack levels required when called: 1
   715 ;; This function calls:
   716 ;;		___lwdiv
   717 ;;		___lwmod
   718 ;; This function is called by:
   719 ;;		_main
   720 ;; This function uses a non-reentrant model
   721 ;;
   722                           
   723  072A                     _Nhan_so:	
   724                           ;psect for function _Nhan_so
   725                           
   726  072A                     l787:	
   727                           ;incstack = 0
   728                           ; Regs used in _Nhan_so: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
   729                           
   730                           
   731                           ;Assignment41.c: 39:   unsigned char a = 0x80 ;
   732  072A  3080               	movlw	128
   733  072B  0020               	movlb	0	; select bank0
   734  072C  00A2               	movwf	??_Nhan_so
   735  072D  0822               	movf	??_Nhan_so,w
   736  072E  00B0               	movwf	Nhan_so@a
   737  072F                     l789:
   738                           
   739                           ;Assignment41.c: 40:   int hang_don_vi = i%10;
   740  072F  300A               	movlw	10
   741  0730  00F8               	movwf	___lwmod@divisor
   742  0731  3000               	movlw	0
   743  0732  00F9               	movwf	___lwmod@divisor+1
   744  0733  0821               	movf	Nhan_so@i+1,w
   745  0734  00FB               	movwf	___lwmod@dividend+1
   746  0735  0820               	movf	Nhan_so@i,w
   747  0736  00FA               	movwf	___lwmod@dividend
   748  0737  3186  2636  3187   	fcall	___lwmod
   749  073A  0879               	movf	?___lwmod+1,w
   750  073B  0020               	movlb	0	; select bank0
   751  073C  00A5               	movwf	Nhan_so@hang_don_vi+1
   752  073D  0878               	movf	?___lwmod,w
   753  073E  00A4               	movwf	Nhan_so@hang_don_vi
   754  073F                     l791:
   755                           
   756                           ;Assignment41.c: 41:   int hang_chuc = (i/10)%10 ;
   757  073F  300A               	movlw	10
   758  0740  00F8               	movwf	___lwmod@divisor
   759  0741  3000               	movlw	0
   760  0742  00F9               	movwf	___lwmod@divisor+1
   761  0743  300A               	movlw	10
   762  0744  00F0               	movwf	___lwdiv@divisor
   763  0745  3000               	movlw	0
   764  0746  00F1               	movwf	___lwdiv@divisor+1
   765  0747  0821               	movf	Nhan_so@i+1,w
   766  0748  00F3               	movwf	___lwdiv@dividend+1
   767  0749  0820               	movf	Nhan_so@i,w
   768  074A  00F2               	movwf	___lwdiv@dividend
   769  074B  3186  266A  3187   	fcall	___lwdiv
   770  074E  0871               	movf	?___lwdiv+1,w
   771  074F  00FB               	movwf	___lwmod@dividend+1
   772  0750  0870               	movf	?___lwdiv,w
   773  0751  00FA               	movwf	___lwmod@dividend
   774  0752  3186  2636  3187   	fcall	___lwmod
   775  0755  0879               	movf	?___lwmod+1,w
   776  0756  0020               	movlb	0	; select bank0
   777  0757  00A7               	movwf	Nhan_so@hang_chuc+1
   778  0758  0878               	movf	?___lwmod,w
   779  0759  00A6               	movwf	Nhan_so@hang_chuc
   780  075A                     l793:
   781                           
   782                           ;Assignment41.c: 42:   int hang_tram = i/100 ;
   783  075A  3064               	movlw	100
   784  075B  00F0               	movwf	___lwdiv@divisor
   785  075C  3000               	movlw	0
   786  075D  00F1               	movwf	___lwdiv@divisor+1
   787  075E  0821               	movf	Nhan_so@i+1,w
   788  075F  00F3               	movwf	___lwdiv@dividend+1
   789  0760  0820               	movf	Nhan_so@i,w
   790  0761  00F2               	movwf	___lwdiv@dividend
   791  0762  3186  266A  3187   	fcall	___lwdiv
   792  0765  0871               	movf	?___lwdiv+1,w
   793  0766  0020               	movlb	0	; select bank0
   794  0767  00A9               	movwf	Nhan_so@hang_tram+1
   795  0768  0870               	movf	?___lwdiv,w
   796  0769  00A8               	movwf	Nhan_so@hang_tram
   797  076A                     l795:
   798                           
   799                           ;Assignment41.c: 43:   int b = mang[hang_don_vi] ;
   800  076A  0824               	movf	Nhan_so@hang_don_vi,w
   801  076B  3E35               	addlw	(low (_mang| 0))& (0+255)
   802  076C  0086               	movwf	6
   803  076D  0187               	clrf	7
   804  076E  0801               	movf	1,w
   805  076F  00A2               	movwf	??_Nhan_so
   806  0770  01A3               	clrf	??_Nhan_so+1
   807  0771  0822               	movf	??_Nhan_so,w
   808  0772  00AA               	movwf	Nhan_so@b
   809  0773  0823               	movf	??_Nhan_so+1,w
   810  0774  00AB               	movwf	Nhan_so@b+1
   811  0775                     l797:
   812                           
   813                           ;Assignment41.c: 44:   int c = mang[hang_chuc] ;
   814  0775  0826               	movf	Nhan_so@hang_chuc,w
   815  0776  3E35               	addlw	(low (_mang| 0))& (0+255)
   816  0777  0086               	movwf	6
   817  0778  0187               	clrf	7
   818  0779  0801               	movf	1,w
   819  077A  00A2               	movwf	??_Nhan_so
   820  077B  01A3               	clrf	??_Nhan_so+1
   821  077C  0822               	movf	??_Nhan_so,w
   822  077D  00AC               	movwf	Nhan_so@c
   823  077E  0823               	movf	??_Nhan_so+1,w
   824  077F  00AD               	movwf	Nhan_so@c+1
   825  0780                     l799:
   826                           
   827                           ;Assignment41.c: 45:   int d = mang[hang_tram] ;
   828  0780  0828               	movf	Nhan_so@hang_tram,w
   829  0781  3E35               	addlw	(low (_mang| 0))& (0+255)
   830  0782  0086               	movwf	6
   831  0783  0187               	clrf	7
   832  0784  0801               	movf	1,w
   833  0785  00A2               	movwf	??_Nhan_so
   834  0786  01A3               	clrf	??_Nhan_so+1
   835  0787  0822               	movf	??_Nhan_so,w
   836  0788  00AE               	movwf	Nhan_so@d
   837  0789  0823               	movf	??_Nhan_so+1,w
   838  078A  00AF               	movwf	Nhan_so@d+1
   839  078B                     l801:
   840                           
   841                           ;Assignment41.c: 46:     for (j=0;j<8;j++){
   842  078B  01CA               	clrf	_j
   843  078C                     l807:
   844                           
   845                           ;Assignment41.c: 47:  if ((b&a) == a) LATCbits.LATC1 = 1 ;
   846  078C  082A               	movf	Nhan_so@b,w
   847  078D  0530               	andwf	Nhan_so@a,w
   848  078E  00A2               	movwf	??_Nhan_so
   849  078F  0822               	movf	??_Nhan_so,w
   850  0790  0630               	xorwf	Nhan_so@a,w
   851  0791  1D03               	skipz
   852  0792  2F94               	goto	u421
   853  0793  2F95               	goto	u420
   854  0794                     u421:
   855  0794  2F98               	goto	l19
   856  0795                     u420:
   857  0795                     l809:
   858  0795  0022               	movlb	2	; select bank2
   859  0796  148E               	bsf	14,1	;volatile
   860  0797  2F9A               	goto	l20
   861  0798                     l19:	
   862                           ;Assignment41.c: 48:  else LATCbits.LATC1 = 0 ;
   863                           
   864  0798  0022               	movlb	2	; select bank2
   865  0799  108E               	bcf	14,1	;volatile
   866  079A                     l20:
   867                           
   868                           ;Assignment41.c: 49:  LATCbits.LATC0 = 1;
   869  079A  140E               	bsf	14,0	;volatile
   870                           
   871                           ;Assignment41.c: 50:  LATCbits.LATC0 = 0;
   872  079B  100E               	bcf	14,0	;volatile
   873  079C                     l811:
   874                           
   875                           ;Assignment41.c: 51:  b= b<<1 ;
   876  079C  0020               	movlb	0	; select bank0
   877  079D  352A               	lslf	Nhan_so@b,w
   878  079E  00AA               	movwf	Nhan_so@b
   879  079F  0D2B               	rlf	Nhan_so@b+1,w
   880  07A0  00AB               	movwf	Nhan_so@b+1
   881  07A1                     l813:
   882                           
   883                           ;Assignment41.c: 52:  }
   884  07A1  3001               	movlw	1
   885  07A2  00A2               	movwf	??_Nhan_so
   886  07A3  0822               	movf	??_Nhan_so,w
   887  07A4  07CA               	addwf	_j,f
   888  07A5                     l815:
   889  07A5  3008               	movlw	8
   890  07A6  024A               	subwf	_j,w
   891  07A7  1C03               	skipc
   892  07A8  2FAA               	goto	u431
   893  07A9  2FAB               	goto	u430
   894  07AA                     u431:
   895  07AA  2F8C               	goto	l807
   896  07AB                     u430:
   897  07AB                     l817:
   898                           
   899                           ;Assignment41.c: 53:   for (j=0;j<8;j++){
   900  07AB  01CA               	clrf	_j
   901  07AC                     l823:
   902                           
   903                           ;Assignment41.c: 54:  if ((c&a) == a) LATCbits.LATC1 = 1 ;
   904  07AC  082C               	movf	Nhan_so@c,w
   905  07AD  0530               	andwf	Nhan_so@a,w
   906  07AE  00A2               	movwf	??_Nhan_so
   907  07AF  0822               	movf	??_Nhan_so,w
   908  07B0  0630               	xorwf	Nhan_so@a,w
   909  07B1  1D03               	skipz
   910  07B2  2FB4               	goto	u441
   911  07B3  2FB5               	goto	u440
   912  07B4                     u441:
   913  07B4  2FB8               	goto	l23
   914  07B5                     u440:
   915  07B5                     l825:
   916  07B5  0022               	movlb	2	; select bank2
   917  07B6  148E               	bsf	14,1	;volatile
   918  07B7  2FBA               	goto	l24
   919  07B8                     l23:	
   920                           ;Assignment41.c: 55:  else LATCbits.LATC1 = 0 ;
   921                           
   922  07B8  0022               	movlb	2	; select bank2
   923  07B9  108E               	bcf	14,1	;volatile
   924  07BA                     l24:
   925                           
   926                           ;Assignment41.c: 56:  LATCbits.LATC0 = 1;
   927  07BA  140E               	bsf	14,0	;volatile
   928                           
   929                           ;Assignment41.c: 57:  LATCbits.LATC0 = 0;
   930  07BB  100E               	bcf	14,0	;volatile
   931  07BC                     l827:
   932                           
   933                           ;Assignment41.c: 58:  c= c<<1 ;
   934  07BC  0020               	movlb	0	; select bank0
   935  07BD  352C               	lslf	Nhan_so@c,w
   936  07BE  00AC               	movwf	Nhan_so@c
   937  07BF  0D2D               	rlf	Nhan_so@c+1,w
   938  07C0  00AD               	movwf	Nhan_so@c+1
   939  07C1                     l829:
   940                           
   941                           ;Assignment41.c: 59:  }
   942  07C1  3001               	movlw	1
   943  07C2  00A2               	movwf	??_Nhan_so
   944  07C3  0822               	movf	??_Nhan_so,w
   945  07C4  07CA               	addwf	_j,f
   946  07C5                     l831:
   947  07C5  3008               	movlw	8
   948  07C6  024A               	subwf	_j,w
   949  07C7  1C03               	skipc
   950  07C8  2FCA               	goto	u451
   951  07C9  2FCB               	goto	u450
   952  07CA                     u451:
   953  07CA  2FAC               	goto	l823
   954  07CB                     u450:
   955  07CB                     l833:
   956                           
   957                           ;Assignment41.c: 60:  for (j=0;j<8;j++){
   958  07CB  01CA               	clrf	_j
   959  07CC                     l839:
   960                           
   961                           ;Assignment41.c: 61:  if ((d&a) == a) LATCbits.LATC1 = 1 ;
   962  07CC  082E               	movf	Nhan_so@d,w
   963  07CD  0530               	andwf	Nhan_so@a,w
   964  07CE  00A2               	movwf	??_Nhan_so
   965  07CF  0822               	movf	??_Nhan_so,w
   966  07D0  0630               	xorwf	Nhan_so@a,w
   967  07D1  1D03               	skipz
   968  07D2  2FD4               	goto	u461
   969  07D3  2FD5               	goto	u460
   970  07D4                     u461:
   971  07D4  2FD8               	goto	l27
   972  07D5                     u460:
   973  07D5                     l841:
   974  07D5  0022               	movlb	2	; select bank2
   975  07D6  148E               	bsf	14,1	;volatile
   976  07D7  2FDA               	goto	l28
   977  07D8                     l27:	
   978                           ;Assignment41.c: 62:  else LATCbits.LATC1 = 0 ;
   979                           
   980  07D8  0022               	movlb	2	; select bank2
   981  07D9  108E               	bcf	14,1	;volatile
   982  07DA                     l28:
   983                           
   984                           ;Assignment41.c: 63:  LATCbits.LATC0 = 1;
   985  07DA  140E               	bsf	14,0	;volatile
   986                           
   987                           ;Assignment41.c: 64:  LATCbits.LATC0 = 0;
   988  07DB  100E               	bcf	14,0	;volatile
   989  07DC                     l843:
   990                           
   991                           ;Assignment41.c: 65:  d= d<<1 ;
   992  07DC  0020               	movlb	0	; select bank0
   993  07DD  352E               	lslf	Nhan_so@d,w
   994  07DE  00AE               	movwf	Nhan_so@d
   995  07DF  0D2F               	rlf	Nhan_so@d+1,w
   996  07E0  00AF               	movwf	Nhan_so@d+1
   997  07E1                     l845:
   998                           
   999                           ;Assignment41.c: 66:  }
  1000  07E1  3001               	movlw	1
  1001  07E2  00A2               	movwf	??_Nhan_so
  1002  07E3  0822               	movf	??_Nhan_so,w
  1003  07E4  07CA               	addwf	_j,f
  1004  07E5                     l847:
  1005  07E5  3008               	movlw	8
  1006  07E6  024A               	subwf	_j,w
  1007  07E7  1C03               	skipc
  1008  07E8  2FEA               	goto	u471
  1009  07E9  2FEB               	goto	u470
  1010  07EA                     u471:
  1011  07EA  2FCC               	goto	l839
  1012  07EB                     u470:
  1013  07EB                     l26:
  1014                           
  1015                           ;Assignment41.c: 67:  LATCbits.LATC2 = 1;
  1016  07EB  0022               	movlb	2	; select bank2
  1017  07EC  150E               	bsf	14,2	;volatile
  1018                           
  1019                           ;Assignment41.c: 68: LATCbits.LATC2 = 0;
  1020  07ED  110E               	bcf	14,2	;volatile
  1021  07EE                     l29:
  1022  07EE  0008               	return
  1023  07EF                     __end_of_Nhan_so:
  1024                           
  1025                           	psect	text2
  1026  0636                     __ptext2:	
  1027 ;; *************** function ___lwmod *****************
  1028 ;; Defined at:
  1029 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\lwmod.c"
  1030 ;; Parameters:    Size  Location     Type
  1031 ;;  divisor         2    8[COMMON] unsigned int 
  1032 ;;  dividend        2   10[COMMON] unsigned int 
  1033 ;; Auto vars:     Size  Location     Type
  1034 ;;  counter         1   13[COMMON] unsigned char 
  1035 ;; Return value:  Size  Location     Type
  1036 ;;                  2    8[COMMON] unsigned int 
  1037 ;; Registers used:
  1038 ;;		wreg, status,2, status,0
  1039 ;; Tracked objects:
  1040 ;;		On entry : 0/0
  1041 ;;		On exit  : 0/0
  1042 ;;		Unchanged: 0/0
  1043 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  1044 ;;      Params:         4       0       0       0       0       0       0       0
  1045 ;;      Locals:         1       0       0       0       0       0       0       0
  1046 ;;      Temps:          1       0       0       0       0       0       0       0
  1047 ;;      Totals:         6       0       0       0       0       0       0       0
  1048 ;;Total ram usage:        6 bytes
  1049 ;; Hardware stack levels used: 1
  1050 ;; This function calls:
  1051 ;;		Nothing
  1052 ;; This function is called by:
  1053 ;;		_Nhan_so
  1054 ;; This function uses a non-reentrant model
  1055 ;;
  1056                           
  1057  0636                     ___lwmod:	
  1058                           ;psect for function ___lwmod
  1059                           
  1060  0636                     l765:	
  1061                           ;incstack = 0
  1062                           ; Regs used in ___lwmod: [wreg+status,2+status,0]
  1063                           
  1064  0636  0878               	movf	___lwmod@divisor,w
  1065  0637  0479               	iorwf	___lwmod@divisor+1,w
  1066  0638  1903               	btfsc	3,2
  1067  0639  2E3B               	goto	u361
  1068  063A  2E3C               	goto	u360
  1069  063B                     u361:
  1070  063B  2E65               	goto	l783
  1071  063C                     u360:
  1072  063C                     l767:
  1073  063C  01FD               	clrf	___lwmod@counter
  1074  063D  0AFD               	incf	___lwmod@counter,f
  1075  063E  2E48               	goto	l773
  1076  063F                     l769:
  1077  063F  3001               	movlw	1
  1078  0640                     u375:
  1079  0640  35F8               	lslf	___lwmod@divisor,f
  1080  0641  0DF9               	rlf	___lwmod@divisor+1,f
  1081  0642  0B89               	decfsz	9,f
  1082  0643  2E40               	goto	u375
  1083  0644                     l771:
  1084  0644  3001               	movlw	1
  1085  0645  00FC               	movwf	??___lwmod
  1086  0646  087C               	movf	??___lwmod,w
  1087  0647  07FD               	addwf	___lwmod@counter,f
  1088  0648                     l773:
  1089  0648  1FF9               	btfss	___lwmod@divisor+1,7
  1090  0649  2E4B               	goto	u381
  1091  064A  2E4C               	goto	u380
  1092  064B                     u381:
  1093  064B  2E3F               	goto	l769
  1094  064C                     u380:
  1095  064C                     l775:
  1096  064C  0879               	movf	___lwmod@divisor+1,w
  1097  064D  027B               	subwf	___lwmod@dividend+1,w
  1098  064E  1D03               	skipz
  1099  064F  2E52               	goto	u395
  1100  0650  0878               	movf	___lwmod@divisor,w
  1101  0651  027A               	subwf	___lwmod@dividend,w
  1102  0652                     u395:
  1103  0652  1C03               	skipc
  1104  0653  2E55               	goto	u391
  1105  0654  2E56               	goto	u390
  1106  0655                     u391:
  1107  0655  2E5A               	goto	l779
  1108  0656                     u390:
  1109  0656                     l777:
  1110  0656  0878               	movf	___lwmod@divisor,w
  1111  0657  02FA               	subwf	___lwmod@dividend,f
  1112  0658  0879               	movf	___lwmod@divisor+1,w
  1113  0659  3BFB               	subwfb	___lwmod@dividend+1,f
  1114  065A                     l779:
  1115  065A  3001               	movlw	1
  1116  065B                     u405:
  1117  065B  36F9               	lsrf	___lwmod@divisor+1,f
  1118  065C  0CF8               	rrf	___lwmod@divisor,f
  1119  065D  0B89               	decfsz	9,f
  1120  065E  2E5B               	goto	u405
  1121  065F                     l781:
  1122  065F  3001               	movlw	1
  1123  0660  02FD               	subwf	___lwmod@counter,f
  1124  0661  1D03               	btfss	3,2
  1125  0662  2E64               	goto	u411
  1126  0663  2E65               	goto	u410
  1127  0664                     u411:
  1128  0664  2E4C               	goto	l775
  1129  0665                     u410:
  1130  0665                     l783:
  1131  0665  087B               	movf	___lwmod@dividend+1,w
  1132  0666  00F9               	movwf	?___lwmod+1
  1133  0667  087A               	movf	___lwmod@dividend,w
  1134  0668  00F8               	movwf	?___lwmod
  1135  0669                     l401:
  1136  0669  0008               	return
  1137  066A                     __end_of___lwmod:
  1138                           
  1139                           	psect	text3
  1140  066A                     __ptext3:	
  1141 ;; *************** function ___lwdiv *****************
  1142 ;; Defined at:
  1143 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\lwdiv.c"
  1144 ;; Parameters:    Size  Location     Type
  1145 ;;  divisor         2    0[COMMON] unsigned int 
  1146 ;;  dividend        2    2[COMMON] unsigned int 
  1147 ;; Auto vars:     Size  Location     Type
  1148 ;;  quotient        2    5[COMMON] unsigned int 
  1149 ;;  counter         1    7[COMMON] unsigned char 
  1150 ;; Return value:  Size  Location     Type
  1151 ;;                  2    0[COMMON] unsigned int 
  1152 ;; Registers used:
  1153 ;;		wreg, status,2, status,0
  1154 ;; Tracked objects:
  1155 ;;		On entry : 0/0
  1156 ;;		On exit  : 0/0
  1157 ;;		Unchanged: 0/0
  1158 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  1159 ;;      Params:         4       0       0       0       0       0       0       0
  1160 ;;      Locals:         3       0       0       0       0       0       0       0
  1161 ;;      Temps:          1       0       0       0       0       0       0       0
  1162 ;;      Totals:         8       0       0       0       0       0       0       0
  1163 ;;Total ram usage:        8 bytes
  1164 ;; Hardware stack levels used: 1
  1165 ;; This function calls:
  1166 ;;		Nothing
  1167 ;; This function is called by:
  1168 ;;		_Nhan_so
  1169 ;; This function uses a non-reentrant model
  1170 ;;
  1171                           
  1172  066A                     ___lwdiv:	
  1173                           ;psect for function ___lwdiv
  1174                           
  1175  066A                     l739:	
  1176                           ;incstack = 0
  1177                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
  1178                           
  1179  066A  01F5               	clrf	___lwdiv@quotient
  1180  066B  01F6               	clrf	___lwdiv@quotient+1
  1181  066C                     l741:
  1182  066C  0870               	movf	___lwdiv@divisor,w
  1183  066D  0471               	iorwf	___lwdiv@divisor+1,w
  1184  066E  1903               	btfsc	3,2
  1185  066F  2E71               	goto	u291
  1186  0670  2E72               	goto	u290
  1187  0671                     u291:
  1188  0671  2EA1               	goto	l761
  1189  0672                     u290:
  1190  0672                     l743:
  1191  0672  01F7               	clrf	___lwdiv@counter
  1192  0673  0AF7               	incf	___lwdiv@counter,f
  1193  0674  2E7E               	goto	l749
  1194  0675                     l745:
  1195  0675  3001               	movlw	1
  1196  0676                     u305:
  1197  0676  35F0               	lslf	___lwdiv@divisor,f
  1198  0677  0DF1               	rlf	___lwdiv@divisor+1,f
  1199  0678  0B89               	decfsz	9,f
  1200  0679  2E76               	goto	u305
  1201  067A                     l747:
  1202  067A  3001               	movlw	1
  1203  067B  00F4               	movwf	??___lwdiv
  1204  067C  0874               	movf	??___lwdiv,w
  1205  067D  07F7               	addwf	___lwdiv@counter,f
  1206  067E                     l749:
  1207  067E  1FF1               	btfss	___lwdiv@divisor+1,7
  1208  067F  2E81               	goto	u311
  1209  0680  2E82               	goto	u310
  1210  0681                     u311:
  1211  0681  2E75               	goto	l745
  1212  0682                     u310:
  1213  0682                     l751:
  1214  0682  3001               	movlw	1
  1215  0683                     u325:
  1216  0683  35F5               	lslf	___lwdiv@quotient,f
  1217  0684  0DF6               	rlf	___lwdiv@quotient+1,f
  1218  0685  0B89               	decfsz	9,f
  1219  0686  2E83               	goto	u325
  1220  0687  0871               	movf	___lwdiv@divisor+1,w
  1221  0688  0273               	subwf	___lwdiv@dividend+1,w
  1222  0689  1D03               	skipz
  1223  068A  2E8D               	goto	u335
  1224  068B  0870               	movf	___lwdiv@divisor,w
  1225  068C  0272               	subwf	___lwdiv@dividend,w
  1226  068D                     u335:
  1227  068D  1C03               	skipc
  1228  068E  2E90               	goto	u331
  1229  068F  2E91               	goto	u330
  1230  0690                     u331:
  1231  0690  2E96               	goto	l757
  1232  0691                     u330:
  1233  0691                     l753:
  1234  0691  0870               	movf	___lwdiv@divisor,w
  1235  0692  02F2               	subwf	___lwdiv@dividend,f
  1236  0693  0871               	movf	___lwdiv@divisor+1,w
  1237  0694  3BF3               	subwfb	___lwdiv@dividend+1,f
  1238  0695                     l755:
  1239  0695  1475               	bsf	___lwdiv@quotient,0
  1240  0696                     l757:
  1241  0696  3001               	movlw	1
  1242  0697                     u345:
  1243  0697  36F1               	lsrf	___lwdiv@divisor+1,f
  1244  0698  0CF0               	rrf	___lwdiv@divisor,f
  1245  0699  0B89               	decfsz	9,f
  1246  069A  2E97               	goto	u345
  1247  069B                     l759:
  1248  069B  3001               	movlw	1
  1249  069C  02F7               	subwf	___lwdiv@counter,f
  1250  069D  1D03               	btfss	3,2
  1251  069E  2EA0               	goto	u351
  1252  069F  2EA1               	goto	u350
  1253  06A0                     u351:
  1254  06A0  2E82               	goto	l751
  1255  06A1                     u350:
  1256  06A1                     l761:
  1257  06A1  0876               	movf	___lwdiv@quotient+1,w
  1258  06A2  00F1               	movwf	?___lwdiv+1
  1259  06A3  0875               	movf	___lwdiv@quotient,w
  1260  06A4  00F0               	movwf	?___lwdiv
  1261  06A5                     l391:
  1262  06A5  0008               	return
  1263  06A6                     __end_of___lwdiv:
  1264  007E                     btemp	set	126	;btemp
  1265  007E                     wtemp0	set	126
  1266                           
  1267                           	psect	idloc
  1268                           
  1269                           ;Config register IDLOC0 @ 0x8000
  1270                           ;	unspecified, using default values
  1271  8000                     	org	32768
  1272  8000  3FFF               	dw	16383
  1273                           
  1274                           ;Config register IDLOC1 @ 0x8001
  1275                           ;	unspecified, using default values
  1276  8001                     	org	32769
  1277  8001  3FFF               	dw	16383
  1278                           
  1279                           ;Config register IDLOC2 @ 0x8002
  1280                           ;	unspecified, using default values
  1281  8002                     	org	32770
  1282  8002  3FFF               	dw	16383
  1283                           
  1284                           ;Config register IDLOC3 @ 0x8003
  1285                           ;	unspecified, using default values
  1286  8003                     	org	32771
  1287  8003  3FFF               	dw	16383
  1288                           
  1289                           	psect	config
  1290                           
  1291                           ;Config register CONFIG1 @ 0x8007
  1292                           ;	Oscillator Selection Bits
  1293                           ;	FOSC = ECH, ECH, External Clock, High Power Mode (4-20 MHz): device clock supplied to 
      +                          CLKIN pins
  1294                           ;	Watchdog Timer Enable
  1295                           ;	WDTE = OFF, WDT disabled
  1296                           ;	Power-up Timer Enable
  1297                           ;	PWRTE = OFF, PWRT disabled
  1298                           ;	MCLR Pin Function Select
  1299                           ;	MCLRE = OFF, MCLR/VPP pin function is digital input
  1300                           ;	Flash Program Memory Code Protection
  1301                           ;	CP = OFF, Program memory code protection is disabled
  1302                           ;	Brown-out Reset Enable
  1303                           ;	BOREN = OFF, Brown-out Reset disabled
  1304                           ;	Clock Out Enable
  1305                           ;	CLKOUTEN = OFF, CLKOUT function is disabled. I/O or oscillator function on the CLKOUT 
      +                          pin
  1306                           ;	Internal/External Switchover Mode
  1307                           ;	IESO = OFF, Internal/External Switchover Mode is disabled
  1308                           ;	Fail-Safe Clock Monitor Enable
  1309                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
  1310  8007                     	org	32775
  1311  8007  09A7               	dw	2471
  1312                           
  1313                           ;Config register CONFIG2 @ 0x8008
  1314                           ;	Flash Memory Self-Write Protection
  1315                           ;	WRT = OFF, Write protection off
  1316                           ;	Stack Overflow/Underflow Reset Enable
  1317                           ;	STVREN = OFF, Stack Overflow or Underflow will not cause a Reset
  1318                           ;	Brown-out Reset Voltage Selection
  1319                           ;	BORV = LO, Brown-out Reset Voltage (Vbor), low trip point selected.
  1320                           ;	Low-Power Brown Out Reset
  1321                           ;	LPBOR = OFF, Low-Power BOR is disabled
  1322                           ;	Low-Voltage Programming Enable
  1323                           ;	LVP = OFF, High-voltage on MCLR/VPP must be used for programming
  1324  8008                     	org	32776
  1325  8008  1DFF               	dw	7679

Data Sizes:
    Strings     0
    Constant    0
    Data        20
    BSS         2
    Persistent  32
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     21      43
    BANK1            80      0       0
    BANK2            80      0       0
    BANK3            80      0       0
    BANK4            80      0       0
    BANK5            80      0       0
    BANK6            16      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    _Nhan_so->___lwmod
    ___lwmod->___lwdiv

Critical Paths under _main in BANK0

    _main->_Nhan_so

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 6     6      0    1661
                                             17 BANK0      4     4      0
                            _Nhan_so
 ---------------------------------------------------------------------------------
 (1) _Nhan_so                                             17    15      2    1563
                                              0 BANK0     17    15      2
                            ___lwdiv
                            ___lwmod
 ---------------------------------------------------------------------------------
 (2) ___lwmod                                              6     2      4     463
                                              8 COMMON     6     2      4
                            ___lwdiv (ARG)
 ---------------------------------------------------------------------------------
 (2) ___lwdiv                                              8     4      4     466
                                              0 COMMON     8     4      4
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Nhan_so
     ___lwdiv
     ___lwmod
       ___lwdiv (ARG)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             1F0      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      E       E       2      100.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
ABS                  0      0      39       4        0.0%
BITBANK0            50      0       0       5        0.0%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BANK0               50     15      2B       6       53.8%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BITBANK1            50      0       0       7        0.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BANK1               50      0       0       8        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BITBANK2            50      0       0       9        0.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BANK2               50      0       0      10        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BITBANK3            50      0       0      11        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BANK3               50      0       0      12        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BITBANK4            50      0       0      13        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BANK4               50      0       0      14        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BITBANK5            50      0       0      15        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BANK5               50      0       0      16        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BITBANK6            10      0       0      17        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BANK6               10      0       0      18        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
DATA                 0      0      39      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V2.36 build 20220127204148 
Symbol Table                                                                                   Fri Apr 01 21:02:11 2022

                      _j 004A                       l20 079A                       l23 07B8  
                     l24 07BA                       l26 07EB                       l27 07D8  
                     l19 0798                       l28 07DA                       l29 07EE  
                    l401 0669                      l391 06A5                      l801 078B  
                    l811 079C                      l741 066C                      l813 07A1  
                    l901 070E                      l751 0682                      l743 0672  
                    l831 07C5                      l823 07AC                      l815 07A5  
                    l807 078C                      l903 0719                      l753 0691  
                    l745 0675                      l761 06A1                      l841 07D5  
                    l833 07CB                      l825 07B5                      l817 07AB  
                    l809 0795                      l905 071E                      l755 0695  
                    l747 067A                      l739 066A                      l771 0644  
                    l843 07DC                      l827 07BC                      l907 0721  
                    l851 06A9                      l757 0696                      l749 067E  
                    l781 065F                      l773 0648                      l765 0636  
                    l845 07E1                      l829 07C1                      l861 06AF  
                    l853 06AB                      l759 069B                      l775 064C  
                    l767 063C                      l783 0665                      l847 07E5  
                    l839 07CC                      l791 073F                      l871 06C2  
                    l863 06B0                      l855 06AC                      l777 0656  
                    l769 063F                      l793 075A                      l881 06DA  
                    l873 06C8                      l865 06B1                      l857 06AD  
                    l849 06A6                      l779 065A                      l795 076A  
                    l787 072A                      l891 06F5                      l883 06DE  
                    l875 06CC                      l867 06B9                      l859 06AE  
                    l797 0775                      l789 072F                      l893 06F7  
                    l885 06E5                      l877 06D0                      l869 06BE  
                    l799 0780                      l895 0700                      l887 06E9  
                    l879 06D6                      l897 0703                      l889 06F0  
                    l899 0705                      u310 0682                      u311 0681  
                    u305 0676                      u330 0691                      u410 0665  
                    u331 0690                      u411 0664                      u420 0795  
                    u500 06C8                      u325 0683                      u405 065B  
                    u421 0794                      u501 06C7                      u350 06A1  
                    u430 07AB                      u510 06D0                      u351 06A0  
                    u335 068D                      u431 07AA                      u511 06CF  
                    u360 063C                      u440 07B5                      u520 06D6  
                    u345 0697                      u361 063B                      u441 07B4  
                    u521 06D5                      u290 0672                      u450 07CB  
                    u530 06DE                      u291 0671                      u451 07CA  
                    u531 06DD                      u380 064C                      u460 07D5  
                    u540 06E5                      u381 064B                      u461 07D4  
                    u541 06E4                      u390 0656                      u470 07EB  
                    u550 06F0                      u391 0655                      u375 0640  
                    u471 07EA                      u551 06EF                      u560 071E  
                    u480 06BE                      u561 071D                      u481 06BD  
                    u490 06C2                      u395 0652                      u491 06C1  
                    u577 06FB                      u587 0709                      _dem 0049  
                    wreg 0009                     _main 06A6                     _mang 0035  
                   fsr0h 0005                     fsr1h 0007                     fsr0l 0004  
                   indf1 0001                     fsr1l 0006                     btemp 007E  
                   start 0002          __end_of_Nhan_so 07EF                    ?_main 0070  
        __end_of___lwdiv 06A6          __end_of___lwmod 066A                    status 0003  
                  wtemp0 007E          __initialization 07EF             __end_of_main 072A  
                 ??_main 0031                ??_Nhan_so 0022                ??___lwdiv 0074  
              ??___lwmod 007C  __end_of__initialization 07FD           __pcstackCOMMON 0070  
           __pidataBANK0 0622               __pbssBANK0 0049               __pmaintext 06A6  
                _Nhan_so 072A                  ___lwdiv 066A                  ___lwmod 0636  
                __ptext1 072A                  __ptext2 0636                  __ptext3 066A  
   end_of_initialization 07FD                  init_ram 061C                  initloop 061D  
     Nhan_so@hang_don_vi 0024                _PORTCbits 000E                _TRISCbits 008E  
    start_initialization 07EF              __pdataBANK0 0035         Nhan_so@hang_chuc 0026  
       Nhan_so@hang_tram 0028                ___latbits 0002            __pcstackBANK0 0020  
               ?_Nhan_so 0020         ___lwdiv@dividend 0072                 ?___lwdiv 0070  
               ?___lwmod 0078         ___lwdiv@quotient 0075                 _LATCbits 010E  
               Nhan_so@a 0030                 Nhan_so@b 002A                 Nhan_so@c 002C  
               Nhan_so@d 002E                 Nhan_so@i 0020          ___lwdiv@divisor 0070  
        ___lwdiv@counter 0077         ___lwmod@dividend 007A          ___lwmod@divisor 0078  
        ___lwmod@counter 007D             main@S1_state 0033  
