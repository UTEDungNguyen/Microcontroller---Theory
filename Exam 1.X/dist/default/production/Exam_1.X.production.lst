

Microchip MPLAB XC8 Assembler V2.36 build 20220127204148 
                                                                                               Fri Apr 08 12:36:57 2022

Microchip MPLAB XC8 C Compiler v2.36 (Free license) build 20220127204148 Og1 
     1                           	processor	16F1509
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	cinit,global,class=CODE,merge=1,delta=2
     5                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     6                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
     7                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
     8                           	psect	text1,local,class=CODE,merge=1,delta=2
     9                           	psect	text2,local,class=CODE,merge=1,delta=2
    10                           	psect	text3,local,class=CODE,merge=1,delta=2
    11                           	psect	text4,local,class=CODE,merge=1,delta=2
    12                           	psect	text5,local,class=CODE,merge=1,delta=2
    13                           	psect	text6,local,class=CODE,merge=1,delta=2
    14                           	psect	text7,local,class=CODE,merge=1,delta=2
    15                           	psect	text8,local,class=CODE,merge=1,delta=2
    16                           	psect	text9,local,class=CODE,merge=1,delta=2,group=1
    17                           	psect	text10,local,class=CODE,merge=1,delta=2,group=1
    18                           	psect	text11,local,class=CODE,merge=1,delta=2,group=1
    19                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=2,noexec
    20                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    21                           	dabs	1,0x7E,2
    22  0000                     
    23                           ; Version 2.40
    24                           ; Generated 17/11/2021 GMT
    25                           ; 
    26                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
    27                           ; All rights reserved.
    28                           ; 
    29                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    30                           ; 
    31                           ; Redistribution and use in source and binary forms, with or without modification, are
    32                           ; permitted provided that the following conditions are met:
    33                           ; 
    34                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    35                           ;        conditions and the following disclaimer.
    36                           ; 
    37                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    38                           ;        of conditions and the following disclaimer in the documentation and/or other
    39                           ;        materials provided with the distribution. Publication is not required when
    40                           ;        this file is used in an embedded application.
    41                           ; 
    42                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    43                           ;        software without specific prior written permission.
    44                           ; 
    45                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    46                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    47                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    48                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    49                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    50                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    51                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    52                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    53                           ; 
    54                           ; 
    55                           ; Code-generator required, PIC16F1509 Definitions
    56                           ; 
    57                           ; SFR Addresses
    58  0000                     	;# 
    59  0001                     	;# 
    60  0002                     	;# 
    61  0003                     	;# 
    62  0004                     	;# 
    63  0005                     	;# 
    64  0006                     	;# 
    65  0007                     	;# 
    66  0008                     	;# 
    67  0009                     	;# 
    68  000A                     	;# 
    69  000B                     	;# 
    70  000C                     	;# 
    71  000D                     	;# 
    72  000E                     	;# 
    73  0011                     	;# 
    74  0012                     	;# 
    75  0013                     	;# 
    76  0015                     	;# 
    77  0016                     	;# 
    78  0016                     	;# 
    79  0017                     	;# 
    80  0018                     	;# 
    81  0019                     	;# 
    82  001A                     	;# 
    83  001B                     	;# 
    84  001C                     	;# 
    85  008C                     	;# 
    86  008D                     	;# 
    87  008E                     	;# 
    88  0091                     	;# 
    89  0092                     	;# 
    90  0093                     	;# 
    91  0095                     	;# 
    92  0096                     	;# 
    93  0097                     	;# 
    94  0099                     	;# 
    95  009A                     	;# 
    96  009B                     	;# 
    97  009B                     	;# 
    98  009C                     	;# 
    99  009D                     	;# 
   100  009E                     	;# 
   101  009F                     	;# 
   102  010C                     	;# 
   103  010D                     	;# 
   104  010E                     	;# 
   105  0111                     	;# 
   106  0112                     	;# 
   107  0113                     	;# 
   108  0114                     	;# 
   109  0115                     	;# 
   110  0116                     	;# 
   111  0117                     	;# 
   112  0118                     	;# 
   113  0119                     	;# 
   114  011D                     	;# 
   115  018C                     	;# 
   116  018D                     	;# 
   117  018E                     	;# 
   118  0191                     	;# 
   119  0191                     	;# 
   120  0192                     	;# 
   121  0193                     	;# 
   122  0193                     	;# 
   123  0194                     	;# 
   124  0195                     	;# 
   125  0196                     	;# 
   126  0197                     	;# 
   127  0199                     	;# 
   128  019A                     	;# 
   129  019B                     	;# 
   130  019B                     	;# 
   131  019C                     	;# 
   132  019D                     	;# 
   133  019E                     	;# 
   134  019F                     	;# 
   135  020C                     	;# 
   136  020D                     	;# 
   137  0211                     	;# 
   138  0211                     	;# 
   139  0212                     	;# 
   140  0212                     	;# 
   141  0213                     	;# 
   142  0213                     	;# 
   143  0214                     	;# 
   144  0214                     	;# 
   145  0215                     	;# 
   146  0215                     	;# 
   147  0215                     	;# 
   148  0216                     	;# 
   149  0216                     	;# 
   150  0217                     	;# 
   151  0217                     	;# 
   152  0391                     	;# 
   153  0392                     	;# 
   154  0393                     	;# 
   155  0394                     	;# 
   156  0395                     	;# 
   157  0396                     	;# 
   158  0498                     	;# 
   159  0498                     	;# 
   160  0499                     	;# 
   161  049A                     	;# 
   162  049B                     	;# 
   163  049B                     	;# 
   164  049C                     	;# 
   165  049D                     	;# 
   166  049E                     	;# 
   167  049F                     	;# 
   168  0611                     	;# 
   169  0612                     	;# 
   170  0613                     	;# 
   171  0613                     	;# 
   172  0614                     	;# 
   173  0615                     	;# 
   174  0616                     	;# 
   175  0616                     	;# 
   176  0617                     	;# 
   177  0618                     	;# 
   178  0619                     	;# 
   179  0619                     	;# 
   180  061A                     	;# 
   181  061B                     	;# 
   182  061C                     	;# 
   183  061C                     	;# 
   184  0691                     	;# 
   185  0692                     	;# 
   186  0693                     	;# 
   187  0694                     	;# 
   188  0695                     	;# 
   189  0F0F                     	;# 
   190  0F10                     	;# 
   191  0F11                     	;# 
   192  0F12                     	;# 
   193  0F13                     	;# 
   194  0F14                     	;# 
   195  0F15                     	;# 
   196  0F16                     	;# 
   197  0F17                     	;# 
   198  0F18                     	;# 
   199  0F19                     	;# 
   200  0F1A                     	;# 
   201  0F1B                     	;# 
   202  0F1C                     	;# 
   203  0F1D                     	;# 
   204  0F1E                     	;# 
   205  0F1F                     	;# 
   206  0F20                     	;# 
   207  0F21                     	;# 
   208  0F22                     	;# 
   209  0F23                     	;# 
   210  0F24                     	;# 
   211  0F25                     	;# 
   212  0F26                     	;# 
   213  0F27                     	;# 
   214  0F28                     	;# 
   215  0F29                     	;# 
   216  0F2A                     	;# 
   217  0F2B                     	;# 
   218  0F2C                     	;# 
   219  0F2D                     	;# 
   220  0F2E                     	;# 
   221  0F2F                     	;# 
   222  0F8C                     	;# 
   223  0F8D                     	;# 
   224  0F91                     	;# 
   225  0F95                     	;# 
   226  0F96                     	;# 
   227  0F97                     	;# 
   228  0F9C                     	;# 
   229  0F9D                     	;# 
   230  0F9E                     	;# 
   231  0FE3                     	;# 
   232  0FE4                     	;# 
   233  0FE5                     	;# 
   234  0FE6                     	;# 
   235  0FE7                     	;# 
   236  0FE8                     	;# 
   237  0FE9                     	;# 
   238  0FEA                     	;# 
   239  0FEB                     	;# 
   240  0FED                     	;# 
   241  0FEE                     	;# 
   242  0FEF                     	;# 
   243  000D                     _PORTBbits	set	13
   244  000E                     _PORTCbits	set	14
   245  000C                     _PORTAbits	set	12
   246  008D                     _TRISBbits	set	141
   247  008C                     _TRISAbits	set	140
   248  008E                     _TRISCbits	set	142
   249  010C                     _LATAbits	set	268
   250  010E                     _LATCbits	set	270
   251  018E                     _ANSELC	set	398
   252  018D                     _ANSELB	set	397
   253  018C                     _ANSELA	set	396
   254                           
   255                           	psect	cinit
   256  07FD                     start_initialization:	
   257                           ; #config settings
   258                           
   259  07FD                     __initialization:
   260  07FD                     end_of_initialization:	
   261                           ;End of C runtime variable initialization code
   262                           
   263  07FD                     __end_of__initialization:
   264  07FD  0020               	movlb	0
   265  07FE  3185  2DE1         	ljmp	_main	;jump to C main() function
   266                           
   267                           	psect	cstackCOMMON
   268  0070                     __pcstackCOMMON:
   269  0070                     ?_clk_pulse:
   270  0070                     ?_latch_pulse:	
   271                           ; 1 bytes @ 0x0
   272                           
   273  0070                     ?_main:	
   274                           ; 1 bytes @ 0x0
   275                           
   276  0070                     ?___awmod:	
   277                           ; 1 bytes @ 0x0
   278                           
   279  0070                     ?___lwmod:	
   280                           ; 2 bytes @ 0x0
   281                           
   282  0070                     clk_pulse@n:	
   283                           ; 2 bytes @ 0x0
   284                           
   285  0070                     latch_pulse@n:	
   286                           ; 2 bytes @ 0x0
   287                           
   288  0070                     ___awmod@divisor:	
   289                           ; 2 bytes @ 0x0
   290                           
   291  0070                     ___lwmod@divisor:	
   292                           ; 2 bytes @ 0x0
   293                           
   294                           
   295                           ; 2 bytes @ 0x0
   296  0070                     	ds	2
   297  0072                     ??_clk_pulse:
   298  0072                     ??_latch_pulse:	
   299                           ; 1 bytes @ 0x2
   300                           
   301  0072                     clk_pulse@i:	
   302                           ; 1 bytes @ 0x2
   303                           
   304  0072                     latch_pulse@i:	
   305                           ; 2 bytes @ 0x2
   306                           
   307  0072                     ___awmod@dividend:	
   308                           ; 2 bytes @ 0x2
   309                           
   310  0072                     ___lwmod@dividend:	
   311                           ; 2 bytes @ 0x2
   312                           
   313                           
   314                           ; 2 bytes @ 0x2
   315  0072                     	ds	2
   316  0074                     ?_Data_pulse_with_1:
   317  0074                     ?_Data_pulse_with_0:	
   318                           ; 1 bytes @ 0x4
   319                           
   320  0074                     ??___awmod:	
   321                           ; 1 bytes @ 0x4
   322                           
   323  0074                     ??___lwmod:	
   324                           ; 1 bytes @ 0x4
   325                           
   326  0074                     Data_pulse_with_1@n:	
   327                           ; 1 bytes @ 0x4
   328                           
   329  0074                     Data_pulse_with_0@n:	
   330                           ; 2 bytes @ 0x4
   331                           
   332                           
   333                           ; 2 bytes @ 0x4
   334  0074                     	ds	1
   335  0075                     ___awmod@counter:
   336  0075                     ___lwmod@counter:	
   337                           ; 1 bytes @ 0x5
   338                           
   339                           
   340                           ; 1 bytes @ 0x5
   341  0075                     	ds	1
   342  0076                     ??_Data_pulse_with_1:
   343  0076                     ??_Data_pulse_with_0:	
   344                           ; 1 bytes @ 0x6
   345                           
   346  0076                     ?_display_7segment:	
   347                           ; 1 bytes @ 0x6
   348                           
   349  0076                     ?___lwdiv:	
   350                           ; 1 bytes @ 0x6
   351                           
   352  0076                     ___awmod@sign:	
   353                           ; 2 bytes @ 0x6
   354                           
   355  0076                     display_7segment@n:	
   356                           ; 1 bytes @ 0x6
   357                           
   358  0076                     ___lwdiv@divisor:	
   359                           ; 2 bytes @ 0x6
   360                           
   361                           
   362                           ; 2 bytes @ 0x6
   363  0076                     	ds	2
   364  0078                     ??_display_7segment:
   365  0078                     ?_enter_number_added:	
   366                           ; 1 bytes @ 0x8
   367                           
   368  0078                     ?_enter_number_finish:	
   369                           ; 1 bytes @ 0x8
   370                           
   371  0078                     enter_number_added@n:	
   372                           ; 1 bytes @ 0x8
   373                           
   374  0078                     enter_number_finish@n:	
   375                           ; 2 bytes @ 0x8
   376                           
   377  0078                     ___lwdiv@dividend:	
   378                           ; 2 bytes @ 0x8
   379                           
   380                           
   381                           ; 2 bytes @ 0x8
   382  0078                     	ds	2
   383  007A                     ??_enter_number_added:
   384  007A                     ??_enter_number_finish:	
   385                           ; 1 bytes @ 0xA
   386                           
   387  007A                     ??___lwdiv:	
   388                           ; 1 bytes @ 0xA
   389                           
   390                           
   391                           ; 1 bytes @ 0xA
   392  007A                     	ds	1
   393  007B                     ___lwdiv@quotient:
   394                           
   395                           ; 2 bytes @ 0xB
   396  007B                     	ds	2
   397  007D                     ___lwdiv@counter:
   398                           
   399                           ; 1 bytes @ 0xD
   400  007D                     	ds	1
   401  007E                     ??_enter_total_number:
   402                           
   403                           	psect	cstackBANK0
   404  0020                     __pcstackBANK0:	
   405                           ; 1 bytes @ 0xE
   406                           
   407  0020                     ?_enter_total_number:
   408  0020                     enter_total_number@n:	
   409                           ; 1 bytes @ 0x0
   410                           
   411                           
   412                           ; 2 bytes @ 0x0
   413  0020                     	ds	2
   414  0022                     enter_total_number@a:
   415                           
   416                           ; 2 bytes @ 0x2
   417  0022                     	ds	2
   418  0024                     enter_total_number@b:
   419                           
   420                           ; 2 bytes @ 0x4
   421  0024                     	ds	2
   422  0026                     enter_total_number@c:
   423                           
   424                           ; 2 bytes @ 0x6
   425  0026                     	ds	2
   426  0028                     _enter_total_number$706:
   427                           
   428                           ; 2 bytes @ 0x8
   429  0028                     	ds	2
   430  002A                     ??_main:
   431                           
   432                           ; 1 bytes @ 0xA
   433  002A                     	ds	1
   434  002B                     main@dem:
   435                           
   436                           ; 2 bytes @ 0xB
   437  002B                     	ds	2
   438  002D                     main@dem1:
   439                           
   440                           ; 2 bytes @ 0xD
   441  002D                     	ds	2
   442  002F                     main@S1_state:
   443                           
   444                           ; 1 bytes @ 0xF
   445  002F                     	ds	1
   446  0030                     main@S2_state:
   447                           
   448                           ; 1 bytes @ 0x10
   449  0030                     	ds	1
   450                           
   451                           	psect	maintext
   452  05E1                     __pmaintext:	
   453 ;;
   454 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
   455 ;;
   456 ;; *************** function _main *****************
   457 ;; Defined at:
   458 ;;		line 126 in file "Exam 1.c"
   459 ;; Parameters:    Size  Location     Type
   460 ;;		None
   461 ;; Auto vars:     Size  Location     Type
   462 ;;  dem1            2   13[BANK0 ] unsigned int 
   463 ;;  dem             2   11[BANK0 ] unsigned int 
   464 ;;  S2_state        1   16[BANK0 ] unsigned char 
   465 ;;  S1_state        1   15[BANK0 ] unsigned char 
   466 ;; Return value:  Size  Location     Type
   467 ;;                  1    wreg      void 
   468 ;; Registers used:
   469 ;;		wreg, status,2, status,0, pclath, cstack
   470 ;; Tracked objects:
   471 ;;		On entry : B1F/0
   472 ;;		On exit  : 0/0
   473 ;;		Unchanged: 0/0
   474 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
   475 ;;      Params:         0       0       0       0       0       0       0       0
   476 ;;      Locals:         0       6       0       0       0       0       0       0
   477 ;;      Temps:          0       1       0       0       0       0       0       0
   478 ;;      Totals:         0       7       0       0       0       0       0       0
   479 ;;Total ram usage:        7 bytes
   480 ;; Hardware stack levels required when called: 5
   481 ;; This function calls:
   482 ;;		_Data_pulse_with_1
   483 ;;		_enter_total_number
   484 ;;		_latch_pulse
   485 ;; This function is called by:
   486 ;;		Startup code after reset
   487 ;; This function uses a non-reentrant model
   488 ;;
   489                           
   490  05E1                     _main:	
   491                           ;psect for function _main
   492                           
   493  05E1                     l1023:	
   494                           ;incstack = 0
   495                           ; Regs used in _main: [wreg+status,2+status,0+pclath+cstack]
   496                           
   497                           
   498                           ;Exam 1.c: 127:     TRISCbits.TRISC0 = 0;
   499  05E1  0021               	movlb	1	; select bank1
   500  05E2  100E               	bcf	14,0	;volatile
   501                           
   502                           ;Exam 1.c: 128:     TRISCbits.TRISC1 = 0;
   503  05E3  108E               	bcf	14,1	;volatile
   504                           
   505                           ;Exam 1.c: 129:     TRISCbits.TRISC2 = 0;
   506  05E4  110E               	bcf	14,2	;volatile
   507                           
   508                           ;Exam 1.c: 130:     TRISAbits.TRISA0 = 1;
   509  05E5  140C               	bsf	12,0	;volatile
   510                           
   511                           ;Exam 1.c: 131:     TRISAbits.TRISA1 = 1;
   512  05E6  148C               	bsf	12,1	;volatile
   513                           
   514                           ;Exam 1.c: 132:     TRISAbits.TRISA2 = 1;
   515  05E7  150C               	bsf	12,2	;volatile
   516                           
   517                           ;Exam 1.c: 133:     TRISAbits.TRISA4 = 0;
   518  05E8  120C               	bcf	12,4	;volatile
   519                           
   520                           ;Exam 1.c: 134:     TRISBbits.TRISB4 = 1;
   521  05E9  160D               	bsf	13,4	;volatile
   522                           
   523                           ;Exam 1.c: 135:     TRISCbits.TRISC3 = 1;
   524  05EA  158E               	bsf	14,3	;volatile
   525  05EB                     l1025:
   526                           
   527                           ;Exam 1.c: 137:     ANSELA = 0;
   528  05EB  0023               	movlb	3	; select bank3
   529  05EC  018C               	clrf	12	;volatile
   530                           
   531                           ;Exam 1.c: 138:     ANSELB = 0;
   532  05ED  018D               	clrf	13	;volatile
   533                           
   534                           ;Exam 1.c: 139:     ANSELC = 0;
   535  05EE  018E               	clrf	14	;volatile
   536  05EF                     l1027:
   537                           
   538                           ;Exam 1.c: 141:     LATCbits.LATC0 = 0;
   539  05EF  0022               	movlb	2	; select bank2
   540  05F0  100E               	bcf	14,0	;volatile
   541  05F1                     l1029:
   542                           
   543                           ;Exam 1.c: 142:     LATCbits.LATC1 = 0;
   544  05F1  108E               	bcf	14,1	;volatile
   545  05F2                     l1031:
   546                           
   547                           ;Exam 1.c: 143:     LATCbits.LATC2 = 0;
   548  05F2  110E               	bcf	14,2	;volatile
   549                           
   550                           ;Exam 1.c: 145:     unsigned char S1_state = 0;
   551  05F3  0020               	movlb	0	; select bank0
   552  05F4  01AF               	clrf	main@S1_state
   553                           
   554                           ;Exam 1.c: 146:     unsigned char S2_state = 0;
   555  05F5  01B0               	clrf	main@S2_state
   556                           
   557                           ;Exam 1.c: 147:     unsigned int dem = 0;
   558  05F6  01AB               	clrf	main@dem
   559  05F7  01AC               	clrf	main@dem+1
   560                           
   561                           ;Exam 1.c: 148:     unsigned int dem1 = 0;
   562  05F8  01AD               	clrf	main@dem1
   563  05F9  01AE               	clrf	main@dem1+1
   564  05FA                     l1033:
   565                           
   566                           ;Exam 1.c: 150:         if (PORTAbits.RA0 == 1){
   567  05FA  0020               	movlb	0	; select bank0
   568  05FB  1C0C               	btfss	12,0	;volatile
   569  05FC  2DFE               	goto	u921
   570  05FD  2DFF               	goto	u920
   571  05FE                     u921:
   572  05FE  2EB9               	goto	l1113
   573  05FF                     u920:
   574  05FF                     l1035:
   575                           
   576                           ;Exam 1.c: 151:             if (PORTAbits.RA1 == 1){
   577  05FF  1C8C               	btfss	12,1	;volatile
   578  0600  2E02               	goto	u931
   579  0601  2E03               	goto	u930
   580  0602                     u931:
   581  0602  2E59               	goto	l1073
   582  0603                     u930:
   583  0603                     l1037:
   584                           
   585                           ;Exam 1.c: 152:                 if ((PORTCbits.RC3 == 0) && (S1_state == 0)) S1_state = 
      +                          1;
   586  0603  198E               	btfsc	14,3	;volatile
   587  0604  2E06               	goto	u941
   588  0605  2E07               	goto	u940
   589  0606                     u941:
   590  0606  2E0E               	goto	l81
   591  0607                     u940:
   592  0607                     l1039:
   593  0607  082F               	movf	main@S1_state,w
   594  0608  1D03               	btfss	3,2
   595  0609  2E0B               	goto	u951
   596  060A  2E0C               	goto	u950
   597  060B                     u951:
   598  060B  2E0E               	goto	l81
   599  060C                     u950:
   600  060C                     l1041:
   601  060C  01AF               	clrf	main@S1_state
   602  060D  0AAF               	incf	main@S1_state,f
   603  060E                     l81:
   604                           
   605                           ;Exam 1.c: 153:                 if ((PORTCbits.RC3 == 1) && (S1_state == 1)) S1_state = 
      +                          2;
   606  060E  1D8E               	btfss	14,3	;volatile
   607  060F  2E11               	goto	u961
   608  0610  2E12               	goto	u960
   609  0611                     u961:
   610  0611  2E1B               	goto	l1047
   611  0612                     u960:
   612  0612                     l1043:
   613  0612  032F               	decf	main@S1_state,w
   614  0613  1D03               	btfss	3,2
   615  0614  2E16               	goto	u971
   616  0615  2E17               	goto	u970
   617  0616                     u971:
   618  0616  2E1B               	goto	l1047
   619  0617                     u970:
   620  0617                     l1045:
   621  0617  3002               	movlw	2
   622  0618  00AA               	movwf	??_main
   623  0619  082A               	movf	??_main,w
   624  061A  00AF               	movwf	main@S1_state
   625  061B                     l1047:
   626                           
   627                           ;Exam 1.c: 154:                 if ((PORTCbits.RC3 == 0) && (S1_state == 2)) S1_state = 
      +                          3;
   628  061B  198E               	btfsc	14,3	;volatile
   629  061C  2E1E               	goto	u981
   630  061D  2E1F               	goto	u980
   631  061E                     u981:
   632  061E  2E29               	goto	l1053
   633  061F                     u980:
   634  061F                     l1049:
   635  061F  3002               	movlw	2
   636  0620  062F               	xorwf	main@S1_state,w
   637  0621  1D03               	btfss	3,2
   638  0622  2E24               	goto	u991
   639  0623  2E25               	goto	u990
   640  0624                     u991:
   641  0624  2E29               	goto	l1053
   642  0625                     u990:
   643  0625                     l1051:
   644  0625  3003               	movlw	3
   645  0626  00AA               	movwf	??_main
   646  0627  082A               	movf	??_main,w
   647  0628  00AF               	movwf	main@S1_state
   648  0629                     l1053:
   649                           
   650                           ;Exam 1.c: 156:                 if (S1_state == 3){
   651  0629  3003               	movlw	3
   652  062A  062F               	xorwf	main@S1_state,w
   653  062B  1D03               	btfss	3,2
   654  062C  2E2E               	goto	u1001
   655  062D  2E2F               	goto	u1000
   656  062E                     u1001:
   657  062E  2E41               	goto	l1063
   658  062F                     u1000:
   659  062F                     l1055:
   660                           
   661                           ;Exam 1.c: 157:                     dem = dem + 1;
   662  062F  082B               	movf	main@dem,w
   663  0630  3E01               	addlw	1
   664  0631  00AB               	movwf	main@dem
   665  0632  3000               	movlw	0
   666  0633  3D2C               	addwfc	main@dem+1,w
   667  0634  00AC               	movwf	main@dem+1
   668  0635                     l1057:
   669                           
   670                           ;Exam 1.c: 158:                     S1_state = 0;
   671  0635  01AF               	clrf	main@S1_state
   672  0636                     l1059:
   673                           
   674                           ;Exam 1.c: 159:                     if (dem > 999){
   675  0636  3003               	movlw	3
   676  0637  022C               	subwf	main@dem+1,w
   677  0638  30E8               	movlw	232
   678  0639  1903               	skipnz
   679  063A  022B               	subwf	main@dem,w
   680  063B  1C03               	skipc
   681  063C  2E3E               	goto	u1011
   682  063D  2E3F               	goto	u1010
   683  063E                     u1011:
   684  063E  2E41               	goto	l1063
   685  063F                     u1010:
   686  063F                     l1061:
   687                           
   688                           ;Exam 1.c: 160:                         dem = 0;
   689  063F  01AB               	clrf	main@dem
   690  0640  01AC               	clrf	main@dem+1
   691  0641                     l1063:
   692                           
   693                           ;Exam 1.c: 163:                 LATAbits.LATA4 = 1;
   694  0641  0022               	movlb	2	; select bank2
   695  0642  160C               	bsf	12,4	;volatile
   696  0643                     l1065:
   697                           
   698                           ;Exam 1.c: 164:                 enter_total_number(dem);
   699  0643  0020               	movlb	0	; select bank0
   700  0644  082C               	movf	main@dem+1,w
   701  0645  00A1               	movwf	enter_total_number@n+1
   702  0646  082B               	movf	main@dem,w
   703  0647  00A0               	movwf	enter_total_number@n
   704  0648  3185  255C  3185   	fcall	_enter_total_number
   705  064B                     l1067:
   706                           
   707                           ;Exam 1.c: 166:                 if (PORTBbits.RB4 == 1){
   708  064B  0020               	movlb	0	; select bank0
   709  064C  1E0D               	btfss	13,4	;volatile
   710  064D  2E4F               	goto	u1021
   711  064E  2E50               	goto	u1020
   712  064F                     u1021:
   713  064F  2E59               	goto	l1073
   714  0650                     u1020:
   715  0650                     l1069:
   716                           
   717                           ;Exam 1.c: 167:                     dem = 0;
   718  0650  01AB               	clrf	main@dem
   719  0651  01AC               	clrf	main@dem+1
   720                           
   721                           ;Exam 1.c: 168:                     S1_state=0;
   722  0652  01AF               	clrf	main@S1_state
   723  0653                     l1071:
   724                           
   725                           ;Exam 1.c: 169:                     enter_total_number(dem);
   726  0653  3000               	movlw	0
   727  0654  00A0               	movwf	enter_total_number@n
   728  0655  00A1               	movwf	enter_total_number@n+1
   729  0656  3185  255C  3185   	fcall	_enter_total_number
   730  0659                     l1073:
   731                           
   732                           ;Exam 1.c: 172:             if (PORTAbits.RA2 == 1){
   733  0659  0020               	movlb	0	; select bank0
   734  065A  1D0C               	btfss	12,2	;volatile
   735  065B  2E5D               	goto	u1031
   736  065C  2E5E               	goto	u1030
   737  065D                     u1031:
   738  065D  2EB9               	goto	l1113
   739  065E                     u1030:
   740  065E                     l1075:
   741                           
   742                           ;Exam 1.c: 173:                 if ((PORTCbits.RC3 == 0) && (S2_state == 0)) S2_state = 
      +                          1;
   743  065E  198E               	btfsc	14,3	;volatile
   744  065F  2E61               	goto	u1041
   745  0660  2E62               	goto	u1040
   746  0661                     u1041:
   747  0661  2E69               	goto	l88
   748  0662                     u1040:
   749  0662                     l1077:
   750  0662  0830               	movf	main@S2_state,w
   751  0663  1D03               	btfss	3,2
   752  0664  2E66               	goto	u1051
   753  0665  2E67               	goto	u1050
   754  0666                     u1051:
   755  0666  2E69               	goto	l88
   756  0667                     u1050:
   757  0667                     l1079:
   758  0667  01B0               	clrf	main@S2_state
   759  0668  0AB0               	incf	main@S2_state,f
   760  0669                     l88:
   761                           
   762                           ;Exam 1.c: 174:                 if ((PORTCbits.RC3 == 1) && (S2_state == 1)) S2_state = 
      +                          2;
   763  0669  1D8E               	btfss	14,3	;volatile
   764  066A  2E6C               	goto	u1061
   765  066B  2E6D               	goto	u1060
   766  066C                     u1061:
   767  066C  2E76               	goto	l1085
   768  066D                     u1060:
   769  066D                     l1081:
   770  066D  0330               	decf	main@S2_state,w
   771  066E  1D03               	btfss	3,2
   772  066F  2E71               	goto	u1071
   773  0670  2E72               	goto	u1070
   774  0671                     u1071:
   775  0671  2E76               	goto	l1085
   776  0672                     u1070:
   777  0672                     l1083:
   778  0672  3002               	movlw	2
   779  0673  00AA               	movwf	??_main
   780  0674  082A               	movf	??_main,w
   781  0675  00B0               	movwf	main@S2_state
   782  0676                     l1085:
   783                           
   784                           ;Exam 1.c: 175:                 if ((PORTCbits.RC3 == 0) && (S2_state == 2)) S2_state = 
      +                          3;
   785  0676  198E               	btfsc	14,3	;volatile
   786  0677  2E79               	goto	u1081
   787  0678  2E7A               	goto	u1080
   788  0679                     u1081:
   789  0679  2E84               	goto	l1091
   790  067A                     u1080:
   791  067A                     l1087:
   792  067A  3002               	movlw	2
   793  067B  0630               	xorwf	main@S2_state,w
   794  067C  1D03               	btfss	3,2
   795  067D  2E7F               	goto	u1091
   796  067E  2E80               	goto	u1090
   797  067F                     u1091:
   798  067F  2E84               	goto	l1091
   799  0680                     u1090:
   800  0680                     l1089:
   801  0680  3003               	movlw	3
   802  0681  00AA               	movwf	??_main
   803  0682  082A               	movf	??_main,w
   804  0683  00B0               	movwf	main@S2_state
   805  0684                     l1091:
   806                           
   807                           ;Exam 1.c: 177:                 if (S2_state == 3){
   808  0684  3003               	movlw	3
   809  0685  0630               	xorwf	main@S2_state,w
   810  0686  1D03               	btfss	3,2
   811  0687  2E89               	goto	u1101
   812  0688  2E8A               	goto	u1100
   813  0689                     u1101:
   814  0689  2E91               	goto	l1097
   815  068A                     u1100:
   816  068A                     l1093:
   817                           
   818                           ;Exam 1.c: 178:                     dem1 = dem1 + 1;
   819  068A  082D               	movf	main@dem1,w
   820  068B  3E01               	addlw	1
   821  068C  00AD               	movwf	main@dem1
   822  068D  3000               	movlw	0
   823  068E  3D2E               	addwfc	main@dem1+1,w
   824  068F  00AE               	movwf	main@dem1+1
   825  0690                     l1095:
   826                           
   827                           ;Exam 1.c: 179:                     S2_state = 0;
   828  0690  01B0               	clrf	main@S2_state
   829  0691                     l1097:
   830                           
   831                           ;Exam 1.c: 181:                 if (dem1 < 10){
   832  0691  3000               	movlw	0
   833  0692  022E               	subwf	main@dem1+1,w
   834  0693  300A               	movlw	10
   835  0694  1903               	skipnz
   836  0695  022D               	subwf	main@dem1,w
   837  0696  1803               	skipnc
   838  0697  2E99               	goto	u1111
   839  0698  2E9A               	goto	u1110
   840  0699                     u1111:
   841  0699  2E9D               	goto	l1101
   842  069A                     u1110:
   843  069A                     l1099:
   844                           
   845                           ;Exam 1.c: 182:                     LATAbits.LATA4 = 1;
   846  069A  0022               	movlb	2	; select bank2
   847  069B  160C               	bsf	12,4	;volatile
   848                           
   849                           ;Exam 1.c: 183:                 }
   850  069C  2EA3               	goto	l1105
   851  069D                     l1101:
   852                           
   853                           ;Exam 1.c: 185:                     dem1 = 10;
   854  069D  300A               	movlw	10
   855  069E  00AD               	movwf	main@dem1
   856  069F  3000               	movlw	0
   857  06A0  00AE               	movwf	main@dem1+1
   858  06A1                     l1103:
   859                           
   860                           ;Exam 1.c: 186:                     LATAbits.LATA4 = 0;
   861  06A1  0022               	movlb	2	; select bank2
   862  06A2  120C               	bcf	12,4	;volatile
   863  06A3                     l1105:
   864                           
   865                           ;Exam 1.c: 188:                 enter_total_number(dem1);
   866  06A3  0020               	movlb	0	; select bank0
   867  06A4  082E               	movf	main@dem1+1,w
   868  06A5  00A1               	movwf	enter_total_number@n+1
   869  06A6  082D               	movf	main@dem1,w
   870  06A7  00A0               	movwf	enter_total_number@n
   871  06A8  3185  255C  3185   	fcall	_enter_total_number
   872  06AB                     l1107:
   873                           
   874                           ;Exam 1.c: 190:                 if (PORTBbits.RB4 == 1){
   875  06AB  0020               	movlb	0	; select bank0
   876  06AC  1E0D               	btfss	13,4	;volatile
   877  06AD  2EAF               	goto	u1121
   878  06AE  2EB0               	goto	u1120
   879  06AF                     u1121:
   880  06AF  2EB9               	goto	l1113
   881  06B0                     u1120:
   882  06B0                     l1109:
   883                           
   884                           ;Exam 1.c: 191:                     dem1 = 0;
   885  06B0  01AD               	clrf	main@dem1
   886  06B1  01AE               	clrf	main@dem1+1
   887                           
   888                           ;Exam 1.c: 192:                     S2_state=0;
   889  06B2  01B0               	clrf	main@S2_state
   890  06B3                     l1111:
   891                           
   892                           ;Exam 1.c: 193:                     enter_total_number(dem1);
   893  06B3  3000               	movlw	0
   894  06B4  00A0               	movwf	enter_total_number@n
   895  06B5  00A1               	movwf	enter_total_number@n+1
   896  06B6  3185  255C  3185   	fcall	_enter_total_number
   897  06B9                     l1113:
   898                           
   899                           ;Exam 1.c: 197:         if (PORTAbits.RA0 == 0){
   900  06B9  0020               	movlb	0	; select bank0
   901  06BA  180C               	btfsc	12,0	;volatile
   902  06BB  2EBD               	goto	u1131
   903  06BC  2EBE               	goto	u1130
   904  06BD                     u1131:
   905  06BD  2DFA               	goto	l1033
   906  06BE                     u1130:
   907  06BE                     l1115:
   908                           
   909                           ;Exam 1.c: 198:             if (PORTAbits.RA2 == 1){
   910  06BE  1D0C               	btfss	12,2	;volatile
   911  06BF  2EC1               	goto	u1141
   912  06C0  2EC2               	goto	u1140
   913  06C1                     u1141:
   914  06C1  2DFA               	goto	l1033
   915  06C2                     u1140:
   916  06C2                     l1117:
   917                           
   918                           ;Exam 1.c: 199:                 LATAbits.LATA4 = 0;
   919  06C2  0022               	movlb	2	; select bank2
   920  06C3  120C               	bcf	12,4	;volatile
   921  06C4                     l1119:
   922                           
   923                           ;Exam 1.c: 200:                 Data_pulse_with_1(7);
   924  06C4  3007               	movlw	7
   925  06C5  00F4               	movwf	Data_pulse_with_1@n
   926  06C6  3000               	movlw	0
   927  06C7  00F5               	movwf	Data_pulse_with_1@n+1
   928  06C8  3184  243B  3185   	fcall	_Data_pulse_with_1
   929                           
   930                           ;Exam 1.c: 201:                 latch_pulse(1);
   931  06CB  3001               	movlw	1
   932  06CC  00F0               	movwf	latch_pulse@n
   933  06CD  3000               	movlw	0
   934  06CE  00F1               	movwf	latch_pulse@n+1
   935  06CF  3184  246B  3185   	fcall	_latch_pulse
   936  06D2  2DFA               	goto	l1033
   937  06D3  3180  2802         	ljmp	start
   938  06D5                     __end_of_main:
   939                           
   940                           	psect	text1
   941  055C                     __ptext1:	
   942 ;; *************** function _enter_total_number *****************
   943 ;; Defined at:
   944 ;;		line 116 in file "Exam 1.c"
   945 ;; Parameters:    Size  Location     Type
   946 ;;  n               2    0[BANK0 ] unsigned int 
   947 ;; Auto vars:     Size  Location     Type
   948 ;;  c               2    6[BANK0 ] int 
   949 ;;  b               2    4[BANK0 ] int 
   950 ;;  a               2    2[BANK0 ] int 
   951 ;; Return value:  Size  Location     Type
   952 ;;                  1    wreg      void 
   953 ;; Registers used:
   954 ;;		wreg, status,2, status,0, pclath, cstack
   955 ;; Tracked objects:
   956 ;;		On entry : 0/0
   957 ;;		On exit  : 0/0
   958 ;;		Unchanged: 0/0
   959 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
   960 ;;      Params:         0       2       0       0       0       0       0       0
   961 ;;      Locals:         0       8       0       0       0       0       0       0
   962 ;;      Temps:          0       0       0       0       0       0       0       0
   963 ;;      Totals:         0      10       0       0       0       0       0       0
   964 ;;Total ram usage:       10 bytes
   965 ;; Hardware stack levels used: 1
   966 ;; Hardware stack levels required when called: 4
   967 ;; This function calls:
   968 ;;		___awmod
   969 ;;		___lwdiv
   970 ;;		___lwmod
   971 ;;		_enter_number_added
   972 ;;		_enter_number_finish
   973 ;; This function is called by:
   974 ;;		_main
   975 ;; This function uses a non-reentrant model
   976 ;;
   977                           
   978  055C                     _enter_total_number:	
   979                           ;psect for function _enter_total_number
   980                           
   981  055C                     l1021:	
   982                           ;incstack = 0
   983                           ; Regs used in _enter_total_number: [wreg+status,2+status,0+pclath+cstack]
   984                           
   985                           
   986                           ;Exam 1.c: 117:     int a = n/100;
   987  055C  3064               	movlw	100
   988  055D  00F6               	movwf	___lwdiv@divisor
   989  055E  3000               	movlw	0
   990  055F  00F7               	movwf	___lwdiv@divisor+1
   991  0560  0020               	movlb	0	; select bank0
   992  0561  0821               	movf	enter_total_number@n+1,w
   993  0562  00F9               	movwf	___lwdiv@dividend+1
   994  0563  0820               	movf	enter_total_number@n,w
   995  0564  00F8               	movwf	___lwdiv@dividend
   996  0565  3184  24CD  3185   	fcall	___lwdiv
   997  0568  0877               	movf	?___lwdiv+1,w
   998  0569  0020               	movlb	0	; select bank0
   999  056A  00A3               	movwf	enter_total_number@a+1
  1000  056B  0876               	movf	?___lwdiv,w
  1001  056C  00A2               	movwf	enter_total_number@a
  1002                           
  1003                           ;Exam 1.c: 118:     int b = (n%100)/10;
  1004  056D  300A               	movlw	10
  1005  056E  00F6               	movwf	___lwdiv@divisor
  1006  056F  3000               	movlw	0
  1007  0570  00F7               	movwf	___lwdiv@divisor+1
  1008  0571  0821               	movf	enter_total_number@n+1,w
  1009  0572  00F3               	movwf	___lwmod@dividend+1
  1010  0573  0820               	movf	enter_total_number@n,w
  1011  0574  00F2               	movwf	___lwmod@dividend
  1012  0575  3064               	movlw	100
  1013  0576  00F0               	movwf	___lwmod@divisor
  1014  0577  3000               	movlw	0
  1015  0578  00F1               	movwf	___lwmod@divisor+1
  1016  0579  3184  2499  3185   	fcall	___lwmod
  1017  057C  0871               	movf	?___lwmod+1,w
  1018  057D  00F9               	movwf	___lwdiv@dividend+1
  1019  057E  0870               	movf	?___lwmod,w
  1020  057F  00F8               	movwf	___lwdiv@dividend
  1021  0580  3184  24CD  3185   	fcall	___lwdiv
  1022  0583  0877               	movf	?___lwdiv+1,w
  1023  0584  0020               	movlb	0	; select bank0
  1024  0585  00A5               	movwf	enter_total_number@b+1
  1025  0586  0876               	movf	?___lwdiv,w
  1026  0587  00A4               	movwf	enter_total_number@b
  1027                           
  1028                           ;Exam 1.c: 119:     int c = (n%100)%10;
  1029  0588  0821               	movf	enter_total_number@n+1,w
  1030  0589  00F3               	movwf	___lwmod@dividend+1
  1031  058A  0820               	movf	enter_total_number@n,w
  1032  058B  00F2               	movwf	___lwmod@dividend
  1033  058C  3064               	movlw	100
  1034  058D  00F0               	movwf	___lwmod@divisor
  1035  058E  3000               	movlw	0
  1036  058F  00F1               	movwf	___lwmod@divisor+1
  1037  0590  3184  2499  3185   	fcall	___lwmod
  1038  0593  0871               	movf	?___lwmod+1,w
  1039  0594  0020               	movlb	0	; select bank0
  1040  0595  00A9               	movwf	_enter_total_number$706+1
  1041  0596  0870               	movf	?___lwmod,w
  1042  0597  00A8               	movwf	_enter_total_number$706
  1043                           
  1044                           ;Exam 1.c: 119:     int c = (n%100)%10;
  1045  0598  300A               	movlw	10
  1046  0599  00F0               	movwf	___lwmod@divisor
  1047  059A  3000               	movlw	0
  1048  059B  00F1               	movwf	___lwmod@divisor+1
  1049  059C  0829               	movf	_enter_total_number$706+1,w
  1050  059D  00F3               	movwf	___lwmod@dividend+1
  1051  059E  0828               	movf	_enter_total_number$706,w
  1052  059F  00F2               	movwf	___lwmod@dividend
  1053  05A0  3184  2499  3185   	fcall	___lwmod
  1054  05A3  0871               	movf	?___lwmod+1,w
  1055  05A4  0020               	movlb	0	; select bank0
  1056  05A5  00A7               	movwf	enter_total_number@c+1
  1057  05A6  0870               	movf	?___lwmod,w
  1058  05A7  00A6               	movwf	enter_total_number@c
  1059                           
  1060                           ;Exam 1.c: 121:     enter_number_added((unsigned int)(c%10));
  1061  05A8  300A               	movlw	10
  1062  05A9  00F0               	movwf	___awmod@divisor
  1063  05AA  3000               	movlw	0
  1064  05AB  00F1               	movwf	___awmod@divisor+1
  1065  05AC  0827               	movf	enter_total_number@c+1,w
  1066  05AD  00F3               	movwf	___awmod@dividend+1
  1067  05AE  0826               	movf	enter_total_number@c,w
  1068  05AF  00F2               	movwf	___awmod@dividend
  1069  05B0  3185  2509  3185   	fcall	___awmod
  1070  05B3  0871               	movf	?___awmod+1,w
  1071  05B4  00F9               	movwf	enter_number_added@n+1
  1072  05B5  0870               	movf	?___awmod,w
  1073  05B6  00F8               	movwf	enter_number_added@n
  1074  05B7  3184  2445  3185   	fcall	_enter_number_added
  1075                           
  1076                           ;Exam 1.c: 122:     enter_number_added((unsigned int)(b%10));
  1077  05BA  300A               	movlw	10
  1078  05BB  00F0               	movwf	___awmod@divisor
  1079  05BC  3000               	movlw	0
  1080  05BD  00F1               	movwf	___awmod@divisor+1
  1081  05BE  0020               	movlb	0	; select bank0
  1082  05BF  0825               	movf	enter_total_number@b+1,w
  1083  05C0  00F3               	movwf	___awmod@dividend+1
  1084  05C1  0824               	movf	enter_total_number@b,w
  1085  05C2  00F2               	movwf	___awmod@dividend
  1086  05C3  3185  2509  3185   	fcall	___awmod
  1087  05C6  0871               	movf	?___awmod+1,w
  1088  05C7  00F9               	movwf	enter_number_added@n+1
  1089  05C8  0870               	movf	?___awmod,w
  1090  05C9  00F8               	movwf	enter_number_added@n
  1091  05CA  3184  2445  3185   	fcall	_enter_number_added
  1092                           
  1093                           ;Exam 1.c: 123:     enter_number_finish((unsigned int)(a%10));
  1094  05CD  300A               	movlw	10
  1095  05CE  00F0               	movwf	___awmod@divisor
  1096  05CF  3000               	movlw	0
  1097  05D0  00F1               	movwf	___awmod@divisor+1
  1098  05D1  0020               	movlb	0	; select bank0
  1099  05D2  0823               	movf	enter_total_number@a+1,w
  1100  05D3  00F3               	movwf	___awmod@dividend+1
  1101  05D4  0822               	movf	enter_total_number@a,w
  1102  05D5  00F2               	movwf	___awmod@dividend
  1103  05D6  3185  2509  3185   	fcall	___awmod
  1104  05D9  0871               	movf	?___awmod+1,w
  1105  05DA  00F9               	movwf	enter_number_finish@n+1
  1106  05DB  0870               	movf	?___awmod,w
  1107  05DC  00F8               	movwf	enter_number_finish@n
  1108  05DD  3184  2482  3185   	fcall	_enter_number_finish
  1109  05E0                     l73:
  1110  05E0  0008               	return
  1111  05E1                     __end_of_enter_total_number:
  1112                           
  1113                           	psect	text2
  1114  0482                     __ptext2:	
  1115 ;; *************** function _enter_number_finish *****************
  1116 ;; Defined at:
  1117 ;;		line 110 in file "Exam 1.c"
  1118 ;; Parameters:    Size  Location     Type
  1119 ;;  n               2    8[COMMON] unsigned int 
  1120 ;; Auto vars:     Size  Location     Type
  1121 ;;		None
  1122 ;; Return value:  Size  Location     Type
  1123 ;;                  1    wreg      void 
  1124 ;; Registers used:
  1125 ;;		wreg, status,2, status,0, pclath, cstack
  1126 ;; Tracked objects:
  1127 ;;		On entry : 0/0
  1128 ;;		On exit  : 0/0
  1129 ;;		Unchanged: 0/0
  1130 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  1131 ;;      Params:         2       0       0       0       0       0       0       0
  1132 ;;      Locals:         0       0       0       0       0       0       0       0
  1133 ;;      Temps:          1       0       0       0       0       0       0       0
  1134 ;;      Totals:         3       0       0       0       0       0       0       0
  1135 ;;Total ram usage:        3 bytes
  1136 ;; Hardware stack levels used: 1
  1137 ;; Hardware stack levels required when called: 3
  1138 ;; This function calls:
  1139 ;;		_display_7segment
  1140 ;;		_latch_pulse
  1141 ;; This function is called by:
  1142 ;;		_enter_total_number
  1143 ;; This function uses a non-reentrant model
  1144 ;;
  1145                           
  1146  0482                     _enter_number_finish:	
  1147                           ;psect for function _enter_number_finish
  1148                           
  1149  0482                     l931:	
  1150                           ;incstack = 0
  1151                           ; Regs used in _enter_number_finish: [wreg+status,2+status,0+pclath+cstack]
  1152                           
  1153                           
  1154                           ;Exam 1.c: 111:     display_7segment(n);
  1155  0482  0879               	movf	enter_number_finish@n+1,w
  1156  0483  00F7               	movwf	display_7segment@n+1
  1157  0484  0878               	movf	enter_number_finish@n,w
  1158  0485  00F6               	movwf	display_7segment@n
  1159  0486  3186  26D5  3184   	fcall	_display_7segment
  1160                           
  1161                           ;Exam 1.c: 112:     latch_pulse(1);
  1162  0489  3001               	movlw	1
  1163  048A  00F0               	movwf	latch_pulse@n
  1164  048B  3000               	movlw	0
  1165  048C  00F1               	movwf	latch_pulse@n+1
  1166  048D  3184  246B  3184   	fcall	_latch_pulse
  1167  0490                     l933:
  1168                           
  1169                           ;Exam 1.c: 113:     _delay((unsigned long)((70)*(1000000/4000.0)));
  1170  0490  3017               	movlw	23
  1171  0491  00FA               	movwf	??_enter_number_finish
  1172  0492  30B9               	movlw	185
  1173  0493                     u1157:
  1174  0493  0B89               	decfsz	9,f
  1175  0494  2C93               	goto	u1157
  1176  0495  0BFA               	decfsz	??_enter_number_finish,f
  1177  0496  2C93               	goto	u1157
  1178  0497  0000               	nop
  1179  0498                     l70:
  1180  0498  0008               	return
  1181  0499                     __end_of_enter_number_finish:
  1182                           
  1183                           	psect	text3
  1184  046B                     __ptext3:	
  1185 ;; *************** function _latch_pulse *****************
  1186 ;; Defined at:
  1187 ;;		line 33 in file "Exam 1.c"
  1188 ;; Parameters:    Size  Location     Type
  1189 ;;  n               2    0[COMMON] unsigned int 
  1190 ;; Auto vars:     Size  Location     Type
  1191 ;;  i               2    2[COMMON] unsigned int 
  1192 ;; Return value:  Size  Location     Type
  1193 ;;                  1    wreg      void 
  1194 ;; Registers used:
  1195 ;;		wreg, status,2
  1196 ;; Tracked objects:
  1197 ;;		On entry : 0/0
  1198 ;;		On exit  : 0/0
  1199 ;;		Unchanged: 0/0
  1200 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  1201 ;;      Params:         2       0       0       0       0       0       0       0
  1202 ;;      Locals:         2       0       0       0       0       0       0       0
  1203 ;;      Temps:          0       0       0       0       0       0       0       0
  1204 ;;      Totals:         4       0       0       0       0       0       0       0
  1205 ;;Total ram usage:        4 bytes
  1206 ;; Hardware stack levels used: 1
  1207 ;; This function calls:
  1208 ;;		Nothing
  1209 ;; This function is called by:
  1210 ;;		_enter_number_finish
  1211 ;;		_main
  1212 ;; This function uses a non-reentrant model
  1213 ;;
  1214                           
  1215  046B                     _latch_pulse:	
  1216                           ;psect for function _latch_pulse
  1217                           
  1218  046B                     l885:	
  1219                           ;incstack = 0
  1220                           ; Regs used in _latch_pulse: [wreg+status,2]
  1221                           
  1222                           
  1223                           ;Exam 1.c: 34:     unsigned int i=0;
  1224  046B  01F2               	clrf	latch_pulse@i
  1225  046C  01F3               	clrf	latch_pulse@i+1
  1226                           
  1227                           ;Exam 1.c: 35:     for (i=0 ; i<n ; i++){
  1228  046D  01F2               	clrf	latch_pulse@i
  1229  046E  01F3               	clrf	latch_pulse@i+1
  1230  046F  2C77               	goto	l33
  1231  0470                     l34:
  1232                           
  1233                           ;Exam 1.c: 36:         LATCbits.LATC2 = 1;
  1234  0470  0022               	movlb	2	; select bank2
  1235  0471  150E               	bsf	14,2	;volatile
  1236                           
  1237                           ;Exam 1.c: 37:         LATCbits.LATC2 = 0;
  1238  0472  110E               	bcf	14,2	;volatile
  1239  0473                     l887:
  1240                           
  1241                           ;Exam 1.c: 38:     }
  1242  0473  3001               	movlw	1
  1243  0474  07F2               	addwf	latch_pulse@i,f
  1244  0475  3000               	movlw	0
  1245  0476  3DF3               	addwfc	latch_pulse@i+1,f
  1246  0477                     l33:
  1247  0477  0871               	movf	latch_pulse@n+1,w
  1248  0478  0273               	subwf	latch_pulse@i+1,w
  1249  0479  1D03               	skipz
  1250  047A  2C7D               	goto	u595
  1251  047B  0870               	movf	latch_pulse@n,w
  1252  047C  0272               	subwf	latch_pulse@i,w
  1253  047D                     u595:
  1254  047D  1C03               	skipc
  1255  047E  2C80               	goto	u591
  1256  047F  2C81               	goto	u590
  1257  0480                     u591:
  1258  0480  2C70               	goto	l34
  1259  0481                     u590:
  1260  0481                     l36:
  1261  0481  0008               	return
  1262  0482                     __end_of_latch_pulse:
  1263                           
  1264                           	psect	text4
  1265  0445                     __ptext4:	
  1266 ;; *************** function _enter_number_added *****************
  1267 ;; Defined at:
  1268 ;;		line 105 in file "Exam 1.c"
  1269 ;; Parameters:    Size  Location     Type
  1270 ;;  n               2    8[COMMON] unsigned int 
  1271 ;; Auto vars:     Size  Location     Type
  1272 ;;		None
  1273 ;; Return value:  Size  Location     Type
  1274 ;;                  1    wreg      void 
  1275 ;; Registers used:
  1276 ;;		wreg, status,2, status,0, pclath, cstack
  1277 ;; Tracked objects:
  1278 ;;		On entry : 0/0
  1279 ;;		On exit  : 0/0
  1280 ;;		Unchanged: 0/0
  1281 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  1282 ;;      Params:         2       0       0       0       0       0       0       0
  1283 ;;      Locals:         0       0       0       0       0       0       0       0
  1284 ;;      Temps:          0       0       0       0       0       0       0       0
  1285 ;;      Totals:         2       0       0       0       0       0       0       0
  1286 ;;Total ram usage:        2 bytes
  1287 ;; Hardware stack levels used: 1
  1288 ;; Hardware stack levels required when called: 3
  1289 ;; This function calls:
  1290 ;;		_clk_pulse
  1291 ;;		_display_7segment
  1292 ;; This function is called by:
  1293 ;;		_enter_total_number
  1294 ;; This function uses a non-reentrant model
  1295 ;;
  1296                           
  1297  0445                     _enter_number_added:	
  1298                           ;psect for function _enter_number_added
  1299                           
  1300  0445                     l929:	
  1301                           ;incstack = 0
  1302                           ; Regs used in _enter_number_added: [wreg+status,2+status,0+pclath+cstack]
  1303                           
  1304                           
  1305                           ;Exam 1.c: 106:     display_7segment(n);
  1306  0445  0879               	movf	enter_number_added@n+1,w
  1307  0446  00F7               	movwf	display_7segment@n+1
  1308  0447  0878               	movf	enter_number_added@n,w
  1309  0448  00F6               	movwf	display_7segment@n
  1310  0449  3186  26D5  3184   	fcall	_display_7segment
  1311                           
  1312                           ;Exam 1.c: 107:     clk_pulse(1);
  1313  044C  3001               	movlw	1
  1314  044D  00F0               	movwf	clk_pulse@n
  1315  044E  3000               	movlw	0
  1316  044F  00F1               	movwf	clk_pulse@n+1
  1317  0450  3184  2454  3184   	fcall	_clk_pulse
  1318  0453                     l67:
  1319  0453  0008               	return
  1320  0454                     __end_of_enter_number_added:
  1321                           
  1322                           	psect	text5
  1323  06D5                     __ptext5:	
  1324 ;; *************** function _display_7segment *****************
  1325 ;; Defined at:
  1326 ;;		line 51 in file "Exam 1.c"
  1327 ;; Parameters:    Size  Location     Type
  1328 ;;  n               2    6[COMMON] unsigned int 
  1329 ;; Auto vars:     Size  Location     Type
  1330 ;;		None
  1331 ;; Return value:  Size  Location     Type
  1332 ;;                  1    wreg      void 
  1333 ;; Registers used:
  1334 ;;		wreg, status,2, status,0, pclath, cstack
  1335 ;; Tracked objects:
  1336 ;;		On entry : 0/0
  1337 ;;		On exit  : 0/0
  1338 ;;		Unchanged: 0/0
  1339 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  1340 ;;      Params:         2       0       0       0       0       0       0       0
  1341 ;;      Locals:         0       0       0       0       0       0       0       0
  1342 ;;      Temps:          0       0       0       0       0       0       0       0
  1343 ;;      Totals:         2       0       0       0       0       0       0       0
  1344 ;;Total ram usage:        2 bytes
  1345 ;; Hardware stack levels used: 1
  1346 ;; Hardware stack levels required when called: 2
  1347 ;; This function calls:
  1348 ;;		_Data_pulse_with_0
  1349 ;;		_Data_pulse_with_1
  1350 ;; This function is called by:
  1351 ;;		_enter_number_added
  1352 ;;		_enter_number_finish
  1353 ;; This function uses a non-reentrant model
  1354 ;;
  1355                           
  1356  06D5                     _display_7segment:	
  1357                           ;psect for function _display_7segment
  1358                           
  1359  06D5                     l889:	
  1360                           ;incstack = 0
  1361                           ; Regs used in _display_7segment: [wreg+status,2+status,0+pclath+cstack]
  1362                           
  1363                           
  1364                           ;Exam 1.c: 52:     if (n==0){
  1365  06D5  0876               	movf	display_7segment@n,w
  1366  06D6  0477               	iorwf	display_7segment@n+1,w
  1367  06D7  1D03               	btfss	3,2
  1368  06D8  2EDA               	goto	u601
  1369  06D9  2EDB               	goto	u600
  1370  06DA                     u601:
  1371  06DA  2EEA               	goto	l893
  1372  06DB                     u600:
  1373  06DB                     l891:
  1374                           
  1375                           ;Exam 1.c: 53:         Data_pulse_with_1(1);
  1376  06DB  3001               	movlw	1
  1377  06DC  00F4               	movwf	Data_pulse_with_1@n
  1378  06DD  3000               	movlw	0
  1379  06DE  00F5               	movwf	Data_pulse_with_1@n+1
  1380  06DF  3184  243B  3186   	fcall	_Data_pulse_with_1
  1381                           
  1382                           ;Exam 1.c: 54:         Data_pulse_with_0(6);
  1383  06E2  3006               	movlw	6
  1384  06E3  00F4               	movwf	Data_pulse_with_0@n
  1385  06E4  3000               	movlw	0
  1386  06E5  00F5               	movwf	Data_pulse_with_0@n+1
  1387  06E6  3184  2431  3186   	fcall	_Data_pulse_with_0
  1388                           
  1389                           ;Exam 1.c: 55:     }
  1390  06E9  2FFC               	goto	l64
  1391  06EA                     l893:
  1392  06EA  0376               	decf	display_7segment@n,w
  1393  06EB  0477               	iorwf	display_7segment@n+1,w
  1394  06EC  1D03               	btfss	3,2
  1395  06ED  2EEF               	goto	u611
  1396  06EE  2EF0               	goto	u610
  1397  06EF                     u611:
  1398  06EF  2F06               	goto	l897
  1399  06F0                     u610:
  1400  06F0                     l895:
  1401                           
  1402                           ;Exam 1.c: 57:         Data_pulse_with_1(4);
  1403  06F0  3004               	movlw	4
  1404  06F1  00F4               	movwf	Data_pulse_with_1@n
  1405  06F2  3000               	movlw	0
  1406  06F3  00F5               	movwf	Data_pulse_with_1@n+1
  1407  06F4  3184  243B  3186   	fcall	_Data_pulse_with_1
  1408                           
  1409                           ;Exam 1.c: 58:         Data_pulse_with_0(2);
  1410  06F7  3002               	movlw	2
  1411  06F8  00F4               	movwf	Data_pulse_with_0@n
  1412  06F9  3000               	movlw	0
  1413  06FA  00F5               	movwf	Data_pulse_with_0@n+1
  1414  06FB  3184  2431  3186   	fcall	_Data_pulse_with_0
  1415                           
  1416                           ;Exam 1.c: 59:         Data_pulse_with_1(1);
  1417  06FE  3001               	movlw	1
  1418  06FF  00F4               	movwf	Data_pulse_with_1@n
  1419  0700  3000               	movlw	0
  1420  0701  00F5               	movwf	Data_pulse_with_1@n+1
  1421  0702  3184  243B  3186   	fcall	_Data_pulse_with_1
  1422                           
  1423                           ;Exam 1.c: 60:     }
  1424  0705  2FFC               	goto	l64
  1425  0706                     l897:
  1426  0706  3002               	movlw	2
  1427  0707  0676               	xorwf	display_7segment@n,w
  1428  0708  0477               	iorwf	display_7segment@n+1,w
  1429  0709  1D03               	btfss	3,2
  1430  070A  2F0C               	goto	u621
  1431  070B  2F0D               	goto	u620
  1432  070C                     u621:
  1433  070C  2F31               	goto	l901
  1434  070D                     u620:
  1435  070D                     l899:
  1436                           
  1437                           ;Exam 1.c: 62:         Data_pulse_with_0(1);
  1438  070D  3001               	movlw	1
  1439  070E  00F4               	movwf	Data_pulse_with_0@n
  1440  070F  3000               	movlw	0
  1441  0710  00F5               	movwf	Data_pulse_with_0@n+1
  1442  0711  3184  2431  3186   	fcall	_Data_pulse_with_0
  1443                           
  1444                           ;Exam 1.c: 63:         Data_pulse_with_1(1);
  1445  0714  3001               	movlw	1
  1446  0715  00F4               	movwf	Data_pulse_with_1@n
  1447  0716  3000               	movlw	0
  1448  0717  00F5               	movwf	Data_pulse_with_1@n+1
  1449  0718  3184  243B  3186   	fcall	_Data_pulse_with_1
  1450                           
  1451                           ;Exam 1.c: 64:         Data_pulse_with_0(2);
  1452  071B  3002               	movlw	2
  1453  071C  00F4               	movwf	Data_pulse_with_0@n
  1454  071D  3000               	movlw	0
  1455  071E  00F5               	movwf	Data_pulse_with_0@n+1
  1456  071F  3184  2431  3186   	fcall	_Data_pulse_with_0
  1457                           
  1458                           ;Exam 1.c: 65:         Data_pulse_with_1(1);
  1459  0722  3001               	movlw	1
  1460  0723  00F4               	movwf	Data_pulse_with_1@n
  1461  0724  3000               	movlw	0
  1462  0725  00F5               	movwf	Data_pulse_with_1@n+1
  1463  0726  3184  243B  3186   	fcall	_Data_pulse_with_1
  1464                           
  1465                           ;Exam 1.c: 66:         Data_pulse_with_0(2);
  1466  0729  3002               	movlw	2
  1467  072A  00F4               	movwf	Data_pulse_with_0@n
  1468  072B  3000               	movlw	0
  1469  072C  00F5               	movwf	Data_pulse_with_0@n+1
  1470  072D  3184  2431  3186   	fcall	_Data_pulse_with_0
  1471                           
  1472                           ;Exam 1.c: 67:     }
  1473  0730  2FFC               	goto	l64
  1474  0731                     l901:
  1475  0731  3003               	movlw	3
  1476  0732  0676               	xorwf	display_7segment@n,w
  1477  0733  0477               	iorwf	display_7segment@n+1,w
  1478  0734  1D03               	btfss	3,2
  1479  0735  2F37               	goto	u631
  1480  0736  2F38               	goto	u630
  1481  0737                     u631:
  1482  0737  2F4E               	goto	l905
  1483  0738                     u630:
  1484  0738                     l903:
  1485                           
  1486                           ;Exam 1.c: 69:         Data_pulse_with_0(1);
  1487  0738  3001               	movlw	1
  1488  0739  00F4               	movwf	Data_pulse_with_0@n
  1489  073A  3000               	movlw	0
  1490  073B  00F5               	movwf	Data_pulse_with_0@n+1
  1491  073C  3184  2431  3186   	fcall	_Data_pulse_with_0
  1492                           
  1493                           ;Exam 1.c: 70:         Data_pulse_with_1(2);
  1494  073F  3002               	movlw	2
  1495  0740  00F4               	movwf	Data_pulse_with_1@n
  1496  0741  3000               	movlw	0
  1497  0742  00F5               	movwf	Data_pulse_with_1@n+1
  1498  0743  3184  243B  3186   	fcall	_Data_pulse_with_1
  1499                           
  1500                           ;Exam 1.c: 71:         Data_pulse_with_0(4);
  1501  0746  3004               	movlw	4
  1502  0747  00F4               	movwf	Data_pulse_with_0@n
  1503  0748  3000               	movlw	0
  1504  0749  00F5               	movwf	Data_pulse_with_0@n+1
  1505  074A  3184  2431  3186   	fcall	_Data_pulse_with_0
  1506                           
  1507                           ;Exam 1.c: 72:     }
  1508  074D  2FFC               	goto	l64
  1509  074E                     l905:
  1510  074E  3004               	movlw	4
  1511  074F  0676               	xorwf	display_7segment@n,w
  1512  0750  0477               	iorwf	display_7segment@n+1,w
  1513  0751  1D03               	btfss	3,2
  1514  0752  2F54               	goto	u641
  1515  0753  2F55               	goto	u640
  1516  0754                     u641:
  1517  0754  2F72               	goto	l909
  1518  0755                     u640:
  1519  0755                     l907:
  1520                           
  1521                           ;Exam 1.c: 74:         Data_pulse_with_0(2);
  1522  0755  3002               	movlw	2
  1523  0756  00F4               	movwf	Data_pulse_with_0@n
  1524  0757  3000               	movlw	0
  1525  0758  00F5               	movwf	Data_pulse_with_0@n+1
  1526  0759  3184  2431  3186   	fcall	_Data_pulse_with_0
  1527                           
  1528                           ;Exam 1.c: 75:         Data_pulse_with_1(2);
  1529  075C  3002               	movlw	2
  1530  075D  00F4               	movwf	Data_pulse_with_1@n
  1531  075E  3000               	movlw	0
  1532  075F  00F5               	movwf	Data_pulse_with_1@n+1
  1533  0760  3184  243B  3186   	fcall	_Data_pulse_with_1
  1534                           
  1535                           ;Exam 1.c: 76:         Data_pulse_with_0(2);
  1536  0763  3002               	movlw	2
  1537  0764  00F4               	movwf	Data_pulse_with_0@n
  1538  0765  3000               	movlw	0
  1539  0766  00F5               	movwf	Data_pulse_with_0@n+1
  1540  0767  3184  2431  3186   	fcall	_Data_pulse_with_0
  1541                           
  1542                           ;Exam 1.c: 77:         Data_pulse_with_1(1);
  1543  076A  3001               	movlw	1
  1544  076B  00F4               	movwf	Data_pulse_with_1@n
  1545  076C  3000               	movlw	0
  1546  076D  00F5               	movwf	Data_pulse_with_1@n+1
  1547  076E  3184  243B  3186   	fcall	_Data_pulse_with_1
  1548                           
  1549                           ;Exam 1.c: 78:     }
  1550  0771  2FFC               	goto	l64
  1551  0772                     l909:
  1552  0772  3005               	movlw	5
  1553  0773  0676               	xorwf	display_7segment@n,w
  1554  0774  0477               	iorwf	display_7segment@n+1,w
  1555  0775  1D03               	btfss	3,2
  1556  0776  2F78               	goto	u651
  1557  0777  2F79               	goto	u650
  1558  0778                     u651:
  1559  0778  2F9D               	goto	l913
  1560  0779                     u650:
  1561  0779                     l911:
  1562                           
  1563                           ;Exam 1.c: 80:         Data_pulse_with_0(2);
  1564  0779  3002               	movlw	2
  1565  077A  00F4               	movwf	Data_pulse_with_0@n
  1566  077B  3000               	movlw	0
  1567  077C  00F5               	movwf	Data_pulse_with_0@n+1
  1568  077D  3184  2431  3186   	fcall	_Data_pulse_with_0
  1569                           
  1570                           ;Exam 1.c: 81:         Data_pulse_with_1(1);
  1571  0780  3001               	movlw	1
  1572  0781  00F4               	movwf	Data_pulse_with_1@n
  1573  0782  3000               	movlw	0
  1574  0783  00F5               	movwf	Data_pulse_with_1@n+1
  1575  0784  3184  243B  3186   	fcall	_Data_pulse_with_1
  1576                           
  1577                           ;Exam 1.c: 82:         Data_pulse_with_0(2);
  1578  0787  3002               	movlw	2
  1579  0788  00F4               	movwf	Data_pulse_with_0@n
  1580  0789  3000               	movlw	0
  1581  078A  00F5               	movwf	Data_pulse_with_0@n+1
  1582  078B  3184  2431  3186   	fcall	_Data_pulse_with_0
  1583                           
  1584                           ;Exam 1.c: 83:         Data_pulse_with_1(1);
  1585  078E  3001               	movlw	1
  1586  078F  00F4               	movwf	Data_pulse_with_1@n
  1587  0790  3000               	movlw	0
  1588  0791  00F5               	movwf	Data_pulse_with_1@n+1
  1589  0792  3184  243B  3186   	fcall	_Data_pulse_with_1
  1590                           
  1591                           ;Exam 1.c: 84:         Data_pulse_with_0(1);
  1592  0795  3001               	movlw	1
  1593  0796  00F4               	movwf	Data_pulse_with_0@n
  1594  0797  3000               	movlw	0
  1595  0798  00F5               	movwf	Data_pulse_with_0@n+1
  1596  0799  3184  2431  3186   	fcall	_Data_pulse_with_0
  1597                           
  1598                           ;Exam 1.c: 85:     }
  1599  079C  2FFC               	goto	l64
  1600  079D                     l913:
  1601  079D  3006               	movlw	6
  1602  079E  0676               	xorwf	display_7segment@n,w
  1603  079F  0477               	iorwf	display_7segment@n+1,w
  1604  07A0  1D03               	btfss	3,2
  1605  07A1  2FA3               	goto	u661
  1606  07A2  2FA4               	goto	u660
  1607  07A3                     u661:
  1608  07A3  2FBA               	goto	l917
  1609  07A4                     u660:
  1610  07A4                     l915:
  1611                           
  1612                           ;Exam 1.c: 87:         Data_pulse_with_0(5);
  1613  07A4  3005               	movlw	5
  1614  07A5  00F4               	movwf	Data_pulse_with_0@n
  1615  07A6  3000               	movlw	0
  1616  07A7  00F5               	movwf	Data_pulse_with_0@n+1
  1617  07A8  3184  2431  3186   	fcall	_Data_pulse_with_0
  1618                           
  1619                           ;Exam 1.c: 88:         Data_pulse_with_1(1);
  1620  07AB  3001               	movlw	1
  1621  07AC  00F4               	movwf	Data_pulse_with_1@n
  1622  07AD  3000               	movlw	0
  1623  07AE  00F5               	movwf	Data_pulse_with_1@n+1
  1624  07AF  3184  243B  3186   	fcall	_Data_pulse_with_1
  1625                           
  1626                           ;Exam 1.c: 89:         Data_pulse_with_0(1);
  1627  07B2  3001               	movlw	1
  1628  07B3  00F4               	movwf	Data_pulse_with_0@n
  1629  07B4  3000               	movlw	0
  1630  07B5  00F5               	movwf	Data_pulse_with_0@n+1
  1631  07B6  3184  2431  3186   	fcall	_Data_pulse_with_0
  1632                           
  1633                           ;Exam 1.c: 90:     }
  1634  07B9  2FFC               	goto	l64
  1635  07BA                     l917:
  1636  07BA  3007               	movlw	7
  1637  07BB  0676               	xorwf	display_7segment@n,w
  1638  07BC  0477               	iorwf	display_7segment@n+1,w
  1639  07BD  1D03               	btfss	3,2
  1640  07BE  2FC0               	goto	u671
  1641  07BF  2FC1               	goto	u670
  1642  07C0                     u671:
  1643  07C0  2FD0               	goto	l921
  1644  07C1                     u670:
  1645  07C1                     l919:
  1646                           
  1647                           ;Exam 1.c: 92:         Data_pulse_with_1(4);
  1648  07C1  3004               	movlw	4
  1649  07C2  00F4               	movwf	Data_pulse_with_1@n
  1650  07C3  3000               	movlw	0
  1651  07C4  00F5               	movwf	Data_pulse_with_1@n+1
  1652  07C5  3184  243B  3186   	fcall	_Data_pulse_with_1
  1653                           
  1654                           ;Exam 1.c: 93:         Data_pulse_with_0(3);
  1655  07C8  3003               	movlw	3
  1656  07C9  00F4               	movwf	Data_pulse_with_0@n
  1657  07CA  3000               	movlw	0
  1658  07CB  00F5               	movwf	Data_pulse_with_0@n+1
  1659  07CC  3184  2431  3186   	fcall	_Data_pulse_with_0
  1660                           
  1661                           ;Exam 1.c: 94:     }
  1662  07CF  2FFC               	goto	l64
  1663  07D0                     l921:
  1664  07D0  3008               	movlw	8
  1665  07D1  0676               	xorwf	display_7segment@n,w
  1666  07D2  0477               	iorwf	display_7segment@n+1,w
  1667  07D3  1D03               	btfss	3,2
  1668  07D4  2FD6               	goto	u681
  1669  07D5  2FD7               	goto	u680
  1670  07D6                     u681:
  1671  07D6  2FDF               	goto	l925
  1672  07D7                     u680:
  1673  07D7                     l923:
  1674                           
  1675                           ;Exam 1.c: 96:         Data_pulse_with_0(7);
  1676  07D7  3007               	movlw	7
  1677  07D8  00F4               	movwf	Data_pulse_with_0@n
  1678  07D9  3000               	movlw	0
  1679  07DA  00F5               	movwf	Data_pulse_with_0@n+1
  1680  07DB  3184  2431  3186   	fcall	_Data_pulse_with_0
  1681                           
  1682                           ;Exam 1.c: 97:     }
  1683  07DE  2FFC               	goto	l64
  1684  07DF                     l925:
  1685  07DF  3009               	movlw	9
  1686  07E0  0676               	xorwf	display_7segment@n,w
  1687  07E1  0477               	iorwf	display_7segment@n+1,w
  1688  07E2  1D03               	btfss	3,2
  1689  07E3  2FE5               	goto	u691
  1690  07E4  2FE6               	goto	u690
  1691  07E5                     u691:
  1692  07E5  2FFC               	goto	l58
  1693  07E6                     u690:
  1694  07E6                     l927:
  1695                           
  1696                           ;Exam 1.c: 99:         Data_pulse_with_0(2);
  1697  07E6  3002               	movlw	2
  1698  07E7  00F4               	movwf	Data_pulse_with_0@n
  1699  07E8  3000               	movlw	0
  1700  07E9  00F5               	movwf	Data_pulse_with_0@n+1
  1701  07EA  3184  2431  3186   	fcall	_Data_pulse_with_0
  1702                           
  1703                           ;Exam 1.c: 100:         Data_pulse_with_1(1);
  1704  07ED  3001               	movlw	1
  1705  07EE  00F4               	movwf	Data_pulse_with_1@n
  1706  07EF  3000               	movlw	0
  1707  07F0  00F5               	movwf	Data_pulse_with_1@n+1
  1708  07F1  3184  243B  3186   	fcall	_Data_pulse_with_1
  1709                           
  1710                           ;Exam 1.c: 101:         Data_pulse_with_0(4);
  1711  07F4  3004               	movlw	4
  1712  07F5  00F4               	movwf	Data_pulse_with_0@n
  1713  07F6  3000               	movlw	0
  1714  07F7  00F5               	movwf	Data_pulse_with_0@n+1
  1715  07F8  3184  2431  3186   	fcall	_Data_pulse_with_0
  1716  07FB  2FFC               	goto	l64
  1717  07FC                     l58:
  1718  07FC                     l64:
  1719  07FC  0008               	return
  1720  07FD                     __end_of_display_7segment:
  1721                           
  1722                           	psect	text6
  1723  043B                     __ptext6:	
  1724 ;; *************** function _Data_pulse_with_1 *****************
  1725 ;; Defined at:
  1726 ;;		line 41 in file "Exam 1.c"
  1727 ;; Parameters:    Size  Location     Type
  1728 ;;  n               2    4[COMMON] unsigned int 
  1729 ;; Auto vars:     Size  Location     Type
  1730 ;;		None
  1731 ;; Return value:  Size  Location     Type
  1732 ;;                  1    wreg      void 
  1733 ;; Registers used:
  1734 ;;		wreg, status,2, status,0, pclath, cstack
  1735 ;; Tracked objects:
  1736 ;;		On entry : 0/0
  1737 ;;		On exit  : 0/0
  1738 ;;		Unchanged: 0/0
  1739 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  1740 ;;      Params:         2       0       0       0       0       0       0       0
  1741 ;;      Locals:         0       0       0       0       0       0       0       0
  1742 ;;      Temps:          0       0       0       0       0       0       0       0
  1743 ;;      Totals:         2       0       0       0       0       0       0       0
  1744 ;;Total ram usage:        2 bytes
  1745 ;; Hardware stack levels used: 1
  1746 ;; Hardware stack levels required when called: 1
  1747 ;; This function calls:
  1748 ;;		_clk_pulse
  1749 ;; This function is called by:
  1750 ;;		_display_7segment
  1751 ;;		_main
  1752 ;; This function uses a non-reentrant model
  1753 ;;
  1754                           
  1755  043B                     _Data_pulse_with_1:	
  1756                           ;psect for function _Data_pulse_with_1
  1757                           
  1758  043B                     l877:	
  1759                           ;incstack = 0
  1760                           ; Regs used in _Data_pulse_with_1: [wreg+status,2+status,0+pclath+cstack]
  1761                           
  1762                           
  1763                           ;Exam 1.c: 42:     LATCbits.LATC1 = 1;
  1764  043B  0022               	movlb	2	; select bank2
  1765  043C  148E               	bsf	14,1	;volatile
  1766  043D                     l879:
  1767                           
  1768                           ;Exam 1.c: 43:     clk_pulse(n);
  1769  043D  0875               	movf	Data_pulse_with_1@n+1,w
  1770  043E  00F1               	movwf	clk_pulse@n+1
  1771  043F  0874               	movf	Data_pulse_with_1@n,w
  1772  0440  00F0               	movwf	clk_pulse@n
  1773  0441  3184  2454  3184   	fcall	_clk_pulse
  1774  0444                     l39:
  1775  0444  0008               	return
  1776  0445                     __end_of_Data_pulse_with_1:
  1777                           
  1778                           	psect	text7
  1779  0431                     __ptext7:	
  1780 ;; *************** function _Data_pulse_with_0 *****************
  1781 ;; Defined at:
  1782 ;;		line 46 in file "Exam 1.c"
  1783 ;; Parameters:    Size  Location     Type
  1784 ;;  n               2    4[COMMON] unsigned int 
  1785 ;; Auto vars:     Size  Location     Type
  1786 ;;		None
  1787 ;; Return value:  Size  Location     Type
  1788 ;;                  1    wreg      void 
  1789 ;; Registers used:
  1790 ;;		wreg, status,2, status,0, pclath, cstack
  1791 ;; Tracked objects:
  1792 ;;		On entry : 0/0
  1793 ;;		On exit  : 0/0
  1794 ;;		Unchanged: 0/0
  1795 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  1796 ;;      Params:         2       0       0       0       0       0       0       0
  1797 ;;      Locals:         0       0       0       0       0       0       0       0
  1798 ;;      Temps:          0       0       0       0       0       0       0       0
  1799 ;;      Totals:         2       0       0       0       0       0       0       0
  1800 ;;Total ram usage:        2 bytes
  1801 ;; Hardware stack levels used: 1
  1802 ;; Hardware stack levels required when called: 1
  1803 ;; This function calls:
  1804 ;;		_clk_pulse
  1805 ;; This function is called by:
  1806 ;;		_display_7segment
  1807 ;; This function uses a non-reentrant model
  1808 ;;
  1809                           
  1810  0431                     _Data_pulse_with_0:	
  1811                           ;psect for function _Data_pulse_with_0
  1812                           
  1813  0431                     l881:	
  1814                           ;incstack = 0
  1815                           ; Regs used in _Data_pulse_with_0: [wreg+status,2+status,0+pclath+cstack]
  1816                           
  1817                           
  1818                           ;Exam 1.c: 47:     LATCbits.LATC1 = 0;
  1819  0431  0022               	movlb	2	; select bank2
  1820  0432  108E               	bcf	14,1	;volatile
  1821  0433                     l883:
  1822                           
  1823                           ;Exam 1.c: 48:     clk_pulse(n);
  1824  0433  0875               	movf	Data_pulse_with_0@n+1,w
  1825  0434  00F1               	movwf	clk_pulse@n+1
  1826  0435  0874               	movf	Data_pulse_with_0@n,w
  1827  0436  00F0               	movwf	clk_pulse@n
  1828  0437  3184  2454  3184   	fcall	_clk_pulse
  1829  043A                     l42:
  1830  043A  0008               	return
  1831  043B                     __end_of_Data_pulse_with_0:
  1832                           
  1833                           	psect	text8
  1834  0454                     __ptext8:	
  1835 ;; *************** function _clk_pulse *****************
  1836 ;; Defined at:
  1837 ;;		line 25 in file "Exam 1.c"
  1838 ;; Parameters:    Size  Location     Type
  1839 ;;  n               2    0[COMMON] unsigned int 
  1840 ;; Auto vars:     Size  Location     Type
  1841 ;;  i               2    2[COMMON] unsigned int 
  1842 ;; Return value:  Size  Location     Type
  1843 ;;                  1    wreg      void 
  1844 ;; Registers used:
  1845 ;;		wreg, status,2
  1846 ;; Tracked objects:
  1847 ;;		On entry : 0/0
  1848 ;;		On exit  : 0/0
  1849 ;;		Unchanged: 0/0
  1850 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  1851 ;;      Params:         2       0       0       0       0       0       0       0
  1852 ;;      Locals:         2       0       0       0       0       0       0       0
  1853 ;;      Temps:          0       0       0       0       0       0       0       0
  1854 ;;      Totals:         4       0       0       0       0       0       0       0
  1855 ;;Total ram usage:        4 bytes
  1856 ;; Hardware stack levels used: 1
  1857 ;; This function calls:
  1858 ;;		Nothing
  1859 ;; This function is called by:
  1860 ;;		_Data_pulse_with_1
  1861 ;;		_Data_pulse_with_0
  1862 ;;		_enter_number_added
  1863 ;; This function uses a non-reentrant model
  1864 ;;
  1865                           
  1866  0454                     _clk_pulse:	
  1867                           ;psect for function _clk_pulse
  1868                           
  1869  0454                     l873:	
  1870                           ;incstack = 0
  1871                           ; Regs used in _clk_pulse: [wreg+status,2]
  1872                           
  1873                           
  1874                           ;Exam 1.c: 26:     unsigned int i=0;
  1875  0454  01F2               	clrf	clk_pulse@i
  1876  0455  01F3               	clrf	clk_pulse@i+1
  1877                           
  1878                           ;Exam 1.c: 27:     for (i=0 ; i<n ; i++){
  1879  0456  01F2               	clrf	clk_pulse@i
  1880  0457  01F3               	clrf	clk_pulse@i+1
  1881  0458  2C60               	goto	l27
  1882  0459                     l28:
  1883                           
  1884                           ;Exam 1.c: 28:         LATCbits.LATC0 = 1;
  1885  0459  0022               	movlb	2	; select bank2
  1886  045A  140E               	bsf	14,0	;volatile
  1887                           
  1888                           ;Exam 1.c: 29:         LATCbits.LATC0 = 0;
  1889  045B  100E               	bcf	14,0	;volatile
  1890  045C                     l875:
  1891                           
  1892                           ;Exam 1.c: 30:     }
  1893  045C  3001               	movlw	1
  1894  045D  07F2               	addwf	clk_pulse@i,f
  1895  045E  3000               	movlw	0
  1896  045F  3DF3               	addwfc	clk_pulse@i+1,f
  1897  0460                     l27:
  1898  0460  0871               	movf	clk_pulse@n+1,w
  1899  0461  0273               	subwf	clk_pulse@i+1,w
  1900  0462  1D03               	skipz
  1901  0463  2C66               	goto	u585
  1902  0464  0870               	movf	clk_pulse@n,w
  1903  0465  0272               	subwf	clk_pulse@i,w
  1904  0466                     u585:
  1905  0466  1C03               	skipc
  1906  0467  2C69               	goto	u581
  1907  0468  2C6A               	goto	u580
  1908  0469                     u581:
  1909  0469  2C59               	goto	l28
  1910  046A                     u580:
  1911  046A                     l30:
  1912  046A  0008               	return
  1913  046B                     __end_of_clk_pulse:
  1914                           
  1915                           	psect	text9
  1916  0499                     __ptext9:	
  1917 ;; *************** function ___lwmod *****************
  1918 ;; Defined at:
  1919 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\lwmod.c"
  1920 ;; Parameters:    Size  Location     Type
  1921 ;;  divisor         2    0[COMMON] unsigned int 
  1922 ;;  dividend        2    2[COMMON] unsigned int 
  1923 ;; Auto vars:     Size  Location     Type
  1924 ;;  counter         1    5[COMMON] unsigned char 
  1925 ;; Return value:  Size  Location     Type
  1926 ;;                  2    0[COMMON] unsigned int 
  1927 ;; Registers used:
  1928 ;;		wreg, status,2, status,0
  1929 ;; Tracked objects:
  1930 ;;		On entry : 0/0
  1931 ;;		On exit  : 0/0
  1932 ;;		Unchanged: 0/0
  1933 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  1934 ;;      Params:         4       0       0       0       0       0       0       0
  1935 ;;      Locals:         1       0       0       0       0       0       0       0
  1936 ;;      Temps:          1       0       0       0       0       0       0       0
  1937 ;;      Totals:         6       0       0       0       0       0       0       0
  1938 ;;Total ram usage:        6 bytes
  1939 ;; Hardware stack levels used: 1
  1940 ;; This function calls:
  1941 ;;		Nothing
  1942 ;; This function is called by:
  1943 ;;		_enter_total_number
  1944 ;; This function uses a non-reentrant model
  1945 ;;
  1946                           
  1947  0499                     ___lwmod:	
  1948                           ;psect for function ___lwmod
  1949                           
  1950  0499                     l999:	
  1951                           ;incstack = 0
  1952                           ; Regs used in ___lwmod: [wreg+status,2+status,0]
  1953                           
  1954  0499  0870               	movf	___lwmod@divisor,w
  1955  049A  0471               	iorwf	___lwmod@divisor+1,w
  1956  049B  1903               	btfsc	3,2
  1957  049C  2C9E               	goto	u861
  1958  049D  2C9F               	goto	u860
  1959  049E                     u861:
  1960  049E  2CC8               	goto	l1017
  1961  049F                     u860:
  1962  049F                     l1001:
  1963  049F  01F5               	clrf	___lwmod@counter
  1964  04A0  0AF5               	incf	___lwmod@counter,f
  1965  04A1  2CAB               	goto	l1007
  1966  04A2                     l1003:
  1967  04A2  3001               	movlw	1
  1968  04A3                     u875:
  1969  04A3  35F0               	lslf	___lwmod@divisor,f
  1970  04A4  0DF1               	rlf	___lwmod@divisor+1,f
  1971  04A5  0B89               	decfsz	9,f
  1972  04A6  2CA3               	goto	u875
  1973  04A7                     l1005:
  1974  04A7  3001               	movlw	1
  1975  04A8  00F4               	movwf	??___lwmod
  1976  04A9  0874               	movf	??___lwmod,w
  1977  04AA  07F5               	addwf	___lwmod@counter,f
  1978  04AB                     l1007:
  1979  04AB  1FF1               	btfss	___lwmod@divisor+1,7
  1980  04AC  2CAE               	goto	u881
  1981  04AD  2CAF               	goto	u880
  1982  04AE                     u881:
  1983  04AE  2CA2               	goto	l1003
  1984  04AF                     u880:
  1985  04AF                     l1009:
  1986  04AF  0871               	movf	___lwmod@divisor+1,w
  1987  04B0  0273               	subwf	___lwmod@dividend+1,w
  1988  04B1  1D03               	skipz
  1989  04B2  2CB5               	goto	u895
  1990  04B3  0870               	movf	___lwmod@divisor,w
  1991  04B4  0272               	subwf	___lwmod@dividend,w
  1992  04B5                     u895:
  1993  04B5  1C03               	skipc
  1994  04B6  2CB8               	goto	u891
  1995  04B7  2CB9               	goto	u890
  1996  04B8                     u891:
  1997  04B8  2CBD               	goto	l1013
  1998  04B9                     u890:
  1999  04B9                     l1011:
  2000  04B9  0870               	movf	___lwmod@divisor,w
  2001  04BA  02F2               	subwf	___lwmod@dividend,f
  2002  04BB  0871               	movf	___lwmod@divisor+1,w
  2003  04BC  3BF3               	subwfb	___lwmod@dividend+1,f
  2004  04BD                     l1013:
  2005  04BD  3001               	movlw	1
  2006  04BE                     u905:
  2007  04BE  36F1               	lsrf	___lwmod@divisor+1,f
  2008  04BF  0CF0               	rrf	___lwmod@divisor,f
  2009  04C0  0B89               	decfsz	9,f
  2010  04C1  2CBE               	goto	u905
  2011  04C2                     l1015:
  2012  04C2  3001               	movlw	1
  2013  04C3  02F5               	subwf	___lwmod@counter,f
  2014  04C4  1D03               	btfss	3,2
  2015  04C5  2CC7               	goto	u911
  2016  04C6  2CC8               	goto	u910
  2017  04C7                     u911:
  2018  04C7  2CAF               	goto	l1009
  2019  04C8                     u910:
  2020  04C8                     l1017:
  2021  04C8  0873               	movf	___lwmod@dividend+1,w
  2022  04C9  00F1               	movwf	?___lwmod+1
  2023  04CA  0872               	movf	___lwmod@dividend,w
  2024  04CB  00F0               	movwf	?___lwmod
  2025  04CC                     l457:
  2026  04CC  0008               	return
  2027  04CD                     __end_of___lwmod:
  2028                           
  2029                           	psect	text10
  2030  04CD                     __ptext10:	
  2031 ;; *************** function ___lwdiv *****************
  2032 ;; Defined at:
  2033 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\lwdiv.c"
  2034 ;; Parameters:    Size  Location     Type
  2035 ;;  divisor         2    6[COMMON] unsigned int 
  2036 ;;  dividend        2    8[COMMON] unsigned int 
  2037 ;; Auto vars:     Size  Location     Type
  2038 ;;  quotient        2   11[COMMON] unsigned int 
  2039 ;;  counter         1   13[COMMON] unsigned char 
  2040 ;; Return value:  Size  Location     Type
  2041 ;;                  2    6[COMMON] unsigned int 
  2042 ;; Registers used:
  2043 ;;		wreg, status,2, status,0
  2044 ;; Tracked objects:
  2045 ;;		On entry : 0/0
  2046 ;;		On exit  : 0/0
  2047 ;;		Unchanged: 0/0
  2048 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  2049 ;;      Params:         4       0       0       0       0       0       0       0
  2050 ;;      Locals:         3       0       0       0       0       0       0       0
  2051 ;;      Temps:          1       0       0       0       0       0       0       0
  2052 ;;      Totals:         8       0       0       0       0       0       0       0
  2053 ;;Total ram usage:        8 bytes
  2054 ;; Hardware stack levels used: 1
  2055 ;; This function calls:
  2056 ;;		Nothing
  2057 ;; This function is called by:
  2058 ;;		_enter_total_number
  2059 ;; This function uses a non-reentrant model
  2060 ;;
  2061                           
  2062  04CD                     ___lwdiv:	
  2063                           ;psect for function ___lwdiv
  2064                           
  2065  04CD                     l973:	
  2066                           ;incstack = 0
  2067                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
  2068                           
  2069  04CD  01FB               	clrf	___lwdiv@quotient
  2070  04CE  01FC               	clrf	___lwdiv@quotient+1
  2071  04CF                     l975:
  2072  04CF  0876               	movf	___lwdiv@divisor,w
  2073  04D0  0477               	iorwf	___lwdiv@divisor+1,w
  2074  04D1  1903               	btfsc	3,2
  2075  04D2  2CD4               	goto	u791
  2076  04D3  2CD5               	goto	u790
  2077  04D4                     u791:
  2078  04D4  2D04               	goto	l995
  2079  04D5                     u790:
  2080  04D5                     l977:
  2081  04D5  01FD               	clrf	___lwdiv@counter
  2082  04D6  0AFD               	incf	___lwdiv@counter,f
  2083  04D7  2CE1               	goto	l983
  2084  04D8                     l979:
  2085  04D8  3001               	movlw	1
  2086  04D9                     u805:
  2087  04D9  35F6               	lslf	___lwdiv@divisor,f
  2088  04DA  0DF7               	rlf	___lwdiv@divisor+1,f
  2089  04DB  0B89               	decfsz	9,f
  2090  04DC  2CD9               	goto	u805
  2091  04DD                     l981:
  2092  04DD  3001               	movlw	1
  2093  04DE  00FA               	movwf	??___lwdiv
  2094  04DF  087A               	movf	??___lwdiv,w
  2095  04E0  07FD               	addwf	___lwdiv@counter,f
  2096  04E1                     l983:
  2097  04E1  1FF7               	btfss	___lwdiv@divisor+1,7
  2098  04E2  2CE4               	goto	u811
  2099  04E3  2CE5               	goto	u810
  2100  04E4                     u811:
  2101  04E4  2CD8               	goto	l979
  2102  04E5                     u810:
  2103  04E5                     l985:
  2104  04E5  3001               	movlw	1
  2105  04E6                     u825:
  2106  04E6  35FB               	lslf	___lwdiv@quotient,f
  2107  04E7  0DFC               	rlf	___lwdiv@quotient+1,f
  2108  04E8  0B89               	decfsz	9,f
  2109  04E9  2CE6               	goto	u825
  2110  04EA  0877               	movf	___lwdiv@divisor+1,w
  2111  04EB  0279               	subwf	___lwdiv@dividend+1,w
  2112  04EC  1D03               	skipz
  2113  04ED  2CF0               	goto	u835
  2114  04EE  0876               	movf	___lwdiv@divisor,w
  2115  04EF  0278               	subwf	___lwdiv@dividend,w
  2116  04F0                     u835:
  2117  04F0  1C03               	skipc
  2118  04F1  2CF3               	goto	u831
  2119  04F2  2CF4               	goto	u830
  2120  04F3                     u831:
  2121  04F3  2CF9               	goto	l991
  2122  04F4                     u830:
  2123  04F4                     l987:
  2124  04F4  0876               	movf	___lwdiv@divisor,w
  2125  04F5  02F8               	subwf	___lwdiv@dividend,f
  2126  04F6  0877               	movf	___lwdiv@divisor+1,w
  2127  04F7  3BF9               	subwfb	___lwdiv@dividend+1,f
  2128  04F8                     l989:
  2129  04F8  147B               	bsf	___lwdiv@quotient,0
  2130  04F9                     l991:
  2131  04F9  3001               	movlw	1
  2132  04FA                     u845:
  2133  04FA  36F7               	lsrf	___lwdiv@divisor+1,f
  2134  04FB  0CF6               	rrf	___lwdiv@divisor,f
  2135  04FC  0B89               	decfsz	9,f
  2136  04FD  2CFA               	goto	u845
  2137  04FE                     l993:
  2138  04FE  3001               	movlw	1
  2139  04FF  02FD               	subwf	___lwdiv@counter,f
  2140  0500  1D03               	btfss	3,2
  2141  0501  2D03               	goto	u851
  2142  0502  2D04               	goto	u850
  2143  0503                     u851:
  2144  0503  2CE5               	goto	l985
  2145  0504                     u850:
  2146  0504                     l995:
  2147  0504  087C               	movf	___lwdiv@quotient+1,w
  2148  0505  00F7               	movwf	?___lwdiv+1
  2149  0506  087B               	movf	___lwdiv@quotient,w
  2150  0507  00F6               	movwf	?___lwdiv
  2151  0508                     l447:
  2152  0508  0008               	return
  2153  0509                     __end_of___lwdiv:
  2154                           
  2155                           	psect	text11
  2156  0509                     __ptext11:	
  2157 ;; *************** function ___awmod *****************
  2158 ;; Defined at:
  2159 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\awmod.c"
  2160 ;; Parameters:    Size  Location     Type
  2161 ;;  divisor         2    0[COMMON] int 
  2162 ;;  dividend        2    2[COMMON] int 
  2163 ;; Auto vars:     Size  Location     Type
  2164 ;;  sign            1    6[COMMON] unsigned char 
  2165 ;;  counter         1    5[COMMON] unsigned char 
  2166 ;; Return value:  Size  Location     Type
  2167 ;;                  2    0[COMMON] int 
  2168 ;; Registers used:
  2169 ;;		wreg, status,2, status,0
  2170 ;; Tracked objects:
  2171 ;;		On entry : 0/0
  2172 ;;		On exit  : 0/0
  2173 ;;		Unchanged: 0/0
  2174 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  2175 ;;      Params:         4       0       0       0       0       0       0       0
  2176 ;;      Locals:         2       0       0       0       0       0       0       0
  2177 ;;      Temps:          1       0       0       0       0       0       0       0
  2178 ;;      Totals:         7       0       0       0       0       0       0       0
  2179 ;;Total ram usage:        7 bytes
  2180 ;; Hardware stack levels used: 1
  2181 ;; This function calls:
  2182 ;;		Nothing
  2183 ;; This function is called by:
  2184 ;;		_enter_total_number
  2185 ;; This function uses a non-reentrant model
  2186 ;;
  2187                           
  2188  0509                     ___awmod:	
  2189                           ;psect for function ___awmod
  2190                           
  2191  0509                     l935:	
  2192                           ;incstack = 0
  2193                           ; Regs used in ___awmod: [wreg+status,2+status,0]
  2194                           
  2195  0509  01F6               	clrf	___awmod@sign
  2196  050A                     l937:
  2197  050A  1FF3               	btfss	___awmod@dividend+1,7
  2198  050B  2D0D               	goto	u701
  2199  050C  2D0E               	goto	u700
  2200  050D                     u701:
  2201  050D  2D15               	goto	l943
  2202  050E                     u700:
  2203  050E                     l939:
  2204  050E  09F2               	comf	___awmod@dividend,f
  2205  050F  09F3               	comf	___awmod@dividend+1,f
  2206  0510  0AF2               	incf	___awmod@dividend,f
  2207  0511  1903               	skipnz
  2208  0512  0AF3               	incf	___awmod@dividend+1,f
  2209  0513                     l941:
  2210  0513  01F6               	clrf	___awmod@sign
  2211  0514  0AF6               	incf	___awmod@sign,f
  2212  0515                     l943:
  2213  0515  1FF1               	btfss	___awmod@divisor+1,7
  2214  0516  2D18               	goto	u711
  2215  0517  2D19               	goto	u710
  2216  0518                     u711:
  2217  0518  2D1E               	goto	l947
  2218  0519                     u710:
  2219  0519                     l945:
  2220  0519  09F0               	comf	___awmod@divisor,f
  2221  051A  09F1               	comf	___awmod@divisor+1,f
  2222  051B  0AF0               	incf	___awmod@divisor,f
  2223  051C  1903               	skipnz
  2224  051D  0AF1               	incf	___awmod@divisor+1,f
  2225  051E                     l947:
  2226  051E  0870               	movf	___awmod@divisor,w
  2227  051F  0471               	iorwf	___awmod@divisor+1,w
  2228  0520  1903               	btfsc	3,2
  2229  0521  2D23               	goto	u721
  2230  0522  2D24               	goto	u720
  2231  0523                     u721:
  2232  0523  2D4D               	goto	l965
  2233  0524                     u720:
  2234  0524                     l949:
  2235  0524  01F5               	clrf	___awmod@counter
  2236  0525  0AF5               	incf	___awmod@counter,f
  2237  0526  2D30               	goto	l955
  2238  0527                     l951:
  2239  0527  3001               	movlw	1
  2240  0528                     u735:
  2241  0528  35F0               	lslf	___awmod@divisor,f
  2242  0529  0DF1               	rlf	___awmod@divisor+1,f
  2243  052A  0B89               	decfsz	9,f
  2244  052B  2D28               	goto	u735
  2245  052C                     l953:
  2246  052C  3001               	movlw	1
  2247  052D  00F4               	movwf	??___awmod
  2248  052E  0874               	movf	??___awmod,w
  2249  052F  07F5               	addwf	___awmod@counter,f
  2250  0530                     l955:
  2251  0530  1FF1               	btfss	___awmod@divisor+1,7
  2252  0531  2D33               	goto	u741
  2253  0532  2D34               	goto	u740
  2254  0533                     u741:
  2255  0533  2D27               	goto	l951
  2256  0534                     u740:
  2257  0534                     l957:
  2258  0534  0871               	movf	___awmod@divisor+1,w
  2259  0535  0273               	subwf	___awmod@dividend+1,w
  2260  0536  1D03               	skipz
  2261  0537  2D3A               	goto	u755
  2262  0538  0870               	movf	___awmod@divisor,w
  2263  0539  0272               	subwf	___awmod@dividend,w
  2264  053A                     u755:
  2265  053A  1C03               	skipc
  2266  053B  2D3D               	goto	u751
  2267  053C  2D3E               	goto	u750
  2268  053D                     u751:
  2269  053D  2D42               	goto	l961
  2270  053E                     u750:
  2271  053E                     l959:
  2272  053E  0870               	movf	___awmod@divisor,w
  2273  053F  02F2               	subwf	___awmod@dividend,f
  2274  0540  0871               	movf	___awmod@divisor+1,w
  2275  0541  3BF3               	subwfb	___awmod@dividend+1,f
  2276  0542                     l961:
  2277  0542  3001               	movlw	1
  2278  0543                     u765:
  2279  0543  36F1               	lsrf	___awmod@divisor+1,f
  2280  0544  0CF0               	rrf	___awmod@divisor,f
  2281  0545  0B89               	decfsz	9,f
  2282  0546  2D43               	goto	u765
  2283  0547                     l963:
  2284  0547  3001               	movlw	1
  2285  0548  02F5               	subwf	___awmod@counter,f
  2286  0549  1D03               	btfss	3,2
  2287  054A  2D4C               	goto	u771
  2288  054B  2D4D               	goto	u770
  2289  054C                     u771:
  2290  054C  2D34               	goto	l957
  2291  054D                     u770:
  2292  054D                     l965:
  2293  054D  0876               	movf	___awmod@sign,w
  2294  054E  1903               	btfsc	3,2
  2295  054F  2D51               	goto	u781
  2296  0550  2D52               	goto	u780
  2297  0551                     u781:
  2298  0551  2D57               	goto	l969
  2299  0552                     u780:
  2300  0552                     l967:
  2301  0552  09F2               	comf	___awmod@dividend,f
  2302  0553  09F3               	comf	___awmod@dividend+1,f
  2303  0554  0AF2               	incf	___awmod@dividend,f
  2304  0555  1903               	skipnz
  2305  0556  0AF3               	incf	___awmod@dividend+1,f
  2306  0557                     l969:
  2307  0557  0873               	movf	___awmod@dividend+1,w
  2308  0558  00F1               	movwf	?___awmod+1
  2309  0559  0872               	movf	___awmod@dividend,w
  2310  055A  00F0               	movwf	?___awmod
  2311  055B                     l333:
  2312  055B  0008               	return
  2313  055C                     __end_of___awmod:
  2314  007E                     btemp	set	126	;btemp
  2315  007E                     wtemp0	set	126
  2316                           
  2317                           	psect	idloc
  2318                           
  2319                           ;Config register IDLOC0 @ 0x8000
  2320                           ;	unspecified, using default values
  2321  8000                     	org	32768
  2322  8000  3FFF               	dw	16383
  2323                           
  2324                           ;Config register IDLOC1 @ 0x8001
  2325                           ;	unspecified, using default values
  2326  8001                     	org	32769
  2327  8001  3FFF               	dw	16383
  2328                           
  2329                           ;Config register IDLOC2 @ 0x8002
  2330                           ;	unspecified, using default values
  2331  8002                     	org	32770
  2332  8002  3FFF               	dw	16383
  2333                           
  2334                           ;Config register IDLOC3 @ 0x8003
  2335                           ;	unspecified, using default values
  2336  8003                     	org	32771
  2337  8003  3FFF               	dw	16383
  2338                           
  2339                           	psect	config
  2340                           
  2341                           ;Config register CONFIG1 @ 0x8007
  2342                           ;	Oscillator Selection Bits
  2343                           ;	FOSC = INTOSC, INTOSC oscillator: I/O function on CLKIN pin
  2344                           ;	Watchdog Timer Enable
  2345                           ;	WDTE = OFF, WDT disabled
  2346                           ;	Power-up Timer Enable
  2347                           ;	PWRTE = OFF, PWRT disabled
  2348                           ;	MCLR Pin Function Select
  2349                           ;	MCLRE = OFF, MCLR/VPP pin function is digital input
  2350                           ;	Flash Program Memory Code Protection
  2351                           ;	CP = OFF, Program memory code protection is disabled
  2352                           ;	Brown-out Reset Enable
  2353                           ;	BOREN = OFF, Brown-out Reset disabled
  2354                           ;	Clock Out Enable
  2355                           ;	CLKOUTEN = OFF, CLKOUT function is disabled. I/O or oscillator function on the CLKOUT 
      +                          pin
  2356                           ;	Internal/External Switchover Mode
  2357                           ;	IESO = OFF, Internal/External Switchover Mode is disabled
  2358                           ;	Fail-Safe Clock Monitor Enable
  2359                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
  2360  8007                     	org	32775
  2361  8007  09A4               	dw	2468
  2362                           
  2363                           ;Config register CONFIG2 @ 0x8008
  2364                           ;	Flash Memory Self-Write Protection
  2365                           ;	WRT = OFF, Write protection off
  2366                           ;	Stack Overflow/Underflow Reset Enable
  2367                           ;	STVREN = OFF, Stack Overflow or Underflow will not cause a Reset
  2368                           ;	Brown-out Reset Voltage Selection
  2369                           ;	BORV = LO, Brown-out Reset Voltage (Vbor), low trip point selected.
  2370                           ;	Low-Power Brown Out Reset
  2371                           ;	LPBOR = OFF, Low-Power BOR is disabled
  2372                           ;	Low-Voltage Programming Enable
  2373                           ;	LVP = OFF, High-voltage on MCLR/VPP must be used for programming
  2374  8008                     	org	32776
  2375  8008  1DFF               	dw	7679

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         0
    Persistent  32
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     17      17
    BANK1            80      0       0
    BANK2            80      0       0
    BANK3            80      0       0
    BANK4            80      0       0
    BANK5            80      0       0
    BANK6            16      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    _enter_total_number->___lwdiv
    _enter_number_finish->_display_7segment
    _enter_number_added->_display_7segment
    _display_7segment->_Data_pulse_with_0
    _display_7segment->_Data_pulse_with_1
    _Data_pulse_with_1->_clk_pulse
    _Data_pulse_with_0->_clk_pulse
    ___lwdiv->___lwmod

Critical Paths under _main in BANK0

    _main->_enter_total_number

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 7     7      0   11769
                                             10 BANK0      7     7      0
                  _Data_pulse_with_1
                 _enter_total_number
                        _latch_pulse
 ---------------------------------------------------------------------------------
 (1) _enter_total_number                                  10     8      2    9837
                                              0 BANK0     10     8      2
                            ___awmod
                            ___lwdiv
                            ___lwmod
                 _enter_number_added
                _enter_number_finish
 ---------------------------------------------------------------------------------
 (2) _enter_number_finish                                  3     1      2    3695
                                              8 COMMON     3     1      2
                            ___awmod (ARG)
                   _display_7segment
                        _latch_pulse
 ---------------------------------------------------------------------------------
 (1) _latch_pulse                                          4     2      2     199
                                              0 COMMON     4     2      2
 ---------------------------------------------------------------------------------
 (2) _enter_number_added                                   2     0      2    3847
                                              8 COMMON     2     0      2
                            ___awmod (ARG)
                          _clk_pulse
                   _display_7segment
 ---------------------------------------------------------------------------------
 (3) _display_7segment                                     2     0      2    3398
                                              6 COMMON     2     0      2
                  _Data_pulse_with_0
                  _Data_pulse_with_1
 ---------------------------------------------------------------------------------
 (4) _Data_pulse_with_1                                    2     0      2    1361
                                              4 COMMON     2     0      2
                          _clk_pulse
 ---------------------------------------------------------------------------------
 (4) _Data_pulse_with_0                                    2     0      2    1665
                                              4 COMMON     2     0      2
                          _clk_pulse
 ---------------------------------------------------------------------------------
 (5) _clk_pulse                                            4     2      2     275
                                              0 COMMON     4     2      2
 ---------------------------------------------------------------------------------
 (2) ___lwmod                                              6     2      4     615
                                              0 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (2) ___lwdiv                                              8     4      4     466
                                              6 COMMON     8     4      4
                            ___lwmod (ARG)
 ---------------------------------------------------------------------------------
 (2) ___awmod                                              7     3      4     752
                                              0 COMMON     7     3      4
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Data_pulse_with_1
     _clk_pulse
   _enter_total_number
     ___awmod
     ___lwdiv
       ___lwmod (ARG)
     ___lwmod
     _enter_number_added
       ___awmod (ARG)
       _clk_pulse (ARG)
       _display_7segment (ARG)
         _Data_pulse_with_0
           _clk_pulse
         _Data_pulse_with_1
     _enter_number_finish
       ___awmod (ARG)
       _display_7segment (ARG)
       _latch_pulse (ARG)
   _latch_pulse

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             1F0      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      E       E       2      100.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
ABS                  0      0       0       4        0.0%
BITBANK0            50      0       0       5        0.0%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BANK0               50     11      11       6       21.2%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BITBANK1            50      0       0       7        0.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BANK1               50      0       0       8        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BITBANK2            50      0       0       9        0.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BANK2               50      0       0      10        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BITBANK3            50      0       0      11        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BANK3               50      0       0      12        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BITBANK4            50      0       0      13        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BANK4               50      0       0      14        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BITBANK5            50      0       0      15        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BANK5               50      0       0      16        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BITBANK6            10      0       0      17        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BANK6               10      0       0      18        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
DATA                 0      0       0      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V2.36 build 20220127204148 
Symbol Table                                                                                   Fri Apr 08 12:36:57 2022

                         l30 046A                           l33 0477                           l42 043A  
                         l34 0470                           l27 0460                           l28 0459  
                         l36 0481                           l70 0498                           l39 0444  
                         l64 07FC                           l73 05E0                           l81 060E  
                         l58 07FC                           l67 0453                           l88 0669  
                        l333 055B                          l447 0508                          l457 04CC  
                        l901 0731                          l911 0779                          l903 0738  
                        l921 07D0                          l913 079D                          l905 074E  
                        l923 07D7                          l915 07A4                          l907 0755  
                        l931 0482                          l941 0513                          l925 07DF  
                        l917 07BA                          l909 0772                          l933 0490  
                        l951 0527                          l943 0515                          l935 0509  
                        l927 07E6                          l919 07C1                          l961 0542  
                        l953 052C                          l945 0519                          l937 050A  
                        l873 0454                          l881 0431                          l929 0445  
                        l963 0547                          l955 0530                          l947 051E  
                        l939 050E                          l875 045C                          l883 0433  
                        l891 06DB                          l957 0534                          l949 0524  
                        l965 054D                          l981 04DD                          l973 04CD  
                        l877 043B                          l893 06EA                          l885 046B  
                        l967 0552                          l959 053E                          l991 04F9  
                        l983 04E1                          l975 04CF                          l879 043D  
                        l895 06F0                          l887 0473                          l969 0557  
                        l993 04FE                          l985 04E5                          l977 04D5  
                        l897 0706                          l889 06D5                          l987 04F4  
                        l979 04D8                          l995 0504                          l899 070D  
                        l989 04F8                          l999 0499                          u600 06DB  
                        u601 06DA                          u610 06F0                          u611 06EF  
                        u700 050E                          u620 070D                          u701 050D  
                        u621 070C                          u710 0519                          u630 0738  
                        u711 0518                          u631 0737                          u720 0524  
                        u640 0755                          u721 0523                          u641 0754  
                        u810 04E5                          u650 0779                          u811 04E4  
                        u651 0778                          u740 0534                          u580 046A  
                        u660 07A4                          u741 0533                          u805 04D9  
                        u581 0469                          u661 07A3                          u750 053E  
                        u830 04F4                          u910 04C8                          u670 07C1  
                        u590 0481                          u751 053D                          u735 0528  
                        u831 04F3                          u911 04C7                          u671 07C0  
                        u591 0480                          u680 07D7                          u920 05FF  
                        u825 04E6                          u905 04BE                          u585 0466  
                        u681 07D6                          u921 05FE                          u770 054D  
                        u850 0504                          u690 07E6                          u930 0603  
                        u771 054C                          u755 053A                          u851 0503  
                        u835 04F0                          u691 07E5                          u595 047D  
                        u931 0602                          u780 0552                          u860 049F  
                        u940 0607                          u781 0551                          u765 0543  
                        u845 04FA                          u861 049E                          u941 0606  
                        u790 04D5                          u950 060C                          u791 04D4  
                        u951 060B                          u880 04AF                          u960 0612  
                        u881 04AE                          u961 0611                          u890 04B9  
                        u970 0617                          u891 04B8                          u875 04A3  
                        u971 0616                          u980 061F                          u981 061E  
                        u990 0625                          u895 04B5                          u991 0624  
               ___awmod@sign 0076                          wreg 0009                         l1001 049F  
                       l1011 04B9                         l1003 04A2                         l1013 04BD  
                       l1005 04A7                         l1021 055C                         l1101 069D  
                       l1015 04C2                         l1007 04AB                         l1111 06B3  
                       l1103 06A1                         l1031 05F2                         l1023 05E1  
                       l1009 04AF                         l1017 04C8                         l1105 06A3  
                       l1041 060C                         l1113 06B9                         l1033 05FA  
                       l1025 05EB                         l1115 06BE                         l1107 06AB  
                       l1051 0625                         l1043 0612                         l1035 05FF  
                       l1027 05EF                         l1117 06C2                         l1109 06B0  
                       l1061 063F                         l1053 0629                         l1045 0617  
                       l1037 0603                         l1029 05F1                         l1119 06C4  
                       l1071 0653                         l1055 062F                         l1063 0641  
                       l1047 061B                         l1039 0607                         l1081 066D  
                       l1065 0643                         l1057 0635                         l1049 061F  
                       l1073 0659                         l1091 0684                         l1083 0672  
                       l1075 065E                         l1067 064B                         l1059 0636  
                       l1093 068A                         l1085 0676                         l1077 0662  
                       l1069 0650                         l1095 0690                         l1087 067A  
                       l1079 0667                         l1097 0691                         l1089 0680  
                       l1099 069A                         u1000 062F                         u1001 062E  
                       u1010 063F                         u1011 063E                         u1100 068A  
                       u1020 0650                         u1101 0689                         u1021 064F  
                       u1110 069A                         u1030 065E                         u1111 0699  
                       u1031 065D                         u1120 06B0                         u1040 0662  
                       u1121 06AF                         u1041 0661                         u1130 06BE  
                       u1050 0667                         u1131 06BD                         u1051 0666  
                       u1140 06C2                         u1060 066D                         u1141 06C1  
                       u1061 066C                         u1070 0672                         u1071 0671  
                       u1080 067A                         u1081 0679                         u1090 0680  
                       u1091 067F                         u1157 0493                 ?_latch_pulse 0070  
                       _main 05E1                         btemp 007E                         start 0002  
                      ?_main 0070              __end_of___awmod 055C              __end_of___lwdiv 0509  
            __end_of___lwmod 04CD   __end_of_enter_total_number 05E1                        status 0003  
                      wtemp0 007E              __initialization 07FD                 __end_of_main 06D5  
                     ??_main 002A                       _ANSELA 018C                       _ANSELB 018D  
                     _ANSELC 018E          enter_number_added@n 0078                    ??___awmod 0074  
                  ??___lwdiv 007A                    ??___lwmod 0074           Data_pulse_with_0@n 0074  
         Data_pulse_with_1@n 0074              ___awmod@divisor 0070              ___awmod@counter 0075  
         _enter_number_added 0445          ?_enter_number_added 0078      __end_of__initialization 07FD  
          ?_display_7segment 0076           ??_display_7segment 0078               __pcstackCOMMON 0070  
       ??_enter_number_added 007A                 latch_pulse@i 0072                 latch_pulse@n 0070  
     _enter_total_number$706 0028                   __pmaintext 05E1            display_7segment@n 0076  
         _enter_total_number 055C            __end_of_clk_pulse 046B                      ___awmod 0509  
        ?_enter_total_number 0020                      ___lwdiv 04CD                      ___lwmod 0499  
       enter_number_finish@n 0078                      __ptext1 055C                      __ptext2 0482  
                    __ptext3 046B                      __ptext4 0445                      __ptext5 06D5  
                    __ptext6 043B                      __ptext7 0431                      __ptext8 0454  
                    __ptext9 0499             ___awmod@dividend 0072                      main@dem 002B  
       ??_enter_total_number 007E         end_of_initialization 07FD          _enter_number_finish 0482  
                 clk_pulse@i 0072                   clk_pulse@n 0070                    _PORTAbits 000C  
                  _PORTBbits 000D                    _PORTCbits 000E         ?_enter_number_finish 0078  
                  _TRISAbits 008C                    _TRISBbits 008D                    _TRISCbits 008E  
      ??_enter_number_finish 007A          start_initialization 07FD                ??_latch_pulse 0072  
                  ___latbits 0002                __pcstackBANK0 0020            _Data_pulse_with_0 0431  
          _Data_pulse_with_1 043B           ?_Data_pulse_with_0 0074           ?_Data_pulse_with_1 0074  
           ___lwdiv@dividend 0078          ??_Data_pulse_with_0 0076          ??_Data_pulse_with_1 0076  
        __end_of_latch_pulse 0482                     ?___awmod 0070                    _clk_pulse 0454  
                   ?___lwdiv 0076                     ?___lwmod 0070    __end_of_Data_pulse_with_0 043B  
  __end_of_Data_pulse_with_1 0445             ___lwdiv@quotient 007B                     _LATAbits 010C  
                   _LATCbits 010E                   ?_clk_pulse 0070             _display_7segment 06D5  
                _latch_pulse 046B              ___lwdiv@divisor 0076              ___lwdiv@counter 007D  
                   __ptext10 04CD                     __ptext11 0509          enter_total_number@a 0022  
        enter_total_number@b 0024          enter_total_number@c 0026          enter_total_number@n 0020  
                ??_clk_pulse 0072  __end_of_enter_number_finish 0499                     main@dem1 002D  
           ___lwmod@dividend 0072   __end_of_enter_number_added 0454              ___lwmod@divisor 0070  
            ___lwmod@counter 0075                 main@S1_state 002F                 main@S2_state 0030  
   __end_of_display_7segment 07FD  
