

Microchip MPLAB XC8 Assembler V2.36 build 20220127204148 
                                                                                               Sun May 08 14:48:24 2022

Microchip MPLAB XC8 C Compiler v2.36 (Free license) build 20220127204148 Og1 
     1                           	processor	16F1509
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataBANK3,global,class=CODE,delta=2,noexec
     5                           	psect	stringtext1,global,class=STRCODE,delta=2,noexec
     6                           	psect	stringtext2,global,class=STRCODE,delta=2,noexec
     7                           	psect	stringtext3,global,class=STRCODE,delta=2,noexec
     8                           	psect	stringtext4,global,class=STRCODE,delta=2,noexec
     9                           	psect	stringtext5,global,class=STRCODE,delta=2,noexec
    10                           	psect	stringtext6,global,class=STRCODE,delta=2,noexec
    11                           	psect	stringtext7,global,class=STRCODE,delta=2,noexec
    12                           	psect	stringtext8,global,class=STRCODE,delta=2,noexec
    13                           	psect	stringtext9,global,class=STRCODE,delta=2,noexec
    14                           	psect	stringtext10,global,class=STRCODE,delta=2,noexec
    15                           	psect	cinit,global,class=CODE,merge=1,delta=2
    16                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,noexec
    17                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1,noexec
    18                           	psect	bssBANK3,global,class=BANK3,space=1,delta=1,noexec
    19                           	psect	dataBANK3,global,class=BANK3,space=1,delta=1,noexec
    20                           	psect	bssBANK4,global,class=BANK4,space=1,delta=1,noexec
    21                           	psect	inittext,global,class=CODE,delta=2
    22                           	psect	clrtext,global,class=CODE,delta=2
    23                           	psect	cstackBANK2,global,class=BANK2,space=1,delta=1,noexec
    24                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,noexec
    25                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    26                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    27                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    28                           	psect	text1,local,class=CODE,merge=1,delta=2,group=3
    29                           	psect	text2,local,class=CODE,merge=1,delta=2,group=1
    30                           	psect	text3,local,class=CODE,merge=1,delta=2,group=1
    31                           	psect	text4,local,class=CODE,merge=1,delta=2,group=3
    32                           	psect	text5,local,class=CODE,merge=1,delta=2,group=1
    33                           	psect	text6,local,class=CODE,merge=1,delta=2,group=3
    34                           	psect	text7,local,class=CODE,merge=1,delta=2,group=3
    35                           	psect	text8,local,class=CODE,merge=1,delta=2,group=3
    36                           	psect	text9,local,class=CODE,merge=1,delta=2,group=1
    37                           	psect	text10,local,class=CODE,merge=1,delta=2,group=3
    38                           	psect	text11,local,class=CODE,merge=1,delta=2,group=3
    39                           	psect	text12,local,class=CODE,merge=1,delta=2,group=3
    40                           	psect	text13,local,class=CODE,merge=1,delta=2,group=3
    41                           	psect	text14,local,class=CODE,merge=1,delta=2,group=3
    42                           	psect	text15,local,class=CODE,merge=1,delta=2,group=2
    43                           	psect	text16,local,class=CODE,merge=1,delta=2,group=2
    44                           	psect	text17,local,class=CODE,merge=1,delta=2,group=2
    45                           	psect	text18,local,class=CODE,merge=1,delta=2,group=2
    46                           	psect	text19,local,class=CODE,merge=1,delta=2,group=2
    47                           	psect	text20,local,class=CODE,merge=1,delta=2,group=2
    48                           	psect	text21,local,class=CODE,merge=1,delta=2,group=2
    49                           	psect	text22,local,class=CODE,merge=1,delta=2,group=2
    50                           	psect	text23,local,class=CODE,merge=1,delta=2,group=2
    51                           	psect	text24,local,class=CODE,merge=1,delta=2,group=2
    52                           	psect	text25,local,class=CODE,merge=1,delta=2,group=2
    53                           	psect	text26,local,class=CODE,merge=1,delta=2,group=3
    54                           	psect	text27,local,class=CODE,merge=1,delta=2,group=3
    55                           	psect	text28,local,class=CODE,merge=1,delta=2,group=3
    56                           	psect	text29,local,class=CODE,merge=1,delta=2,group=2
    57                           	psect	text30,local,class=CODE,merge=1,delta=2,group=2
    58                           	psect	text31,local,class=CODE,merge=1,delta=2
    59                           	psect	text32,local,class=CODE,merge=1,delta=2
    60                           	psect	text33,local,class=CODE,merge=1,delta=2,group=3
    61                           	psect	text34,local,class=CODE,merge=1,delta=2
    62                           	psect	text35,local,class=CODE,merge=1,delta=2
    63                           	psect	text36,local,class=CODE,merge=1,delta=2
    64                           	psect	text37,local,class=CODE,merge=1,delta=2
    65                           	psect	text38,local,class=CODE,merge=1,delta=2
    66                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=2,noexec
    67                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    68                           	dabs	1,0x7E,2
    69  0000                     
    70                           ; Version 2.40
    71                           ; Generated 17/11/2021 GMT
    72                           ; 
    73                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
    74                           ; All rights reserved.
    75                           ; 
    76                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    77                           ; 
    78                           ; Redistribution and use in source and binary forms, with or without modification, are
    79                           ; permitted provided that the following conditions are met:
    80                           ; 
    81                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    82                           ;        conditions and the following disclaimer.
    83                           ; 
    84                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    85                           ;        of conditions and the following disclaimer in the documentation and/or other
    86                           ;        materials provided with the distribution. Publication is not required when
    87                           ;        this file is used in an embedded application.
    88                           ; 
    89                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    90                           ;        software without specific prior written permission.
    91                           ; 
    92                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    93                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    94                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    95                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    96                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    97                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    98                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    99                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   100                           ; 
   101                           ; 
   102                           ; Code-generator required, PIC16F1509 Definitions
   103                           ; 
   104                           ; SFR Addresses
   105  0000                     	;# 
   106  0001                     	;# 
   107  0002                     	;# 
   108  0003                     	;# 
   109  0004                     	;# 
   110  0005                     	;# 
   111  0006                     	;# 
   112  0007                     	;# 
   113  0008                     	;# 
   114  0009                     	;# 
   115  000A                     	;# 
   116  000B                     	;# 
   117  000C                     	;# 
   118  000D                     	;# 
   119  000E                     	;# 
   120  0011                     	;# 
   121  0012                     	;# 
   122  0013                     	;# 
   123  0015                     	;# 
   124  0016                     	;# 
   125  0016                     	;# 
   126  0017                     	;# 
   127  0018                     	;# 
   128  0019                     	;# 
   129  001A                     	;# 
   130  001B                     	;# 
   131  001C                     	;# 
   132  008C                     	;# 
   133  008D                     	;# 
   134  008E                     	;# 
   135  0091                     	;# 
   136  0092                     	;# 
   137  0093                     	;# 
   138  0095                     	;# 
   139  0096                     	;# 
   140  0097                     	;# 
   141  0099                     	;# 
   142  009A                     	;# 
   143  009B                     	;# 
   144  009B                     	;# 
   145  009C                     	;# 
   146  009D                     	;# 
   147  009E                     	;# 
   148  009F                     	;# 
   149  010C                     	;# 
   150  010D                     	;# 
   151  010E                     	;# 
   152  0111                     	;# 
   153  0112                     	;# 
   154  0113                     	;# 
   155  0114                     	;# 
   156  0115                     	;# 
   157  0116                     	;# 
   158  0117                     	;# 
   159  0118                     	;# 
   160  0119                     	;# 
   161  011D                     	;# 
   162  018C                     	;# 
   163  018D                     	;# 
   164  018E                     	;# 
   165  0191                     	;# 
   166  0191                     	;# 
   167  0192                     	;# 
   168  0193                     	;# 
   169  0193                     	;# 
   170  0194                     	;# 
   171  0195                     	;# 
   172  0196                     	;# 
   173  0197                     	;# 
   174  0199                     	;# 
   175  019A                     	;# 
   176  019B                     	;# 
   177  019B                     	;# 
   178  019C                     	;# 
   179  019D                     	;# 
   180  019E                     	;# 
   181  019F                     	;# 
   182  020C                     	;# 
   183  020D                     	;# 
   184  0211                     	;# 
   185  0211                     	;# 
   186  0212                     	;# 
   187  0212                     	;# 
   188  0213                     	;# 
   189  0213                     	;# 
   190  0214                     	;# 
   191  0214                     	;# 
   192  0215                     	;# 
   193  0215                     	;# 
   194  0215                     	;# 
   195  0216                     	;# 
   196  0216                     	;# 
   197  0217                     	;# 
   198  0217                     	;# 
   199  0391                     	;# 
   200  0392                     	;# 
   201  0393                     	;# 
   202  0394                     	;# 
   203  0395                     	;# 
   204  0396                     	;# 
   205  0498                     	;# 
   206  0498                     	;# 
   207  0499                     	;# 
   208  049A                     	;# 
   209  049B                     	;# 
   210  049B                     	;# 
   211  049C                     	;# 
   212  049D                     	;# 
   213  049E                     	;# 
   214  049F                     	;# 
   215  0611                     	;# 
   216  0612                     	;# 
   217  0613                     	;# 
   218  0613                     	;# 
   219  0614                     	;# 
   220  0615                     	;# 
   221  0616                     	;# 
   222  0616                     	;# 
   223  0617                     	;# 
   224  0618                     	;# 
   225  0619                     	;# 
   226  0619                     	;# 
   227  061A                     	;# 
   228  061B                     	;# 
   229  061C                     	;# 
   230  061C                     	;# 
   231  0691                     	;# 
   232  0692                     	;# 
   233  0693                     	;# 
   234  0694                     	;# 
   235  0695                     	;# 
   236  0F0F                     	;# 
   237  0F10                     	;# 
   238  0F11                     	;# 
   239  0F12                     	;# 
   240  0F13                     	;# 
   241  0F14                     	;# 
   242  0F15                     	;# 
   243  0F16                     	;# 
   244  0F17                     	;# 
   245  0F18                     	;# 
   246  0F19                     	;# 
   247  0F1A                     	;# 
   248  0F1B                     	;# 
   249  0F1C                     	;# 
   250  0F1D                     	;# 
   251  0F1E                     	;# 
   252  0F1F                     	;# 
   253  0F20                     	;# 
   254  0F21                     	;# 
   255  0F22                     	;# 
   256  0F23                     	;# 
   257  0F24                     	;# 
   258  0F25                     	;# 
   259  0F26                     	;# 
   260  0F27                     	;# 
   261  0F28                     	;# 
   262  0F29                     	;# 
   263  0F2A                     	;# 
   264  0F2B                     	;# 
   265  0F2C                     	;# 
   266  0F2D                     	;# 
   267  0F2E                     	;# 
   268  0F2F                     	;# 
   269  0F8C                     	;# 
   270  0F8D                     	;# 
   271  0F91                     	;# 
   272  0F95                     	;# 
   273  0F96                     	;# 
   274  0F97                     	;# 
   275  0F9C                     	;# 
   276  0F9D                     	;# 
   277  0F9E                     	;# 
   278  0FE3                     	;# 
   279  0FE4                     	;# 
   280  0FE5                     	;# 
   281  0FE6                     	;# 
   282  0FE7                     	;# 
   283  0FE8                     	;# 
   284  0FE9                     	;# 
   285  0FEA                     	;# 
   286  0FEB                     	;# 
   287  0FED                     	;# 
   288  0FEE                     	;# 
   289  0FEF                     	;# 
   290  0000                     	;# 
   291  0001                     	;# 
   292  0002                     	;# 
   293  0003                     	;# 
   294  0004                     	;# 
   295  0005                     	;# 
   296  0006                     	;# 
   297  0007                     	;# 
   298  0008                     	;# 
   299  0009                     	;# 
   300  000A                     	;# 
   301  000B                     	;# 
   302  000C                     	;# 
   303  000D                     	;# 
   304  000E                     	;# 
   305  0011                     	;# 
   306  0012                     	;# 
   307  0013                     	;# 
   308  0015                     	;# 
   309  0016                     	;# 
   310  0016                     	;# 
   311  0017                     	;# 
   312  0018                     	;# 
   313  0019                     	;# 
   314  001A                     	;# 
   315  001B                     	;# 
   316  001C                     	;# 
   317  008C                     	;# 
   318  008D                     	;# 
   319  008E                     	;# 
   320  0091                     	;# 
   321  0092                     	;# 
   322  0093                     	;# 
   323  0095                     	;# 
   324  0096                     	;# 
   325  0097                     	;# 
   326  0099                     	;# 
   327  009A                     	;# 
   328  009B                     	;# 
   329  009B                     	;# 
   330  009C                     	;# 
   331  009D                     	;# 
   332  009E                     	;# 
   333  009F                     	;# 
   334  010C                     	;# 
   335  010D                     	;# 
   336  010E                     	;# 
   337  0111                     	;# 
   338  0112                     	;# 
   339  0113                     	;# 
   340  0114                     	;# 
   341  0115                     	;# 
   342  0116                     	;# 
   343  0117                     	;# 
   344  0118                     	;# 
   345  0119                     	;# 
   346  011D                     	;# 
   347  018C                     	;# 
   348  018D                     	;# 
   349  018E                     	;# 
   350  0191                     	;# 
   351  0191                     	;# 
   352  0192                     	;# 
   353  0193                     	;# 
   354  0193                     	;# 
   355  0194                     	;# 
   356  0195                     	;# 
   357  0196                     	;# 
   358  0197                     	;# 
   359  0199                     	;# 
   360  019A                     	;# 
   361  019B                     	;# 
   362  019B                     	;# 
   363  019C                     	;# 
   364  019D                     	;# 
   365  019E                     	;# 
   366  019F                     	;# 
   367  020C                     	;# 
   368  020D                     	;# 
   369  0211                     	;# 
   370  0211                     	;# 
   371  0212                     	;# 
   372  0212                     	;# 
   373  0213                     	;# 
   374  0213                     	;# 
   375  0214                     	;# 
   376  0214                     	;# 
   377  0215                     	;# 
   378  0215                     	;# 
   379  0215                     	;# 
   380  0216                     	;# 
   381  0216                     	;# 
   382  0217                     	;# 
   383  0217                     	;# 
   384  0391                     	;# 
   385  0392                     	;# 
   386  0393                     	;# 
   387  0394                     	;# 
   388  0395                     	;# 
   389  0396                     	;# 
   390  0498                     	;# 
   391  0498                     	;# 
   392  0499                     	;# 
   393  049A                     	;# 
   394  049B                     	;# 
   395  049B                     	;# 
   396  049C                     	;# 
   397  049D                     	;# 
   398  049E                     	;# 
   399  049F                     	;# 
   400  0611                     	;# 
   401  0612                     	;# 
   402  0613                     	;# 
   403  0613                     	;# 
   404  0614                     	;# 
   405  0615                     	;# 
   406  0616                     	;# 
   407  0616                     	;# 
   408  0617                     	;# 
   409  0618                     	;# 
   410  0619                     	;# 
   411  0619                     	;# 
   412  061A                     	;# 
   413  061B                     	;# 
   414  061C                     	;# 
   415  061C                     	;# 
   416  0691                     	;# 
   417  0692                     	;# 
   418  0693                     	;# 
   419  0694                     	;# 
   420  0695                     	;# 
   421  0F0F                     	;# 
   422  0F10                     	;# 
   423  0F11                     	;# 
   424  0F12                     	;# 
   425  0F13                     	;# 
   426  0F14                     	;# 
   427  0F15                     	;# 
   428  0F16                     	;# 
   429  0F17                     	;# 
   430  0F18                     	;# 
   431  0F19                     	;# 
   432  0F1A                     	;# 
   433  0F1B                     	;# 
   434  0F1C                     	;# 
   435  0F1D                     	;# 
   436  0F1E                     	;# 
   437  0F1F                     	;# 
   438  0F20                     	;# 
   439  0F21                     	;# 
   440  0F22                     	;# 
   441  0F23                     	;# 
   442  0F24                     	;# 
   443  0F25                     	;# 
   444  0F26                     	;# 
   445  0F27                     	;# 
   446  0F28                     	;# 
   447  0F29                     	;# 
   448  0F2A                     	;# 
   449  0F2B                     	;# 
   450  0F2C                     	;# 
   451  0F2D                     	;# 
   452  0F2E                     	;# 
   453  0F2F                     	;# 
   454  0F8C                     	;# 
   455  0F8D                     	;# 
   456  0F91                     	;# 
   457  0F95                     	;# 
   458  0F96                     	;# 
   459  0F97                     	;# 
   460  0F9C                     	;# 
   461  0F9D                     	;# 
   462  0F9E                     	;# 
   463  0FE3                     	;# 
   464  0FE4                     	;# 
   465  0FE5                     	;# 
   466  0FE6                     	;# 
   467  0FE7                     	;# 
   468  0FE8                     	;# 
   469  0FE9                     	;# 
   470  0FEA                     	;# 
   471  0FEB                     	;# 
   472  0FED                     	;# 
   473  0FEE                     	;# 
   474  0FEF                     	;# 
   475                           
   476                           	psect	idataBANK3
   477  1D77                     __pidataBANK3:
   478                           
   479                           ;initializer for main@F4003
   480  1D77  340E               	retlw	14
   481  1D78  340A               	retlw	10
   482  1D79  340E               	retlw	14
   483  1D7A  3400               	retlw	0
   484  1D7B  3400               	retlw	0
   485  1D7C  3400               	retlw	0
   486  1D7D  3400               	retlw	0
   487  1D7E  3400               	retlw	0
   488  1D7F  3400               	retlw	0
   489  1D80  3400               	retlw	0
   490  1D81  3400               	retlw	0
   491  1D82  3400               	retlw	0
   492  1D83  3400               	retlw	0
   493  1D84  3400               	retlw	0
   494  1D85  3400               	retlw	0
   495  1D86  3400               	retlw	0
   496  000E                     _PORTCbits	set	14
   497  000E                     _PORTC	set	14
   498  008E                     _TRISC	set	142
   499  009B                     _ADRESL	set	155
   500  009C                     _ADRESH	set	156
   501  009D                     _ADCON0bits	set	157
   502  009D                     _ADCON0	set	157
   503  009F                     _ADCON2	set	159
   504  009E                     _ADCON1	set	158
   505  0095                     _OPTION_REGbits	set	149
   506  008C                     _TRISAbits	set	140
   507  018C                     _ANSELAbits	set	396
   508                           
   509                           	psect	stringtext1
   510  1800                     __pstringtext1:
   511  1800                     STR_1:
   512  1800  3444               	retlw	68	;'D'
   513  1801  3455               	retlw	85	;'U'
   514  1802  344E               	retlw	78	;'N'
   515  1803  3447               	retlw	71	;'G'
   516  1804  3420               	retlw	32	;' '
   517  1805  3432               	retlw	50	;'2'
   518  1806  3430               	retlw	48	;'0'
   519  1807  3431               	retlw	49	;'1'
   520  1808  3434               	retlw	52	;'4'
   521  1809  3436               	retlw	54	;'6'
   522  180A  3434               	retlw	52	;'4'
   523  180B  3438               	retlw	56	;'8'
   524  180C  3436               	retlw	54	;'6'
   525  180D  3400               	retlw	0
   526                           
   527                           	psect	stringtext2
   528  180E                     __pstringtext2:
   529  180E                     STR_2:
   530  180E  3454               	retlw	84	;'T'
   531  180F  3465               	retlw	101	;'e'
   532  1810  346D               	retlw	109	;'m'
   533  1811  3470               	retlw	112	;'p'
   534  1812  3420               	retlw	32	;' '
   535  1813  343D               	retlw	61	;'='
   536  1814  3400               	retlw	0
   537                           
   538                           	psect	stringtext3
   539  1815                     __pstringtext3:
   540  1815                     STR_3:
   541  1815  3425               	retlw	37	;'%'
   542  1816  3430               	retlw	48	;'0'
   543  1817  342E               	retlw	46	;'.'
   544  1818  3431               	retlw	49	;'1'
   545  1819  3466               	retlw	102	;'f'
   546  181A  3400               	retlw	0
   547                           
   548                           	psect	stringtext4
   549  181B                     __pstringtext4:
   550  181B                     STR_5:
   551  181B  3449               	retlw	73	;'I'
   552  181C  344E               	retlw	78	;'N'
   553  181D  3446               	retlw	70	;'F'
   554  181E  3400               	retlw	0
   555                           
   556                           	psect	stringtext5
   557  181F                     __pstringtext5:
   558  181F                     STR_9:
   559  181F  344E               	retlw	78	;'N'
   560  1820  3441               	retlw	65	;'A'
   561  1821  344E               	retlw	78	;'N'
   562  1822  3400               	retlw	0
   563                           
   564                           	psect	stringtext6
   565  1823                     __pstringtext6:
   566  1823                     STR_6:
   567  1823  3469               	retlw	105	;'i'
   568  1824  346E               	retlw	110	;'n'
   569  1825  3466               	retlw	102	;'f'
   570  1826  3400               	retlw	0
   571                           
   572                           	psect	stringtext7
   573  1827                     __pstringtext7:
   574  1827                     STR_10:
   575  1827  346E               	retlw	110	;'n'
   576  1828  3461               	retlw	97	;'a'
   577  1829  346E               	retlw	110	;'n'
   578  182A  3400               	retlw	0
   579                           
   580                           	psect	stringtext8
   581  182B                     __pstringtext8:
   582  182B                     STR_13:
   583  182B  346C               	retlw	108	;'l'
   584  182C  3466               	retlw	102	;'f'
   585  182D  3400               	retlw	0
   586                           
   587                           	psect	stringtext9
   588  182E                     __pstringtext9:
   589  182E                     STR_4:
   590  182E  3443               	retlw	67	;'C'
   591  182F  3400               	retlw	0
   592                           
   593                           	psect	stringtext10
   594  0000                     __pstringtext10:
   595  182B                     
   596                           	psect	cinit
   597  07D9                     start_initialization:	
   598                           ; #config settings
   599                           
   600  07D9                     __initialization:
   601                           
   602                           ; Initialize objects allocated to BANK3
   603  07D9  3077               	movlw	low __pidataBANK3
   604  07DA  0084               	movwf	4
   605  07DB  309D               	movlw	(high __pidataBANK3)| (0+128)
   606  07DC  0085               	movwf	5
   607  07DD  30A0               	movlw	low __pdataBANK3
   608  07DE  0086               	movwf	6
   609  07DF  3001               	movlw	high __pdataBANK3
   610  07E0  0087               	movwf	7
   611  07E1  3010               	movlw	16
   612  07E2  319D  2566  3187   	fcall	init_ram
   613                           
   614                           ; Clear objects allocated to BANK1
   615  07E5  0021               	movlb	1	; select bank1
   616  07E6  01EE               	clrf	__pbssBANK1& (0+127)
   617  07E7  01EF               	clrf	(__pbssBANK1+1)& (0+127)
   618                           
   619                           ; Clear objects allocated to BANK2
   620  07E8  3063               	movlw	low __pbssBANK2
   621  07E9  0084               	movwf	4
   622  07EA  3001               	movlw	high __pbssBANK2
   623  07EB  0085               	movwf	5
   624  07EC  300A               	movlw	10
   625  07ED  319D  2560  3187   	fcall	clear_ram0
   626                           
   627                           ; Clear objects allocated to BANK3
   628  07F0  0023               	movlb	3	; select bank3
   629  07F1  01B0               	clrf	__pbssBANK3& (0+127)
   630  07F2  01B1               	clrf	(__pbssBANK3+1)& (0+127)
   631  07F3  01B2               	clrf	(__pbssBANK3+2)& (0+127)
   632  07F4  01B3               	clrf	(__pbssBANK3+3)& (0+127)
   633                           
   634                           ; Clear objects allocated to BANK4
   635  07F5  3020               	movlw	low __pbssBANK4
   636  07F6  0084               	movwf	4
   637  07F7  3002               	movlw	high __pbssBANK4
   638  07F8  0085               	movwf	5
   639  07F9  3050               	movlw	80
   640  07FA  319D  2560  3187   	fcall	clear_ram0
   641  07FD                     end_of_initialization:	
   642                           ;End of C runtime variable initialization code
   643                           
   644  07FD                     __end_of__initialization:
   645  07FD  0020               	movlb	0
   646  07FE  3194  2CDB         	ljmp	_main	;jump to C main() function
   647                           
   648                           	psect	bssBANK1
   649  00EE                     __pbssBANK1:
   650  00EE                     _flags:
   651  00EE                     	ds	2
   652                           
   653                           	psect	bssBANK2
   654  0163                     __pbssBANK2:
   655  0163                     ___fpclassifyf@F465:
   656  0163                     	ds	4
   657  0167                     _nout:
   658  0167                     	ds	2
   659  0169                     _width:
   660  0169                     	ds	2
   661  016B                     _prec:
   662  016B                     	ds	2
   663                           
   664                           	psect	bssBANK3
   665  01B0                     __pbssBANK3:
   666  01B0                     floorf@F526:
   667  01B0                     	ds	4
   668                           
   669                           	psect	dataBANK3
   670  01A0                     __pdataBANK3:
   671  01A0                     main@F4003:
   672  01A0                     	ds	16
   673                           
   674                           	psect	bssBANK4
   675  0220                     __pbssBANK4:
   676  0220                     _dbuf:
   677  0220                     	ds	80
   678                           
   679                           	psect	inittext
   680  1D66                     init_ram:
   681  1D66  00FE               	movwf	btemp
   682  1D67                     initloop:
   683  1D67  0012               	moviw fsr0++
   684  1D68  001E               	movwi fsr1++
   685  1D69  0BFE               	decfsz	btemp,f
   686  1D6A  2D67               	goto	initloop
   687  1D6B  3400               	retlw	0
   688                           
   689                           	psect	clrtext
   690  1D60                     clear_ram0:	
   691                           ;	Called with FSR0 containing the base address, and
   692                           ;	WREG with the size to clear
   693                           
   694  1D60  0064               	clrwdt	;clear the watchdog before getting into this loop
   695  1D61                     clrloop0:
   696  1D61  0180               	clrf	0	;clear RAM location pointed to by FSR
   697  1D62  3101               	addfsr 0,1
   698  1D63  0B89               	decfsz	9,f	;Have we reached the end of clearing yet?
   699  1D64  2D61               	goto	clrloop0	;have we reached the end yet?
   700  1D65  3400               	retlw	0	;all done for this memory range, return
   701                           
   702                           	psect	cstackBANK2
   703  0120                     __pcstackBANK2:
   704  0120                     ?_sprintf:
   705  0120                     sprintf@fmt:	
   706                           ; 2 bytes @ 0x0
   707                           
   708                           
   709                           ; 2 bytes @ 0x0
   710  0120                     	ds	6
   711  0126                     sprintf@s:
   712                           
   713                           ; 1 bytes @ 0x6
   714  0126                     	ds	1
   715  0127                     sprintf@ap:
   716                           
   717                           ; 1 bytes @ 0x7
   718  0127                     	ds	1
   719  0128                     sprintf@f:
   720                           
   721                           ; 10 bytes @ 0x8
   722  0128                     	ds	10
   723  0132                     ??_main:
   724                           
   725                           ; 1 bytes @ 0x12
   726  0132                     	ds	6
   727  0138                     main@cus:
   728                           
   729                           ; 16 bytes @ 0x18
   730  0138                     	ds	16
   731  0148                     main@temp_result:
   732                           
   733                           ; 15 bytes @ 0x28
   734  0148                     	ds	15
   735  0157                     main@voltage:
   736                           
   737                           ; 4 bytes @ 0x37
   738  0157                     	ds	4
   739  015B                     main@ADC0_result_var:
   740                           
   741                           ; 2 bytes @ 0x3B
   742  015B                     	ds	2
   743  015D                     main@temp_calculate:
   744                           
   745                           ; 4 bytes @ 0x3D
   746  015D                     	ds	4
   747  0161                     main@i:
   748                           
   749                           ; 2 bytes @ 0x41
   750  0161                     	ds	2
   751                           
   752                           	psect	cstackBANK1
   753  00A0                     __pcstackBANK1:
   754  00A0                     _efgtoa$729:
   755                           
   756                           ; 2 bytes @ 0x0
   757  00A0                     	ds	2
   758  00A2                     _efgtoa$737:
   759                           
   760                           ; 2 bytes @ 0x2
   761  00A2                     	ds	2
   762  00A4                     _efgtoa$738:
   763                           
   764                           ; 2 bytes @ 0x4
   765  00A4                     	ds	2
   766  00A6                     efgtoa@t:
   767                           
   768                           ; 2 bytes @ 0x6
   769  00A6                     	ds	2
   770  00A8                     efgtoa@pp:
   771                           
   772                           ; 2 bytes @ 0x8
   773  00A8                     	ds	2
   774  00AA                     efgtoa@ne:
   775                           
   776                           ; 2 bytes @ 0xA
   777  00AA                     	ds	2
   778  00AC                     efgtoa@m:
   779                           
   780                           ; 2 bytes @ 0xC
   781  00AC                     	ds	2
   782  00AE                     efgtoa@ou:
   783                           
   784                           ; 4 bytes @ 0xE
   785  00AE                     	ds	4
   786  00B2                     efgtoa@d:
   787                           
   788                           ; 2 bytes @ 0x12
   789  00B2                     	ds	2
   790  00B4                     efgtoa@sign:
   791                           
   792                           ; 2 bytes @ 0x14
   793  00B4                     	ds	2
   794  00B6                     efgtoa@fp:
   795                           
   796                           ; 1 bytes @ 0x16
   797  00B6                     	ds	1
   798  00B7                     efgtoa@p:
   799                           
   800                           ; 2 bytes @ 0x17
   801  00B7                     	ds	2
   802  00B9                     efgtoa@w:
   803                           
   804                           ; 2 bytes @ 0x19
   805  00B9                     	ds	2
   806  00BB                     efgtoa@nmode:
   807                           
   808                           ; 1 bytes @ 0x1B
   809  00BB                     	ds	1
   810  00BC                     efgtoa@mode:
   811                           
   812                           ; 1 bytes @ 0x1C
   813  00BC                     	ds	1
   814  00BD                     efgtoa@h:
   815                           
   816                           ; 4 bytes @ 0x1D
   817  00BD                     	ds	4
   818  00C1                     efgtoa@l:
   819                           
   820                           ; 4 bytes @ 0x21
   821  00C1                     	ds	4
   822  00C5                     efgtoa@i:
   823                           
   824                           ; 2 bytes @ 0x25
   825  00C5                     	ds	2
   826  00C7                     efgtoa@g:
   827                           
   828                           ; 4 bytes @ 0x27
   829  00C7                     	ds	4
   830  00CB                     efgtoa@e:
   831                           
   832                           ; 2 bytes @ 0x2B
   833  00CB                     	ds	2
   834  00CD                     efgtoa@n:
   835                           
   836                           ; 2 bytes @ 0x2D
   837  00CD                     	ds	2
   838  00CF                     efgtoa@u:
   839                           
   840                           ; 4 bytes @ 0x2F
   841  00CF                     	ds	4
   842  00D3                     ?_vfpfcnvrt:
   843  00D3                     vfpfcnvrt@fmt:	
   844                           ; 2 bytes @ 0x33
   845                           
   846                           
   847                           ; 1 bytes @ 0x33
   848  00D3                     	ds	1
   849  00D4                     vfpfcnvrt@ap:
   850                           
   851                           ; 1 bytes @ 0x34
   852  00D4                     	ds	1
   853  00D5                     ??_vfpfcnvrt:
   854                           
   855                           ; 1 bytes @ 0x35
   856  00D5                     	ds	5
   857  00DA                     vfpfcnvrt@done:
   858                           
   859                           ; 2 bytes @ 0x3A
   860  00DA                     	ds	2
   861  00DC                     vfpfcnvrt@f:
   862                           
   863                           ; 4 bytes @ 0x3C
   864  00DC                     	ds	4
   865  00E0                     vfpfcnvrt@ct:
   866                           
   867                           ; 3 bytes @ 0x40
   868  00E0                     	ds	3
   869  00E3                     vfpfcnvrt@c:
   870                           
   871                           ; 1 bytes @ 0x43
   872  00E3                     	ds	1
   873  00E4                     vfpfcnvrt@fp:
   874                           
   875                           ; 1 bytes @ 0x44
   876  00E4                     	ds	1
   877  00E5                     ?_vfprintf:
   878  00E5                     vfprintf@fmt:	
   879                           ; 2 bytes @ 0x45
   880                           
   881                           
   882                           ; 2 bytes @ 0x45
   883  00E5                     	ds	2
   884  00E7                     vfprintf@ap:
   885                           
   886                           ; 1 bytes @ 0x47
   887  00E7                     	ds	1
   888  00E8                     ??_vfprintf:
   889                           
   890                           ; 1 bytes @ 0x48
   891  00E8                     	ds	2
   892  00EA                     vfprintf@fp:
   893                           
   894                           ; 1 bytes @ 0x4A
   895  00EA                     	ds	1
   896  00EB                     vfprintf@cfmt:
   897                           
   898                           ; 2 bytes @ 0x4B
   899  00EB                     	ds	2
   900  00ED                     ??_sprintf:
   901                           
   902                           ; 1 bytes @ 0x4D
   903  00ED                     	ds	1
   904                           
   905                           	psect	cstackCOMMON
   906  0070                     __pcstackCOMMON:
   907  0070                     ?___fleq:
   908  0070                     ?_LCD_Initialize:	
   909                           ; 1 bit 
   910                           
   911  0070                     ?_LCDPutCmd:	
   912                           ; 1 bytes @ 0x0
   913                           
   914  0070                     ?_LCDPutChar:	
   915                           ; 1 bytes @ 0x0
   916                           
   917  0070                     ?_strcpy:	
   918                           ; 1 bytes @ 0x0
   919                           
   920  0070                     ?_putch:	
   921                           ; 1 bytes @ 0x0
   922                           
   923  0070                     ??_putch:	
   924                           ; 1 bytes @ 0x0
   925                           
   926  0070                     ?_main:	
   927                           ; 1 bytes @ 0x0
   928                           
   929  0070                     ?_LCDWriteNibble:	
   930                           ; 1 bytes @ 0x0
   931                           
   932  0070                     ?_strlen:	
   933                           ; 1 bytes @ 0x0
   934                           
   935  0070                     ?__Umul8_16:	
   936                           ; 2 bytes @ 0x0
   937                           
   938  0070                     ?_fputc:	
   939                           ; 2 bytes @ 0x0
   940                           
   941  0070                     ?___fpclassifyf:	
   942                           ; 2 bytes @ 0x0
   943                           
   944  0070                     ?_isupper:	
   945                           ; 2 bytes @ 0x0
   946                           
   947  0070                     ?_isdigit:	
   948                           ; 2 bytes @ 0x0
   949                           
   950  0070                     ?_strncmp:	
   951                           ; 2 bytes @ 0x0
   952                           
   953  0070                     ?_isspace:	
   954                           ; 2 bytes @ 0x0
   955                           
   956  0070                     ?___wmul:	
   957                           ; 2 bytes @ 0x0
   958                           
   959  0070                     ?___awdiv:	
   960                           ; 2 bytes @ 0x0
   961                           
   962  0070                     ?___awmod:	
   963                           ; 2 bytes @ 0x0
   964                           
   965  0070                     ?___flneg:	
   966                           ; 2 bytes @ 0x0
   967                           
   968  0070                     ?___fltol:	
   969                           ; 4 bytes @ 0x0
   970                           
   971  0070                     ?___fladd:	
   972                           ; 4 bytes @ 0x0
   973                           
   974  0070                     ?___xxtofl:	
   975                           ; 4 bytes @ 0x0
   976                           
   977  0070                     LCDWriteNibble@rs:	
   978                           ; 4 bytes @ 0x0
   979                           
   980  0070                     __Umul8_16@multiplicand:	
   981                           ; 1 bytes @ 0x0
   982                           
   983  0070                     putch@c:	
   984                           ; 1 bytes @ 0x0
   985                           
   986  0070                     ___wmul@multiplier:	
   987                           ; 1 bytes @ 0x0
   988                           
   989  0070                     ___awdiv@divisor:	
   990                           ; 2 bytes @ 0x0
   991                           
   992  0070                     ___awmod@divisor:	
   993                           ; 2 bytes @ 0x0
   994                           
   995  0070                     isdigit@c:	
   996                           ; 2 bytes @ 0x0
   997                           
   998  0070                     isspace@c:	
   999                           ; 2 bytes @ 0x0
  1000                           
  1001  0070                     isupper@c:	
  1002                           ; 2 bytes @ 0x0
  1003                           
  1004  0070                     fputc@c:	
  1005                           ; 2 bytes @ 0x0
  1006                           
  1007  0070                     strcpy@src:	
  1008                           ; 2 bytes @ 0x0
  1009                           
  1010  0070                     strlen@s:	
  1011                           ; 2 bytes @ 0x0
  1012                           
  1013  0070                     strncmp@_r:	
  1014                           ; 2 bytes @ 0x0
  1015                           
  1016  0070                     ___fleq@ff1:	
  1017                           ; 2 bytes @ 0x0
  1018                           
  1019  0070                     ___flneg@f1:	
  1020                           ; 4 bytes @ 0x0
  1021                           
  1022  0070                     ___fltol@f1:	
  1023                           ; 4 bytes @ 0x0
  1024                           
  1025  0070                     ___fladd@b:	
  1026                           ; 4 bytes @ 0x0
  1027                           
  1028  0070                     ___xxtofl@val:	
  1029                           ; 4 bytes @ 0x0
  1030                           
  1031  0070                     ___fpclassifyf@x:	
  1032                           ; 4 bytes @ 0x0
  1033                           
  1034                           
  1035                           ; 4 bytes @ 0x0
  1036  0070                     	ds	1
  1037  0071                     ??_LCDWriteNibble:
  1038                           
  1039                           ; 1 bytes @ 0x1
  1040  0071                     	ds	1
  1041  0072                     ??_strlen:
  1042  0072                     ??__Umul8_16:	
  1043                           ; 1 bytes @ 0x2
  1044                           
  1045  0072                     ??_isupper:	
  1046                           ; 1 bytes @ 0x2
  1047                           
  1048  0072                     ??_strcpy:	
  1049                           ; 1 bytes @ 0x2
  1050                           
  1051  0072                     ??_isdigit:	
  1052                           ; 1 bytes @ 0x2
  1053                           
  1054  0072                     ??_isspace:	
  1055                           ; 1 bytes @ 0x2
  1056                           
  1057  0072                     fputc@fp:	
  1058                           ; 1 bytes @ 0x2
  1059                           
  1060  0072                     ___wmul@multiplicand:	
  1061                           ; 1 bytes @ 0x2
  1062                           
  1063  0072                     ___awdiv@dividend:	
  1064                           ; 2 bytes @ 0x2
  1065                           
  1066  0072                     ___awmod@dividend:	
  1067                           ; 2 bytes @ 0x2
  1068                           
  1069  0072                     strncmp@n:	
  1070                           ; 2 bytes @ 0x2
  1071                           
  1072                           
  1073                           ; 2 bytes @ 0x2
  1074  0072                     	ds	1
  1075  0073                     ??_fputc:
  1076  0073                     LCDWriteNibble@ch:	
  1077                           ; 1 bytes @ 0x3
  1078                           
  1079  0073                     strlen@a:	
  1080                           ; 1 bytes @ 0x3
  1081                           
  1082                           
  1083                           ; 2 bytes @ 0x3
  1084  0073                     	ds	1
  1085  0074                     ??_LCDPutCmd:
  1086  0074                     ??_LCDPutChar:	
  1087                           ; 1 bytes @ 0x4
  1088                           
  1089  0074                     ??___fpclassifyf:	
  1090                           ; 1 bytes @ 0x4
  1091                           
  1092  0074                     ??_strncmp:	
  1093                           ; 1 bytes @ 0x4
  1094                           
  1095  0074                     ??___wmul:	
  1096                           ; 1 bytes @ 0x4
  1097                           
  1098  0074                     ??___awdiv:	
  1099                           ; 1 bytes @ 0x4
  1100                           
  1101  0074                     ??___awmod:	
  1102                           ; 1 bytes @ 0x4
  1103                           
  1104  0074                     ??___flneg:	
  1105                           ; 1 bytes @ 0x4
  1106                           
  1107  0074                     ??___fltol:	
  1108                           ; 1 bytes @ 0x4
  1109                           
  1110  0074                     ??___xxtofl:	
  1111                           ; 1 bytes @ 0x4
  1112                           
  1113  0074                     _isspace$816:	
  1114                           ; 1 bytes @ 0x4
  1115                           
  1116  0074                     ___wmul@product:	
  1117                           ; 1 bytes @ 0x4
  1118                           
  1119  0074                     __Umul8_16@product:	
  1120                           ; 2 bytes @ 0x4
  1121                           
  1122  0074                     strcpy@s:	
  1123                           ; 2 bytes @ 0x4
  1124                           
  1125  0074                     ___fleq@ff2:	
  1126                           ; 2 bytes @ 0x4
  1127                           
  1128  0074                     ___fladd@a:	
  1129                           ; 4 bytes @ 0x4
  1130                           
  1131                           
  1132                           ; 4 bytes @ 0x4
  1133  0074                     	ds	1
  1134  0075                     ___awdiv@counter:
  1135  0075                     ___awmod@counter:	
  1136                           ; 1 bytes @ 0x5
  1137                           
  1138  0075                     strncmp@_l:	
  1139                           ; 1 bytes @ 0x5
  1140                           
  1141                           
  1142                           ; 1 bytes @ 0x5
  1143  0075                     	ds	1
  1144  0076                     ?_tolower:
  1145  0076                     ?_atoi:	
  1146                           ; 2 bytes @ 0x6
  1147                           
  1148  0076                     LCDPutChar@ch:	
  1149                           ; 2 bytes @ 0x6
  1150                           
  1151  0076                     LCDPutCmd@ch:	
  1152                           ; 1 bytes @ 0x6
  1153                           
  1154  0076                     ___awdiv@sign:	
  1155                           ; 1 bytes @ 0x6
  1156                           
  1157  0076                     ___awmod@sign:	
  1158                           ; 1 bytes @ 0x6
  1159                           
  1160  0076                     strcpy@d:	
  1161                           ; 1 bytes @ 0x6
  1162                           
  1163  0076                     __Umul8_16@word_mpld:	
  1164                           ; 1 bytes @ 0x6
  1165                           
  1166  0076                     atoi@s:	
  1167                           ; 2 bytes @ 0x6
  1168                           
  1169  0076                     strncmp@r:	
  1170                           ; 2 bytes @ 0x6
  1171                           
  1172  0076                     tolower@c:	
  1173                           ; 2 bytes @ 0x6
  1174                           
  1175                           
  1176                           ; 2 bytes @ 0x6
  1177  0076                     	ds	1
  1178  0077                     ??_LCD_Initialize:
  1179  0077                     ?_LCDPutStr3:	
  1180                           ; 1 bytes @ 0x7
  1181                           
  1182  0077                     ?_LCDPutStr2:	
  1183                           ; 1 bytes @ 0x7
  1184                           
  1185  0077                     ?_LCDGoto:	
  1186                           ; 1 bytes @ 0x7
  1187                           
  1188  0077                     LCDGoto@ln:	
  1189                           ; 1 bytes @ 0x7
  1190                           
  1191  0077                     strcpy@dest:	
  1192                           ; 1 bytes @ 0x7
  1193                           
  1194  0077                     LCDPutStr2@str:	
  1195                           ; 1 bytes @ 0x7
  1196                           
  1197  0077                     LCDPutStr3@str:	
  1198                           ; 2 bytes @ 0x7
  1199                           
  1200  0077                     ___awdiv@quotient:	
  1201                           ; 2 bytes @ 0x7
  1202                           
  1203                           
  1204                           ; 2 bytes @ 0x7
  1205  0077                     	ds	1
  1206  0078                     ??_LCDGoto:
  1207  0078                     ??_tolower:	
  1208                           ; 1 bytes @ 0x8
  1209                           
  1210  0078                     ??_atoi:	
  1211                           ; 1 bytes @ 0x8
  1212                           
  1213  0078                     ??___fleq:	
  1214                           ; 1 bytes @ 0x8
  1215                           
  1216  0078                     ?_fputs:	
  1217                           ; 1 bytes @ 0x8
  1218                           
  1219  0078                     ___fladd@signs:	
  1220                           ; 2 bytes @ 0x8
  1221                           
  1222  0078                     __Umul8_16@multiplier:	
  1223                           ; 1 bytes @ 0x8
  1224                           
  1225  0078                     ___xxtofl@sign:	
  1226                           ; 1 bytes @ 0x8
  1227                           
  1228  0078                     fputs@fp:	
  1229                           ; 1 bytes @ 0x8
  1230                           
  1231  0078                     strncmp@l:	
  1232                           ; 1 bytes @ 0x8
  1233                           
  1234                           
  1235                           ; 1 bytes @ 0x8
  1236  0078                     	ds	1
  1237  0079                     ??_fputs:
  1238  0079                     LCDPutStr2@pos:	
  1239                           ; 1 bytes @ 0x9
  1240                           
  1241  0079                     LCDPutStr3@ln:	
  1242                           ; 1 bytes @ 0x9
  1243                           
  1244  0079                     LCDGoto@pos:	
  1245                           ; 1 bytes @ 0x9
  1246                           
  1247  0079                     ___fltol@sign1:	
  1248                           ; 1 bytes @ 0x9
  1249                           
  1250  0079                     ___fladd@aexp:	
  1251                           ; 1 bytes @ 0x9
  1252                           
  1253  0079                     ___xxtofl@exp:	
  1254                           ; 1 bytes @ 0x9
  1255                           
  1256                           
  1257                           ; 1 bytes @ 0x9
  1258  0079                     	ds	1
  1259  007A                     ??_LCDPutStr3:
  1260  007A                     LCDPutStr2@ln:	
  1261                           ; 1 bytes @ 0xA
  1262                           
  1263  007A                     ___fltol@exp1:	
  1264                           ; 1 bytes @ 0xA
  1265                           
  1266  007A                     ___fladd@bexp:	
  1267                           ; 1 bytes @ 0xA
  1268                           
  1269  007A                     _LCDGoto$285:	
  1270                           ; 1 bytes @ 0xA
  1271                           
  1272  007A                     ___xxtofl@arg:	
  1273                           ; 2 bytes @ 0xA
  1274                           
  1275                           
  1276                           ; 4 bytes @ 0xA
  1277  007A                     	ds	1
  1278  007B                     ??_LCDPutStr2:
  1279  007B                     ___fladd@grs:	
  1280                           ; 1 bytes @ 0xB
  1281                           
  1282                           
  1283                           ; 1 bytes @ 0xB
  1284  007B                     	ds	1
  1285  007C                     ??_pad:
  1286  007C                     LCDGoto@y:	
  1287                           ; 1 bytes @ 0xC
  1288                           
  1289                           
  1290                           ; 1 bytes @ 0xC
  1291  007C                     	ds	1
  1292  007D                     LCDGoto@x:
  1293                           
  1294                           ; 1 bytes @ 0xD
  1295  007D                     	ds	1
  1296  007E                     ??___flsub:
  1297                           
  1298                           	psect	cstackBANK0
  1299  0020                     __pcstackBANK0:	
  1300                           ; 1 bytes @ 0xE
  1301                           
  1302  0020                     ??___fladd:
  1303  0020                     ?___flmul:	
  1304                           ; 1 bytes @ 0x0
  1305                           
  1306  0020                     fputs@c:	
  1307                           ; 4 bytes @ 0x0
  1308                           
  1309  0020                     _LCDPutStr2$270:	
  1310                           ; 1 bytes @ 0x0
  1311                           
  1312  0020                     _LCDPutStr3$278:	
  1313                           ; 2 bytes @ 0x0
  1314                           
  1315  0020                     ___fpclassifyf@e:	
  1316                           ; 2 bytes @ 0x0
  1317                           
  1318  0020                     atoi@neg:	
  1319                           ; 2 bytes @ 0x0
  1320                           
  1321  0020                     ___flmul@b:	
  1322                           ; 2 bytes @ 0x0
  1323                           
  1324                           
  1325                           ; 4 bytes @ 0x0
  1326  0020                     	ds	1
  1327  0021                     fputs@i:
  1328                           
  1329                           ; 2 bytes @ 0x1
  1330  0021                     	ds	1
  1331  0022                     LCDPutStr2@h:
  1332  0022                     LCDPutStr3@x:	
  1333                           ; 1 bytes @ 0x2
  1334                           
  1335  0022                     atoi@n:	
  1336                           ; 1 bytes @ 0x2
  1337                           
  1338  0022                     ___fpclassifyf@u:	
  1339                           ; 2 bytes @ 0x2
  1340                           
  1341                           
  1342                           ; 4 bytes @ 0x2
  1343  0022                     	ds	1
  1344  0023                     LCDPutStr2@y:
  1345  0023                     LCDPutStr3@y:	
  1346                           ; 1 bytes @ 0x3
  1347                           
  1348  0023                     fputs@s:	
  1349                           ; 1 bytes @ 0x3
  1350                           
  1351                           
  1352                           ; 1 bytes @ 0x3
  1353  0023                     	ds	1
  1354  0024                     ?_pad:
  1355  0024                     LCDPutStr2@i:	
  1356                           ; 2 bytes @ 0x4
  1357                           
  1358  0024                     LCDPutStr3@i:	
  1359                           ; 1 bytes @ 0x4
  1360                           
  1361  0024                     pad@buf:	
  1362                           ; 1 bytes @ 0x4
  1363                           
  1364  0024                     ___flmul@a:	
  1365                           ; 1 bytes @ 0x4
  1366                           
  1367                           
  1368                           ; 4 bytes @ 0x4
  1369  0024                     	ds	1
  1370  0025                     LCDPutStr2@x:
  1371  0025                     pad@p:	
  1372                           ; 1 bytes @ 0x5
  1373                           
  1374                           
  1375                           ; 2 bytes @ 0x5
  1376  0025                     	ds	2
  1377  0027                     pad@i:
  1378                           
  1379                           ; 2 bytes @ 0x7
  1380  0027                     	ds	1
  1381  0028                     ??___flmul:
  1382                           
  1383                           ; 1 bytes @ 0x8
  1384  0028                     	ds	1
  1385  0029                     pad@w:
  1386                           
  1387                           ; 2 bytes @ 0x9
  1388  0029                     	ds	2
  1389  002B                     pad@fp:
  1390                           
  1391                           ; 1 bytes @ 0xB
  1392  002B                     	ds	2
  1393  002D                     ___flmul@sign:
  1394                           
  1395                           ; 1 bytes @ 0xD
  1396  002D                     	ds	1
  1397  002E                     ___flmul@grs:
  1398                           
  1399                           ; 4 bytes @ 0xE
  1400  002E                     	ds	4
  1401  0032                     ___flmul@aexp:
  1402                           
  1403                           ; 1 bytes @ 0x12
  1404  0032                     	ds	1
  1405  0033                     ___flmul@bexp:
  1406                           
  1407                           ; 1 bytes @ 0x13
  1408  0033                     	ds	1
  1409  0034                     ___flmul@prod:
  1410                           
  1411                           ; 4 bytes @ 0x14
  1412  0034                     	ds	4
  1413  0038                     ___flmul@temp:
  1414                           
  1415                           ; 2 bytes @ 0x18
  1416  0038                     	ds	2
  1417  003A                     ?___flge:
  1418  003A                     ?___flsub:	
  1419                           ; 1 bit 
  1420                           
  1421  003A                     ?___fldiv:	
  1422                           ; 4 bytes @ 0x1A
  1423                           
  1424  003A                     ___flge@ff1:	
  1425                           ; 4 bytes @ 0x1A
  1426                           
  1427  003A                     ___flsub@a:	
  1428                           ; 4 bytes @ 0x1A
  1429                           
  1430  003A                     ___fldiv@a:	
  1431                           ; 4 bytes @ 0x1A
  1432                           
  1433                           
  1434                           ; 4 bytes @ 0x1A
  1435  003A                     	ds	4
  1436  003E                     ___flge@ff2:
  1437  003E                     ___flsub@b:	
  1438                           ; 4 bytes @ 0x1E
  1439                           
  1440  003E                     ___fldiv@b:	
  1441                           ; 4 bytes @ 0x1E
  1442                           
  1443                           
  1444                           ; 4 bytes @ 0x1E
  1445  003E                     	ds	4
  1446  0042                     ??___flge:
  1447  0042                     ??___fldiv:	
  1448                           ; 1 bytes @ 0x22
  1449                           
  1450                           
  1451                           ; 1 bytes @ 0x22
  1452  0042                     	ds	5
  1453  0047                     ___fldiv@rem:
  1454                           
  1455                           ; 4 bytes @ 0x27
  1456  0047                     	ds	4
  1457  004B                     ___fldiv@sign:
  1458                           
  1459                           ; 1 bytes @ 0x2B
  1460  004B                     	ds	1
  1461  004C                     ___fldiv@new_exp:
  1462                           
  1463                           ; 2 bytes @ 0x2C
  1464  004C                     	ds	2
  1465  004E                     ___fldiv@grs:
  1466                           
  1467                           ; 4 bytes @ 0x2E
  1468  004E                     	ds	4
  1469  0052                     ___fldiv@bexp:
  1470                           
  1471                           ; 1 bytes @ 0x32
  1472  0052                     	ds	1
  1473  0053                     ___fldiv@aexp:
  1474                           
  1475                           ; 1 bytes @ 0x33
  1476  0053                     	ds	1
  1477  0054                     ?_floorf:
  1478  0054                     floorf@x:	
  1479                           ; 4 bytes @ 0x34
  1480                           
  1481                           
  1482                           ; 4 bytes @ 0x34
  1483  0054                     	ds	4
  1484  0058                     ??_floorf:
  1485                           
  1486                           ; 1 bytes @ 0x38
  1487  0058                     	ds	6
  1488  005E                     floorf@m:
  1489                           
  1490                           ; 4 bytes @ 0x3E
  1491  005E                     	ds	4
  1492  0062                     floorf@e:
  1493                           
  1494                           ; 2 bytes @ 0x42
  1495  0062                     	ds	2
  1496  0064                     floorf@u:
  1497                           
  1498                           ; 4 bytes @ 0x44
  1499  0064                     	ds	4
  1500  0068                     ?_efgtoa:
  1501  0068                     efgtoa@f:	
  1502                           ; 2 bytes @ 0x48
  1503                           
  1504                           
  1505                           ; 4 bytes @ 0x48
  1506  0068                     	ds	4
  1507  006C                     efgtoa@c:
  1508                           
  1509                           ; 1 bytes @ 0x4C
  1510  006C                     	ds	1
  1511  006D                     ??_efgtoa:
  1512                           
  1513                           ; 1 bytes @ 0x4D
  1514  006D                     	ds	3
  1515                           
  1516                           	psect	maintext
  1517  14DB                     __pmaintext:	
  1518 ;;
  1519 ;;Main: autosize = 0, tempsize = 6, incstack = 0, save=0
  1520 ;;
  1521 ;; *************** function _main *****************
  1522 ;; Defined at:
  1523 ;;		line 8 in file "Assignment 72.c"
  1524 ;; Parameters:    Size  Location     Type
  1525 ;;		None
  1526 ;; Auto vars:     Size  Location     Type
  1527 ;;  i               2   65[BANK2 ] int 
  1528 ;;  cus            16   24[BANK2 ] unsigned char [16]
  1529 ;;  temp_result    15   40[BANK2 ] unsigned char [15]
  1530 ;;  temp_calcula    4   61[BANK2 ] float 
  1531 ;;  voltage         4   55[BANK2 ] float 
  1532 ;;  ADC0_result_    2   59[BANK2 ] unsigned int 
  1533 ;; Return value:  Size  Location     Type
  1534 ;;                  1    wreg      void 
  1535 ;; Registers used:
  1536 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  1537 ;; Tracked objects:
  1538 ;;		On entry : B1F/0
  1539 ;;		On exit  : 0/0
  1540 ;;		Unchanged: 0/0
  1541 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  1542 ;;      Params:         0       0       0       0       0       0       0       0
  1543 ;;      Locals:         0       0       0      43       0       0       0       0
  1544 ;;      Temps:          0       0       0       6       0       0       0       0
  1545 ;;      Totals:         0       0       0      49       0       0       0       0
  1546 ;;Total ram usage:       49 bytes
  1547 ;; Hardware stack levels required when called: 8
  1548 ;; This function calls:
  1549 ;;		_LCDGoto
  1550 ;;		_LCDPutChar
  1551 ;;		_LCDPutCmd
  1552 ;;		_LCDPutStr2
  1553 ;;		_LCDPutStr3
  1554 ;;		_LCD_Initialize
  1555 ;;		___fldiv
  1556 ;;		___flge
  1557 ;;		___flmul
  1558 ;;		___xxtofl
  1559 ;;		_sprintf
  1560 ;; This function is called by:
  1561 ;;		Startup code after reset
  1562 ;; This function uses a non-reentrant model
  1563 ;;
  1564                           
  1565  14DB                     _main:	
  1566                           ;psect for function _main
  1567                           
  1568  14DB                     l3987:	
  1569                           ;incstack = 0
  1570                           ; Regs used in _main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  1571                           
  1572                           
  1573                           ;Assignment 72.c: 9:     LCD_Initialize();
  1574  14DB  319E  2662  3194   	fcall	_LCD_Initialize
  1575  14DE                     l3989:
  1576                           
  1577                           ;Assignment 72.c: 10:     LCDPutStr3("DUNG 20146486",0);
  1578  14DE  3000               	movlw	low (STR_1| (0+32768))
  1579  14DF  00F7               	movwf	LCDPutStr3@str
  1580  14E0  3098               	movlw	high (STR_1| (0+32768))
  1581  14E1  00F8               	movwf	LCDPutStr3@str+1
  1582  14E2  01F9               	clrf	LCDPutStr3@ln
  1583  14E3  3191  2195  3194   	fcall	_LCDPutStr3
  1584  14E6                     l3991:
  1585                           
  1586                           ;Assignment 72.c: 11:     LCDPutStr2("Temp =",0,1);
  1587  14E6  300E               	movlw	low (STR_2| (0+32768))
  1588  14E7  00F7               	movwf	LCDPutStr2@str
  1589  14E8  3098               	movlw	high (STR_2| (0+32768))
  1590  14E9  00F8               	movwf	LCDPutStr2@str+1
  1591  14EA  01F9               	clrf	LCDPutStr2@pos
  1592  14EB  01FA               	clrf	LCDPutStr2@ln
  1593  14EC  0AFA               	incf	LCDPutStr2@ln,f
  1594  14ED  3190  20DF  3194   	fcall	_LCDPutStr2
  1595  14F0                     l3993:
  1596                           
  1597                           ;Assignment 72.c: 13:     unsigned int ADC0_result_var;;Assignment 72.c: 14:     TRISAbi
      +                          ts.TRISA0 = 1;
  1598  14F0  0021               	movlb	1	; select bank1
  1599  14F1  140C               	bsf	12,0	;volatile
  1600  14F2                     l3995:
  1601                           
  1602                           ;Assignment 72.c: 15:     ANSELAbits.ANSA0 = 1;
  1603  14F2  0023               	movlb	3	; select bank3
  1604  14F3  140C               	bsf	12,0	;volatile
  1605  14F4                     l3997:
  1606                           
  1607                           ;Assignment 72.c: 16:     OPTION_REGbits.nWPUEN = 1;
  1608  14F4  0021               	movlb	1	; select bank1
  1609  14F5  1795               	bsf	21,7	;volatile
  1610  14F6                     l3999:
  1611                           
  1612                           ;Assignment 72.c: 17:     ADCON1 = 0b11010000;
  1613  14F6  30D0               	movlw	208
  1614  14F7  009E               	movwf	30	;volatile
  1615  14F8                     l4001:
  1616                           
  1617                           ;Assignment 72.c: 19:     ADCON2 = 0b00000000;
  1618  14F8  019F               	clrf	31	;volatile
  1619  14F9                     l4003:
  1620                           
  1621                           ;Assignment 72.c: 20:     ADCON0 = 0b00000001;
  1622  14F9  3001               	movlw	1
  1623  14FA  009D               	movwf	29	;volatile
  1624  14FB                     l4005:
  1625                           
  1626                           ;Assignment 72.c: 21:     ADCON0bits.ADON = 1;
  1627  14FB  141D               	bsf	29,0	;volatile
  1628  14FC                     l4007:
  1629                           
  1630                           ;Assignment 72.c: 22:     _delay((unsigned long)((1)*(1000000/4000.0)));
  1631  14FC  3053               	movlw	83
  1632  14FD                     u5677:
  1633  14FD  0B89               	decfsz	9,f
  1634  14FE  2CFD               	goto	u5677
  1635  14FF  0000               	nop
  1636  1500                     l4009:
  1637                           
  1638                           ;Assignment 72.c: 25:     LCDPutCmd(0x40);
  1639  1500  3040               	movlw	64
  1640  1501  319E  2604  3194   	fcall	_LCDPutCmd
  1641  1504                     l4011:
  1642                           
  1643                           ;Assignment 72.c: 26:     uint8_t cus[] =
  1644  1504  30A0               	movlw	low main@F4003
  1645  1505  0086               	movwf	6
  1646  1506  3001               	movlw	high main@F4003
  1647  1507  0087               	movwf	7
  1648  1508  3038               	movlw	low main@cus
  1649  1509  0084               	movwf	4
  1650  150A  3001               	movlw	high main@cus
  1651  150B  0085               	movwf	5
  1652  150C  3010               	movlw	16
  1653  150D  0022               	movlb	2	; select bank2
  1654  150E  00B2               	movwf	??_main^(0+256)
  1655  150F                     u5610:
  1656  150F  0016               	moviw fsr1++
  1657  1510  001A               	movwi fsr0++
  1658  1511  0BB2               	decfsz	??_main^(0+256),f
  1659  1512  2D0F               	goto	u5610
  1660  1513                     l4013:
  1661                           
  1662                           ;Assignment 72.c: 29:     for (int i=0;i<16;i++){
  1663  1513  01E1               	clrf	main@i^(0+256)
  1664  1514  01E2               	clrf	(main@i+1)^(0+256)
  1665  1515                     l4019:
  1666                           
  1667                           ;Assignment 72.c: 30:         LCDPutChar(cus[i]);
  1668  1515  0022               	movlb	2	; select bank2
  1669  1516  0861               	movf	main@i^(0+256),w
  1670  1517  3E38               	addlw	(low (main@cus| (0+256)))& (0+255)
  1671  1518  0086               	movwf	6
  1672  1519  3001               	movlw	1	; select bank2/3
  1673  151A  0087               	movwf	7
  1674  151B  0801               	movf	1,w
  1675  151C  319D  25E7  3194   	fcall	_LCDPutChar
  1676  151F                     l4021:
  1677                           
  1678                           ;Assignment 72.c: 31:     }
  1679  151F  3001               	movlw	1
  1680  1520  0022               	movlb	2	; select bank2
  1681  1521  07E1               	addwf	main@i^(0+256),f
  1682  1522  3000               	movlw	0
  1683  1523  3DE2               	addwfc	(main@i+1)^(0+256),f
  1684  1524                     l4023:
  1685  1524  0862               	movf	(main@i+1)^(0+256),w
  1686  1525  3A80               	xorlw	128
  1687  1526  00B2               	movwf	??_main^(0+256)
  1688  1527  3080               	movlw	128
  1689  1528  0232               	subwf	??_main^(0+256),w
  1690  1529  1D03               	skipz
  1691  152A  2D2D               	goto	u5625
  1692  152B  3010               	movlw	16
  1693  152C  0261               	subwf	main@i^(0+256),w
  1694  152D                     u5625:
  1695  152D  1C03               	skipc
  1696  152E  2D30               	goto	u5621
  1697  152F  2D31               	goto	u5620
  1698  1530                     u5621:
  1699  1530  2D15               	goto	l4019
  1700  1531                     u5620:
  1701  1531                     l43:	
  1702                           ;Assignment 72.c: 33:     float temp_calculate, voltage ;;Assignment 72.c: 34:     unsig
      +                          ned char temp_result[15];;Assignment 72.c: 35:     while(1){
  1703                           
  1704                           
  1705                           ;Assignment 72.c: 36:         ADCON0bits. GO_nDONE = 1;
  1706  1531  0021               	movlb	1	; select bank1
  1707  1532  149D               	bsf	29,1	;volatile
  1708  1533                     l44:	
  1709                           ;Assignment 72.c: 37:         while(ADCON0bits. GO_nDONE == 1) ;
  1710                           
  1711  1533  189D               	btfsc	29,1	;volatile
  1712  1534  2D36               	goto	u5631
  1713  1535  2D37               	goto	u5630
  1714  1536                     u5631:
  1715  1536  2D33               	goto	l44
  1716  1537                     u5630:
  1717  1537                     l4025:
  1718                           
  1719                           ;Assignment 72.c: 38:         ADC0_result_var = ADRESH;
  1720  1537  081C               	movf	28,w	;volatile
  1721  1538  0022               	movlb	2	; select bank2
  1722  1539  00B2               	movwf	??_main^(0+256)
  1723  153A  01B3               	clrf	(??_main^(0+256)+1)
  1724  153B  0832               	movf	??_main^(0+256),w
  1725  153C  00DB               	movwf	main@ADC0_result_var^(0+256)
  1726  153D  0833               	movf	(??_main+1)^(0+256),w
  1727  153E  00DC               	movwf	(main@ADC0_result_var+1)^(0+256)
  1728                           
  1729                           ;Assignment 72.c: 39:         ADC0_result_var = (ADC0_result_var<<8) | ADRESL ;
  1730  153F  0021               	movlb	1	; select bank1
  1731  1540  081B               	movf	27,w	;volatile
  1732  1541  0022               	movlb	2	; select bank2
  1733  1542  00B2               	movwf	??_main^(0+256)
  1734  1543  01B3               	clrf	(??_main^(0+256)+1)
  1735  1544  085B               	movf	main@ADC0_result_var^(0+256),w
  1736  1545  00B5               	movwf	((??_main+2)^(0+256)+1)
  1737  1546  01B4               	clrf	(??_main+2)^(0+256)
  1738  1547  0832               	movf	??_main^(0+256),w
  1739  1548  0434               	iorwf	(??_main+2)^(0+256),w
  1740  1549  00B6               	movwf	(??_main+4)^(0+256)
  1741  154A  0833               	movf	(??_main+1)^(0+256),w
  1742  154B  0435               	iorwf	(??_main+3)^(0+256),w
  1743  154C  00B7               	movwf	(??_main+5)^(0+256)
  1744  154D  0836               	movf	(??_main+4)^(0+256),w
  1745  154E  00DB               	movwf	main@ADC0_result_var^(0+256)
  1746  154F  0837               	movf	(??_main+5)^(0+256),w
  1747  1550  00DC               	movwf	(main@ADC0_result_var+1)^(0+256)
  1748  1551                     l4027:
  1749                           
  1750                           ;Assignment 72.c: 40:         voltage = ((float)(ADC0_result_var)*5)/1023;
  1751  1551  3044               	movlw	68
  1752  1552  0020               	movlb	0	; select bank0
  1753  1553  00BD               	movwf	___fldiv@a+3
  1754  1554  307F               	movlw	127
  1755  1555  00BC               	movwf	___fldiv@a+2
  1756  1556  30C0               	movlw	192
  1757  1557  00BB               	movwf	___fldiv@a+1
  1758  1558  3000               	movlw	0
  1759  1559  00BA               	movwf	___fldiv@a
  1760  155A  3040               	movlw	64
  1761  155B  00A3               	movwf	___flmul@b+3
  1762  155C  30A0               	movlw	160
  1763  155D  00A2               	movwf	___flmul@b+2
  1764  155E  3000               	movlw	0
  1765  155F  00A1               	movwf	___flmul@b+1
  1766  1560  3000               	movlw	0
  1767  1561  00A0               	movwf	___flmul@b
  1768  1562  0022               	movlb	2	; select bank2
  1769  1563  085B               	movf	main@ADC0_result_var^(0+256),w
  1770  1564  00F0               	movwf	___xxtofl@val
  1771  1565  085C               	movf	(main@ADC0_result_var+1)^(0+256),w
  1772  1566  00F1               	movwf	___xxtofl@val+1
  1773  1567  01F2               	clrf	___xxtofl@val+2
  1774  1568  01F3               	clrf	___xxtofl@val+3
  1775  1569  3000               	movlw	0
  1776  156A  3188  2036  3194   	fcall	___xxtofl
  1777  156D  0873               	movf	?___xxtofl+3,w
  1778  156E  0020               	movlb	0	; select bank0
  1779  156F  00A7               	movwf	___flmul@a+3
  1780  1570  0872               	movf	?___xxtofl+2,w
  1781  1571  00A6               	movwf	___flmul@a+2
  1782  1572  0871               	movf	?___xxtofl+1,w
  1783  1573  00A5               	movwf	___flmul@a+1
  1784  1574  0870               	movf	?___xxtofl,w
  1785  1575  00A4               	movwf	___flmul@a
  1786  1576  318B  2321  3194   	fcall	___flmul
  1787  1579  0020               	movlb	0	; select bank0
  1788  157A  0823               	movf	?___flmul+3,w
  1789  157B  00C1               	movwf	___fldiv@b+3
  1790  157C  0822               	movf	?___flmul+2,w
  1791  157D  00C0               	movwf	___fldiv@b+2
  1792  157E  0821               	movf	?___flmul+1,w
  1793  157F  00BF               	movwf	___fldiv@b+1
  1794  1580  0820               	movf	?___flmul,w
  1795  1581  00BE               	movwf	___fldiv@b
  1796  1582  3196  264C  3194   	fcall	___fldiv
  1797  1585  0020               	movlb	0	; select bank0
  1798  1586  083D               	movf	?___fldiv+3,w
  1799  1587  0022               	movlb	2	; select bank2
  1800  1588  00DA               	movwf	(main@voltage+3)^(0+256)
  1801  1589  0020               	movlb	0	; select bank0
  1802  158A  083C               	movf	?___fldiv+2,w
  1803  158B  0022               	movlb	2	; select bank2
  1804  158C  00D9               	movwf	(main@voltage+2)^(0+256)
  1805  158D  0020               	movlb	0	; select bank0
  1806  158E  083B               	movf	?___fldiv+1,w
  1807  158F  0022               	movlb	2	; select bank2
  1808  1590  00D8               	movwf	(main@voltage+1)^(0+256)
  1809  1591  0020               	movlb	0	; select bank0
  1810  1592  083A               	movf	?___fldiv,w
  1811  1593  0022               	movlb	2	; select bank2
  1812  1594  00D7               	movwf	main@voltage^(0+256)
  1813  1595                     l4029:
  1814                           
  1815                           ;Assignment 72.c: 41:         temp_calculate = voltage*100;
  1816  1595  3042               	movlw	66
  1817  1596  0020               	movlb	0	; select bank0
  1818  1597  00A3               	movwf	___flmul@b+3
  1819  1598  30C8               	movlw	200
  1820  1599  00A2               	movwf	___flmul@b+2
  1821  159A  3000               	movlw	0
  1822  159B  00A1               	movwf	___flmul@b+1
  1823  159C  3000               	movlw	0
  1824  159D  00A0               	movwf	___flmul@b
  1825  159E  0022               	movlb	2	; select bank2
  1826  159F  085A               	movf	(main@voltage+3)^(0+256),w
  1827  15A0  0020               	movlb	0	; select bank0
  1828  15A1  00A7               	movwf	___flmul@a+3
  1829  15A2  0022               	movlb	2	; select bank2
  1830  15A3  0859               	movf	(main@voltage+2)^(0+256),w
  1831  15A4  0020               	movlb	0	; select bank0
  1832  15A5  00A6               	movwf	___flmul@a+2
  1833  15A6  0022               	movlb	2	; select bank2
  1834  15A7  0858               	movf	(main@voltage+1)^(0+256),w
  1835  15A8  0020               	movlb	0	; select bank0
  1836  15A9  00A5               	movwf	___flmul@a+1
  1837  15AA  0022               	movlb	2	; select bank2
  1838  15AB  0857               	movf	main@voltage^(0+256),w
  1839  15AC  0020               	movlb	0	; select bank0
  1840  15AD  00A4               	movwf	___flmul@a
  1841  15AE  318B  2321  3194   	fcall	___flmul
  1842  15B1  0020               	movlb	0	; select bank0
  1843  15B2  0823               	movf	?___flmul+3,w
  1844  15B3  0022               	movlb	2	; select bank2
  1845  15B4  00E0               	movwf	(main@temp_calculate+3)^(0+256)
  1846  15B5  0020               	movlb	0	; select bank0
  1847  15B6  0822               	movf	?___flmul+2,w
  1848  15B7  0022               	movlb	2	; select bank2
  1849  15B8  00DF               	movwf	(main@temp_calculate+2)^(0+256)
  1850  15B9  0020               	movlb	0	; select bank0
  1851  15BA  0821               	movf	?___flmul+1,w
  1852  15BB  0022               	movlb	2	; select bank2
  1853  15BC  00DE               	movwf	(main@temp_calculate+1)^(0+256)
  1854  15BD  0020               	movlb	0	; select bank0
  1855  15BE  0820               	movf	?___flmul,w
  1856  15BF  0022               	movlb	2	; select bank2
  1857  15C0  00DD               	movwf	main@temp_calculate^(0+256)
  1858  15C1                     l4031:
  1859                           
  1860                           ;Assignment 72.c: 42:         sprintf(temp_result,"%0.1f",temp_calculate);
  1861  15C1  3015               	movlw	low (STR_3| (0+32768))
  1862  15C2  00A0               	movwf	sprintf@fmt^(0+256)
  1863  15C3  3098               	movlw	high (STR_3| (0+32768))
  1864  15C4  00A1               	movwf	(sprintf@fmt^(0+256)+1)
  1865  15C5  0860               	movf	(main@temp_calculate+3)^(0+256),w
  1866  15C6  00A5               	movwf	((?_sprintf+3)^(0+256)+2)
  1867  15C7  085F               	movf	(main@temp_calculate+2)^(0+256),w
  1868  15C8  00A4               	movwf	((?_sprintf+2)^(0+256)+2)
  1869  15C9  085E               	movf	(main@temp_calculate+1)^(0+256),w
  1870  15CA  00A3               	movwf	((?_sprintf+1)^(0+256)+2)
  1871  15CB  085D               	movf	main@temp_calculate^(0+256),w
  1872  15CC  00A2               	movwf	(?_sprintf^(0+256)+2)
  1873  15CD  3048               	movlw	(low (main@temp_result| (0+256)))& (0+255)
  1874  15CE  3190  2002  3194   	fcall	_sprintf
  1875  15D1                     l4033:
  1876                           
  1877                           ;Assignment 72.c: 44:         LCDPutStr2(temp_result,7,1);
  1878  15D1  3048               	movlw	low main@temp_result
  1879  15D2  00F7               	movwf	LCDPutStr2@str
  1880  15D3  3001               	movlw	high main@temp_result
  1881  15D4  00F8               	movwf	LCDPutStr2@str+1
  1882  15D5  3007               	movlw	7
  1883  15D6  0022               	movlb	2	; select bank2
  1884  15D7  00B2               	movwf	??_main^(0+256)
  1885  15D8  0832               	movf	??_main^(0+256),w
  1886  15D9  00F9               	movwf	LCDPutStr2@pos
  1887  15DA  01FA               	clrf	LCDPutStr2@ln
  1888  15DB  0AFA               	incf	LCDPutStr2@ln,f
  1889  15DC  3190  20DF  3194   	fcall	_LCDPutStr2
  1890  15DF                     l4035:
  1891                           
  1892                           ;Assignment 72.c: 45:         LCDGoto(12,1);
  1893  15DF  01F7               	clrf	LCDGoto@ln
  1894  15E0  0AF7               	incf	LCDGoto@ln,f
  1895  15E1  300C               	movlw	12
  1896  15E2  319F  2730  3194   	fcall	_LCDGoto
  1897  15E5                     l4037:
  1898                           
  1899                           ;Assignment 72.c: 46:         LCDPutChar(0);
  1900  15E5  3000               	movlw	0
  1901  15E6  319D  25E7  3194   	fcall	_LCDPutChar
  1902  15E9                     l4039:
  1903                           
  1904                           ;Assignment 72.c: 47:         LCDPutStr2("C",13,1);
  1905  15E9  302E               	movlw	low (STR_4| (0+32768))
  1906  15EA  00F7               	movwf	LCDPutStr2@str
  1907  15EB  3098               	movlw	high (STR_4| (0+32768))
  1908  15EC  00F8               	movwf	LCDPutStr2@str+1
  1909  15ED  300D               	movlw	13
  1910  15EE  0022               	movlb	2	; select bank2
  1911  15EF  00B2               	movwf	??_main^(0+256)
  1912  15F0  0832               	movf	??_main^(0+256),w
  1913  15F1  00F9               	movwf	LCDPutStr2@pos
  1914  15F2  01FA               	clrf	LCDPutStr2@ln
  1915  15F3  0AFA               	incf	LCDPutStr2@ln,f
  1916  15F4  3190  20DF  3194   	fcall	_LCDPutStr2
  1917  15F7                     l4041:
  1918                           
  1919                           ;Assignment 72.c: 48:         if (temp_calculate < 100){
  1920  15F7  0022               	movlb	2	; select bank2
  1921  15F8  0860               	movf	(main@temp_calculate+3)^(0+256),w
  1922  15F9  0020               	movlb	0	; select bank0
  1923  15FA  00BD               	movwf	___flge@ff1+3
  1924  15FB  0022               	movlb	2	; select bank2
  1925  15FC  085F               	movf	(main@temp_calculate+2)^(0+256),w
  1926  15FD  0020               	movlb	0	; select bank0
  1927  15FE  00BC               	movwf	___flge@ff1+2
  1928  15FF  0022               	movlb	2	; select bank2
  1929  1600  085E               	movf	(main@temp_calculate+1)^(0+256),w
  1930  1601  0020               	movlb	0	; select bank0
  1931  1602  00BB               	movwf	___flge@ff1+1
  1932  1603  0022               	movlb	2	; select bank2
  1933  1604  085D               	movf	main@temp_calculate^(0+256),w
  1934  1605  0020               	movlb	0	; select bank0
  1935  1606  00BA               	movwf	___flge@ff1
  1936  1607  3042               	movlw	66
  1937  1608  00C1               	movwf	___flge@ff2+3
  1938  1609  30C8               	movlw	200
  1939  160A  00C0               	movwf	___flge@ff2+2
  1940  160B  3000               	movlw	0
  1941  160C  00BF               	movwf	___flge@ff2+1
  1942  160D  3000               	movlw	0
  1943  160E  00BE               	movwf	___flge@ff2
  1944  160F  3192  22D1  3194   	fcall	___flge
  1945  1612  1803               	btfsc	3,0
  1946  1613  2E15               	goto	u5641
  1947  1614  2E16               	goto	u5640
  1948  1615                     u5641:
  1949  1615  2E20               	goto	l47
  1950  1616                     u5640:
  1951  1616                     l4043:
  1952                           
  1953                           ;Assignment 72.c: 49:             LCDGoto(11,1);
  1954  1616  01F7               	clrf	LCDGoto@ln
  1955  1617  0AF7               	incf	LCDGoto@ln,f
  1956  1618  300B               	movlw	11
  1957  1619  319F  2730  3194   	fcall	_LCDGoto
  1958                           
  1959                           ;Assignment 72.c: 50:             LCDPutChar(1);
  1960  161C  3001               	movlw	1
  1961  161D  319D  25E7  3194   	fcall	_LCDPutChar
  1962  1620                     l47:	
  1963                           ;Assignment 72.c: 51:         }
  1964                           
  1965                           
  1966                           ;Assignment 72.c: 52:         if (temp_calculate < 10){
  1967  1620  0022               	movlb	2	; select bank2
  1968  1621  0860               	movf	(main@temp_calculate+3)^(0+256),w
  1969  1622  0020               	movlb	0	; select bank0
  1970  1623  00BD               	movwf	___flge@ff1+3
  1971  1624  0022               	movlb	2	; select bank2
  1972  1625  085F               	movf	(main@temp_calculate+2)^(0+256),w
  1973  1626  0020               	movlb	0	; select bank0
  1974  1627  00BC               	movwf	___flge@ff1+2
  1975  1628  0022               	movlb	2	; select bank2
  1976  1629  085E               	movf	(main@temp_calculate+1)^(0+256),w
  1977  162A  0020               	movlb	0	; select bank0
  1978  162B  00BB               	movwf	___flge@ff1+1
  1979  162C  0022               	movlb	2	; select bank2
  1980  162D  085D               	movf	main@temp_calculate^(0+256),w
  1981  162E  0020               	movlb	0	; select bank0
  1982  162F  00BA               	movwf	___flge@ff1
  1983  1630  3041               	movlw	65
  1984  1631  00C1               	movwf	___flge@ff2+3
  1985  1632  3020               	movlw	32
  1986  1633  00C0               	movwf	___flge@ff2+2
  1987  1634  3000               	movlw	0
  1988  1635  00BF               	movwf	___flge@ff2+1
  1989  1636  3000               	movlw	0
  1990  1637  00BE               	movwf	___flge@ff2
  1991  1638  3192  22D1  3194   	fcall	___flge
  1992  163B  1803               	btfsc	3,0
  1993  163C  2E3E               	goto	u5651
  1994  163D  2E3F               	goto	u5650
  1995  163E                     u5651:
  1996  163E  2D31               	goto	l43
  1997  163F                     u5650:
  1998  163F                     l4045:
  1999                           
  2000                           ;Assignment 72.c: 53:             LCDGoto(10,1);
  2001  163F  01F7               	clrf	LCDGoto@ln
  2002  1640  0AF7               	incf	LCDGoto@ln,f
  2003  1641  300A               	movlw	10
  2004  1642  319F  2730  3194   	fcall	_LCDGoto
  2005                           
  2006                           ;Assignment 72.c: 54:             LCDPutChar(1);
  2007  1645  3001               	movlw	1
  2008  1646  319D  25E7  3194   	fcall	_LCDPutChar
  2009  1649  2D31               	goto	l43
  2010  164A  3180  2802         	ljmp	start
  2011  164C                     __end_of_main:
  2012                           
  2013                           	psect	text1
  2014  1002                     __ptext1:	
  2015 ;; *************** function _sprintf *****************
  2016 ;; Defined at:
  2017 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\nf_sprintf.c"
  2018 ;; Parameters:    Size  Location     Type
  2019 ;;  s               1    wreg     PTR unsigned char 
  2020 ;;		 -> main@temp_result(15), 
  2021 ;;  fmt             2    0[BANK2 ] PTR const unsigned char 
  2022 ;;		 -> STR_3(6), 
  2023 ;; Auto vars:     Size  Location     Type
  2024 ;;  s               1    6[BANK2 ] PTR unsigned char 
  2025 ;;		 -> main@temp_result(15), 
  2026 ;;  f              10    8[BANK2 ] struct _IO_FILE
  2027 ;;  ret             2    0        int 
  2028 ;;  ap              1    7[BANK2 ] PTR void [1]
  2029 ;;		 -> ?_sprintf(2), 
  2030 ;; Return value:  Size  Location     Type
  2031 ;;                  2    0[BANK2 ] int 
  2032 ;; Registers used:
  2033 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  2034 ;; Tracked objects:
  2035 ;;		On entry : 0/0
  2036 ;;		On exit  : 0/0
  2037 ;;		Unchanged: 0/0
  2038 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  2039 ;;      Params:         0       0       0       6       0       0       0       0
  2040 ;;      Locals:         0       0       0      12       0       0       0       0
  2041 ;;      Temps:          0       0       1       0       0       0       0       0
  2042 ;;      Totals:         0       0       1      18       0       0       0       0
  2043 ;;Total ram usage:       19 bytes
  2044 ;; Hardware stack levels used: 1
  2045 ;; Hardware stack levels required when called: 7
  2046 ;; This function calls:
  2047 ;;		_vfprintf
  2048 ;; This function is called by:
  2049 ;;		_main
  2050 ;; This function uses a non-reentrant model
  2051 ;;
  2052                           
  2053  1002                     _sprintf:	
  2054                           ;psect for function _sprintf
  2055                           
  2056                           
  2057                           ;incstack = 0
  2058                           ; Regs used in _sprintf: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  2059                           ;sprintf@s stored from wreg
  2060  1002  0022               	movlb	2	; select bank2
  2061  1003  00A6               	movwf	sprintf@s^(0+256)
  2062  1004                     l3917:
  2063  1004  3022               	movlw	(low ((?_sprintf| (0+256)+2)))& (0+255)
  2064  1005  0021               	movlb	1	; select bank1
  2065  1006  00ED               	movwf	??_sprintf^(0+128)
  2066  1007  086D               	movf	??_sprintf^(0+128),w
  2067  1008  0022               	movlb	2	; select bank2
  2068  1009  00A7               	movwf	sprintf@ap^(0+256)
  2069  100A  0826               	movf	sprintf@s^(0+256),w
  2070  100B  0021               	movlb	1	; select bank1
  2071  100C  00ED               	movwf	??_sprintf^(0+128)
  2072  100D  086D               	movf	??_sprintf^(0+128),w
  2073  100E  0022               	movlb	2	; select bank2
  2074  100F  00A8               	movwf	sprintf@f^(0+256)
  2075  1010                     l3919:
  2076  1010  01AA               	clrf	(sprintf@f^(0+256)+2)
  2077  1011  01AB               	clrf	((sprintf@f+1)^(0+256)+2)
  2078  1012                     l3921:
  2079  1012  01B0               	clrf	(sprintf@f^(0+256)+8)
  2080  1013  01B1               	clrf	((sprintf@f+1)^(0+256)+8)
  2081  1014                     l3923:
  2082  1014  0821               	movf	(sprintf@fmt+1)^(0+256),w
  2083  1015  0021               	movlb	1	; select bank1
  2084  1016  00E6               	movwf	(vfprintf@fmt+1)^(0+128)
  2085  1017  0022               	movlb	2	; select bank2
  2086  1018  0820               	movf	sprintf@fmt^(0+256),w
  2087  1019  0021               	movlb	1	; select bank1
  2088  101A  00E5               	movwf	vfprintf@fmt^(0+128)
  2089  101B  3027               	movlw	(low (sprintf@ap| (0+256)))& (0+255)
  2090  101C  00ED               	movwf	??_sprintf^(0+128)
  2091  101D  086D               	movf	??_sprintf^(0+128),w
  2092  101E  00E7               	movwf	vfprintf@ap^(0+128)
  2093  101F  3028               	movlw	(low (sprintf@f| (0+256)))& (0+255)
  2094  1020  3188  2005  3190   	fcall	_vfprintf
  2095  1023                     l3925:
  2096  1023  0022               	movlb	2	; select bank2
  2097  1024  082A               	movf	(sprintf@f^(0+256)+2),w
  2098  1025  0726               	addwf	sprintf@s^(0+256),w
  2099  1026  0021               	movlb	1	; select bank1
  2100  1027  00ED               	movwf	??_sprintf^(0+128)
  2101  1028  086D               	movf	??_sprintf^(0+128),w
  2102  1029  0086               	movwf	6
  2103  102A  3001               	movlw	1	; select bank2/3
  2104  102B  0087               	movwf	7
  2105  102C  0181               	clrf	1
  2106  102D                     l649:
  2107  102D  0008               	return
  2108  102E                     __end_of_sprintf:
  2109                           
  2110                           	psect	text2
  2111  0805                     __ptext2:	
  2112 ;; *************** function _vfprintf *****************
  2113 ;; Defined at:
  2114 ;;		line 1390 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c"
  2115 ;; Parameters:    Size  Location     Type
  2116 ;;  fp              1    wreg     PTR struct _IO_FILE
  2117 ;;		 -> sprintf@f(10), 
  2118 ;;  fmt             2   69[BANK1 ] PTR const unsigned char 
  2119 ;;		 -> STR_3(6), 
  2120 ;;  ap              1   71[BANK1 ] PTR PTR void 
  2121 ;;		 -> sprintf@ap(1), 
  2122 ;; Auto vars:     Size  Location     Type
  2123 ;;  fp              1   74[BANK1 ] PTR struct _IO_FILE
  2124 ;;		 -> sprintf@f(10), 
  2125 ;;  cfmt            2   75[BANK1 ] PTR unsigned char 
  2126 ;;		 -> STR_3(6), 
  2127 ;; Return value:  Size  Location     Type
  2128 ;;                  2   69[BANK1 ] int 
  2129 ;; Registers used:
  2130 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  2131 ;; Tracked objects:
  2132 ;;		On entry : 0/0
  2133 ;;		On exit  : 0/0
  2134 ;;		Unchanged: 0/0
  2135 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  2136 ;;      Params:         0       0       3       0       0       0       0       0
  2137 ;;      Locals:         0       0       3       0       0       0       0       0
  2138 ;;      Temps:          0       0       2       0       0       0       0       0
  2139 ;;      Totals:         0       0       8       0       0       0       0       0
  2140 ;;Total ram usage:        8 bytes
  2141 ;; Hardware stack levels used: 1
  2142 ;; Hardware stack levels required when called: 6
  2143 ;; This function calls:
  2144 ;;		_vfpfcnvrt
  2145 ;; This function is called by:
  2146 ;;		_sprintf
  2147 ;; This function uses a non-reentrant model
  2148 ;;
  2149                           
  2150  0805                     _vfprintf:	
  2151                           ;psect for function _vfprintf
  2152                           
  2153                           
  2154                           ;incstack = 0
  2155                           ; Regs used in _vfprintf: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  2156                           ;vfprintf@fp stored from wreg
  2157  0805  0021               	movlb	1	; select bank1
  2158  0806  00EA               	movwf	vfprintf@fp^(0+128)
  2159  0807                     l3841:
  2160                           
  2161                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 1390: int vfprint
      +                          f(FILE *fp, const char *fmt, va_list ap);C:\Program Files\Microchip\xc8\v2.36\pic\source
      +                          s\c99\common\doprnt.c: 1391: {;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\comm
      +                          on\doprnt.c: 1393:     char *cfmt;;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\
      +                          common\doprnt.c: 1395:     cfmt = (char *)fmt;
  2162  0807  0866               	movf	(vfprintf@fmt+1)^(0+128),w
  2163  0808  00EC               	movwf	(vfprintf@cfmt+1)^(0+128)
  2164  0809  0865               	movf	vfprintf@fmt^(0+128),w
  2165  080A  00EB               	movwf	vfprintf@cfmt^(0+128)
  2166  080B                     l3843:
  2167                           
  2168                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 1396:     nout = 
      +                          0;
  2169  080B  0022               	movlb	2	; select bank2
  2170  080C  01E7               	clrf	_nout^(0+256)
  2171  080D  01E8               	clrf	(_nout+1)^(0+256)
  2172                           
  2173                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 1397:     while (
      +                          *cfmt) {
  2174  080E  2823               	goto	l3847
  2175  080F                     l3845:
  2176                           
  2177                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 1398:         nou
      +                          t += vfpfcnvrt(fp, &cfmt, ap);
  2178  080F  30EB               	movlw	(low (vfprintf@cfmt| 0))& (0+255)
  2179  0810  00E8               	movwf	??_vfprintf^(0+128)
  2180  0811  0868               	movf	??_vfprintf^(0+128),w
  2181  0812  00D3               	movwf	vfpfcnvrt@fmt^(0+128)
  2182  0813  0867               	movf	vfprintf@ap^(0+128),w
  2183  0814  00E9               	movwf	(??_vfprintf+1)^(0+128)
  2184  0815  0869               	movf	(??_vfprintf+1)^(0+128),w
  2185  0816  00D4               	movwf	vfpfcnvrt@ap^(0+128)
  2186  0817  086A               	movf	vfprintf@fp^(0+128),w
  2187  0818  318D  2578  3188   	fcall	_vfpfcnvrt
  2188  081B  0021               	movlb	1	; select bank1
  2189  081C  0853               	movf	?_vfpfcnvrt^(0+128),w
  2190  081D  0022               	movlb	2	; select bank2
  2191  081E  07E7               	addwf	_nout^(0+256),f
  2192  081F  0021               	movlb	1	; select bank1
  2193  0820  0854               	movf	(?_vfpfcnvrt+1)^(0+128),w
  2194  0821  0022               	movlb	2	; select bank2
  2195  0822  3DE8               	addwfc	(_nout+1)^(0+256),f
  2196  0823                     l3847:
  2197                           
  2198                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 1397:     while (
      +                          *cfmt) {
  2199  0823  0021               	movlb	1	; select bank1
  2200  0824  086B               	movf	vfprintf@cfmt^(0+128),w
  2201  0825  0084               	movwf	4
  2202  0826  086C               	movf	(vfprintf@cfmt+1)^(0+128),w
  2203  0827  0085               	movwf	5
  2204  0828  0012               	moviw fsr0++
  2205  0829  1D03               	btfss	3,2
  2206  082A  282C               	goto	u5361
  2207  082B  282D               	goto	u5360
  2208  082C                     u5361:
  2209  082C  280F               	goto	l3845
  2210  082D                     u5360:
  2211  082D                     l3849:
  2212                           
  2213                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 1400:     return 
      +                          nout;
  2214  082D  0022               	movlb	2	; select bank2
  2215  082E  0868               	movf	(_nout+1)^(0+256),w
  2216  082F  0021               	movlb	1	; select bank1
  2217  0830  00E6               	movwf	(?_vfprintf+1)^(0+128)
  2218  0831  0022               	movlb	2	; select bank2
  2219  0832  0867               	movf	_nout^(0+256),w
  2220  0833  0021               	movlb	1	; select bank1
  2221  0834  00E5               	movwf	?_vfprintf^(0+128)
  2222  0835                     l821:
  2223  0835  0008               	return
  2224  0836                     __end_of_vfprintf:
  2225                           
  2226                           	psect	text3
  2227  0D78                     __ptext3:	
  2228 ;; *************** function _vfpfcnvrt *****************
  2229 ;; Defined at:
  2230 ;;		line 692 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c"
  2231 ;; Parameters:    Size  Location     Type
  2232 ;;  fp              1    wreg     PTR struct _IO_FILE
  2233 ;;		 -> sprintf@f(10), 
  2234 ;;  fmt             1   51[BANK1 ] PTR PTR unsigned char 
  2235 ;;		 -> vfprintf@cfmt(2), 
  2236 ;;  ap              1   52[BANK1 ] PTR PTR void 
  2237 ;;		 -> sprintf@ap(1), 
  2238 ;; Auto vars:     Size  Location     Type
  2239 ;;  fp              1   68[BANK1 ] PTR struct _IO_FILE
  2240 ;;		 -> sprintf@f(10), 
  2241 ;;  llu             8    0        unsigned long long 
  2242 ;;  ll              8    0        long long 
  2243 ;;  f               4   60[BANK1 ] long long 
  2244 ;;  ct              3   64[BANK1 ] unsigned char [3]
  2245 ;;  done            2   58[BANK1 ] int 
  2246 ;;  vp              2    0        PTR void 
  2247 ;;  i               2    0        int 
  2248 ;;  cp              2    0        PTR unsigned char 
  2249 ;;  c               1   67[BANK1 ] unsigned char 
  2250 ;; Return value:  Size  Location     Type
  2251 ;;                  2   51[BANK1 ] int 
  2252 ;; Registers used:
  2253 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  2254 ;; Tracked objects:
  2255 ;;		On entry : 0/0
  2256 ;;		On exit  : 0/0
  2257 ;;		Unchanged: 0/0
  2258 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  2259 ;;      Params:         0       0       2       0       0       0       0       0
  2260 ;;      Locals:         0       0      11       0       0       0       0       0
  2261 ;;      Temps:          0       0       5       0       0       0       0       0
  2262 ;;      Totals:         0       0      18       0       0       0       0       0
  2263 ;;Total ram usage:       18 bytes
  2264 ;; Hardware stack levels used: 1
  2265 ;; Hardware stack levels required when called: 5
  2266 ;; This function calls:
  2267 ;;		_atoi
  2268 ;;		_efgtoa
  2269 ;;		_fputc
  2270 ;;		_isdigit
  2271 ;;		_isupper
  2272 ;;		_strncmp
  2273 ;;		_tolower
  2274 ;; This function is called by:
  2275 ;;		_vfprintf
  2276 ;; This function uses a non-reentrant model
  2277 ;;
  2278                           
  2279  0D78                     _vfpfcnvrt:	
  2280                           ;psect for function _vfpfcnvrt
  2281                           
  2282                           
  2283                           ;incstack = 0
  2284                           ; Regs used in _vfpfcnvrt: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  2285                           ;vfpfcnvrt@fp stored from wreg
  2286  0D78  0021               	movlb	1	; select bank1
  2287  0D79  00E4               	movwf	vfpfcnvrt@fp^(0+128)
  2288  0D7A                     l3705:
  2289                           
  2290                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 692: static int v
      +                          fpfcnvrt(FILE *fp, char *fmt[], va_list ap);C:\Program Files\Microchip\xc8\v2.36\pic\sou
      +                          rces\c99\common\doprnt.c: 693: {;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\co
      +                          mmon\doprnt.c: 694:     char c, *cp, ct[3];;C:\Program Files\Microchip\xc8\v2.36\pic\sou
      +                          rces\c99\common\doprnt.c: 695:     int done, i;;C:\Program Files\Microchip\xc8\v2.36\pic
      +                          \sources\c99\common\doprnt.c: 696:     long long ll;;C:\Program Files\Microchip\xc8\v2.3
      +                          6\pic\sources\c99\common\doprnt.c: 697:     unsigned long long llu;
  2291  0D7A  0853               	movf	vfpfcnvrt@fmt^(0+128),w
  2292  0D7B  0086               	movwf	6
  2293  0D7C  0187               	clrf	7
  2294  0D7D  3F40               	moviw [0]fsr1
  2295  0D7E  00D5               	movwf	??_vfpfcnvrt^(0+128)
  2296  0D7F  3F41               	moviw [1]fsr1
  2297  0D80  00D6               	movwf	(??_vfpfcnvrt^(0+128)+1)
  2298  0D81  0855               	movf	??_vfpfcnvrt^(0+128),w
  2299  0D82  0084               	movwf	4
  2300  0D83  0856               	movf	(??_vfpfcnvrt+1)^(0+128),w
  2301  0D84  0085               	movwf	5
  2302  0D85  0012               	moviw fsr0++
  2303  0D86  3A25               	xorlw	37
  2304  0D87  1D03               	btfss	3,2
  2305  0D88  2D8A               	goto	u5221
  2306  0D89  2D8B               	goto	u5220
  2307  0D8A                     u5221:
  2308  0D8A  2FDC               	goto	l3811
  2309  0D8B                     u5220:
  2310  0D8B                     l3707:
  2311                           
  2312                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 703:         ++*f
      +                          mt;
  2313  0D8B  0853               	movf	vfpfcnvrt@fmt^(0+128),w
  2314  0D8C  0086               	movwf	6
  2315  0D8D  0187               	clrf	7
  2316  0D8E  3001               	movlw	1
  2317  0D8F  0781               	addwf	1,f
  2318  0D90  3141               	addfsr 1,1
  2319  0D91  1803               	skipnc
  2320  0D92  0A81               	incf	1,f
  2321  0D93                     l3709:
  2322                           
  2323                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 705:         flag
      +                          s = width = 0;
  2324  0D93  0022               	movlb	2	; select bank2
  2325  0D94  01E9               	clrf	_width^(0+256)
  2326  0D95  01EA               	clrf	(_width+1)^(0+256)
  2327  0D96  0021               	movlb	1	; select bank1
  2328  0D97  01EE               	clrf	_flags^(0+128)
  2329  0D98  01EF               	clrf	(_flags+1)^(0+128)
  2330  0D99                     l3711:
  2331                           
  2332                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 706:         prec
      +                           = -1;
  2333  0D99  30FF               	movlw	255
  2334  0D9A  0022               	movlb	2	; select bank2
  2335  0D9B  00EB               	movwf	_prec^(0+256)
  2336  0D9C  30FF               	movlw	255
  2337  0D9D  00EC               	movwf	(_prec^(0+256)+1)
  2338  0D9E                     l3713:
  2339                           
  2340                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 710:         done
      +                           = 0;
  2341  0D9E  0021               	movlb	1	; select bank1
  2342  0D9F  01DA               	clrf	vfpfcnvrt@done^(0+128)
  2343  0DA0  01DB               	clrf	(vfpfcnvrt@done+1)^(0+128)
  2344                           
  2345                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 711:         whil
      +                          e (!done) {
  2346  0DA1  2DDD               	goto	l3731
  2347  0DA2                     l789:	
  2348                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 713:             
      +                              case '-' :
  2349                           
  2350                           
  2351                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 714:             
      +                                  flags |= (1 << 0);
  2352  0DA2  146E               	bsf	_flags^(0+128),0
  2353  0DA3                     l3715:
  2354                           
  2355                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 715:             
      +                                  ++*fmt;
  2356  0DA3  0853               	movf	vfpfcnvrt@fmt^(0+128),w
  2357  0DA4  0086               	movwf	6
  2358  0DA5  0187               	clrf	7
  2359  0DA6  3001               	movlw	1
  2360  0DA7  0781               	addwf	1,f
  2361  0DA8  3141               	addfsr 1,1
  2362  0DA9  1803               	skipnc
  2363  0DAA  0A81               	incf	1,f
  2364                           
  2365                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 716:             
      +                                  break;
  2366  0DAB  2DDD               	goto	l3731
  2367  0DAC                     l791:	
  2368                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 717:             
      +                              case '0' :
  2369                           
  2370                           
  2371                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 718:             
      +                                  flags |= (1 << 1);
  2372  0DAC  14EE               	bsf	_flags^(0+128),1
  2373  0DAD  2DA3               	goto	l3715
  2374  0DAE                     l792:	
  2375                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 721:             
      +                              case '+' :
  2376                           
  2377                           
  2378                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 722:             
      +                                  flags |= (1 << 2);
  2379  0DAE  156E               	bsf	_flags^(0+128),2
  2380  0DAF  2DA3               	goto	l3715
  2381  0DB0                     l793:	
  2382                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 725:             
      +                              case ' ' :
  2383                           
  2384                           
  2385                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 726:             
      +                                  flags |= (1 << 3);
  2386  0DB0  15EE               	bsf	_flags^(0+128),3
  2387  0DB1  2DA3               	goto	l3715
  2388  0DB2                     l794:	
  2389                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 729:             
      +                              case '#' :
  2390                           
  2391                           
  2392                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 730:             
      +                                  flags |= (1 << 4);
  2393  0DB2  166E               	bsf	_flags^(0+128),4
  2394  0DB3  2DA3               	goto	l3715
  2395  0DB4                     l3725:
  2396                           
  2397                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 734:             
      +                                  done = 1;
  2398  0DB4  3001               	movlw	1
  2399  0DB5  00DA               	movwf	vfpfcnvrt@done^(0+128)
  2400  0DB6  3000               	movlw	0
  2401  0DB7  00DB               	movwf	(vfpfcnvrt@done^(0+128)+1)
  2402                           
  2403                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 735:             
      +                                  break;
  2404  0DB8  2DDD               	goto	l3731
  2405  0DB9                     l3729:
  2406  0DB9  0853               	movf	vfpfcnvrt@fmt^(0+128),w
  2407  0DBA  0086               	movwf	6
  2408  0DBB  0187               	clrf	7
  2409  0DBC  3F40               	moviw [0]fsr1
  2410  0DBD  00D5               	movwf	??_vfpfcnvrt^(0+128)
  2411  0DBE  3F41               	moviw [1]fsr1
  2412  0DBF  00D6               	movwf	(??_vfpfcnvrt^(0+128)+1)
  2413  0DC0  0855               	movf	??_vfpfcnvrt^(0+128),w
  2414  0DC1  0084               	movwf	4
  2415  0DC2  0856               	movf	(??_vfpfcnvrt+1)^(0+128),w
  2416  0DC3  0085               	movwf	5
  2417  0DC4  0800               	movf	0,w	;code access
  2418  0DC5  00D7               	movwf	(??_vfpfcnvrt+2)^(0+128)
  2419  0DC6  01D8               	clrf	((??_vfpfcnvrt+2)^(0+128)+1)
  2420                           
  2421                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2422                           ; Switch size 1, requested type "simple"
  2423                           ; Number of cases is 1, Range of values is 0 to 0
  2424                           ; switch strategies available:
  2425                           ; Name         Instructions Cycles
  2426                           ; simple_byte            4     3 (average)
  2427                           ; direct_byte            8     6 (fixed)
  2428                           ; jumptable            260     6 (fixed)
  2429                           ;	Chosen strategy is simple_byte
  2430  0DC7  0858               	movf	(??_vfpfcnvrt+3)^(0+128),w
  2431  0DC8  3A00               	xorlw	0	; case 0
  2432  0DC9  1903               	skipnz
  2433  0DCA  2DCC               	goto	l4099
  2434  0DCB  2DB4               	goto	l3725
  2435  0DCC                     l4099:
  2436                           
  2437                           ; Switch size 1, requested type "simple"
  2438                           ; Number of cases is 5, Range of values is 32 to 48
  2439                           ; switch strategies available:
  2440                           ; Name         Instructions Cycles
  2441                           ; simple_byte           16     9 (average)
  2442                           ; direct_byte           43     9 (fixed)
  2443                           ; jumptable            263     9 (fixed)
  2444                           ;	Chosen strategy is simple_byte
  2445  0DCC  0857               	movf	(??_vfpfcnvrt+2)^(0+128),w
  2446  0DCD  3A20               	xorlw	32	; case 32
  2447  0DCE  1903               	skipnz
  2448  0DCF  2DB0               	goto	l793
  2449  0DD0  3A03               	xorlw	3	; case 35
  2450  0DD1  1903               	skipnz
  2451  0DD2  2DB2               	goto	l794
  2452  0DD3  3A08               	xorlw	8	; case 43
  2453  0DD4  1903               	skipnz
  2454  0DD5  2DAE               	goto	l792
  2455  0DD6  3A06               	xorlw	6	; case 45
  2456  0DD7  1903               	skipnz
  2457  0DD8  2DA2               	goto	l789
  2458  0DD9  3A1D               	xorlw	29	; case 48
  2459  0DDA  1903               	skipnz
  2460  0DDB  2DAC               	goto	l791
  2461  0DDC  2DB4               	goto	l3725
  2462  0DDD                     l3731:
  2463                           
  2464                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 711:         whil
      +                          e (!done) {
  2465  0DDD  085A               	movf	vfpfcnvrt@done^(0+128),w
  2466  0DDE  045B               	iorwf	(vfpfcnvrt@done+1)^(0+128),w
  2467  0DDF  1903               	btfsc	3,2
  2468  0DE0  2DE2               	goto	u5231
  2469  0DE1  2DE3               	goto	u5230
  2470  0DE2                     u5231:
  2471  0DE2  2DB9               	goto	l3729
  2472  0DE3                     u5230:
  2473  0DE3                     l796:
  2474                           
  2475                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 738:         if (
      +                          flags & (1 << 0)) {
  2476  0DE3  1C6E               	btfss	_flags^(0+128),0
  2477  0DE4  2DE6               	goto	u5241
  2478  0DE5  2DE7               	goto	u5240
  2479  0DE6                     u5241:
  2480  0DE6  2DEB               	goto	l3735
  2481  0DE7                     u5240:
  2482  0DE7                     l3733:
  2483                           
  2484                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 739:             
      +                          flags &= ~(1 << 1);
  2485  0DE7  30FD               	movlw	253
  2486  0DE8  05EE               	andwf	_flags^(0+128),f
  2487  0DE9  30FF               	movlw	255
  2488  0DEA  05EF               	andwf	(_flags+1)^(0+128),f
  2489  0DEB                     l3735:
  2490                           
  2491                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 762:         if (
      +                          (*fmt)[0] == '.') {
  2492  0DEB  0853               	movf	vfpfcnvrt@fmt^(0+128),w
  2493  0DEC  0086               	movwf	6
  2494  0DED  0187               	clrf	7
  2495  0DEE  3F40               	moviw [0]fsr1
  2496  0DEF  00D5               	movwf	??_vfpfcnvrt^(0+128)
  2497  0DF0  3F41               	moviw [1]fsr1
  2498  0DF1  00D6               	movwf	(??_vfpfcnvrt^(0+128)+1)
  2499  0DF2  0855               	movf	??_vfpfcnvrt^(0+128),w
  2500  0DF3  0084               	movwf	4
  2501  0DF4  0856               	movf	(??_vfpfcnvrt+1)^(0+128),w
  2502  0DF5  0085               	movwf	5
  2503  0DF6  0012               	moviw fsr0++
  2504  0DF7  3A2E               	xorlw	46
  2505  0DF8  1D03               	btfss	3,2
  2506  0DF9  2DFB               	goto	u5251
  2507  0DFA  2DFC               	goto	u5250
  2508  0DFB                     u5251:
  2509  0DFB  2E65               	goto	l3755
  2510  0DFC                     u5250:
  2511  0DFC                     l3737:
  2512                           
  2513                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 763:             
      +                          prec = 0;
  2514  0DFC  0022               	movlb	2	; select bank2
  2515  0DFD  01EB               	clrf	_prec^(0+256)
  2516  0DFE  01EC               	clrf	(_prec+1)^(0+256)
  2517  0DFF                     l3739:
  2518                           
  2519                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 764:             
      +                          ++*fmt;
  2520  0DFF  0021               	movlb	1	; select bank1
  2521  0E00  0853               	movf	vfpfcnvrt@fmt^(0+128),w
  2522  0E01  0086               	movwf	6
  2523  0E02  0187               	clrf	7
  2524  0E03  3001               	movlw	1
  2525  0E04  0781               	addwf	1,f
  2526  0E05  3141               	addfsr 1,1
  2527  0E06  1803               	skipnc
  2528  0E07  0A81               	incf	1,f
  2529  0E08                     l3741:
  2530                           
  2531                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 765:             
      +                          if ((*fmt)[0] == '*') {
  2532  0E08  0853               	movf	vfpfcnvrt@fmt^(0+128),w
  2533  0E09  0086               	movwf	6
  2534  0E0A  0187               	clrf	7
  2535  0E0B  3F40               	moviw [0]fsr1
  2536  0E0C  00D5               	movwf	??_vfpfcnvrt^(0+128)
  2537  0E0D  3F41               	moviw [1]fsr1
  2538  0E0E  00D6               	movwf	(??_vfpfcnvrt^(0+128)+1)
  2539  0E0F  0855               	movf	??_vfpfcnvrt^(0+128),w
  2540  0E10  0084               	movwf	4
  2541  0E11  0856               	movf	(??_vfpfcnvrt+1)^(0+128),w
  2542  0E12  0085               	movwf	5
  2543  0E13  0012               	moviw fsr0++
  2544  0E14  3A2A               	xorlw	42
  2545  0E15  1D03               	btfss	3,2
  2546  0E16  2E18               	goto	u5261
  2547  0E17  2E19               	goto	u5260
  2548  0E18                     u5261:
  2549  0E18  2E31               	goto	l3747
  2550  0E19                     u5260:
  2551  0E19                     l3743:
  2552                           
  2553                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 766:             
      +                              ++*fmt;
  2554  0E19  0853               	movf	vfpfcnvrt@fmt^(0+128),w
  2555  0E1A  0086               	movwf	6
  2556  0E1B  0187               	clrf	7
  2557  0E1C  3001               	movlw	1
  2558  0E1D  0781               	addwf	1,f
  2559  0E1E  3141               	addfsr 1,1
  2560  0E1F  1803               	skipnc
  2561  0E20  0A81               	incf	1,f
  2562  0E21                     l3745:
  2563                           
  2564                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 767:             
      +                              prec = (*(int *)__va_arg(*(int **)ap, (int)0));
  2565  0E21  0854               	movf	vfpfcnvrt@ap^(0+128),w
  2566  0E22  0086               	movwf	6
  2567  0E23  3001               	movlw	1	; select bank2/3
  2568  0E24  0087               	movwf	7
  2569  0E25  0801               	movf	1,w
  2570  0E26  0084               	movwf	4
  2571  0E27  3001               	movlw	1	; select bank2/3
  2572  0E28  0085               	movwf	5
  2573  0E29  3002               	movlw	2
  2574  0E2A  0781               	addwf	1,f
  2575  0E2B  3F00               	moviw [0]fsr0
  2576  0E2C  0022               	movlb	2	; select bank2
  2577  0E2D  00EB               	movwf	_prec^(0+256)
  2578  0E2E  3F01               	moviw [1]fsr0
  2579  0E2F  00EC               	movwf	(_prec+1)^(0+256)
  2580                           
  2581                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 768:             
      +                          } else {
  2582  0E30  2E65               	goto	l3755
  2583  0E31                     l3747:
  2584                           
  2585                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 769:             
      +                              prec = atoi(*fmt);
  2586  0E31  0853               	movf	vfpfcnvrt@fmt^(0+128),w
  2587  0E32  0086               	movwf	6
  2588  0E33  0187               	clrf	7
  2589  0E34  3F40               	moviw [0]fsr1
  2590  0E35  00F6               	movwf	atoi@s
  2591  0E36  3F41               	moviw [1]fsr1
  2592  0E37  00F7               	movwf	atoi@s+1
  2593  0E38  3193  235C  318D   	fcall	_atoi
  2594  0E3B  0877               	movf	?_atoi+1,w
  2595  0E3C  0022               	movlb	2	; select bank2
  2596  0E3D  00EC               	movwf	(_prec+1)^(0+256)
  2597  0E3E  0876               	movf	?_atoi,w
  2598  0E3F  00EB               	movwf	_prec^(0+256)
  2599                           
  2600                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 770:             
      +                              while ((0 && isdigit((*fmt)[0]), ((unsigned)((*fmt)[0])-'0') < 10)) {
  2601  0E40  2E49               	goto	l3753
  2602  0E41                     l3749:
  2603                           
  2604                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 771:             
      +                                  ++*fmt;
  2605  0E41  0853               	movf	vfpfcnvrt@fmt^(0+128),w
  2606  0E42  0086               	movwf	6
  2607  0E43  0187               	clrf	7
  2608  0E44  3001               	movlw	1
  2609  0E45  0781               	addwf	1,f
  2610  0E46  3141               	addfsr 1,1
  2611  0E47  1803               	skipnc
  2612  0E48  0A81               	incf	1,f
  2613  0E49                     l3753:
  2614  0E49  0021               	movlb	1	; select bank1
  2615  0E4A  0853               	movf	vfpfcnvrt@fmt^(0+128),w
  2616  0E4B  0086               	movwf	6
  2617  0E4C  0187               	clrf	7
  2618  0E4D  3F40               	moviw [0]fsr1
  2619  0E4E  00D5               	movwf	??_vfpfcnvrt^(0+128)
  2620  0E4F  3F41               	moviw [1]fsr1
  2621  0E50  00D6               	movwf	(??_vfpfcnvrt^(0+128)+1)
  2622  0E51  0855               	movf	??_vfpfcnvrt^(0+128),w
  2623  0E52  0084               	movwf	4
  2624  0E53  0856               	movf	(??_vfpfcnvrt+1)^(0+128),w
  2625  0E54  0085               	movwf	5
  2626  0E55  0800               	movf	0,w	;code access
  2627  0E56  3ED0               	addlw	208
  2628  0E57  00D7               	movwf	(??_vfpfcnvrt+2)^(0+128)
  2629  0E58  30FF               	movlw	255
  2630  0E59  1803               	skipnc
  2631  0E5A  3000               	movlw	0
  2632  0E5B  00D8               	movwf	((??_vfpfcnvrt+2)^(0+128)+1)
  2633  0E5C  3000               	movlw	0
  2634  0E5D  0258               	subwf	(??_vfpfcnvrt+3)^(0+128),w
  2635  0E5E  300A               	movlw	10
  2636  0E5F  1903               	skipnz
  2637  0E60  0257               	subwf	(??_vfpfcnvrt+2)^(0+128),w
  2638  0E61  1C03               	skipc
  2639  0E62  2E64               	goto	u5271
  2640  0E63  2E65               	goto	u5270
  2641  0E64                     u5271:
  2642  0E64  2E41               	goto	l3749
  2643  0E65                     u5270:
  2644  0E65                     l3755:
  2645                           
  2646                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 779:         ct[0
      +                          ] = (char)tolower((int)(*fmt)[0]);
  2647  0E65  0021               	movlb	1	; select bank1
  2648  0E66  0853               	movf	vfpfcnvrt@fmt^(0+128),w
  2649  0E67  0086               	movwf	6
  2650  0E68  0187               	clrf	7
  2651  0E69  3F40               	moviw [0]fsr1
  2652  0E6A  00D5               	movwf	??_vfpfcnvrt^(0+128)
  2653  0E6B  3F41               	moviw [1]fsr1
  2654  0E6C  00D6               	movwf	(??_vfpfcnvrt^(0+128)+1)
  2655  0E6D  0855               	movf	??_vfpfcnvrt^(0+128),w
  2656  0E6E  0084               	movwf	4
  2657  0E6F  0856               	movf	(??_vfpfcnvrt+1)^(0+128),w
  2658  0E70  0085               	movwf	5
  2659  0E71  0800               	movf	0,w	;code access
  2660  0E72  00D7               	movwf	(??_vfpfcnvrt+2)^(0+128)
  2661  0E73  01D8               	clrf	((??_vfpfcnvrt+2)^(0+128)+1)
  2662  0E74  0857               	movf	(??_vfpfcnvrt+2)^(0+128),w
  2663  0E75  00F6               	movwf	tolower@c
  2664  0E76  0858               	movf	(??_vfpfcnvrt+3)^(0+128),w
  2665  0E77  00F7               	movwf	tolower@c+1
  2666  0E78  319D  2587  318D   	fcall	_tolower
  2667  0E7B  0876               	movf	?_tolower,w
  2668  0E7C  0021               	movlb	1	; select bank1
  2669  0E7D  00D9               	movwf	(??_vfpfcnvrt+4)^(0+128)
  2670  0E7E  0859               	movf	(??_vfpfcnvrt+4)^(0+128),w
  2671  0E7F  00E0               	movwf	vfpfcnvrt@ct^(0+128)
  2672  0E80                     l3757:
  2673                           
  2674                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 780:         if (
      +                          ct[0]) {
  2675  0E80  0860               	movf	vfpfcnvrt@ct^(0+128),w
  2676  0E81  1903               	btfsc	3,2
  2677  0E82  2E84               	goto	u5281
  2678  0E83  2E85               	goto	u5280
  2679  0E84                     u5281:
  2680  0E84  2EC4               	goto	l3765
  2681  0E85                     u5280:
  2682  0E85                     l3759:
  2683                           
  2684                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 781:             
      +                          ct[1] = (char)tolower((int)(*fmt)[1]);
  2685  0E85  0853               	movf	vfpfcnvrt@fmt^(0+128),w
  2686  0E86  0086               	movwf	6
  2687  0E87  0187               	clrf	7
  2688  0E88  3F40               	moviw [0]fsr1
  2689  0E89  00D5               	movwf	??_vfpfcnvrt^(0+128)
  2690  0E8A  3F41               	moviw [1]fsr1
  2691  0E8B  00D6               	movwf	(??_vfpfcnvrt^(0+128)+1)
  2692  0E8C  3001               	movlw	1
  2693  0E8D  0755               	addwf	??_vfpfcnvrt^(0+128),w
  2694  0E8E  0084               	movwf	4
  2695  0E8F  0856               	movf	(??_vfpfcnvrt^(0+128)+1),w
  2696  0E90  1803               	skipnc
  2697  0E91  0A56               	incf	(??_vfpfcnvrt^(0+128)+1),w
  2698  0E92  0085               	movwf	5
  2699  0E93  0800               	movf	0,w	;code access
  2700  0E94  00D7               	movwf	(??_vfpfcnvrt+2)^(0+128)
  2701  0E95  01D8               	clrf	((??_vfpfcnvrt+2)^(0+128)+1)
  2702  0E96  0857               	movf	(??_vfpfcnvrt+2)^(0+128),w
  2703  0E97  00F6               	movwf	tolower@c
  2704  0E98  0858               	movf	(??_vfpfcnvrt+3)^(0+128),w
  2705  0E99  00F7               	movwf	tolower@c+1
  2706  0E9A  319D  2587  318D   	fcall	_tolower
  2707  0E9D  0876               	movf	?_tolower,w
  2708  0E9E  0021               	movlb	1	; select bank1
  2709  0E9F  00D9               	movwf	(??_vfpfcnvrt+4)^(0+128)
  2710  0EA0  0859               	movf	(??_vfpfcnvrt+4)^(0+128),w
  2711  0EA1  00E1               	movwf	(vfpfcnvrt@ct^(0+128)+1)
  2712  0EA2                     l3761:
  2713                           
  2714                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 782:             
      +                          if (ct[1]) {
  2715  0EA2  0861               	movf	(vfpfcnvrt@ct^(0+128)+1),w
  2716  0EA3  1903               	btfsc	3,2
  2717  0EA4  2EA6               	goto	u5291
  2718  0EA5  2EA7               	goto	u5290
  2719  0EA6                     u5291:
  2720  0EA6  2EC4               	goto	l3765
  2721  0EA7                     u5290:
  2722  0EA7                     l3763:
  2723                           
  2724                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 783:             
      +                              ct[2] = (char)tolower((int)(*fmt)[2]);
  2725  0EA7  0853               	movf	vfpfcnvrt@fmt^(0+128),w
  2726  0EA8  0086               	movwf	6
  2727  0EA9  0187               	clrf	7
  2728  0EAA  3F40               	moviw [0]fsr1
  2729  0EAB  00D5               	movwf	??_vfpfcnvrt^(0+128)
  2730  0EAC  3F41               	moviw [1]fsr1
  2731  0EAD  00D6               	movwf	(??_vfpfcnvrt^(0+128)+1)
  2732  0EAE  3002               	movlw	2
  2733  0EAF  0755               	addwf	??_vfpfcnvrt^(0+128),w
  2734  0EB0  0084               	movwf	4
  2735  0EB1  0856               	movf	(??_vfpfcnvrt^(0+128)+1),w
  2736  0EB2  1803               	skipnc
  2737  0EB3  0A56               	incf	(??_vfpfcnvrt^(0+128)+1),w
  2738  0EB4  0085               	movwf	5
  2739  0EB5  0800               	movf	0,w	;code access
  2740  0EB6  00D7               	movwf	(??_vfpfcnvrt+2)^(0+128)
  2741  0EB7  01D8               	clrf	((??_vfpfcnvrt+2)^(0+128)+1)
  2742  0EB8  0857               	movf	(??_vfpfcnvrt+2)^(0+128),w
  2743  0EB9  00F6               	movwf	tolower@c
  2744  0EBA  0858               	movf	(??_vfpfcnvrt+3)^(0+128),w
  2745  0EBB  00F7               	movwf	tolower@c+1
  2746  0EBC  319D  2587  318D   	fcall	_tolower
  2747  0EBF  0876               	movf	?_tolower,w
  2748  0EC0  0021               	movlb	1	; select bank1
  2749  0EC1  00D9               	movwf	(??_vfpfcnvrt+4)^(0+128)
  2750  0EC2  0859               	movf	(??_vfpfcnvrt+4)^(0+128),w
  2751  0EC3  00E2               	movwf	(vfpfcnvrt@ct^(0+128)+2)
  2752  0EC4                     l3765:
  2753                           
  2754                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 942:         if (
      +                          ct[0] == 'f') {
  2755  0EC4  3066               	movlw	102
  2756  0EC5  0660               	xorwf	vfpfcnvrt@ct^(0+128),w
  2757  0EC6  1D03               	btfss	3,2
  2758  0EC7  2EC9               	goto	u5301
  2759  0EC8  2ECA               	goto	u5300
  2760  0EC9                     u5301:
  2761  0EC9  2F16               	goto	l3777
  2762  0ECA                     u5300:
  2763  0ECA                     l3767:
  2764                           
  2765                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 944:             
      +                          c = (*fmt)[0];
  2766  0ECA  0853               	movf	vfpfcnvrt@fmt^(0+128),w
  2767  0ECB  0086               	movwf	6
  2768  0ECC  0187               	clrf	7
  2769  0ECD  3F40               	moviw [0]fsr1
  2770  0ECE  00D5               	movwf	??_vfpfcnvrt^(0+128)
  2771  0ECF  3F41               	moviw [1]fsr1
  2772  0ED0  00D6               	movwf	(??_vfpfcnvrt^(0+128)+1)
  2773  0ED1  0855               	movf	??_vfpfcnvrt^(0+128),w
  2774  0ED2  0084               	movwf	4
  2775  0ED3  0856               	movf	(??_vfpfcnvrt+1)^(0+128),w
  2776  0ED4  0085               	movwf	5
  2777  0ED5  0800               	movf	0,w	;code access
  2778  0ED6  00D7               	movwf	(??_vfpfcnvrt+2)^(0+128)
  2779  0ED7  0857               	movf	(??_vfpfcnvrt+2)^(0+128),w
  2780  0ED8  00E3               	movwf	vfpfcnvrt@c^(0+128)
  2781  0ED9                     l3769:
  2782                           
  2783                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 945:             
      +                          ++*fmt;
  2784  0ED9  0853               	movf	vfpfcnvrt@fmt^(0+128),w
  2785  0EDA  0086               	movwf	6
  2786  0EDB  0187               	clrf	7
  2787  0EDC  3001               	movlw	1
  2788  0EDD  0781               	addwf	1,f
  2789  0EDE  3141               	addfsr 1,1
  2790  0EDF  1803               	skipnc
  2791  0EE0  0A81               	incf	1,f
  2792  0EE1                     l3771:
  2793                           
  2794                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 946:             
      +                          f = (long double)(*(double *)__va_arg(*(double **)ap, (double)0));
  2795  0EE1  0854               	movf	vfpfcnvrt@ap^(0+128),w
  2796  0EE2  0086               	movwf	6
  2797  0EE3  3001               	movlw	1	; select bank2/3
  2798  0EE4  0087               	movwf	7
  2799  0EE5  0801               	movf	1,w
  2800  0EE6  0084               	movwf	4
  2801  0EE7  3001               	movlw	1	; select bank2/3
  2802  0EE8  0085               	movwf	5
  2803  0EE9  3004               	movlw	4
  2804  0EEA  0781               	addwf	1,f
  2805  0EEB  3F00               	moviw [0]fsr0
  2806  0EEC  00DC               	movwf	vfpfcnvrt@f^(0+128)
  2807  0EED  3F01               	moviw [1]fsr0
  2808  0EEE  00DD               	movwf	(vfpfcnvrt@f+1)^(0+128)
  2809  0EEF  3F02               	moviw [2]fsr0
  2810  0EF0  00DE               	movwf	(vfpfcnvrt@f+2)^(0+128)
  2811  0EF1  3F03               	moviw [3]fsr0
  2812  0EF2  00DF               	movwf	(vfpfcnvrt@f+3)^(0+128)
  2813  0EF3                     l3773:
  2814                           
  2815                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 948:             
      +                          return efgtoa(fp, f, c);
  2816  0EF3  085F               	movf	(vfpfcnvrt@f+3)^(0+128),w
  2817  0EF4  0020               	movlb	0	; select bank0
  2818  0EF5  00EB               	movwf	efgtoa@f+3
  2819  0EF6  0021               	movlb	1	; select bank1
  2820  0EF7  085E               	movf	(vfpfcnvrt@f+2)^(0+128),w
  2821  0EF8  0020               	movlb	0	; select bank0
  2822  0EF9  00EA               	movwf	efgtoa@f+2
  2823  0EFA  0021               	movlb	1	; select bank1
  2824  0EFB  085D               	movf	(vfpfcnvrt@f+1)^(0+128),w
  2825  0EFC  0020               	movlb	0	; select bank0
  2826  0EFD  00E9               	movwf	efgtoa@f+1
  2827  0EFE  0021               	movlb	1	; select bank1
  2828  0EFF  085C               	movf	vfpfcnvrt@f^(0+128),w
  2829  0F00  0020               	movlb	0	; select bank0
  2830  0F01  00E8               	movwf	efgtoa@f
  2831  0F02  0021               	movlb	1	; select bank1
  2832  0F03  0863               	movf	vfpfcnvrt@c^(0+128),w
  2833  0F04  00D5               	movwf	??_vfpfcnvrt^(0+128)
  2834  0F05  0855               	movf	??_vfpfcnvrt^(0+128),w
  2835  0F06  0020               	movlb	0	; select bank0
  2836  0F07  00EC               	movwf	efgtoa@c
  2837  0F08  0021               	movlb	1	; select bank1
  2838  0F09  0864               	movf	vfpfcnvrt@fp^(0+128),w
  2839  0F0A  3180  207C  318D   	fcall	_efgtoa
  2840  0F0D  0020               	movlb	0	; select bank0
  2841  0F0E  0869               	movf	?_efgtoa+1,w
  2842  0F0F  0021               	movlb	1	; select bank1
  2843  0F10  00D4               	movwf	(?_vfpfcnvrt+1)^(0+128)
  2844  0F11  0020               	movlb	0	; select bank0
  2845  0F12  0868               	movf	?_efgtoa,w
  2846  0F13  0021               	movlb	1	; select bank1
  2847  0F14  00D3               	movwf	?_vfpfcnvrt^(0+128)
  2848  0F15  2FFF               	goto	l809
  2849  0F16                     l3777:
  2850                           
  2851                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 950:         if (
      +                          !strncmp(ct, "lf", ((sizeof("lf")/sizeof("lf"[0]))-1))) {
  2852  0F16  302B               	movlw	low (STR_13| (0+32768))
  2853  0F17  00F0               	movwf	strncmp@_r
  2854  0F18  3098               	movlw	high (STR_13| (0+32768))
  2855  0F19  00F1               	movwf	strncmp@_r+1
  2856  0F1A  3002               	movlw	2
  2857  0F1B  00F2               	movwf	strncmp@n
  2858  0F1C  3000               	movlw	0
  2859  0F1D  00F3               	movwf	strncmp@n+1
  2860  0F1E  30E0               	movlw	(low (vfpfcnvrt@ct| 0))& (0+255)
  2861  0F1F  3190  202E  318D   	fcall	_strncmp
  2862  0F22  0870               	movf	?_strncmp,w
  2863  0F23  0471               	iorwf	?_strncmp+1,w
  2864  0F24  1D03               	btfss	3,2
  2865  0F25  2F27               	goto	u5311
  2866  0F26  2F28               	goto	u5310
  2867  0F27                     u5311:
  2868  0F27  2FA6               	goto	l3795
  2869  0F28                     u5310:
  2870  0F28                     l3779:
  2871                           
  2872                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 952:             
      +                          c = (*fmt)[1];
  2873  0F28  0021               	movlb	1	; select bank1
  2874  0F29  0853               	movf	vfpfcnvrt@fmt^(0+128),w
  2875  0F2A  0086               	movwf	6
  2876  0F2B  0187               	clrf	7
  2877  0F2C  3F40               	moviw [0]fsr1
  2878  0F2D  00D5               	movwf	??_vfpfcnvrt^(0+128)
  2879  0F2E  3F41               	moviw [1]fsr1
  2880  0F2F  00D6               	movwf	(??_vfpfcnvrt^(0+128)+1)
  2881  0F30  3001               	movlw	1
  2882  0F31  0755               	addwf	??_vfpfcnvrt^(0+128),w
  2883  0F32  0084               	movwf	4
  2884  0F33  0856               	movf	(??_vfpfcnvrt^(0+128)+1),w
  2885  0F34  1803               	skipnc
  2886  0F35  0A56               	incf	(??_vfpfcnvrt^(0+128)+1),w
  2887  0F36  0085               	movwf	5
  2888  0F37  0800               	movf	0,w	;code access
  2889  0F38  00D7               	movwf	(??_vfpfcnvrt+2)^(0+128)
  2890  0F39  0857               	movf	(??_vfpfcnvrt+2)^(0+128),w
  2891  0F3A  00E3               	movwf	vfpfcnvrt@c^(0+128)
  2892  0F3B                     l3783:	
  2893                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 953:             
      +                          if ((0 && isupper((int)(*fmt)[0]), ((unsigned)((int)(*fmt)[0])-'A') < 26)) {
  2894                           
  2895  0F3B  0853               	movf	vfpfcnvrt@fmt^(0+128),w
  2896  0F3C  0086               	movwf	6
  2897  0F3D  0187               	clrf	7
  2898  0F3E  3F40               	moviw [0]fsr1
  2899  0F3F  00D5               	movwf	??_vfpfcnvrt^(0+128)
  2900  0F40  3F41               	moviw [1]fsr1
  2901  0F41  00D6               	movwf	(??_vfpfcnvrt^(0+128)+1)
  2902  0F42  0855               	movf	??_vfpfcnvrt^(0+128),w
  2903  0F43  0084               	movwf	4
  2904  0F44  0856               	movf	(??_vfpfcnvrt+1)^(0+128),w
  2905  0F45  0085               	movwf	5
  2906  0F46  0800               	movf	0,w	;code access
  2907  0F47  3EBF               	addlw	191
  2908  0F48  00D7               	movwf	(??_vfpfcnvrt+2)^(0+128)
  2909  0F49  30FF               	movlw	255
  2910  0F4A  1803               	skipnc
  2911  0F4B  3000               	movlw	0
  2912  0F4C  00D8               	movwf	((??_vfpfcnvrt+2)^(0+128)+1)
  2913  0F4D  3000               	movlw	0
  2914  0F4E  0258               	subwf	(??_vfpfcnvrt+3)^(0+128),w
  2915  0F4F  301A               	movlw	26
  2916  0F50  1903               	skipnz
  2917  0F51  0257               	subwf	(??_vfpfcnvrt+2)^(0+128),w
  2918  0F52  1803               	skipnc
  2919  0F53  2F55               	goto	u5321
  2920  0F54  2F56               	goto	u5320
  2921  0F55                     u5321:
  2922  0F55  2F69               	goto	l3787
  2923  0F56                     u5320:
  2924  0F56                     l3785:
  2925                           
  2926                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 954:             
      +                              f = (*(long double *)__va_arg(*(long double **)ap, (long double)0));
  2927  0F56  0854               	movf	vfpfcnvrt@ap^(0+128),w
  2928  0F57  0086               	movwf	6
  2929  0F58  3001               	movlw	1	; select bank2/3
  2930  0F59  0087               	movwf	7
  2931  0F5A  0801               	movf	1,w
  2932  0F5B  0084               	movwf	4
  2933  0F5C  3001               	movlw	1	; select bank2/3
  2934  0F5D  0085               	movwf	5
  2935  0F5E  3004               	movlw	4
  2936  0F5F  0781               	addwf	1,f
  2937  0F60  3F00               	moviw [0]fsr0
  2938  0F61  00DC               	movwf	vfpfcnvrt@f^(0+128)
  2939  0F62  3F01               	moviw [1]fsr0
  2940  0F63  00DD               	movwf	(vfpfcnvrt@f+1)^(0+128)
  2941  0F64  3F02               	moviw [2]fsr0
  2942  0F65  00DE               	movwf	(vfpfcnvrt@f+2)^(0+128)
  2943  0F66  3F03               	moviw [3]fsr0
  2944  0F67  00DF               	movwf	(vfpfcnvrt@f+3)^(0+128)
  2945                           
  2946                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 955:             
      +                          } else {
  2947  0F68  2F7B               	goto	l3789
  2948  0F69                     l3787:
  2949                           
  2950                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 956:             
      +                              f = (long double)(*(double *)__va_arg(*(double **)ap, (double)0));
  2951  0F69  0854               	movf	vfpfcnvrt@ap^(0+128),w
  2952  0F6A  0086               	movwf	6
  2953  0F6B  3001               	movlw	1	; select bank2/3
  2954  0F6C  0087               	movwf	7
  2955  0F6D  0801               	movf	1,w
  2956  0F6E  0084               	movwf	4
  2957  0F6F  3001               	movlw	1	; select bank2/3
  2958  0F70  0085               	movwf	5
  2959  0F71  3004               	movlw	4
  2960  0F72  0781               	addwf	1,f
  2961  0F73  3F00               	moviw [0]fsr0
  2962  0F74  00DC               	movwf	vfpfcnvrt@f^(0+128)
  2963  0F75  3F01               	moviw [1]fsr0
  2964  0F76  00DD               	movwf	(vfpfcnvrt@f+1)^(0+128)
  2965  0F77  3F02               	moviw [2]fsr0
  2966  0F78  00DE               	movwf	(vfpfcnvrt@f+2)^(0+128)
  2967  0F79  3F03               	moviw [3]fsr0
  2968  0F7A  00DF               	movwf	(vfpfcnvrt@f+3)^(0+128)
  2969  0F7B                     l3789:
  2970                           
  2971                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 958:             
      +                          *fmt += ((sizeof("lf")/sizeof("lf"[0]))-1);
  2972  0F7B  0853               	movf	vfpfcnvrt@fmt^(0+128),w
  2973  0F7C  0086               	movwf	6
  2974  0F7D  0187               	clrf	7
  2975  0F7E  3002               	movlw	2
  2976  0F7F  0781               	addwf	1,f
  2977  0F80  3141               	addfsr 1,1
  2978  0F81  1803               	skipnc
  2979  0F82  0A81               	incf	1,f
  2980  0F83                     l3791:
  2981                           
  2982                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 960:             
      +                          return efgtoa(fp, f, c);
  2983  0F83  085F               	movf	(vfpfcnvrt@f+3)^(0+128),w
  2984  0F84  0020               	movlb	0	; select bank0
  2985  0F85  00EB               	movwf	efgtoa@f+3
  2986  0F86  0021               	movlb	1	; select bank1
  2987  0F87  085E               	movf	(vfpfcnvrt@f+2)^(0+128),w
  2988  0F88  0020               	movlb	0	; select bank0
  2989  0F89  00EA               	movwf	efgtoa@f+2
  2990  0F8A  0021               	movlb	1	; select bank1
  2991  0F8B  085D               	movf	(vfpfcnvrt@f+1)^(0+128),w
  2992  0F8C  0020               	movlb	0	; select bank0
  2993  0F8D  00E9               	movwf	efgtoa@f+1
  2994  0F8E  0021               	movlb	1	; select bank1
  2995  0F8F  085C               	movf	vfpfcnvrt@f^(0+128),w
  2996  0F90  0020               	movlb	0	; select bank0
  2997  0F91  00E8               	movwf	efgtoa@f
  2998  0F92  0021               	movlb	1	; select bank1
  2999  0F93  0863               	movf	vfpfcnvrt@c^(0+128),w
  3000  0F94  00D5               	movwf	??_vfpfcnvrt^(0+128)
  3001  0F95  0855               	movf	??_vfpfcnvrt^(0+128),w
  3002  0F96  0020               	movlb	0	; select bank0
  3003  0F97  00EC               	movwf	efgtoa@c
  3004  0F98  0021               	movlb	1	; select bank1
  3005  0F99  0864               	movf	vfpfcnvrt@fp^(0+128),w
  3006  0F9A  3180  207C  318D   	fcall	_efgtoa
  3007  0F9D  0020               	movlb	0	; select bank0
  3008  0F9E  0869               	movf	?_efgtoa+1,w
  3009  0F9F  0021               	movlb	1	; select bank1
  3010  0FA0  00D4               	movwf	(?_vfpfcnvrt+1)^(0+128)
  3011  0FA1  0020               	movlb	0	; select bank0
  3012  0FA2  0868               	movf	?_efgtoa,w
  3013  0FA3  0021               	movlb	1	; select bank1
  3014  0FA4  00D3               	movwf	?_vfpfcnvrt^(0+128)
  3015  0FA5  2FFF               	goto	l809
  3016  0FA6                     l3795:
  3017                           
  3018                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 1372:         if 
      +                          ((*fmt)[0] == '%') {
  3019  0FA6  0021               	movlb	1	; select bank1
  3020  0FA7  0853               	movf	vfpfcnvrt@fmt^(0+128),w
  3021  0FA8  0086               	movwf	6
  3022  0FA9  0187               	clrf	7
  3023  0FAA  3F40               	moviw [0]fsr1
  3024  0FAB  00D5               	movwf	??_vfpfcnvrt^(0+128)
  3025  0FAC  3F41               	moviw [1]fsr1
  3026  0FAD  00D6               	movwf	(??_vfpfcnvrt^(0+128)+1)
  3027  0FAE  0855               	movf	??_vfpfcnvrt^(0+128),w
  3028  0FAF  0084               	movwf	4
  3029  0FB0  0856               	movf	(??_vfpfcnvrt+1)^(0+128),w
  3030  0FB1  0085               	movwf	5
  3031  0FB2  0012               	moviw fsr0++
  3032  0FB3  3A25               	xorlw	37
  3033  0FB4  1D03               	btfss	3,2
  3034  0FB5  2FB7               	goto	u5331
  3035  0FB6  2FB8               	goto	u5330
  3036  0FB7                     u5331:
  3037  0FB7  2FD1               	goto	l3805
  3038  0FB8                     u5330:
  3039  0FB8                     l3797:
  3040                           
  3041                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 1373:            
      +                           ++*fmt;
  3042  0FB8  0853               	movf	vfpfcnvrt@fmt^(0+128),w
  3043  0FB9  0086               	movwf	6
  3044  0FBA  0187               	clrf	7
  3045  0FBB  3001               	movlw	1
  3046  0FBC  0781               	addwf	1,f
  3047  0FBD  3141               	addfsr 1,1
  3048  0FBE  1803               	skipnc
  3049  0FBF  0A81               	incf	1,f
  3050  0FC0                     l3799:
  3051                           
  3052                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 1374:            
      +                           fputc((int)'%', fp);
  3053  0FC0  3025               	movlw	37
  3054  0FC1  00F0               	movwf	fputc@c
  3055  0FC2  3000               	movlw	0
  3056  0FC3  00F1               	movwf	fputc@c+1
  3057  0FC4  0864               	movf	vfpfcnvrt@fp^(0+128),w
  3058  0FC5  00D5               	movwf	??_vfpfcnvrt^(0+128)
  3059  0FC6  0855               	movf	??_vfpfcnvrt^(0+128),w
  3060  0FC7  00F2               	movwf	fputc@fp
  3061  0FC8  3190  2086  318D   	fcall	_fputc
  3062  0FCB                     l3801:
  3063                           
  3064                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 1375:            
      +                           return 1;
  3065  0FCB  3001               	movlw	1
  3066  0FCC  0021               	movlb	1	; select bank1
  3067  0FCD  00D3               	movwf	?_vfpfcnvrt^(0+128)
  3068  0FCE  3000               	movlw	0
  3069  0FCF  00D4               	movwf	(?_vfpfcnvrt^(0+128)+1)
  3070  0FD0  2FFF               	goto	l809
  3071  0FD1                     l3805:
  3072                           
  3073                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 1379:         ++*
      +                          fmt;
  3074  0FD1  0853               	movf	vfpfcnvrt@fmt^(0+128),w
  3075  0FD2  0086               	movwf	6
  3076  0FD3  0187               	clrf	7
  3077  0FD4  3001               	movlw	1
  3078  0FD5  0781               	addwf	1,f
  3079  0FD6  3141               	addfsr 1,1
  3080  0FD7  1803               	skipnc
  3081  0FD8  0A81               	incf	1,f
  3082  0FD9                     l3807:
  3083                           
  3084                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 1380:         ret
      +                          urn 0;
  3085  0FD9  01D3               	clrf	?_vfpfcnvrt^(0+128)
  3086  0FDA  01D4               	clrf	(?_vfpfcnvrt+1)^(0+128)
  3087  0FDB  2FFF               	goto	l809
  3088  0FDC                     l3811:
  3089                           
  3090                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 1384:     fputc((
      +                          int)(*fmt)[0], fp);
  3091  0FDC  0853               	movf	vfpfcnvrt@fmt^(0+128),w
  3092  0FDD  0086               	movwf	6
  3093  0FDE  0187               	clrf	7
  3094  0FDF  3F40               	moviw [0]fsr1
  3095  0FE0  00D5               	movwf	??_vfpfcnvrt^(0+128)
  3096  0FE1  3F41               	moviw [1]fsr1
  3097  0FE2  00D6               	movwf	(??_vfpfcnvrt^(0+128)+1)
  3098  0FE3  0855               	movf	??_vfpfcnvrt^(0+128),w
  3099  0FE4  0084               	movwf	4
  3100  0FE5  0856               	movf	(??_vfpfcnvrt+1)^(0+128),w
  3101  0FE6  0085               	movwf	5
  3102  0FE7  0800               	movf	0,w	;code access
  3103  0FE8  00D7               	movwf	(??_vfpfcnvrt+2)^(0+128)
  3104  0FE9  01D8               	clrf	((??_vfpfcnvrt+2)^(0+128)+1)
  3105  0FEA  0857               	movf	(??_vfpfcnvrt+2)^(0+128),w
  3106  0FEB  00F0               	movwf	fputc@c
  3107  0FEC  0858               	movf	(??_vfpfcnvrt+3)^(0+128),w
  3108  0FED  00F1               	movwf	fputc@c+1
  3109  0FEE  0864               	movf	vfpfcnvrt@fp^(0+128),w
  3110  0FEF  00D9               	movwf	(??_vfpfcnvrt+4)^(0+128)
  3111  0FF0  0859               	movf	(??_vfpfcnvrt+4)^(0+128),w
  3112  0FF1  00F2               	movwf	fputc@fp
  3113  0FF2  3190  2086  318D   	fcall	_fputc
  3114  0FF5                     l3813:
  3115                           
  3116                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 1385:     ++*fmt;
  3117  0FF5  0021               	movlb	1	; select bank1
  3118  0FF6  0853               	movf	vfpfcnvrt@fmt^(0+128),w
  3119  0FF7  0086               	movwf	6
  3120  0FF8  0187               	clrf	7
  3121  0FF9  3001               	movlw	1
  3122  0FFA  0781               	addwf	1,f
  3123  0FFB  3141               	addfsr 1,1
  3124  0FFC  1803               	skipnc
  3125  0FFD  0A81               	incf	1,f
  3126  0FFE  2FCB               	goto	l3801
  3127  0FFF                     l809:
  3128  0FFF  0008               	return
  3129  1000                     __end_of_vfpfcnvrt:
  3130                           
  3131                           	psect	text4
  3132  102E                     __ptext4:	
  3133 ;; *************** function _strncmp *****************
  3134 ;; Defined at:
  3135 ;;		line 3 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\strncmp.c"
  3136 ;; Parameters:    Size  Location     Type
  3137 ;;  _l              1    wreg     PTR const unsigned char 
  3138 ;;		 -> vfpfcnvrt@ct(3), 
  3139 ;;  _r              2    0[COMMON] PTR const unsigned char 
  3140 ;;		 -> STR_15(3), 
  3141 ;;  n               2    2[COMMON] unsigned int 
  3142 ;; Auto vars:     Size  Location     Type
  3143 ;;  _l              1    5[COMMON] PTR const unsigned char 
  3144 ;;		 -> vfpfcnvrt@ct(3), 
  3145 ;;  r               2    6[COMMON] PTR const unsigned char 
  3146 ;;		 -> STR_15(3), 
  3147 ;;  l               1    8[COMMON] PTR const unsigned char 
  3148 ;;		 -> vfpfcnvrt@ct(3), 
  3149 ;; Return value:  Size  Location     Type
  3150 ;;                  2    0[COMMON] int 
  3151 ;; Registers used:
  3152 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath
  3153 ;; Tracked objects:
  3154 ;;		On entry : 0/0
  3155 ;;		On exit  : 0/0
  3156 ;;		Unchanged: 0/0
  3157 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  3158 ;;      Params:         4       0       0       0       0       0       0       0
  3159 ;;      Locals:         4       0       0       0       0       0       0       0
  3160 ;;      Temps:          1       0       0       0       0       0       0       0
  3161 ;;      Totals:         9       0       0       0       0       0       0       0
  3162 ;;Total ram usage:        9 bytes
  3163 ;; Hardware stack levels used: 1
  3164 ;; This function calls:
  3165 ;;		Nothing
  3166 ;; This function is called by:
  3167 ;;		_vfpfcnvrt
  3168 ;; This function uses a non-reentrant model
  3169 ;;
  3170                           
  3171  102E                     _strncmp:	
  3172                           ;psect for function _strncmp
  3173                           
  3174                           
  3175                           ;incstack = 0
  3176                           ; Regs used in _strncmp: [wreg-fsr1h+status,2+status,0+pclath]
  3177                           ;strncmp@_l stored from wreg
  3178  102E  00F5               	movwf	strncmp@_l
  3179  102F                     l3665:
  3180  102F  0875               	movf	strncmp@_l,w
  3181  1030  00F4               	movwf	??_strncmp
  3182  1031  0874               	movf	??_strncmp,w
  3183  1032  00F8               	movwf	strncmp@l
  3184  1033  0871               	movf	strncmp@_r+1,w
  3185  1034  00F7               	movwf	strncmp@r+1
  3186  1035  0870               	movf	strncmp@_r,w
  3187  1036  00F6               	movwf	strncmp@r
  3188  1037                     l3667:
  3189  1037  3001               	movlw	1
  3190  1038  02F2               	subwf	strncmp@n,f
  3191  1039  3000               	movlw	0
  3192  103A  3BF3               	subwfb	strncmp@n+1,f
  3193  103B  0A72               	incf	strncmp@n,w
  3194  103C  1D03               	skipz
  3195  103D  2842               	goto	u5161
  3196  103E  0A73               	incf	strncmp@n+1,w
  3197  103F  1D03               	btfss	3,2
  3198  1040  2842               	goto	u5161
  3199  1041  2843               	goto	u5160
  3200  1042                     u5161:
  3201  1042  2852               	goto	l3679
  3202  1043                     u5160:
  3203  1043                     l3669:
  3204  1043  01F0               	clrf	?_strncmp
  3205  1044  01F1               	clrf	?_strncmp+1
  3206  1045  2885               	goto	l929
  3207  1046                     l3673:
  3208  1046  3001               	movlw	1
  3209  1047  00F4               	movwf	??_strncmp
  3210  1048  0874               	movf	??_strncmp,w
  3211  1049  07F8               	addwf	strncmp@l,f
  3212  104A                     l3675:
  3213  104A  3001               	movlw	1
  3214  104B  07F6               	addwf	strncmp@r,f
  3215  104C  3000               	movlw	0
  3216  104D  3DF7               	addwfc	strncmp@r+1,f
  3217  104E                     l3677:
  3218  104E  3001               	movlw	1
  3219  104F  02F2               	subwf	strncmp@n,f
  3220  1050  3000               	movlw	0
  3221  1051  3BF3               	subwfb	strncmp@n+1,f
  3222  1052                     l3679:
  3223  1052  0878               	movf	strncmp@l,w
  3224  1053  0086               	movwf	6
  3225  1054  0187               	clrf	7
  3226  1055  0801               	movf	1,w
  3227  1056  1903               	btfsc	3,2
  3228  1057  2859               	goto	u5171
  3229  1058  285A               	goto	u5170
  3230  1059                     u5171:
  3231  1059  2878               	goto	l3687
  3232  105A                     u5170:
  3233  105A                     l3681:
  3234  105A  0876               	movf	strncmp@r,w
  3235  105B  0084               	movwf	4
  3236  105C  0877               	movf	strncmp@r+1,w
  3237  105D  0085               	movwf	5
  3238  105E  0012               	moviw fsr0++
  3239  105F  1903               	btfsc	3,2
  3240  1060  2862               	goto	u5181
  3241  1061  2863               	goto	u5180
  3242  1062                     u5181:
  3243  1062  2878               	goto	l3687
  3244  1063                     u5180:
  3245  1063                     l3683:
  3246  1063  0872               	movf	strncmp@n,w
  3247  1064  0473               	iorwf	strncmp@n+1,w
  3248  1065  1903               	btfsc	3,2
  3249  1066  2868               	goto	u5191
  3250  1067  2869               	goto	u5190
  3251  1068                     u5191:
  3252  1068  2878               	goto	l3687
  3253  1069                     u5190:
  3254  1069                     l3685:
  3255  1069  0876               	movf	strncmp@r,w
  3256  106A  0084               	movwf	4
  3257  106B  0877               	movf	strncmp@r+1,w
  3258  106C  0085               	movwf	5
  3259  106D  0800               	movf	0,w	;code access
  3260  106E  00F4               	movwf	??_strncmp
  3261  106F  0878               	movf	strncmp@l,w
  3262  1070  0086               	movwf	6
  3263  1071  0187               	clrf	7
  3264  1072  0801               	movf	1,w
  3265  1073  0674               	xorwf	??_strncmp,w
  3266  1074  1903               	skipnz
  3267  1075  2877               	goto	u5201
  3268  1076  2878               	goto	u5200
  3269  1077                     u5201:
  3270  1077  2846               	goto	l3673
  3271  1078                     u5200:
  3272  1078                     l3687:
  3273  1078  0878               	movf	strncmp@l,w
  3274  1079  0086               	movwf	6
  3275  107A  0187               	clrf	7
  3276  107B  0876               	movf	strncmp@r,w
  3277  107C  0084               	movwf	4
  3278  107D  0877               	movf	strncmp@r+1,w
  3279  107E  0085               	movwf	5
  3280  107F  0800               	movf	0,w	;code access
  3281  1080  0201               	subwf	1,w
  3282  1081  00F0               	movwf	?_strncmp
  3283  1082  01F1               	clrf	?_strncmp+1
  3284  1083  1C03               	skipc
  3285  1084  03F1               	decf	?_strncmp+1,f
  3286  1085                     l929:
  3287  1085  0008               	return
  3288  1086                     __end_of_strncmp:
  3289                           
  3290                           	psect	text5
  3291  007C                     __ptext5:	
  3292 ;; *************** function _efgtoa *****************
  3293 ;; Defined at:
  3294 ;;		line 332 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c"
  3295 ;; Parameters:    Size  Location     Type
  3296 ;;  fp              1    wreg     PTR struct _IO_FILE
  3297 ;;		 -> sprintf@f(10), 
  3298 ;;  f               4   72[BANK0 ] PTR struct _IO_FILE
  3299 ;;  c               1   76[BANK0 ] unsigned char 
  3300 ;; Auto vars:     Size  Location     Type
  3301 ;;  fp              1   22[BANK1 ] PTR struct _IO_FILE
  3302 ;;		 -> sprintf@f(10), 
  3303 ;;  u               4   47[BANK1 ] PTR struct _IO_FILE
  3304 ;;  g               4   39[BANK1 ] PTR struct _IO_FILE
  3305 ;;  l               4   33[BANK1 ] PTR struct _IO_FILE
  3306 ;;  h               4   29[BANK1 ] PTR struct _IO_FILE
  3307 ;;  ou              4   14[BANK1 ] PTR struct _IO_FILE
  3308 ;;  n               2   45[BANK1 ] int 
  3309 ;;  e               2   43[BANK1 ] int 
  3310 ;;  i               2   37[BANK1 ] int 
  3311 ;;  w               2   25[BANK1 ] int 
  3312 ;;  p               2   23[BANK1 ] int 
  3313 ;;  sign            2   20[BANK1 ] int 
  3314 ;;  d               2   18[BANK1 ] int 
  3315 ;;  m               2   12[BANK1 ] int 
  3316 ;;  ne              2   10[BANK1 ] int 
  3317 ;;  pp              2    8[BANK1 ] int 
  3318 ;;  t               2    6[BANK1 ] int 
  3319 ;;  mode            1   28[BANK1 ] unsigned char 
  3320 ;;  nmode           1   27[BANK1 ] unsigned char 
  3321 ;; Return value:  Size  Location     Type
  3322 ;;                  2   72[BANK0 ] int 
  3323 ;; Registers used:
  3324 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3325 ;; Tracked objects:
  3326 ;;		On entry : 0/0
  3327 ;;		On exit  : 0/0
  3328 ;;		Unchanged: 0/0
  3329 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  3330 ;;      Params:         0       5       0       0       0       0       0       0
  3331 ;;      Locals:         0       0      51       0       0       0       0       0
  3332 ;;      Temps:          0       3       0       0       0       0       0       0
  3333 ;;      Totals:         0       8      51       0       0       0       0       0
  3334 ;;Total ram usage:       59 bytes
  3335 ;; Hardware stack levels used: 1
  3336 ;; Hardware stack levels required when called: 4
  3337 ;; This function calls:
  3338 ;;		___awdiv
  3339 ;;		___awmod
  3340 ;;		___fladd
  3341 ;;		___fldiv
  3342 ;;		___fleq
  3343 ;;		___flge
  3344 ;;		___flmul
  3345 ;;		___flneg
  3346 ;;		___flsub
  3347 ;;		___fltol
  3348 ;;		___fpclassifyf
  3349 ;;		_floorf
  3350 ;;		_isupper
  3351 ;;		_pad
  3352 ;;		_strcpy
  3353 ;;		_tolower
  3354 ;; This function is called by:
  3355 ;;		_vfpfcnvrt
  3356 ;; This function uses a non-reentrant model
  3357 ;;
  3358                           
  3359  007C                     _efgtoa:	
  3360                           ;psect for function _efgtoa
  3361                           
  3362                           
  3363                           ;incstack = 0
  3364                           ; Regs used in _efgtoa: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  3365                           ;efgtoa@fp stored from wreg
  3366  007C  0021               	movlb	1	; select bank1
  3367  007D  00B6               	movwf	efgtoa@fp^(0+128)
  3368  007E                     l3333:
  3369                           
  3370                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 332: static int e
      +                          fgtoa(FILE *fp, long double f, char c);C:\Program Files\Microchip\xc8\v2.36\pic\sources\
      +                          c99\common\doprnt.c: 333: {;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\
      +                          doprnt.c: 334:     char mode, nmode;;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c9
      +                          9\common\doprnt.c: 335:     int d, e, i, m, n, ne, p, pp, sign, t, w;;C:\Program Files\M
      +                          icrochip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 336:     long double g, h, l, ou, u;
  3371  007E  01B4               	clrf	efgtoa@sign^(0+128)
  3372  007F  01B5               	clrf	(efgtoa@sign+1)^(0+128)
  3373  0080                     l3335:
  3374                           
  3375                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 340:     g = f;
  3376  0080  0020               	movlb	0	; select bank0
  3377  0081  086B               	movf	efgtoa@f+3,w
  3378  0082  0021               	movlb	1	; select bank1
  3379  0083  00CA               	movwf	(efgtoa@g+3)^(0+128)
  3380  0084  0020               	movlb	0	; select bank0
  3381  0085  086A               	movf	efgtoa@f+2,w
  3382  0086  0021               	movlb	1	; select bank1
  3383  0087  00C9               	movwf	(efgtoa@g+2)^(0+128)
  3384  0088  0020               	movlb	0	; select bank0
  3385  0089  0869               	movf	efgtoa@f+1,w
  3386  008A  0021               	movlb	1	; select bank1
  3387  008B  00C8               	movwf	(efgtoa@g+1)^(0+128)
  3388  008C  0020               	movlb	0	; select bank0
  3389  008D  0868               	movf	efgtoa@f,w
  3390  008E  0021               	movlb	1	; select bank1
  3391  008F  00C7               	movwf	efgtoa@g^(0+128)
  3392  0090                     l3337:
  3393                           
  3394                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 341:     if (g < 
      +                          0.0) {
  3395  0090  084A               	movf	(efgtoa@g+3)^(0+128),w
  3396  0091  0020               	movlb	0	; select bank0
  3397  0092  00BD               	movwf	___flge@ff1+3
  3398  0093  0021               	movlb	1	; select bank1
  3399  0094  0849               	movf	(efgtoa@g+2)^(0+128),w
  3400  0095  0020               	movlb	0	; select bank0
  3401  0096  00BC               	movwf	___flge@ff1+2
  3402  0097  0021               	movlb	1	; select bank1
  3403  0098  0848               	movf	(efgtoa@g+1)^(0+128),w
  3404  0099  0020               	movlb	0	; select bank0
  3405  009A  00BB               	movwf	___flge@ff1+1
  3406  009B  0021               	movlb	1	; select bank1
  3407  009C  0847               	movf	efgtoa@g^(0+128),w
  3408  009D  0020               	movlb	0	; select bank0
  3409  009E  00BA               	movwf	___flge@ff1
  3410  009F  3000               	movlw	0
  3411  00A0  00C1               	movwf	___flge@ff2+3
  3412  00A1  3000               	movlw	0
  3413  00A2  00C0               	movwf	___flge@ff2+2
  3414  00A3  3000               	movlw	0
  3415  00A4  00BF               	movwf	___flge@ff2+1
  3416  00A5  3000               	movlw	0
  3417  00A6  00BE               	movwf	___flge@ff2
  3418  00A7  3192  22D1  3180   	fcall	___flge
  3419  00AA  1803               	btfsc	3,0
  3420  00AB  28AD               	goto	u4641
  3421  00AC  28AE               	goto	u4640
  3422  00AD                     u4641:
  3423  00AD  28C7               	goto	l3343
  3424  00AE                     u4640:
  3425  00AE                     l3339:
  3426                           
  3427                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 342:         sign
      +                           = 1;
  3428  00AE  3001               	movlw	1
  3429  00AF  0021               	movlb	1	; select bank1
  3430  00B0  00B4               	movwf	efgtoa@sign^(0+128)
  3431  00B1  3000               	movlw	0
  3432  00B2  00B5               	movwf	(efgtoa@sign^(0+128)+1)
  3433  00B3                     l3341:
  3434                           
  3435                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 343:         g = 
      +                          -g;
  3436  00B3  084A               	movf	(efgtoa@g+3)^(0+128),w
  3437  00B4  00F3               	movwf	___flneg@f1+3
  3438  00B5  0849               	movf	(efgtoa@g+2)^(0+128),w
  3439  00B6  00F2               	movwf	___flneg@f1+2
  3440  00B7  0848               	movf	(efgtoa@g+1)^(0+128),w
  3441  00B8  00F1               	movwf	___flneg@f1+1
  3442  00B9  0847               	movf	efgtoa@g^(0+128),w
  3443  00BA  00F0               	movwf	___flneg@f1
  3444  00BB  319D  256C  3180   	fcall	___flneg
  3445  00BE  0873               	movf	?___flneg+3,w
  3446  00BF  0021               	movlb	1	; select bank1
  3447  00C0  00CA               	movwf	(efgtoa@g+3)^(0+128)
  3448  00C1  0872               	movf	?___flneg+2,w
  3449  00C2  00C9               	movwf	(efgtoa@g+2)^(0+128)
  3450  00C3  0871               	movf	?___flneg+1,w
  3451  00C4  00C8               	movwf	(efgtoa@g+1)^(0+128)
  3452  00C5  0870               	movf	?___flneg,w
  3453  00C6  00C7               	movwf	efgtoa@g^(0+128)
  3454  00C7                     l3343:
  3455                           
  3456                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 347:     n = 0;
  3457  00C7  0021               	movlb	1	; select bank1
  3458  00C8  01CD               	clrf	efgtoa@n^(0+128)
  3459  00C9  01CE               	clrf	(efgtoa@n+1)^(0+128)
  3460  00CA                     l3345:
  3461                           
  3462                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 348:     w = widt
      +                          h;
  3463  00CA  0022               	movlb	2	; select bank2
  3464  00CB  086A               	movf	(_width+1)^(0+256),w
  3465  00CC  0021               	movlb	1	; select bank1
  3466  00CD  00BA               	movwf	(efgtoa@w+1)^(0+128)
  3467  00CE  0022               	movlb	2	; select bank2
  3468  00CF  0869               	movf	_width^(0+256),w
  3469  00D0  0021               	movlb	1	; select bank1
  3470  00D1  00B9               	movwf	efgtoa@w^(0+128)
  3471  00D2                     l3347:
  3472                           
  3473                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 349:     if (sign
      +                           || (flags & (1 << 2))) {
  3474  00D2  0834               	movf	efgtoa@sign^(0+128),w
  3475  00D3  0435               	iorwf	(efgtoa@sign+1)^(0+128),w
  3476  00D4  1D03               	btfss	3,2
  3477  00D5  28D7               	goto	u4651
  3478  00D6  28D8               	goto	u4650
  3479  00D7                     u4651:
  3480  00D7  28DC               	goto	l3351
  3481  00D8                     u4650:
  3482  00D8                     l3349:
  3483  00D8  1D6E               	btfss	_flags^(0+128),2
  3484  00D9  28DB               	goto	u4661
  3485  00DA  28DC               	goto	u4660
  3486  00DB                     u4661:
  3487  00DB  28FA               	goto	l3363
  3488  00DC                     u4660:
  3489  00DC                     l3351:
  3490                           
  3491                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 350:         dbuf
      +                          [n] = sign ? '-' : '+';
  3492  00DC  0834               	movf	efgtoa@sign^(0+128),w
  3493  00DD  0435               	iorwf	(efgtoa@sign+1)^(0+128),w
  3494  00DE  1D03               	btfss	3,2
  3495  00DF  28E1               	goto	u4671
  3496  00E0  28E2               	goto	u4670
  3497  00E1                     u4671:
  3498  00E1  28E7               	goto	l3355
  3499  00E2                     u4670:
  3500  00E2                     l3353:
  3501  00E2  302B               	movlw	43
  3502  00E3  00A0               	movwf	_efgtoa$729^(0+128)
  3503  00E4  3000               	movlw	0
  3504  00E5  00A1               	movwf	(_efgtoa$729^(0+128)+1)
  3505  00E6  28EB               	goto	l3357
  3506  00E7                     l3355:
  3507  00E7  302D               	movlw	45
  3508  00E8  00A0               	movwf	_efgtoa$729^(0+128)
  3509  00E9  3000               	movlw	0
  3510  00EA  00A1               	movwf	(_efgtoa$729^(0+128)+1)
  3511  00EB                     l3357:
  3512  00EB  0820               	movf	_efgtoa$729^(0+128),w
  3513  00EC  0020               	movlb	0	; select bank0
  3514  00ED  00ED               	movwf	??_efgtoa
  3515  00EE  086D               	movf	??_efgtoa,w
  3516  00EF  0024               	movlb	4	; select bank4
  3517  00F0  00A0               	movwf	_dbuf^(0+512)
  3518  00F1                     l3359:
  3519                           
  3520                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 351:         ++n;
  3521  00F1  3001               	movlw	1
  3522  00F2  0021               	movlb	1	; select bank1
  3523  00F3  07CD               	addwf	efgtoa@n^(0+128),f
  3524  00F4  3000               	movlw	0
  3525  00F5  3DCE               	addwfc	(efgtoa@n+1)^(0+128),f
  3526  00F6                     l3361:
  3527                           
  3528                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 352:         --w;
  3529  00F6  30FF               	movlw	255
  3530  00F7  07B9               	addwf	efgtoa@w^(0+128),f
  3531  00F8  30FF               	movlw	255
  3532  00F9  3DBA               	addwfc	(efgtoa@w+1)^(0+128),f
  3533  00FA                     l3363:
  3534                           
  3535                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 356:     if (( __
      +                          fpclassifyf(g) == 1 )) {
  3536  00FA  084A               	movf	(efgtoa@g+3)^(0+128),w
  3537  00FB  00F3               	movwf	___fpclassifyf@x+3
  3538  00FC  0849               	movf	(efgtoa@g+2)^(0+128),w
  3539  00FD  00F2               	movwf	___fpclassifyf@x+2
  3540  00FE  0848               	movf	(efgtoa@g+1)^(0+128),w
  3541  00FF  00F1               	movwf	___fpclassifyf@x+1
  3542  0100  0847               	movf	efgtoa@g^(0+128),w
  3543  0101  00F0               	movwf	___fpclassifyf@x
  3544  0102  3192  2252  3180   	fcall	___fpclassifyf
  3545  0105  0370               	decf	?___fpclassifyf,w
  3546  0106  0471               	iorwf	?___fpclassifyf+1,w
  3547  0107  1D03               	btfss	3,2
  3548  0108  290A               	goto	u4681
  3549  0109  290B               	goto	u4680
  3550  010A                     u4681:
  3551  010A  294E               	goto	l3381
  3552  010B                     u4680:
  3553  010B                     l3369:
  3554  010B  0020               	movlb	0	; select bank0
  3555  010C  086C               	movf	efgtoa@c,w
  3556  010D  3EBF               	addlw	191
  3557  010E  00ED               	movwf	??_efgtoa
  3558  010F  30FF               	movlw	255
  3559  0110  1803               	skipnc
  3560  0111  3000               	movlw	0
  3561  0112  00EE               	movwf	??_efgtoa+1
  3562  0113  3000               	movlw	0
  3563  0114  026E               	subwf	??_efgtoa+1,w
  3564  0115  301A               	movlw	26
  3565  0116  1903               	skipnz
  3566  0117  026D               	subwf	??_efgtoa,w
  3567  0118  1803               	skipnc
  3568  0119  291B               	goto	u4691
  3569  011A  291C               	goto	u4690
  3570  011B                     u4691:
  3571  011B  2927               	goto	l3373
  3572  011C                     u4690:
  3573  011C                     l3371:
  3574                           
  3575                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 358:             
      +                          strcpy(&dbuf[n], "INF");
  3576  011C  301B               	movlw	low (STR_5| (0+32768))
  3577  011D  00F0               	movwf	strcpy@src
  3578  011E  3098               	movlw	high (STR_5| (0+32768))
  3579  011F  00F1               	movwf	strcpy@src+1
  3580  0120  0021               	movlb	1	; select bank1
  3581  0121  084D               	movf	efgtoa@n^(0+128),w
  3582  0122  3E20               	addlw	(low (_dbuf| (0+512)))& (0+255)
  3583  0123  319E  26C3  3180   	fcall	_strcpy
  3584                           
  3585                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 359:         } el
      +                          se {
  3586  0126  2931               	goto	l3375
  3587  0127                     l3373:
  3588                           
  3589                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 360:             
      +                          strcpy(&dbuf[n], "inf");
  3590  0127  3023               	movlw	low (STR_6| (0+32768))
  3591  0128  00F0               	movwf	strcpy@src
  3592  0129  3098               	movlw	high (STR_6| (0+32768))
  3593  012A  00F1               	movwf	strcpy@src+1
  3594  012B  0021               	movlb	1	; select bank1
  3595  012C  084D               	movf	efgtoa@n^(0+128),w
  3596  012D  3E20               	addlw	(low (_dbuf| (0+512)))& (0+255)
  3597  012E  319E  26C3  3180   	fcall	_strcpy
  3598  0131                     l3375:
  3599                           
  3600                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 362:         w -=
      +                           ((sizeof("inf")/sizeof("inf"[0]))-1);
  3601  0131  30FD               	movlw	253
  3602  0132  0021               	movlb	1	; select bank1
  3603  0133  07B9               	addwf	efgtoa@w^(0+128),f
  3604  0134  30FF               	movlw	255
  3605  0135  3DBA               	addwfc	(efgtoa@w+1)^(0+128),f
  3606  0136                     l3377:
  3607                           
  3608                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 363:         retu
      +                          rn pad(fp, &dbuf[0], w);
  3609  0136  3020               	movlw	(low (_dbuf| (0+512)))& (0+255)
  3610  0137  0020               	movlb	0	; select bank0
  3611  0138  00ED               	movwf	??_efgtoa
  3612  0139  086D               	movf	??_efgtoa,w
  3613  013A  00A4               	movwf	pad@buf
  3614  013B  0021               	movlb	1	; select bank1
  3615  013C  083A               	movf	(efgtoa@w+1)^(0+128),w
  3616  013D  0020               	movlb	0	; select bank0
  3617  013E  00A6               	movwf	pad@p+1
  3618  013F  0021               	movlb	1	; select bank1
  3619  0140  0839               	movf	efgtoa@w^(0+128),w
  3620  0141  0020               	movlb	0	; select bank0
  3621  0142  00A5               	movwf	pad@p
  3622  0143  0021               	movlb	1	; select bank1
  3623  0144  0836               	movf	efgtoa@fp^(0+128),w
  3624  0145  3191  2139  3180   	fcall	_pad
  3625  0148  0020               	movlb	0	; select bank0
  3626  0149  0825               	movf	?_pad+1,w
  3627  014A  00E9               	movwf	?_efgtoa+1
  3628  014B  0824               	movf	?_pad,w
  3629  014C  00E8               	movwf	?_efgtoa
  3630  014D  2FD8               	goto	l711
  3631  014E                     l3381:
  3632                           
  3633                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 365:     if (( __
      +                          fpclassifyf(g) == 0 )) {
  3634  014E  0021               	movlb	1	; select bank1
  3635  014F  084A               	movf	(efgtoa@g+3)^(0+128),w
  3636  0150  00F3               	movwf	___fpclassifyf@x+3
  3637  0151  0849               	movf	(efgtoa@g+2)^(0+128),w
  3638  0152  00F2               	movwf	___fpclassifyf@x+2
  3639  0153  0848               	movf	(efgtoa@g+1)^(0+128),w
  3640  0154  00F1               	movwf	___fpclassifyf@x+1
  3641  0155  0847               	movf	efgtoa@g^(0+128),w
  3642  0156  00F0               	movwf	___fpclassifyf@x
  3643  0157  3192  2252  3180   	fcall	___fpclassifyf
  3644  015A  0870               	movf	?___fpclassifyf,w
  3645  015B  0471               	iorwf	?___fpclassifyf+1,w
  3646  015C  1D03               	btfss	3,2
  3647  015D  295F               	goto	u4701
  3648  015E  2960               	goto	u4700
  3649  015F                     u4701:
  3650  015F  29A3               	goto	l3399
  3651  0160                     u4700:
  3652  0160                     l3387:
  3653  0160  0020               	movlb	0	; select bank0
  3654  0161  086C               	movf	efgtoa@c,w
  3655  0162  3EBF               	addlw	191
  3656  0163  00ED               	movwf	??_efgtoa
  3657  0164  30FF               	movlw	255
  3658  0165  1803               	skipnc
  3659  0166  3000               	movlw	0
  3660  0167  00EE               	movwf	??_efgtoa+1
  3661  0168  3000               	movlw	0
  3662  0169  026E               	subwf	??_efgtoa+1,w
  3663  016A  301A               	movlw	26
  3664  016B  1903               	skipnz
  3665  016C  026D               	subwf	??_efgtoa,w
  3666  016D  1803               	skipnc
  3667  016E  2970               	goto	u4711
  3668  016F  2971               	goto	u4710
  3669  0170                     u4711:
  3670  0170  297C               	goto	l3391
  3671  0171                     u4710:
  3672  0171                     l3389:
  3673                           
  3674                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 367:             
      +                          strcpy(&dbuf[n], "NAN");
  3675  0171  301F               	movlw	low (STR_9| (0+32768))
  3676  0172  00F0               	movwf	strcpy@src
  3677  0173  3098               	movlw	high (STR_9| (0+32768))
  3678  0174  00F1               	movwf	strcpy@src+1
  3679  0175  0021               	movlb	1	; select bank1
  3680  0176  084D               	movf	efgtoa@n^(0+128),w
  3681  0177  3E20               	addlw	(low (_dbuf| (0+512)))& (0+255)
  3682  0178  319E  26C3  3180   	fcall	_strcpy
  3683                           
  3684                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 368:         } el
      +                          se {
  3685  017B  2986               	goto	l3393
  3686  017C                     l3391:
  3687                           
  3688                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 369:             
      +                          strcpy(&dbuf[n], "nan");
  3689  017C  3027               	movlw	low (STR_10| (0+32768))
  3690  017D  00F0               	movwf	strcpy@src
  3691  017E  3098               	movlw	high (STR_10| (0+32768))
  3692  017F  00F1               	movwf	strcpy@src+1
  3693  0180  0021               	movlb	1	; select bank1
  3694  0181  084D               	movf	efgtoa@n^(0+128),w
  3695  0182  3E20               	addlw	(low (_dbuf| (0+512)))& (0+255)
  3696  0183  319E  26C3  3180   	fcall	_strcpy
  3697  0186                     l3393:
  3698                           
  3699                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 371:         w -=
      +                           ((sizeof("inf")/sizeof("inf"[0]))-1);
  3700  0186  30FD               	movlw	253
  3701  0187  0021               	movlb	1	; select bank1
  3702  0188  07B9               	addwf	efgtoa@w^(0+128),f
  3703  0189  30FF               	movlw	255
  3704  018A  3DBA               	addwfc	(efgtoa@w+1)^(0+128),f
  3705  018B                     l3395:
  3706                           
  3707                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 372:         retu
      +                          rn pad(fp, &dbuf[0], w);
  3708  018B  3020               	movlw	(low (_dbuf| (0+512)))& (0+255)
  3709  018C  0020               	movlb	0	; select bank0
  3710  018D  00ED               	movwf	??_efgtoa
  3711  018E  086D               	movf	??_efgtoa,w
  3712  018F  00A4               	movwf	pad@buf
  3713  0190  0021               	movlb	1	; select bank1
  3714  0191  083A               	movf	(efgtoa@w+1)^(0+128),w
  3715  0192  0020               	movlb	0	; select bank0
  3716  0193  00A6               	movwf	pad@p+1
  3717  0194  0021               	movlb	1	; select bank1
  3718  0195  0839               	movf	efgtoa@w^(0+128),w
  3719  0196  0020               	movlb	0	; select bank0
  3720  0197  00A5               	movwf	pad@p
  3721  0198  0021               	movlb	1	; select bank1
  3722  0199  0836               	movf	efgtoa@fp^(0+128),w
  3723  019A  3191  2139  3180   	fcall	_pad
  3724  019D  0020               	movlb	0	; select bank0
  3725  019E  0825               	movf	?_pad+1,w
  3726  019F  00E9               	movwf	?_efgtoa+1
  3727  01A0  0824               	movf	?_pad,w
  3728  01A1  00E8               	movwf	?_efgtoa
  3729  01A2  2FD8               	goto	l711
  3730  01A3                     l3399:
  3731                           
  3732                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 376:     u = 1.0;
  3733  01A3  303F               	movlw	63
  3734  01A4  0021               	movlb	1	; select bank1
  3735  01A5  00D2               	movwf	(efgtoa@u+3)^(0+128)
  3736  01A6  3080               	movlw	128
  3737  01A7  00D1               	movwf	(efgtoa@u+2)^(0+128)
  3738  01A8  3000               	movlw	0
  3739  01A9  00D0               	movwf	(efgtoa@u+1)^(0+128)
  3740  01AA  3000               	movlw	0
  3741  01AB  00CF               	movwf	efgtoa@u^(0+128)
  3742  01AC                     l3401:
  3743                           
  3744                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 377:     e = 0;
  3745  01AC  01CB               	clrf	efgtoa@e^(0+128)
  3746  01AD  01CC               	clrf	(efgtoa@e+1)^(0+128)
  3747  01AE                     l3403:
  3748                           
  3749                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 378:     if (!(g 
      +                          == 0.0)) {
  3750  01AE  084A               	movf	(efgtoa@g+3)^(0+128),w
  3751  01AF  00F3               	movwf	___fleq@ff1+3
  3752  01B0  0849               	movf	(efgtoa@g+2)^(0+128),w
  3753  01B1  00F2               	movwf	___fleq@ff1+2
  3754  01B2  0848               	movf	(efgtoa@g+1)^(0+128),w
  3755  01B3  00F1               	movwf	___fleq@ff1+1
  3756  01B4  0847               	movf	efgtoa@g^(0+128),w
  3757  01B5  00F0               	movwf	___fleq@ff1
  3758  01B6  3000               	movlw	0
  3759  01B7  00F7               	movwf	___fleq@ff2+3
  3760  01B8  3000               	movlw	0
  3761  01B9  00F6               	movwf	___fleq@ff2+2
  3762  01BA  3000               	movlw	0
  3763  01BB  00F5               	movwf	___fleq@ff2+1
  3764  01BC  3000               	movlw	0
  3765  01BD  00F4               	movwf	___fleq@ff2
  3766  01BE  319F  275F  3180   	fcall	___fleq
  3767  01C1  1803               	btfsc	3,0
  3768  01C2  29C4               	goto	u4721
  3769  01C3  29C5               	goto	u4720
  3770  01C4                     u4721:
  3771  01C4  2A89               	goto	l3419
  3772  01C5                     u4720:
  3773  01C5  29F6               	goto	l3411
  3774  01C6                     l3407:
  3775                           
  3776                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 380:             
      +                          u = u*10.0;
  3777  01C6  3041               	movlw	65
  3778  01C7  0020               	movlb	0	; select bank0
  3779  01C8  00A3               	movwf	___flmul@b+3
  3780  01C9  3020               	movlw	32
  3781  01CA  00A2               	movwf	___flmul@b+2
  3782  01CB  3000               	movlw	0
  3783  01CC  00A1               	movwf	___flmul@b+1
  3784  01CD  3000               	movlw	0
  3785  01CE  00A0               	movwf	___flmul@b
  3786  01CF  0021               	movlb	1	; select bank1
  3787  01D0  0852               	movf	(efgtoa@u+3)^(0+128),w
  3788  01D1  0020               	movlb	0	; select bank0
  3789  01D2  00A7               	movwf	___flmul@a+3
  3790  01D3  0021               	movlb	1	; select bank1
  3791  01D4  0851               	movf	(efgtoa@u+2)^(0+128),w
  3792  01D5  0020               	movlb	0	; select bank0
  3793  01D6  00A6               	movwf	___flmul@a+2
  3794  01D7  0021               	movlb	1	; select bank1
  3795  01D8  0850               	movf	(efgtoa@u+1)^(0+128),w
  3796  01D9  0020               	movlb	0	; select bank0
  3797  01DA  00A5               	movwf	___flmul@a+1
  3798  01DB  0021               	movlb	1	; select bank1
  3799  01DC  084F               	movf	efgtoa@u^(0+128),w
  3800  01DD  0020               	movlb	0	; select bank0
  3801  01DE  00A4               	movwf	___flmul@a
  3802  01DF  318B  2321  3180   	fcall	___flmul
  3803  01E2  0020               	movlb	0	; select bank0
  3804  01E3  0823               	movf	?___flmul+3,w
  3805  01E4  0021               	movlb	1	; select bank1
  3806  01E5  00D2               	movwf	(efgtoa@u+3)^(0+128)
  3807  01E6  0020               	movlb	0	; select bank0
  3808  01E7  0822               	movf	?___flmul+2,w
  3809  01E8  0021               	movlb	1	; select bank1
  3810  01E9  00D1               	movwf	(efgtoa@u+2)^(0+128)
  3811  01EA  0020               	movlb	0	; select bank0
  3812  01EB  0821               	movf	?___flmul+1,w
  3813  01EC  0021               	movlb	1	; select bank1
  3814  01ED  00D0               	movwf	(efgtoa@u+1)^(0+128)
  3815  01EE  0020               	movlb	0	; select bank0
  3816  01EF  0820               	movf	?___flmul,w
  3817  01F0  0021               	movlb	1	; select bank1
  3818  01F1  00CF               	movwf	efgtoa@u^(0+128)
  3819  01F2                     l3409:
  3820                           
  3821                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 381:             
      +                          ++e;
  3822  01F2  3001               	movlw	1
  3823  01F3  07CB               	addwf	efgtoa@e^(0+128),f
  3824  01F4  3000               	movlw	0
  3825  01F5  3DCC               	addwfc	(efgtoa@e+1)^(0+128),f
  3826  01F6                     l3411:
  3827                           
  3828                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 379:         whil
      +                          e (!(g < (u*10.0))) {
  3829  01F6  0021               	movlb	1	; select bank1
  3830  01F7  084A               	movf	(efgtoa@g+3)^(0+128),w
  3831  01F8  0020               	movlb	0	; select bank0
  3832  01F9  00BD               	movwf	___flge@ff1+3
  3833  01FA  0021               	movlb	1	; select bank1
  3834  01FB  0849               	movf	(efgtoa@g+2)^(0+128),w
  3835  01FC  0020               	movlb	0	; select bank0
  3836  01FD  00BC               	movwf	___flge@ff1+2
  3837  01FE  0021               	movlb	1	; select bank1
  3838  01FF  0848               	movf	(efgtoa@g+1)^(0+128),w
  3839  0200  0020               	movlb	0	; select bank0
  3840  0201  00BB               	movwf	___flge@ff1+1
  3841  0202  0021               	movlb	1	; select bank1
  3842  0203  0847               	movf	efgtoa@g^(0+128),w
  3843  0204  0020               	movlb	0	; select bank0
  3844  0205  00BA               	movwf	___flge@ff1
  3845  0206  3041               	movlw	65
  3846  0207  00A3               	movwf	___flmul@b+3
  3847  0208  3020               	movlw	32
  3848  0209  00A2               	movwf	___flmul@b+2
  3849  020A  3000               	movlw	0
  3850  020B  00A1               	movwf	___flmul@b+1
  3851  020C  3000               	movlw	0
  3852  020D  00A0               	movwf	___flmul@b
  3853  020E  0021               	movlb	1	; select bank1
  3854  020F  0852               	movf	(efgtoa@u+3)^(0+128),w
  3855  0210  0020               	movlb	0	; select bank0
  3856  0211  00A7               	movwf	___flmul@a+3
  3857  0212  0021               	movlb	1	; select bank1
  3858  0213  0851               	movf	(efgtoa@u+2)^(0+128),w
  3859  0214  0020               	movlb	0	; select bank0
  3860  0215  00A6               	movwf	___flmul@a+2
  3861  0216  0021               	movlb	1	; select bank1
  3862  0217  0850               	movf	(efgtoa@u+1)^(0+128),w
  3863  0218  0020               	movlb	0	; select bank0
  3864  0219  00A5               	movwf	___flmul@a+1
  3865  021A  0021               	movlb	1	; select bank1
  3866  021B  084F               	movf	efgtoa@u^(0+128),w
  3867  021C  0020               	movlb	0	; select bank0
  3868  021D  00A4               	movwf	___flmul@a
  3869  021E  318B  2321  3180   	fcall	___flmul
  3870  0221  0020               	movlb	0	; select bank0
  3871  0222  0823               	movf	?___flmul+3,w
  3872  0223  00C1               	movwf	___flge@ff2+3
  3873  0224  0822               	movf	?___flmul+2,w
  3874  0225  00C0               	movwf	___flge@ff2+2
  3875  0226  0821               	movf	?___flmul+1,w
  3876  0227  00BF               	movwf	___flge@ff2+1
  3877  0228  0820               	movf	?___flmul,w
  3878  0229  00BE               	movwf	___flge@ff2
  3879  022A  3192  22D1  3180   	fcall	___flge
  3880  022D  1803               	btfsc	3,0
  3881  022E  2A30               	goto	u4731
  3882  022F  2A31               	goto	u4730
  3883  0230                     u4731:
  3884  0230  29C6               	goto	l3407
  3885  0231                     u4730:
  3886  0231  2A62               	goto	l3417
  3887  0232                     l3413:
  3888                           
  3889                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 384:             
      +                          u = u/10.0;
  3890  0232  3041               	movlw	65
  3891  0233  0020               	movlb	0	; select bank0
  3892  0234  00BD               	movwf	___fldiv@a+3
  3893  0235  3020               	movlw	32
  3894  0236  00BC               	movwf	___fldiv@a+2
  3895  0237  3000               	movlw	0
  3896  0238  00BB               	movwf	___fldiv@a+1
  3897  0239  3000               	movlw	0
  3898  023A  00BA               	movwf	___fldiv@a
  3899  023B  0021               	movlb	1	; select bank1
  3900  023C  0852               	movf	(efgtoa@u+3)^(0+128),w
  3901  023D  0020               	movlb	0	; select bank0
  3902  023E  00C1               	movwf	___fldiv@b+3
  3903  023F  0021               	movlb	1	; select bank1
  3904  0240  0851               	movf	(efgtoa@u+2)^(0+128),w
  3905  0241  0020               	movlb	0	; select bank0
  3906  0242  00C0               	movwf	___fldiv@b+2
  3907  0243  0021               	movlb	1	; select bank1
  3908  0244  0850               	movf	(efgtoa@u+1)^(0+128),w
  3909  0245  0020               	movlb	0	; select bank0
  3910  0246  00BF               	movwf	___fldiv@b+1
  3911  0247  0021               	movlb	1	; select bank1
  3912  0248  084F               	movf	efgtoa@u^(0+128),w
  3913  0249  0020               	movlb	0	; select bank0
  3914  024A  00BE               	movwf	___fldiv@b
  3915  024B  3196  264C  3180   	fcall	___fldiv
  3916  024E  0020               	movlb	0	; select bank0
  3917  024F  083D               	movf	?___fldiv+3,w
  3918  0250  0021               	movlb	1	; select bank1
  3919  0251  00D2               	movwf	(efgtoa@u+3)^(0+128)
  3920  0252  0020               	movlb	0	; select bank0
  3921  0253  083C               	movf	?___fldiv+2,w
  3922  0254  0021               	movlb	1	; select bank1
  3923  0255  00D1               	movwf	(efgtoa@u+2)^(0+128)
  3924  0256  0020               	movlb	0	; select bank0
  3925  0257  083B               	movf	?___fldiv+1,w
  3926  0258  0021               	movlb	1	; select bank1
  3927  0259  00D0               	movwf	(efgtoa@u+1)^(0+128)
  3928  025A  0020               	movlb	0	; select bank0
  3929  025B  083A               	movf	?___fldiv,w
  3930  025C  0021               	movlb	1	; select bank1
  3931  025D  00CF               	movwf	efgtoa@u^(0+128)
  3932  025E                     l3415:
  3933                           
  3934                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 385:             
      +                          --e;
  3935  025E  30FF               	movlw	255
  3936  025F  07CB               	addwf	efgtoa@e^(0+128),f
  3937  0260  30FF               	movlw	255
  3938  0261  3DCC               	addwfc	(efgtoa@e+1)^(0+128),f
  3939  0262                     l3417:
  3940                           
  3941                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 383:         whil
      +                          e (g < u) {
  3942  0262  0021               	movlb	1	; select bank1
  3943  0263  084A               	movf	(efgtoa@g+3)^(0+128),w
  3944  0264  0020               	movlb	0	; select bank0
  3945  0265  00BD               	movwf	___flge@ff1+3
  3946  0266  0021               	movlb	1	; select bank1
  3947  0267  0849               	movf	(efgtoa@g+2)^(0+128),w
  3948  0268  0020               	movlb	0	; select bank0
  3949  0269  00BC               	movwf	___flge@ff1+2
  3950  026A  0021               	movlb	1	; select bank1
  3951  026B  0848               	movf	(efgtoa@g+1)^(0+128),w
  3952  026C  0020               	movlb	0	; select bank0
  3953  026D  00BB               	movwf	___flge@ff1+1
  3954  026E  0021               	movlb	1	; select bank1
  3955  026F  0847               	movf	efgtoa@g^(0+128),w
  3956  0270  0020               	movlb	0	; select bank0
  3957  0271  00BA               	movwf	___flge@ff1
  3958  0272  0021               	movlb	1	; select bank1
  3959  0273  0852               	movf	(efgtoa@u+3)^(0+128),w
  3960  0274  0020               	movlb	0	; select bank0
  3961  0275  00C1               	movwf	___flge@ff2+3
  3962  0276  0021               	movlb	1	; select bank1
  3963  0277  0851               	movf	(efgtoa@u+2)^(0+128),w
  3964  0278  0020               	movlb	0	; select bank0
  3965  0279  00C0               	movwf	___flge@ff2+2
  3966  027A  0021               	movlb	1	; select bank1
  3967  027B  0850               	movf	(efgtoa@u+1)^(0+128),w
  3968  027C  0020               	movlb	0	; select bank0
  3969  027D  00BF               	movwf	___flge@ff2+1
  3970  027E  0021               	movlb	1	; select bank1
  3971  027F  084F               	movf	efgtoa@u^(0+128),w
  3972  0280  0020               	movlb	0	; select bank0
  3973  0281  00BE               	movwf	___flge@ff2
  3974  0282  3192  22D1  3180   	fcall	___flge
  3975  0285  1C03               	btfss	3,0
  3976  0286  2A88               	goto	u4741
  3977  0287  2A89               	goto	u4740
  3978  0288                     u4741:
  3979  0288  2A32               	goto	l3413
  3980  0289                     u4740:
  3981  0289                     l3419:
  3982                           
  3983                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 390:     mode = (
      +                          char)tolower((int)c);
  3984  0289  0020               	movlb	0	; select bank0
  3985  028A  086C               	movf	efgtoa@c,w
  3986  028B  00ED               	movwf	??_efgtoa
  3987  028C  01EE               	clrf	??_efgtoa+1
  3988  028D  086D               	movf	??_efgtoa,w
  3989  028E  00F6               	movwf	tolower@c
  3990  028F  086E               	movf	??_efgtoa+1,w
  3991  0290  00F7               	movwf	tolower@c+1
  3992  0291  319D  2587  3180   	fcall	_tolower
  3993  0294  0876               	movf	?_tolower,w
  3994  0295  0020               	movlb	0	; select bank0
  3995  0296  00EF               	movwf	??_efgtoa+2
  3996  0297  086F               	movf	??_efgtoa+2,w
  3997  0298  0021               	movlb	1	; select bank1
  3998  0299  00BC               	movwf	efgtoa@mode^(0+128)
  3999  029A                     l3421:
  4000                           
  4001                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 391:     nmode = 
      +                          mode;
  4002  029A  083C               	movf	efgtoa@mode^(0+128),w
  4003  029B  0020               	movlb	0	; select bank0
  4004  029C  00ED               	movwf	??_efgtoa
  4005  029D  086D               	movf	??_efgtoa,w
  4006  029E  0021               	movlb	1	; select bank1
  4007  029F  00BB               	movwf	efgtoa@nmode^(0+128)
  4008  02A0                     l3423:
  4009                           
  4010                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 392:     if (mode
      +                           == 'g') {
  4011  02A0  3067               	movlw	103
  4012  02A1  063C               	xorwf	efgtoa@mode^(0+128),w
  4013  02A2  1D03               	btfss	3,2
  4014  02A3  2AA5               	goto	u4751
  4015  02A4  2AA6               	goto	u4750
  4016  02A5                     u4751:
  4017  02A5  2ACF               	goto	l724
  4018  02A6                     u4750:
  4019  02A6                     l3425:
  4020                           
  4021                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 393:   if (prec =
      +                          = 0) {
  4022  02A6  0022               	movlb	2	; select bank2
  4023  02A7  086B               	movf	_prec^(0+256),w
  4024  02A8  046C               	iorwf	(_prec+1)^(0+256),w
  4025  02A9  1D03               	btfss	3,2
  4026  02AA  2AAC               	goto	u4761
  4027  02AB  2AAD               	goto	u4760
  4028  02AC                     u4761:
  4029  02AC  2AB1               	goto	l725
  4030  02AD                     u4760:
  4031  02AD                     l3427:
  4032                           
  4033                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 394:    prec = 1;
  4034  02AD  3001               	movlw	1
  4035  02AE  00EB               	movwf	_prec^(0+256)
  4036  02AF  3000               	movlw	0
  4037  02B0  00EC               	movwf	(_prec^(0+256)+1)
  4038  02B1                     l725:	
  4039                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 395:   }
  4040                           
  4041                           
  4042                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 396:         p = 
      +                          (0 < prec) ? prec : 6;
  4043  02B1  086C               	movf	(_prec+1)^(0+256),w
  4044  02B2  3A80               	xorlw	128
  4045  02B3  0020               	movlb	0	; select bank0
  4046  02B4  00ED               	movwf	??_efgtoa
  4047  02B5  3080               	movlw	128
  4048  02B6  026D               	subwf	??_efgtoa,w
  4049  02B7  1D03               	skipz
  4050  02B8  2ABC               	goto	u4775
  4051  02B9  3001               	movlw	1
  4052  02BA  0022               	movlb	2	; select bank2
  4053  02BB  026B               	subwf	_prec^(0+256),w
  4054  02BC                     u4775:
  4055  02BC  1803               	skipnc
  4056  02BD  2ABF               	goto	u4771
  4057  02BE  2AC0               	goto	u4770
  4058  02BF                     u4771:
  4059  02BF  2AC6               	goto	l3431
  4060  02C0                     u4770:
  4061  02C0                     l3429:
  4062  02C0  3006               	movlw	6
  4063  02C1  0021               	movlb	1	; select bank1
  4064  02C2  00B7               	movwf	efgtoa@p^(0+128)
  4065  02C3  3000               	movlw	0
  4066  02C4  00B8               	movwf	(efgtoa@p^(0+128)+1)
  4067  02C5  2AD5               	goto	l3437
  4068  02C6                     l3431:
  4069  02C6  0022               	movlb	2	; select bank2
  4070  02C7  086C               	movf	(_prec+1)^(0+256),w
  4071  02C8  0021               	movlb	1	; select bank1
  4072  02C9  00B8               	movwf	(efgtoa@p+1)^(0+128)
  4073  02CA  0022               	movlb	2	; select bank2
  4074  02CB  086B               	movf	_prec^(0+256),w
  4075  02CC  0021               	movlb	1	; select bank1
  4076  02CD  00B7               	movwf	efgtoa@p^(0+128)
  4077  02CE  2AD5               	goto	l3437
  4078  02CF                     l724:
  4079                           
  4080                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 398:         p = 
      +                          (prec < 0) ? 6 : prec;
  4081  02CF  0022               	movlb	2	; select bank2
  4082  02D0  1BEC               	btfsc	(_prec+1)^(0+256),7
  4083  02D1  2AD3               	goto	u4781
  4084  02D2  2AD4               	goto	u4780
  4085  02D3                     u4781:
  4086  02D3  2AC0               	goto	l3429
  4087  02D4                     u4780:
  4088  02D4  2AC6               	goto	l3431
  4089  02D5                     l3437:
  4090                           
  4091                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 402:     if (mode
      +                           == 'g') {
  4092  02D5  3067               	movlw	103
  4093  02D6  063C               	xorwf	efgtoa@mode^(0+128),w
  4094  02D7  1D03               	btfss	3,2
  4095  02D8  2ADA               	goto	u4791
  4096  02D9  2ADB               	goto	u4790
  4097  02DA                     u4791:
  4098  02DA  2B13               	goto	l735
  4099  02DB                     u4790:
  4100  02DB                     l3439:
  4101                           
  4102                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 403:         if (
      +                          !(e < -4) && !((p - 1) < e)) {
  4103  02DB  084C               	movf	(efgtoa@e+1)^(0+128),w
  4104  02DC  3A80               	xorlw	128
  4105  02DD  0020               	movlb	0	; select bank0
  4106  02DE  00ED               	movwf	??_efgtoa
  4107  02DF  307F               	movlw	127
  4108  02E0  026D               	subwf	??_efgtoa,w
  4109  02E1  1D03               	skipz
  4110  02E2  2AE6               	goto	u4805
  4111  02E3  30FC               	movlw	252
  4112  02E4  0021               	movlb	1	; select bank1
  4113  02E5  024B               	subwf	efgtoa@e^(0+128),w
  4114  02E6                     u4805:
  4115  02E6  1C03               	skipc
  4116  02E7  2AE9               	goto	u4801
  4117  02E8  2AEA               	goto	u4800
  4118  02E9                     u4801:
  4119  02E9  2B0D               	goto	l3445
  4120  02EA                     u4800:
  4121  02EA                     l3441:
  4122  02EA  0021               	movlb	1	; select bank1
  4123  02EB  0837               	movf	efgtoa@p^(0+128),w
  4124  02EC  3EFF               	addlw	255
  4125  02ED  0020               	movlb	0	; select bank0
  4126  02EE  00ED               	movwf	??_efgtoa
  4127  02EF  30FF               	movlw	255
  4128  02F0  0021               	movlb	1	; select bank1
  4129  02F1  3D38               	addwfc	(efgtoa@p+1)^(0+128),w
  4130  02F2  0020               	movlb	0	; select bank0
  4131  02F3  00EE               	movwf	??_efgtoa+1
  4132  02F4  086E               	movf	??_efgtoa+1,w
  4133  02F5  3A80               	xorlw	128
  4134  02F6  00EF               	movwf	??_efgtoa+2
  4135  02F7  0021               	movlb	1	; select bank1
  4136  02F8  084C               	movf	(efgtoa@e+1)^(0+128),w
  4137  02F9  3A80               	xorlw	128
  4138  02FA  0020               	movlb	0	; select bank0
  4139  02FB  026F               	subwf	??_efgtoa+2,w
  4140  02FC  1D03               	skipz
  4141  02FD  2B02               	goto	u4815
  4142  02FE  0021               	movlb	1	; select bank1
  4143  02FF  084B               	movf	efgtoa@e^(0+128),w
  4144  0300  0020               	movlb	0	; select bank0
  4145  0301  026D               	subwf	??_efgtoa,w
  4146  0302                     u4815:
  4147  0302  1C03               	skipc
  4148  0303  2B05               	goto	u4811
  4149  0304  2B06               	goto	u4810
  4150  0305                     u4811:
  4151  0305  2B0D               	goto	l3445
  4152  0306                     u4810:
  4153  0306                     l3443:
  4154                           
  4155                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 404:             
      +                          nmode = 'f';
  4156  0306  3066               	movlw	102
  4157  0307  0020               	movlb	0	; select bank0
  4158  0308  00ED               	movwf	??_efgtoa
  4159  0309  086D               	movf	??_efgtoa,w
  4160  030A  0021               	movlb	1	; select bank1
  4161  030B  00BB               	movwf	efgtoa@nmode^(0+128)
  4162                           
  4163                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 405:         } el
      +                          se {
  4164  030C  2B13               	goto	l735
  4165  030D                     l3445:
  4166                           
  4167                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 406:             
      +                          nmode = 'e';
  4168  030D  3065               	movlw	101
  4169  030E  0020               	movlb	0	; select bank0
  4170  030F  00ED               	movwf	??_efgtoa
  4171  0310  086D               	movf	??_efgtoa,w
  4172  0311  0021               	movlb	1	; select bank1
  4173  0312  00BB               	movwf	efgtoa@nmode^(0+128)
  4174  0313                     l735:	
  4175                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 408:     }
  4176                           
  4177                           
  4178                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 411:     m = p;
  4179  0313  0838               	movf	(efgtoa@p+1)^(0+128),w
  4180  0314  00AD               	movwf	(efgtoa@m+1)^(0+128)
  4181  0315  0837               	movf	efgtoa@p^(0+128),w
  4182  0316  00AC               	movwf	efgtoa@m^(0+128)
  4183  0317                     l3447:
  4184                           
  4185                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 412:     if (!(mo
      +                          de == 'g') || ((nmode == 'f') && (e < 0))) {
  4186  0317  3067               	movlw	103
  4187  0318  063C               	xorwf	efgtoa@mode^(0+128),w
  4188  0319  1D03               	btfss	3,2
  4189  031A  2B1C               	goto	u4821
  4190  031B  2B1D               	goto	u4820
  4191  031C                     u4821:
  4192  031C  2B27               	goto	l3453
  4193  031D                     u4820:
  4194  031D                     l3449:
  4195  031D  3066               	movlw	102
  4196  031E  063B               	xorwf	efgtoa@nmode^(0+128),w
  4197  031F  1D03               	btfss	3,2
  4198  0320  2B22               	goto	u4831
  4199  0321  2B23               	goto	u4830
  4200  0322                     u4831:
  4201  0322  2B2B               	goto	l3455
  4202  0323                     u4830:
  4203  0323                     l3451:
  4204  0323  1FCC               	btfss	(efgtoa@e+1)^(0+128),7
  4205  0324  2B26               	goto	u4841
  4206  0325  2B27               	goto	u4840
  4207  0326                     u4841:
  4208  0326  2B2B               	goto	l3455
  4209  0327                     u4840:
  4210  0327                     l3453:
  4211                           
  4212                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 413:         ++m;
  4213  0327  3001               	movlw	1
  4214  0328  07AC               	addwf	efgtoa@m^(0+128),f
  4215  0329  3000               	movlw	0
  4216  032A  3DAD               	addwfc	(efgtoa@m+1)^(0+128),f
  4217  032B                     l3455:
  4218                           
  4219                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 417:     if (nmod
      +                          e == 'f') {
  4220  032B  3066               	movlw	102
  4221  032C  063B               	xorwf	efgtoa@nmode^(0+128),w
  4222  032D  1D03               	btfss	3,2
  4223  032E  2B30               	goto	u4851
  4224  032F  2B31               	goto	u4850
  4225  0330                     u4851:
  4226  0330  2B49               	goto	l3467
  4227  0331                     u4850:
  4228  0331                     l3457:
  4229                           
  4230                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 418:         if (
      +                          e < 0) {
  4231  0331  1FCC               	btfss	(efgtoa@e+1)^(0+128),7
  4232  0332  2B34               	goto	u4861
  4233  0333  2B35               	goto	u4860
  4234  0334                     u4861:
  4235  0334  2B3F               	goto	l3463
  4236  0335                     u4860:
  4237  0335                     l3459:
  4238                           
  4239                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 419:             
      +                          u = 1.0;
  4240  0335  303F               	movlw	63
  4241  0336  00D2               	movwf	(efgtoa@u+3)^(0+128)
  4242  0337  3080               	movlw	128
  4243  0338  00D1               	movwf	(efgtoa@u+2)^(0+128)
  4244  0339  3000               	movlw	0
  4245  033A  00D0               	movwf	(efgtoa@u+1)^(0+128)
  4246  033B  3000               	movlw	0
  4247  033C  00CF               	movwf	efgtoa@u^(0+128)
  4248  033D                     l3461:
  4249                           
  4250                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 420:             
      +                          e = 0;
  4251  033D  01CB               	clrf	efgtoa@e^(0+128)
  4252  033E  01CC               	clrf	(efgtoa@e+1)^(0+128)
  4253  033F                     l3463:
  4254                           
  4255                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 422:         if (
      +                          !(mode == 'g')) {
  4256  033F  3067               	movlw	103
  4257  0340  063C               	xorwf	efgtoa@mode^(0+128),w
  4258  0341  1903               	btfsc	3,2
  4259  0342  2B44               	goto	u4871
  4260  0343  2B45               	goto	u4870
  4261  0344                     u4871:
  4262  0344  2B49               	goto	l3467
  4263  0345                     u4870:
  4264  0345                     l3465:
  4265                           
  4266                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 423:             
      +                          m += e;
  4267  0345  084B               	movf	efgtoa@e^(0+128),w
  4268  0346  07AC               	addwf	efgtoa@m^(0+128),f
  4269  0347  084C               	movf	(efgtoa@e+1)^(0+128),w
  4270  0348  3DAD               	addwfc	(efgtoa@m+1)^(0+128),f
  4271  0349                     l3467:
  4272                           
  4273                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 428:     i = 0;
  4274  0349  01C5               	clrf	efgtoa@i^(0+128)
  4275  034A  01C6               	clrf	(efgtoa@i+1)^(0+128)
  4276  034B                     l3469:
  4277                           
  4278                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 429:     h = g;
  4279  034B  084A               	movf	(efgtoa@g+3)^(0+128),w
  4280  034C  00C0               	movwf	(efgtoa@h+3)^(0+128)
  4281  034D  0849               	movf	(efgtoa@g+2)^(0+128),w
  4282  034E  00BF               	movwf	(efgtoa@h+2)^(0+128)
  4283  034F  0848               	movf	(efgtoa@g+1)^(0+128),w
  4284  0350  00BE               	movwf	(efgtoa@h+1)^(0+128)
  4285  0351  0847               	movf	efgtoa@g^(0+128),w
  4286  0352  00BD               	movwf	efgtoa@h^(0+128)
  4287  0353                     l3471:
  4288                           
  4289                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 430:     ou = u;
  4290  0353  0852               	movf	(efgtoa@u+3)^(0+128),w
  4291  0354  00B1               	movwf	(efgtoa@ou+3)^(0+128)
  4292  0355  0851               	movf	(efgtoa@u+2)^(0+128),w
  4293  0356  00B0               	movwf	(efgtoa@ou+2)^(0+128)
  4294  0357  0850               	movf	(efgtoa@u+1)^(0+128),w
  4295  0358  00AF               	movwf	(efgtoa@ou+1)^(0+128)
  4296  0359  084F               	movf	efgtoa@u^(0+128),w
  4297  035A  00AE               	movwf	efgtoa@ou^(0+128)
  4298                           
  4299                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 431:     while (i
      +                           < m) {
  4300  035B  2C29               	goto	l3477
  4301  035C                     l3473:
  4302                           
  4303                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 432:         l = 
      +                          floorf(h/u);
  4304  035C  0021               	movlb	1	; select bank1
  4305  035D  0852               	movf	(efgtoa@u+3)^(0+128),w
  4306  035E  0020               	movlb	0	; select bank0
  4307  035F  00BD               	movwf	___fldiv@a+3
  4308  0360  0021               	movlb	1	; select bank1
  4309  0361  0851               	movf	(efgtoa@u+2)^(0+128),w
  4310  0362  0020               	movlb	0	; select bank0
  4311  0363  00BC               	movwf	___fldiv@a+2
  4312  0364  0021               	movlb	1	; select bank1
  4313  0365  0850               	movf	(efgtoa@u+1)^(0+128),w
  4314  0366  0020               	movlb	0	; select bank0
  4315  0367  00BB               	movwf	___fldiv@a+1
  4316  0368  0021               	movlb	1	; select bank1
  4317  0369  084F               	movf	efgtoa@u^(0+128),w
  4318  036A  0020               	movlb	0	; select bank0
  4319  036B  00BA               	movwf	___fldiv@a
  4320  036C  0021               	movlb	1	; select bank1
  4321  036D  0840               	movf	(efgtoa@h+3)^(0+128),w
  4322  036E  0020               	movlb	0	; select bank0
  4323  036F  00C1               	movwf	___fldiv@b+3
  4324  0370  0021               	movlb	1	; select bank1
  4325  0371  083F               	movf	(efgtoa@h+2)^(0+128),w
  4326  0372  0020               	movlb	0	; select bank0
  4327  0373  00C0               	movwf	___fldiv@b+2
  4328  0374  0021               	movlb	1	; select bank1
  4329  0375  083E               	movf	(efgtoa@h+1)^(0+128),w
  4330  0376  0020               	movlb	0	; select bank0
  4331  0377  00BF               	movwf	___fldiv@b+1
  4332  0378  0021               	movlb	1	; select bank1
  4333  0379  083D               	movf	efgtoa@h^(0+128),w
  4334  037A  0020               	movlb	0	; select bank0
  4335  037B  00BE               	movwf	___fldiv@b
  4336  037C  3196  264C  3180   	fcall	___fldiv
  4337  037F  0020               	movlb	0	; select bank0
  4338  0380  083D               	movf	?___fldiv+3,w
  4339  0381  00D7               	movwf	floorf@x+3
  4340  0382  083C               	movf	?___fldiv+2,w
  4341  0383  00D6               	movwf	floorf@x+2
  4342  0384  083B               	movf	?___fldiv+1,w
  4343  0385  00D5               	movwf	floorf@x+1
  4344  0386  083A               	movf	?___fldiv,w
  4345  0387  00D4               	movwf	floorf@x
  4346  0388  3193  23F0  3180   	fcall	_floorf
  4347  038B  0020               	movlb	0	; select bank0
  4348  038C  0857               	movf	?_floorf+3,w
  4349  038D  0021               	movlb	1	; select bank1
  4350  038E  00C4               	movwf	(efgtoa@l+3)^(0+128)
  4351  038F  0020               	movlb	0	; select bank0
  4352  0390  0856               	movf	?_floorf+2,w
  4353  0391  0021               	movlb	1	; select bank1
  4354  0392  00C3               	movwf	(efgtoa@l+2)^(0+128)
  4355  0393  0020               	movlb	0	; select bank0
  4356  0394  0855               	movf	?_floorf+1,w
  4357  0395  0021               	movlb	1	; select bank1
  4358  0396  00C2               	movwf	(efgtoa@l+1)^(0+128)
  4359  0397  0020               	movlb	0	; select bank0
  4360  0398  0854               	movf	?_floorf,w
  4361  0399  0021               	movlb	1	; select bank1
  4362  039A  00C1               	movwf	efgtoa@l^(0+128)
  4363                           
  4364                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 433:         d = 
      +                          (int)l;
  4365  039B  0844               	movf	(efgtoa@l+3)^(0+128),w
  4366  039C  00F3               	movwf	___fltol@f1+3
  4367  039D  0843               	movf	(efgtoa@l+2)^(0+128),w
  4368  039E  00F2               	movwf	___fltol@f1+2
  4369  039F  0842               	movf	(efgtoa@l+1)^(0+128),w
  4370  03A0  00F1               	movwf	___fltol@f1+1
  4371  03A1  0841               	movf	efgtoa@l^(0+128),w
  4372  03A2  00F0               	movwf	___fltol@f1
  4373  03A3  3180  2008  3180   	fcall	___fltol
  4374  03A6  0871               	movf	?___fltol+1,w
  4375  03A7  0021               	movlb	1	; select bank1
  4376  03A8  00B3               	movwf	(efgtoa@d+1)^(0+128)
  4377  03A9  0870               	movf	?___fltol,w
  4378  03AA  00B2               	movwf	efgtoa@d^(0+128)
  4379                           
  4380                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 434:         h -=
      +                           l*u;
  4381  03AB  0844               	movf	(efgtoa@l+3)^(0+128),w
  4382  03AC  0020               	movlb	0	; select bank0
  4383  03AD  00A7               	movwf	___flmul@a+3
  4384  03AE  0021               	movlb	1	; select bank1
  4385  03AF  0843               	movf	(efgtoa@l+2)^(0+128),w
  4386  03B0  0020               	movlb	0	; select bank0
  4387  03B1  00A6               	movwf	___flmul@a+2
  4388  03B2  0021               	movlb	1	; select bank1
  4389  03B3  0842               	movf	(efgtoa@l+1)^(0+128),w
  4390  03B4  0020               	movlb	0	; select bank0
  4391  03B5  00A5               	movwf	___flmul@a+1
  4392  03B6  0021               	movlb	1	; select bank1
  4393  03B7  0841               	movf	efgtoa@l^(0+128),w
  4394  03B8  0020               	movlb	0	; select bank0
  4395  03B9  00A4               	movwf	___flmul@a
  4396  03BA  0021               	movlb	1	; select bank1
  4397  03BB  0852               	movf	(efgtoa@u+3)^(0+128),w
  4398  03BC  0020               	movlb	0	; select bank0
  4399  03BD  00A3               	movwf	___flmul@b+3
  4400  03BE  0021               	movlb	1	; select bank1
  4401  03BF  0851               	movf	(efgtoa@u+2)^(0+128),w
  4402  03C0  0020               	movlb	0	; select bank0
  4403  03C1  00A2               	movwf	___flmul@b+2
  4404  03C2  0021               	movlb	1	; select bank1
  4405  03C3  0850               	movf	(efgtoa@u+1)^(0+128),w
  4406  03C4  0020               	movlb	0	; select bank0
  4407  03C5  00A1               	movwf	___flmul@b+1
  4408  03C6  0021               	movlb	1	; select bank1
  4409  03C7  084F               	movf	efgtoa@u^(0+128),w
  4410  03C8  0020               	movlb	0	; select bank0
  4411  03C9  00A0               	movwf	___flmul@b
  4412  03CA  318B  2321  3180   	fcall	___flmul
  4413  03CD  0020               	movlb	0	; select bank0
  4414  03CE  0823               	movf	?___flmul+3,w
  4415  03CF  00BD               	movwf	___flsub@a+3
  4416  03D0  0822               	movf	?___flmul+2,w
  4417  03D1  00BC               	movwf	___flsub@a+2
  4418  03D2  0821               	movf	?___flmul+1,w
  4419  03D3  00BB               	movwf	___flsub@a+1
  4420  03D4  0820               	movf	?___flmul,w
  4421  03D5  00BA               	movwf	___flsub@a
  4422  03D6  0021               	movlb	1	; select bank1
  4423  03D7  0840               	movf	(efgtoa@h+3)^(0+128),w
  4424  03D8  0020               	movlb	0	; select bank0
  4425  03D9  00C1               	movwf	___flsub@b+3
  4426  03DA  0021               	movlb	1	; select bank1
  4427  03DB  083F               	movf	(efgtoa@h+2)^(0+128),w
  4428  03DC  0020               	movlb	0	; select bank0
  4429  03DD  00C0               	movwf	___flsub@b+2
  4430  03DE  0021               	movlb	1	; select bank1
  4431  03DF  083E               	movf	(efgtoa@h+1)^(0+128),w
  4432  03E0  0020               	movlb	0	; select bank0
  4433  03E1  00BF               	movwf	___flsub@b+1
  4434  03E2  0021               	movlb	1	; select bank1
  4435  03E3  083D               	movf	efgtoa@h^(0+128),w
  4436  03E4  0020               	movlb	0	; select bank0
  4437  03E5  00BE               	movwf	___flsub@b
  4438  03E6  319E  2682  3180   	fcall	___flsub
  4439  03E9  0020               	movlb	0	; select bank0
  4440  03EA  083D               	movf	?___flsub+3,w
  4441  03EB  0021               	movlb	1	; select bank1
  4442  03EC  00C0               	movwf	(efgtoa@h+3)^(0+128)
  4443  03ED  0020               	movlb	0	; select bank0
  4444  03EE  083C               	movf	?___flsub+2,w
  4445  03EF  0021               	movlb	1	; select bank1
  4446  03F0  00BF               	movwf	(efgtoa@h+2)^(0+128)
  4447  03F1  0020               	movlb	0	; select bank0
  4448  03F2  083B               	movf	?___flsub+1,w
  4449  03F3  0021               	movlb	1	; select bank1
  4450  03F4  00BE               	movwf	(efgtoa@h+1)^(0+128)
  4451  03F5  0020               	movlb	0	; select bank0
  4452  03F6  083A               	movf	?___flsub,w
  4453  03F7  0021               	movlb	1	; select bank1
  4454  03F8  00BD               	movwf	efgtoa@h^(0+128)
  4455                           
  4456                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 435:         u = 
      +                          u/10.0;
  4457  03F9  3041               	movlw	65
  4458  03FA  0020               	movlb	0	; select bank0
  4459  03FB  00BD               	movwf	___fldiv@a+3
  4460  03FC  3020               	movlw	32
  4461  03FD  00BC               	movwf	___fldiv@a+2
  4462  03FE  3000               	movlw	0
  4463  03FF  00BB               	movwf	___fldiv@a+1
  4464  0400  3000               	movlw	0
  4465  0401  00BA               	movwf	___fldiv@a
  4466  0402  0021               	movlb	1	; select bank1
  4467  0403  0852               	movf	(efgtoa@u+3)^(0+128),w
  4468  0404  0020               	movlb	0	; select bank0
  4469  0405  00C1               	movwf	___fldiv@b+3
  4470  0406  0021               	movlb	1	; select bank1
  4471  0407  0851               	movf	(efgtoa@u+2)^(0+128),w
  4472  0408  0020               	movlb	0	; select bank0
  4473  0409  00C0               	movwf	___fldiv@b+2
  4474  040A  0021               	movlb	1	; select bank1
  4475  040B  0850               	movf	(efgtoa@u+1)^(0+128),w
  4476  040C  0020               	movlb	0	; select bank0
  4477  040D  00BF               	movwf	___fldiv@b+1
  4478  040E  0021               	movlb	1	; select bank1
  4479  040F  084F               	movf	efgtoa@u^(0+128),w
  4480  0410  0020               	movlb	0	; select bank0
  4481  0411  00BE               	movwf	___fldiv@b
  4482  0412  3196  264C  3180   	fcall	___fldiv
  4483  0415  0020               	movlb	0	; select bank0
  4484  0416  083D               	movf	?___fldiv+3,w
  4485  0417  0021               	movlb	1	; select bank1
  4486  0418  00D2               	movwf	(efgtoa@u+3)^(0+128)
  4487  0419  0020               	movlb	0	; select bank0
  4488  041A  083C               	movf	?___fldiv+2,w
  4489  041B  0021               	movlb	1	; select bank1
  4490  041C  00D1               	movwf	(efgtoa@u+2)^(0+128)
  4491  041D  0020               	movlb	0	; select bank0
  4492  041E  083B               	movf	?___fldiv+1,w
  4493  041F  0021               	movlb	1	; select bank1
  4494  0420  00D0               	movwf	(efgtoa@u+1)^(0+128)
  4495  0421  0020               	movlb	0	; select bank0
  4496  0422  083A               	movf	?___fldiv,w
  4497  0423  0021               	movlb	1	; select bank1
  4498  0424  00CF               	movwf	efgtoa@u^(0+128)
  4499  0425                     l3475:
  4500                           
  4501                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 436:         ++i;
  4502  0425  3001               	movlw	1
  4503  0426  07C5               	addwf	efgtoa@i^(0+128),f
  4504  0427  3000               	movlw	0
  4505  0428  3DC6               	addwfc	(efgtoa@i+1)^(0+128),f
  4506  0429                     l3477:
  4507                           
  4508                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 431:     while (i
      +                           < m) {
  4509  0429  0846               	movf	(efgtoa@i+1)^(0+128),w
  4510  042A  3A80               	xorlw	128
  4511  042B  0020               	movlb	0	; select bank0
  4512  042C  00ED               	movwf	??_efgtoa
  4513  042D  0021               	movlb	1	; select bank1
  4514  042E  082D               	movf	(efgtoa@m+1)^(0+128),w
  4515  042F  3A80               	xorlw	128
  4516  0430  0020               	movlb	0	; select bank0
  4517  0431  026D               	subwf	??_efgtoa,w
  4518  0432  1D03               	skipz
  4519  0433  2C37               	goto	u4885
  4520  0434  0021               	movlb	1	; select bank1
  4521  0435  082C               	movf	efgtoa@m^(0+128),w
  4522  0436  0245               	subwf	efgtoa@i^(0+128),w
  4523  0437                     u4885:
  4524  0437  1C03               	skipc
  4525  0438  2C3A               	goto	u4881
  4526  0439  2C3B               	goto	u4880
  4527  043A                     u4881:
  4528  043A  2B5C               	goto	l3473
  4529  043B                     u4880:
  4530  043B                     l3479:
  4531                           
  4532                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 440:     l = u*5.
      +                          0;
  4533  043B  3040               	movlw	64
  4534  043C  0020               	movlb	0	; select bank0
  4535  043D  00A3               	movwf	___flmul@b+3
  4536  043E  30A0               	movlw	160
  4537  043F  00A2               	movwf	___flmul@b+2
  4538  0440  3000               	movlw	0
  4539  0441  00A1               	movwf	___flmul@b+1
  4540  0442  3000               	movlw	0
  4541  0443  00A0               	movwf	___flmul@b
  4542  0444  0021               	movlb	1	; select bank1
  4543  0445  0852               	movf	(efgtoa@u+3)^(0+128),w
  4544  0446  0020               	movlb	0	; select bank0
  4545  0447  00A7               	movwf	___flmul@a+3
  4546  0448  0021               	movlb	1	; select bank1
  4547  0449  0851               	movf	(efgtoa@u+2)^(0+128),w
  4548  044A  0020               	movlb	0	; select bank0
  4549  044B  00A6               	movwf	___flmul@a+2
  4550  044C  0021               	movlb	1	; select bank1
  4551  044D  0850               	movf	(efgtoa@u+1)^(0+128),w
  4552  044E  0020               	movlb	0	; select bank0
  4553  044F  00A5               	movwf	___flmul@a+1
  4554  0450  0021               	movlb	1	; select bank1
  4555  0451  084F               	movf	efgtoa@u^(0+128),w
  4556  0452  0020               	movlb	0	; select bank0
  4557  0453  00A4               	movwf	___flmul@a
  4558  0454  318B  2321  3180   	fcall	___flmul
  4559  0457  0020               	movlb	0	; select bank0
  4560  0458  0823               	movf	?___flmul+3,w
  4561  0459  0021               	movlb	1	; select bank1
  4562  045A  00C4               	movwf	(efgtoa@l+3)^(0+128)
  4563  045B  0020               	movlb	0	; select bank0
  4564  045C  0822               	movf	?___flmul+2,w
  4565  045D  0021               	movlb	1	; select bank1
  4566  045E  00C3               	movwf	(efgtoa@l+2)^(0+128)
  4567  045F  0020               	movlb	0	; select bank0
  4568  0460  0821               	movf	?___flmul+1,w
  4569  0461  0021               	movlb	1	; select bank1
  4570  0462  00C2               	movwf	(efgtoa@l+1)^(0+128)
  4571  0463  0020               	movlb	0	; select bank0
  4572  0464  0820               	movf	?___flmul,w
  4573  0465  0021               	movlb	1	; select bank1
  4574  0466  00C1               	movwf	efgtoa@l^(0+128)
  4575                           
  4576                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 441:     if (h < 
      +                          l) {
  4577  0467  0840               	movf	(efgtoa@h+3)^(0+128),w
  4578  0468  0020               	movlb	0	; select bank0
  4579  0469  00BD               	movwf	___flge@ff1+3
  4580  046A  0021               	movlb	1	; select bank1
  4581  046B  083F               	movf	(efgtoa@h+2)^(0+128),w
  4582  046C  0020               	movlb	0	; select bank0
  4583  046D  00BC               	movwf	___flge@ff1+2
  4584  046E  0021               	movlb	1	; select bank1
  4585  046F  083E               	movf	(efgtoa@h+1)^(0+128),w
  4586  0470  0020               	movlb	0	; select bank0
  4587  0471  00BB               	movwf	___flge@ff1+1
  4588  0472  0021               	movlb	1	; select bank1
  4589  0473  083D               	movf	efgtoa@h^(0+128),w
  4590  0474  0020               	movlb	0	; select bank0
  4591  0475  00BA               	movwf	___flge@ff1
  4592  0476  0021               	movlb	1	; select bank1
  4593  0477  0844               	movf	(efgtoa@l+3)^(0+128),w
  4594  0478  0020               	movlb	0	; select bank0
  4595  0479  00C1               	movwf	___flge@ff2+3
  4596  047A  0021               	movlb	1	; select bank1
  4597  047B  0843               	movf	(efgtoa@l+2)^(0+128),w
  4598  047C  0020               	movlb	0	; select bank0
  4599  047D  00C0               	movwf	___flge@ff2+2
  4600  047E  0021               	movlb	1	; select bank1
  4601  047F  0842               	movf	(efgtoa@l+1)^(0+128),w
  4602  0480  0020               	movlb	0	; select bank0
  4603  0481  00BF               	movwf	___flge@ff2+1
  4604  0482  0021               	movlb	1	; select bank1
  4605  0483  0841               	movf	efgtoa@l^(0+128),w
  4606  0484  0020               	movlb	0	; select bank0
  4607  0485  00BE               	movwf	___flge@ff2
  4608  0486  3192  22D1  3180   	fcall	___flge
  4609  0489  1803               	btfsc	3,0
  4610  048A  2C8C               	goto	u4891
  4611  048B  2C8D               	goto	u4890
  4612  048C                     u4891:
  4613  048C  2C97               	goto	l3483
  4614  048D                     u4890:
  4615  048D                     l3481:
  4616                           
  4617                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 442:         l = 
      +                          0.0;
  4618  048D  3000               	movlw	0
  4619  048E  0021               	movlb	1	; select bank1
  4620  048F  00C4               	movwf	(efgtoa@l+3)^(0+128)
  4621  0490  3000               	movlw	0
  4622  0491  00C3               	movwf	(efgtoa@l+2)^(0+128)
  4623  0492  3000               	movlw	0
  4624  0493  00C2               	movwf	(efgtoa@l+1)^(0+128)
  4625  0494  3000               	movlw	0
  4626  0495  00C1               	movwf	efgtoa@l^(0+128)
  4627                           
  4628                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 443:     } else {
  4629  0496  2CBC               	goto	l3489
  4630  0497                     l3483:
  4631                           
  4632                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 445:         if (
      +                          (h == l) && !(d % 2)) {
  4633  0497  0021               	movlb	1	; select bank1
  4634  0498  0840               	movf	(efgtoa@h+3)^(0+128),w
  4635  0499  00F3               	movwf	___fleq@ff1+3
  4636  049A  083F               	movf	(efgtoa@h+2)^(0+128),w
  4637  049B  00F2               	movwf	___fleq@ff1+2
  4638  049C  083E               	movf	(efgtoa@h+1)^(0+128),w
  4639  049D  00F1               	movwf	___fleq@ff1+1
  4640  049E  083D               	movf	efgtoa@h^(0+128),w
  4641  049F  00F0               	movwf	___fleq@ff1
  4642  04A0  0844               	movf	(efgtoa@l+3)^(0+128),w
  4643  04A1  00F7               	movwf	___fleq@ff2+3
  4644  04A2  0843               	movf	(efgtoa@l+2)^(0+128),w
  4645  04A3  00F6               	movwf	___fleq@ff2+2
  4646  04A4  0842               	movf	(efgtoa@l+1)^(0+128),w
  4647  04A5  00F5               	movwf	___fleq@ff2+1
  4648  04A6  0841               	movf	efgtoa@l^(0+128),w
  4649  04A7  00F4               	movwf	___fleq@ff2
  4650  04A8  319F  275F  3180   	fcall	___fleq
  4651  04AB  1C03               	btfss	3,0
  4652  04AC  2CAE               	goto	u4901
  4653  04AD  2CAF               	goto	u4900
  4654  04AE                     u4901:
  4655  04AE  2CBC               	goto	l3489
  4656  04AF                     u4900:
  4657  04AF                     l3485:
  4658  04AF  0021               	movlb	1	; select bank1
  4659  04B0  1832               	btfsc	efgtoa@d^(0+128),0
  4660  04B1  2CB3               	goto	u4911
  4661  04B2  2CB4               	goto	u4910
  4662  04B3                     u4911:
  4663  04B3  2CBC               	goto	l3489
  4664  04B4                     u4910:
  4665  04B4                     l3487:
  4666                           
  4667                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 446:             
      +                          l = 0.0;
  4668  04B4  3000               	movlw	0
  4669  04B5  00C4               	movwf	(efgtoa@l+3)^(0+128)
  4670  04B6  3000               	movlw	0
  4671  04B7  00C3               	movwf	(efgtoa@l+2)^(0+128)
  4672  04B8  3000               	movlw	0
  4673  04B9  00C2               	movwf	(efgtoa@l+1)^(0+128)
  4674  04BA  3000               	movlw	0
  4675  04BB  00C1               	movwf	efgtoa@l^(0+128)
  4676  04BC                     l3489:
  4677                           
  4678                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 451:     h = g + 
      +                          l;
  4679  04BC  0021               	movlb	1	; select bank1
  4680  04BD  0844               	movf	(efgtoa@l+3)^(0+128),w
  4681  04BE  00F3               	movwf	___fladd@b+3
  4682  04BF  0843               	movf	(efgtoa@l+2)^(0+128),w
  4683  04C0  00F2               	movwf	___fladd@b+2
  4684  04C1  0842               	movf	(efgtoa@l+1)^(0+128),w
  4685  04C2  00F1               	movwf	___fladd@b+1
  4686  04C3  0841               	movf	efgtoa@l^(0+128),w
  4687  04C4  00F0               	movwf	___fladd@b
  4688  04C5  084A               	movf	(efgtoa@g+3)^(0+128),w
  4689  04C6  00F7               	movwf	___fladd@a+3
  4690  04C7  0849               	movf	(efgtoa@g+2)^(0+128),w
  4691  04C8  00F6               	movwf	___fladd@a+2
  4692  04C9  0848               	movf	(efgtoa@g+1)^(0+128),w
  4693  04CA  00F5               	movwf	___fladd@a+1
  4694  04CB  0847               	movf	efgtoa@g^(0+128),w
  4695  04CC  00F4               	movwf	___fladd@a
  4696  04CD  3188  20E2  3180   	fcall	___fladd
  4697  04D0  0873               	movf	?___fladd+3,w
  4698  04D1  0021               	movlb	1	; select bank1
  4699  04D2  00C0               	movwf	(efgtoa@h+3)^(0+128)
  4700  04D3  0872               	movf	?___fladd+2,w
  4701  04D4  00BF               	movwf	(efgtoa@h+2)^(0+128)
  4702  04D5  0871               	movf	?___fladd+1,w
  4703  04D6  00BE               	movwf	(efgtoa@h+1)^(0+128)
  4704  04D7  0870               	movf	?___fladd,w
  4705  04D8  00BD               	movwf	efgtoa@h^(0+128)
  4706  04D9                     l3491:
  4707                           
  4708                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 453:  if (h >= (o
      +                          u*10.0)) {
  4709  04D9  0840               	movf	(efgtoa@h+3)^(0+128),w
  4710  04DA  0020               	movlb	0	; select bank0
  4711  04DB  00BD               	movwf	___flge@ff1+3
  4712  04DC  0021               	movlb	1	; select bank1
  4713  04DD  083F               	movf	(efgtoa@h+2)^(0+128),w
  4714  04DE  0020               	movlb	0	; select bank0
  4715  04DF  00BC               	movwf	___flge@ff1+2
  4716  04E0  0021               	movlb	1	; select bank1
  4717  04E1  083E               	movf	(efgtoa@h+1)^(0+128),w
  4718  04E2  0020               	movlb	0	; select bank0
  4719  04E3  00BB               	movwf	___flge@ff1+1
  4720  04E4  0021               	movlb	1	; select bank1
  4721  04E5  083D               	movf	efgtoa@h^(0+128),w
  4722  04E6  0020               	movlb	0	; select bank0
  4723  04E7  00BA               	movwf	___flge@ff1
  4724  04E8  3041               	movlw	65
  4725  04E9  00A3               	movwf	___flmul@b+3
  4726  04EA  3020               	movlw	32
  4727  04EB  00A2               	movwf	___flmul@b+2
  4728  04EC  3000               	movlw	0
  4729  04ED  00A1               	movwf	___flmul@b+1
  4730  04EE  3000               	movlw	0
  4731  04EF  00A0               	movwf	___flmul@b
  4732  04F0  0021               	movlb	1	; select bank1
  4733  04F1  0831               	movf	(efgtoa@ou+3)^(0+128),w
  4734  04F2  0020               	movlb	0	; select bank0
  4735  04F3  00A7               	movwf	___flmul@a+3
  4736  04F4  0021               	movlb	1	; select bank1
  4737  04F5  0830               	movf	(efgtoa@ou+2)^(0+128),w
  4738  04F6  0020               	movlb	0	; select bank0
  4739  04F7  00A6               	movwf	___flmul@a+2
  4740  04F8  0021               	movlb	1	; select bank1
  4741  04F9  082F               	movf	(efgtoa@ou+1)^(0+128),w
  4742  04FA  0020               	movlb	0	; select bank0
  4743  04FB  00A5               	movwf	___flmul@a+1
  4744  04FC  0021               	movlb	1	; select bank1
  4745  04FD  082E               	movf	efgtoa@ou^(0+128),w
  4746  04FE  0020               	movlb	0	; select bank0
  4747  04FF  00A4               	movwf	___flmul@a
  4748  0500  318B  2321  3180   	fcall	___flmul
  4749  0503  0020               	movlb	0	; select bank0
  4750  0504  0823               	movf	?___flmul+3,w
  4751  0505  00C1               	movwf	___flge@ff2+3
  4752  0506  0822               	movf	?___flmul+2,w
  4753  0507  00C0               	movwf	___flge@ff2+2
  4754  0508  0821               	movf	?___flmul+1,w
  4755  0509  00BF               	movwf	___flge@ff2+1
  4756  050A  0820               	movf	?___flmul,w
  4757  050B  00BE               	movwf	___flge@ff2
  4758  050C  3192  22D1  3180   	fcall	___flge
  4759  050F  1C03               	btfss	3,0
  4760  0510  2D12               	goto	u4921
  4761  0511  2D13               	goto	u4920
  4762  0512                     u4921:
  4763  0512  2D4E               	goto	l750
  4764  0513                     u4920:
  4765  0513                     l3493:
  4766                           
  4767                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 454:   e++;
  4768  0513  3001               	movlw	1
  4769  0514  0021               	movlb	1	; select bank1
  4770  0515  07CB               	addwf	efgtoa@e^(0+128),f
  4771  0516  3000               	movlw	0
  4772  0517  3DCC               	addwfc	(efgtoa@e+1)^(0+128),f
  4773  0518                     l3495:
  4774                           
  4775                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 455:   ou *= 10.0
      +                          ;
  4776  0518  3041               	movlw	65
  4777  0519  0020               	movlb	0	; select bank0
  4778  051A  00A3               	movwf	___flmul@b+3
  4779  051B  3020               	movlw	32
  4780  051C  00A2               	movwf	___flmul@b+2
  4781  051D  3000               	movlw	0
  4782  051E  00A1               	movwf	___flmul@b+1
  4783  051F  3000               	movlw	0
  4784  0520  00A0               	movwf	___flmul@b
  4785  0521  0021               	movlb	1	; select bank1
  4786  0522  0831               	movf	(efgtoa@ou+3)^(0+128),w
  4787  0523  0020               	movlb	0	; select bank0
  4788  0524  00A7               	movwf	___flmul@a+3
  4789  0525  0021               	movlb	1	; select bank1
  4790  0526  0830               	movf	(efgtoa@ou+2)^(0+128),w
  4791  0527  0020               	movlb	0	; select bank0
  4792  0528  00A6               	movwf	___flmul@a+2
  4793  0529  0021               	movlb	1	; select bank1
  4794  052A  082F               	movf	(efgtoa@ou+1)^(0+128),w
  4795  052B  0020               	movlb	0	; select bank0
  4796  052C  00A5               	movwf	___flmul@a+1
  4797  052D  0021               	movlb	1	; select bank1
  4798  052E  082E               	movf	efgtoa@ou^(0+128),w
  4799  052F  0020               	movlb	0	; select bank0
  4800  0530  00A4               	movwf	___flmul@a
  4801  0531  318B  2321  3180   	fcall	___flmul
  4802  0534  0020               	movlb	0	; select bank0
  4803  0535  0823               	movf	?___flmul+3,w
  4804  0536  0021               	movlb	1	; select bank1
  4805  0537  00B1               	movwf	(efgtoa@ou+3)^(0+128)
  4806  0538  0020               	movlb	0	; select bank0
  4807  0539  0822               	movf	?___flmul+2,w
  4808  053A  0021               	movlb	1	; select bank1
  4809  053B  00B0               	movwf	(efgtoa@ou+2)^(0+128)
  4810  053C  0020               	movlb	0	; select bank0
  4811  053D  0821               	movf	?___flmul+1,w
  4812  053E  0021               	movlb	1	; select bank1
  4813  053F  00AF               	movwf	(efgtoa@ou+1)^(0+128)
  4814  0540  0020               	movlb	0	; select bank0
  4815  0541  0820               	movf	?___flmul,w
  4816  0542  0021               	movlb	1	; select bank1
  4817  0543  00AE               	movwf	efgtoa@ou^(0+128)
  4818  0544                     l3497:
  4819                           
  4820                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 456:   if (nmode 
      +                          == 'f') {
  4821  0544  3066               	movlw	102
  4822  0545  063B               	xorwf	efgtoa@nmode^(0+128),w
  4823  0546  1D03               	btfss	3,2
  4824  0547  2D49               	goto	u4931
  4825  0548  2D4A               	goto	u4930
  4826  0549                     u4931:
  4827  0549  2D4E               	goto	l750
  4828  054A                     u4930:
  4829  054A                     l3499:
  4830                           
  4831                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 458:    m++;
  4832  054A  3001               	movlw	1
  4833  054B  07AC               	addwf	efgtoa@m^(0+128),f
  4834  054C  3000               	movlw	0
  4835  054D  3DAD               	addwfc	(efgtoa@m+1)^(0+128),f
  4836  054E                     l750:	
  4837                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 460:  }
  4838                           
  4839                           
  4840                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 463:     u = ou;
  4841  054E  0021               	movlb	1	; select bank1
  4842  054F  0831               	movf	(efgtoa@ou+3)^(0+128),w
  4843  0550  00D2               	movwf	(efgtoa@u+3)^(0+128)
  4844  0551  0830               	movf	(efgtoa@ou+2)^(0+128),w
  4845  0552  00D1               	movwf	(efgtoa@u+2)^(0+128)
  4846  0553  082F               	movf	(efgtoa@ou+1)^(0+128),w
  4847  0554  00D0               	movwf	(efgtoa@u+1)^(0+128)
  4848  0555  082E               	movf	efgtoa@ou^(0+128),w
  4849  0556  00CF               	movwf	efgtoa@u^(0+128)
  4850  0557                     l3501:
  4851                           
  4852                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 464:     ne = (nm
      +                          ode == 'e') ? 0 : e;
  4853  0557  3065               	movlw	101
  4854  0558  063B               	xorwf	efgtoa@nmode^(0+128),w
  4855  0559  1903               	btfsc	3,2
  4856  055A  2D5C               	goto	u4941
  4857  055B  2D5D               	goto	u4940
  4858  055C                     u4941:
  4859  055C  2D62               	goto	l3505
  4860  055D                     u4940:
  4861  055D                     l3503:
  4862  055D  084C               	movf	(efgtoa@e+1)^(0+128),w
  4863  055E  00AB               	movwf	(efgtoa@ne+1)^(0+128)
  4864  055F  084B               	movf	efgtoa@e^(0+128),w
  4865  0560  00AA               	movwf	efgtoa@ne^(0+128)
  4866  0561  2D64               	goto	l755
  4867  0562                     l3505:
  4868  0562  01AA               	clrf	efgtoa@ne^(0+128)
  4869  0563  01AB               	clrf	(efgtoa@ne+1)^(0+128)
  4870  0564                     l755:
  4871                           
  4872                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 465:     pp = 0;
  4873  0564  01A8               	clrf	efgtoa@pp^(0+128)
  4874  0565  01A9               	clrf	(efgtoa@pp+1)^(0+128)
  4875                           
  4876                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 466:     t = 0;
  4877  0566  01A6               	clrf	efgtoa@t^(0+128)
  4878  0567  01A7               	clrf	(efgtoa@t+1)^(0+128)
  4879                           
  4880                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 467:     i = 0;
  4881  0568  01C5               	clrf	efgtoa@i^(0+128)
  4882  0569  01C6               	clrf	(efgtoa@i+1)^(0+128)
  4883                           
  4884                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 468:     while ((
      +                          i < m) && (n < (80 - 5))) {
  4885  056A  2EAE               	goto	l3555
  4886  056B                     l3507:
  4887                           
  4888                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 469:         l = 
      +                          floorf(h/u);
  4889  056B  0021               	movlb	1	; select bank1
  4890  056C  0852               	movf	(efgtoa@u+3)^(0+128),w
  4891  056D  0020               	movlb	0	; select bank0
  4892  056E  00BD               	movwf	___fldiv@a+3
  4893  056F  0021               	movlb	1	; select bank1
  4894  0570  0851               	movf	(efgtoa@u+2)^(0+128),w
  4895  0571  0020               	movlb	0	; select bank0
  4896  0572  00BC               	movwf	___fldiv@a+2
  4897  0573  0021               	movlb	1	; select bank1
  4898  0574  0850               	movf	(efgtoa@u+1)^(0+128),w
  4899  0575  0020               	movlb	0	; select bank0
  4900  0576  00BB               	movwf	___fldiv@a+1
  4901  0577  0021               	movlb	1	; select bank1
  4902  0578  084F               	movf	efgtoa@u^(0+128),w
  4903  0579  0020               	movlb	0	; select bank0
  4904  057A  00BA               	movwf	___fldiv@a
  4905  057B  0021               	movlb	1	; select bank1
  4906  057C  0840               	movf	(efgtoa@h+3)^(0+128),w
  4907  057D  0020               	movlb	0	; select bank0
  4908  057E  00C1               	movwf	___fldiv@b+3
  4909  057F  0021               	movlb	1	; select bank1
  4910  0580  083F               	movf	(efgtoa@h+2)^(0+128),w
  4911  0581  0020               	movlb	0	; select bank0
  4912  0582  00C0               	movwf	___fldiv@b+2
  4913  0583  0021               	movlb	1	; select bank1
  4914  0584  083E               	movf	(efgtoa@h+1)^(0+128),w
  4915  0585  0020               	movlb	0	; select bank0
  4916  0586  00BF               	movwf	___fldiv@b+1
  4917  0587  0021               	movlb	1	; select bank1
  4918  0588  083D               	movf	efgtoa@h^(0+128),w
  4919  0589  0020               	movlb	0	; select bank0
  4920  058A  00BE               	movwf	___fldiv@b
  4921  058B  3196  264C  3180   	fcall	___fldiv
  4922  058E  0020               	movlb	0	; select bank0
  4923  058F  083D               	movf	?___fldiv+3,w
  4924  0590  00D7               	movwf	floorf@x+3
  4925  0591  083C               	movf	?___fldiv+2,w
  4926  0592  00D6               	movwf	floorf@x+2
  4927  0593  083B               	movf	?___fldiv+1,w
  4928  0594  00D5               	movwf	floorf@x+1
  4929  0595  083A               	movf	?___fldiv,w
  4930  0596  00D4               	movwf	floorf@x
  4931  0597  3193  23F0  3180   	fcall	_floorf
  4932  059A  0020               	movlb	0	; select bank0
  4933  059B  0857               	movf	?_floorf+3,w
  4934  059C  0021               	movlb	1	; select bank1
  4935  059D  00C4               	movwf	(efgtoa@l+3)^(0+128)
  4936  059E  0020               	movlb	0	; select bank0
  4937  059F  0856               	movf	?_floorf+2,w
  4938  05A0  0021               	movlb	1	; select bank1
  4939  05A1  00C3               	movwf	(efgtoa@l+2)^(0+128)
  4940  05A2  0020               	movlb	0	; select bank0
  4941  05A3  0855               	movf	?_floorf+1,w
  4942  05A4  0021               	movlb	1	; select bank1
  4943  05A5  00C2               	movwf	(efgtoa@l+1)^(0+128)
  4944  05A6  0020               	movlb	0	; select bank0
  4945  05A7  0854               	movf	?_floorf,w
  4946  05A8  0021               	movlb	1	; select bank1
  4947  05A9  00C1               	movwf	efgtoa@l^(0+128)
  4948                           
  4949                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 470:         d = 
      +                          (int)l;
  4950  05AA  0844               	movf	(efgtoa@l+3)^(0+128),w
  4951  05AB  00F3               	movwf	___fltol@f1+3
  4952  05AC  0843               	movf	(efgtoa@l+2)^(0+128),w
  4953  05AD  00F2               	movwf	___fltol@f1+2
  4954  05AE  0842               	movf	(efgtoa@l+1)^(0+128),w
  4955  05AF  00F1               	movwf	___fltol@f1+1
  4956  05B0  0841               	movf	efgtoa@l^(0+128),w
  4957  05B1  00F0               	movwf	___fltol@f1
  4958  05B2  3180  2008  3180   	fcall	___fltol
  4959  05B5  0871               	movf	?___fltol+1,w
  4960  05B6  0021               	movlb	1	; select bank1
  4961  05B7  00B3               	movwf	(efgtoa@d+1)^(0+128)
  4962  05B8  0870               	movf	?___fltol,w
  4963  05B9  00B2               	movwf	efgtoa@d^(0+128)
  4964  05BA                     l3509:
  4965                           
  4966                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 471:         if (
      +                          !(flags & (1 << 4)) && !d && (mode == 'g') && (ne < 0)) {
  4967  05BA  1A6E               	btfsc	_flags^(0+128),4
  4968  05BB  2DBD               	goto	u4951
  4969  05BC  2DBE               	goto	u4950
  4970  05BD                     u4951:
  4971  05BD  2DD3               	goto	l3519
  4972  05BE                     u4950:
  4973  05BE                     l3511:
  4974  05BE  0832               	movf	efgtoa@d^(0+128),w
  4975  05BF  0433               	iorwf	(efgtoa@d+1)^(0+128),w
  4976  05C0  1D03               	btfss	3,2
  4977  05C1  2DC3               	goto	u4961
  4978  05C2  2DC4               	goto	u4960
  4979  05C3                     u4961:
  4980  05C3  2DD3               	goto	l3519
  4981  05C4                     u4960:
  4982  05C4                     l3513:
  4983  05C4  3067               	movlw	103
  4984  05C5  063C               	xorwf	efgtoa@mode^(0+128),w
  4985  05C6  1D03               	btfss	3,2
  4986  05C7  2DC9               	goto	u4971
  4987  05C8  2DCA               	goto	u4970
  4988  05C9                     u4971:
  4989  05C9  2DD3               	goto	l3519
  4990  05CA                     u4970:
  4991  05CA                     l3515:
  4992  05CA  1FAB               	btfss	(efgtoa@ne+1)^(0+128),7
  4993  05CB  2DCD               	goto	u4981
  4994  05CC  2DCE               	goto	u4980
  4995  05CD                     u4981:
  4996  05CD  2DD3               	goto	l3519
  4997  05CE                     u4980:
  4998  05CE                     l3517:
  4999                           
  5000                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 472:             
      +                          ++t;
  5001  05CE  3001               	movlw	1
  5002  05CF  07A6               	addwf	efgtoa@t^(0+128),f
  5003  05D0  3000               	movlw	0
  5004  05D1  3DA7               	addwfc	(efgtoa@t+1)^(0+128),f
  5005                           
  5006                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 473:         } el
      +                          se {
  5007  05D2  2E2C               	goto	l3547
  5008  05D3                     l3519:
  5009                           
  5010                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 474:             
      +                          if (!pp && (ne < 0)) {
  5011  05D3  0828               	movf	efgtoa@pp^(0+128),w
  5012  05D4  0429               	iorwf	(efgtoa@pp+1)^(0+128),w
  5013  05D5  1D03               	btfss	3,2
  5014  05D6  2DD8               	goto	u4991
  5015  05D7  2DD9               	goto	u4990
  5016  05D8                     u4991:
  5017  05D8  2E10               	goto	l3539
  5018  05D9                     u4990:
  5019  05D9                     l3521:
  5020  05D9  1FAB               	btfss	(efgtoa@ne+1)^(0+128),7
  5021  05DA  2DDC               	goto	u5001
  5022  05DB  2DDD               	goto	u5000
  5023  05DC                     u5001:
  5024  05DC  2E10               	goto	l3539
  5025  05DD                     u5000:
  5026  05DD                     l3523:
  5027                           
  5028                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 475:             
      +                              dbuf[n++] = '.';
  5029  05DD  302E               	movlw	46
  5030  05DE  0020               	movlb	0	; select bank0
  5031  05DF  00ED               	movwf	??_efgtoa
  5032  05E0  0021               	movlb	1	; select bank1
  5033  05E1  084D               	movf	efgtoa@n^(0+128),w
  5034  05E2  3E20               	addlw	(low (_dbuf| (0+512)))& (0+255)
  5035  05E3  0086               	movwf	6
  5036  05E4  3002               	movlw	2	; select bank4/5
  5037  05E5  0087               	movwf	7
  5038  05E6  0020               	movlb	0	; select bank0
  5039  05E7  086D               	movf	??_efgtoa,w
  5040  05E8  0081               	movwf	1
  5041  05E9                     l3525:
  5042  05E9  3001               	movlw	1
  5043  05EA  0021               	movlb	1	; select bank1
  5044  05EB  07CD               	addwf	efgtoa@n^(0+128),f
  5045  05EC  3000               	movlw	0
  5046  05ED  3DCE               	addwfc	(efgtoa@n+1)^(0+128),f
  5047  05EE                     l3527:
  5048                           
  5049                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 476:             
      +                              --w;
  5050  05EE  30FF               	movlw	255
  5051  05EF  07B9               	addwf	efgtoa@w^(0+128),f
  5052  05F0  30FF               	movlw	255
  5053  05F1  3DBA               	addwfc	(efgtoa@w+1)^(0+128),f
  5054  05F2                     l3529:
  5055                           
  5056                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 477:             
      +                              pp = 1;
  5057  05F2  3001               	movlw	1
  5058  05F3  00A8               	movwf	efgtoa@pp^(0+128)
  5059  05F4  3000               	movlw	0
  5060  05F5  00A9               	movwf	(efgtoa@pp^(0+128)+1)
  5061  05F6  2E10               	goto	l3539
  5062  05F7                     l3531:
  5063                           
  5064                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 480:             
      +                              dbuf[n++] = '0';
  5065  05F7  3030               	movlw	48
  5066  05F8  0020               	movlb	0	; select bank0
  5067  05F9  00ED               	movwf	??_efgtoa
  5068  05FA  0021               	movlb	1	; select bank1
  5069  05FB  084D               	movf	efgtoa@n^(0+128),w
  5070  05FC  3E20               	addlw	(low (_dbuf| (0+512)))& (0+255)
  5071  05FD  0086               	movwf	6
  5072  05FE  3002               	movlw	2	; select bank4/5
  5073  05FF  0087               	movwf	7
  5074  0600  0020               	movlb	0	; select bank0
  5075  0601  086D               	movf	??_efgtoa,w
  5076  0602  0081               	movwf	1
  5077  0603                     l3533:
  5078  0603  3001               	movlw	1
  5079  0604  0021               	movlb	1	; select bank1
  5080  0605  07CD               	addwf	efgtoa@n^(0+128),f
  5081  0606  3000               	movlw	0
  5082  0607  3DCE               	addwfc	(efgtoa@n+1)^(0+128),f
  5083  0608                     l3535:
  5084                           
  5085                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 481:             
      +                              --w;
  5086  0608  30FF               	movlw	255
  5087  0609  07B9               	addwf	efgtoa@w^(0+128),f
  5088  060A  30FF               	movlw	255
  5089  060B  3DBA               	addwfc	(efgtoa@w+1)^(0+128),f
  5090  060C                     l3537:
  5091                           
  5092                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 482:             
      +                              --t;
  5093  060C  30FF               	movlw	255
  5094  060D  07A6               	addwf	efgtoa@t^(0+128),f
  5095  060E  30FF               	movlw	255
  5096  060F  3DA7               	addwfc	(efgtoa@t+1)^(0+128),f
  5097  0610                     l3539:
  5098                           
  5099                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 479:             
      +                          while (t) {
  5100  0610  0826               	movf	efgtoa@t^(0+128),w
  5101  0611  0427               	iorwf	(efgtoa@t+1)^(0+128),w
  5102  0612  1D03               	btfss	3,2
  5103  0613  2E15               	goto	u5011
  5104  0614  2E16               	goto	u5010
  5105  0615                     u5011:
  5106  0615  2DF7               	goto	l3531
  5107  0616                     u5010:
  5108  0616                     l3541:
  5109                           
  5110                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 484:             
      +                          dbuf[n++] = (char)((int)'0' + d);
  5111  0616  0832               	movf	efgtoa@d^(0+128),w
  5112  0617  3E30               	addlw	48
  5113  0618  0020               	movlb	0	; select bank0
  5114  0619  00ED               	movwf	??_efgtoa
  5115  061A  0021               	movlb	1	; select bank1
  5116  061B  084D               	movf	efgtoa@n^(0+128),w
  5117  061C  3E20               	addlw	(low (_dbuf| (0+512)))& (0+255)
  5118  061D  0086               	movwf	6
  5119  061E  3002               	movlw	2	; select bank4/5
  5120  061F  0087               	movwf	7
  5121  0620  0020               	movlb	0	; select bank0
  5122  0621  086D               	movf	??_efgtoa,w
  5123  0622  0081               	movwf	1
  5124  0623                     l3543:
  5125  0623  3001               	movlw	1
  5126  0624  0021               	movlb	1	; select bank1
  5127  0625  07CD               	addwf	efgtoa@n^(0+128),f
  5128  0626  3000               	movlw	0
  5129  0627  3DCE               	addwfc	(efgtoa@n+1)^(0+128),f
  5130  0628                     l3545:
  5131                           
  5132                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 485:             
      +                          --w;
  5133  0628  30FF               	movlw	255
  5134  0629  07B9               	addwf	efgtoa@w^(0+128),f
  5135  062A  30FF               	movlw	255
  5136  062B  3DBA               	addwfc	(efgtoa@w+1)^(0+128),f
  5137  062C                     l3547:
  5138                           
  5139                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 487:         h -=
      +                           l*u;
  5140  062C  0844               	movf	(efgtoa@l+3)^(0+128),w
  5141  062D  0020               	movlb	0	; select bank0
  5142  062E  00A7               	movwf	___flmul@a+3
  5143  062F  0021               	movlb	1	; select bank1
  5144  0630  0843               	movf	(efgtoa@l+2)^(0+128),w
  5145  0631  0020               	movlb	0	; select bank0
  5146  0632  00A6               	movwf	___flmul@a+2
  5147  0633  0021               	movlb	1	; select bank1
  5148  0634  0842               	movf	(efgtoa@l+1)^(0+128),w
  5149  0635  0020               	movlb	0	; select bank0
  5150  0636  00A5               	movwf	___flmul@a+1
  5151  0637  0021               	movlb	1	; select bank1
  5152  0638  0841               	movf	efgtoa@l^(0+128),w
  5153  0639  0020               	movlb	0	; select bank0
  5154  063A  00A4               	movwf	___flmul@a
  5155  063B  0021               	movlb	1	; select bank1
  5156  063C  0852               	movf	(efgtoa@u+3)^(0+128),w
  5157  063D  0020               	movlb	0	; select bank0
  5158  063E  00A3               	movwf	___flmul@b+3
  5159  063F  0021               	movlb	1	; select bank1
  5160  0640  0851               	movf	(efgtoa@u+2)^(0+128),w
  5161  0641  0020               	movlb	0	; select bank0
  5162  0642  00A2               	movwf	___flmul@b+2
  5163  0643  0021               	movlb	1	; select bank1
  5164  0644  0850               	movf	(efgtoa@u+1)^(0+128),w
  5165  0645  0020               	movlb	0	; select bank0
  5166  0646  00A1               	movwf	___flmul@b+1
  5167  0647  0021               	movlb	1	; select bank1
  5168  0648  084F               	movf	efgtoa@u^(0+128),w
  5169  0649  0020               	movlb	0	; select bank0
  5170  064A  00A0               	movwf	___flmul@b
  5171  064B  318B  2321  3180   	fcall	___flmul
  5172  064E  0020               	movlb	0	; select bank0
  5173  064F  0823               	movf	?___flmul+3,w
  5174  0650  00BD               	movwf	___flsub@a+3
  5175  0651  0822               	movf	?___flmul+2,w
  5176  0652  00BC               	movwf	___flsub@a+2
  5177  0653  0821               	movf	?___flmul+1,w
  5178  0654  00BB               	movwf	___flsub@a+1
  5179  0655  0820               	movf	?___flmul,w
  5180  0656  00BA               	movwf	___flsub@a
  5181  0657  0021               	movlb	1	; select bank1
  5182  0658  0840               	movf	(efgtoa@h+3)^(0+128),w
  5183  0659  0020               	movlb	0	; select bank0
  5184  065A  00C1               	movwf	___flsub@b+3
  5185  065B  0021               	movlb	1	; select bank1
  5186  065C  083F               	movf	(efgtoa@h+2)^(0+128),w
  5187  065D  0020               	movlb	0	; select bank0
  5188  065E  00C0               	movwf	___flsub@b+2
  5189  065F  0021               	movlb	1	; select bank1
  5190  0660  083E               	movf	(efgtoa@h+1)^(0+128),w
  5191  0661  0020               	movlb	0	; select bank0
  5192  0662  00BF               	movwf	___flsub@b+1
  5193  0663  0021               	movlb	1	; select bank1
  5194  0664  083D               	movf	efgtoa@h^(0+128),w
  5195  0665  0020               	movlb	0	; select bank0
  5196  0666  00BE               	movwf	___flsub@b
  5197  0667  319E  2682  3180   	fcall	___flsub
  5198  066A  0020               	movlb	0	; select bank0
  5199  066B  083D               	movf	?___flsub+3,w
  5200  066C  0021               	movlb	1	; select bank1
  5201  066D  00C0               	movwf	(efgtoa@h+3)^(0+128)
  5202  066E  0020               	movlb	0	; select bank0
  5203  066F  083C               	movf	?___flsub+2,w
  5204  0670  0021               	movlb	1	; select bank1
  5205  0671  00BF               	movwf	(efgtoa@h+2)^(0+128)
  5206  0672  0020               	movlb	0	; select bank0
  5207  0673  083B               	movf	?___flsub+1,w
  5208  0674  0021               	movlb	1	; select bank1
  5209  0675  00BE               	movwf	(efgtoa@h+1)^(0+128)
  5210  0676  0020               	movlb	0	; select bank0
  5211  0677  083A               	movf	?___flsub,w
  5212  0678  0021               	movlb	1	; select bank1
  5213  0679  00BD               	movwf	efgtoa@h^(0+128)
  5214  067A                     l3549:
  5215                           
  5216                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 488:         u = 
      +                          u/10.0;
  5217  067A  3041               	movlw	65
  5218  067B  0020               	movlb	0	; select bank0
  5219  067C  00BD               	movwf	___fldiv@a+3
  5220  067D  3020               	movlw	32
  5221  067E  00BC               	movwf	___fldiv@a+2
  5222  067F  3000               	movlw	0
  5223  0680  00BB               	movwf	___fldiv@a+1
  5224  0681  3000               	movlw	0
  5225  0682  00BA               	movwf	___fldiv@a
  5226  0683  0021               	movlb	1	; select bank1
  5227  0684  0852               	movf	(efgtoa@u+3)^(0+128),w
  5228  0685  0020               	movlb	0	; select bank0
  5229  0686  00C1               	movwf	___fldiv@b+3
  5230  0687  0021               	movlb	1	; select bank1
  5231  0688  0851               	movf	(efgtoa@u+2)^(0+128),w
  5232  0689  0020               	movlb	0	; select bank0
  5233  068A  00C0               	movwf	___fldiv@b+2
  5234  068B  0021               	movlb	1	; select bank1
  5235  068C  0850               	movf	(efgtoa@u+1)^(0+128),w
  5236  068D  0020               	movlb	0	; select bank0
  5237  068E  00BF               	movwf	___fldiv@b+1
  5238  068F  0021               	movlb	1	; select bank1
  5239  0690  084F               	movf	efgtoa@u^(0+128),w
  5240  0691  0020               	movlb	0	; select bank0
  5241  0692  00BE               	movwf	___fldiv@b
  5242  0693  3196  264C  3180   	fcall	___fldiv
  5243  0696  0020               	movlb	0	; select bank0
  5244  0697  083D               	movf	?___fldiv+3,w
  5245  0698  0021               	movlb	1	; select bank1
  5246  0699  00D2               	movwf	(efgtoa@u+3)^(0+128)
  5247  069A  0020               	movlb	0	; select bank0
  5248  069B  083C               	movf	?___fldiv+2,w
  5249  069C  0021               	movlb	1	; select bank1
  5250  069D  00D1               	movwf	(efgtoa@u+2)^(0+128)
  5251  069E  0020               	movlb	0	; select bank0
  5252  069F  083B               	movf	?___fldiv+1,w
  5253  06A0  0021               	movlb	1	; select bank1
  5254  06A1  00D0               	movwf	(efgtoa@u+1)^(0+128)
  5255  06A2  0020               	movlb	0	; select bank0
  5256  06A3  083A               	movf	?___fldiv,w
  5257  06A4  0021               	movlb	1	; select bank1
  5258  06A5  00CF               	movwf	efgtoa@u^(0+128)
  5259  06A6                     l3551:
  5260                           
  5261                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 489:         --ne
      +                          ;
  5262  06A6  30FF               	movlw	255
  5263  06A7  07AA               	addwf	efgtoa@ne^(0+128),f
  5264  06A8  30FF               	movlw	255
  5265  06A9  3DAB               	addwfc	(efgtoa@ne+1)^(0+128),f
  5266  06AA                     l3553:
  5267                           
  5268                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 490:         ++i;
  5269  06AA  3001               	movlw	1
  5270  06AB  07C5               	addwf	efgtoa@i^(0+128),f
  5271  06AC  3000               	movlw	0
  5272  06AD  3DC6               	addwfc	(efgtoa@i+1)^(0+128),f
  5273  06AE                     l3555:
  5274                           
  5275                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 468:     while ((
      +                          i < m) && (n < (80 - 5))) {
  5276  06AE  0846               	movf	(efgtoa@i+1)^(0+128),w
  5277  06AF  3A80               	xorlw	128
  5278  06B0  0020               	movlb	0	; select bank0
  5279  06B1  00ED               	movwf	??_efgtoa
  5280  06B2  0021               	movlb	1	; select bank1
  5281  06B3  082D               	movf	(efgtoa@m+1)^(0+128),w
  5282  06B4  3A80               	xorlw	128
  5283  06B5  0020               	movlb	0	; select bank0
  5284  06B6  026D               	subwf	??_efgtoa,w
  5285  06B7  1D03               	skipz
  5286  06B8  2EBC               	goto	u5025
  5287  06B9  0021               	movlb	1	; select bank1
  5288  06BA  082C               	movf	efgtoa@m^(0+128),w
  5289  06BB  0245               	subwf	efgtoa@i^(0+128),w
  5290  06BC                     u5025:
  5291  06BC  1803               	skipnc
  5292  06BD  2EBF               	goto	u5021
  5293  06BE  2EC0               	goto	u5020
  5294  06BF                     u5021:
  5295  06BF  2ED0               	goto	l3559
  5296  06C0                     u5020:
  5297  06C0                     l3557:
  5298  06C0  0021               	movlb	1	; select bank1
  5299  06C1  084E               	movf	(efgtoa@n+1)^(0+128),w
  5300  06C2  3A80               	xorlw	128
  5301  06C3  0020               	movlb	0	; select bank0
  5302  06C4  00ED               	movwf	??_efgtoa
  5303  06C5  3080               	movlw	128
  5304  06C6  026D               	subwf	??_efgtoa,w
  5305  06C7  1D03               	skipz
  5306  06C8  2ECC               	goto	u5035
  5307  06C9  304B               	movlw	75
  5308  06CA  0021               	movlb	1	; select bank1
  5309  06CB  024D               	subwf	efgtoa@n^(0+128),w
  5310  06CC                     u5035:
  5311  06CC  1C03               	skipc
  5312  06CD  2ECF               	goto	u5031
  5313  06CE  2ED0               	goto	u5030
  5314  06CF                     u5031:
  5315  06CF  2D6B               	goto	l3507
  5316  06D0                     u5030:
  5317  06D0                     l3559:
  5318                           
  5319                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 492:     if (!pp 
      +                          && (flags & (1 << 4))) {
  5320  06D0  0021               	movlb	1	; select bank1
  5321  06D1  0828               	movf	efgtoa@pp^(0+128),w
  5322  06D2  0429               	iorwf	(efgtoa@pp+1)^(0+128),w
  5323  06D3  1D03               	btfss	3,2
  5324  06D4  2ED6               	goto	u5041
  5325  06D5  2ED7               	goto	u5040
  5326  06D6                     u5041:
  5327  06D6  2EEC               	goto	l3567
  5328  06D7                     u5040:
  5329  06D7                     l3561:
  5330  06D7  1E6E               	btfss	_flags^(0+128),4
  5331  06D8  2EDA               	goto	u5051
  5332  06D9  2EDB               	goto	u5050
  5333  06DA                     u5051:
  5334  06DA  2EEC               	goto	l3567
  5335  06DB                     u5050:
  5336  06DB                     l3563:
  5337                           
  5338                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 493:         dbuf
      +                          [n++] = '.';
  5339  06DB  302E               	movlw	46
  5340  06DC  0020               	movlb	0	; select bank0
  5341  06DD  00ED               	movwf	??_efgtoa
  5342  06DE  0021               	movlb	1	; select bank1
  5343  06DF  084D               	movf	efgtoa@n^(0+128),w
  5344  06E0  3E20               	addlw	(low (_dbuf| (0+512)))& (0+255)
  5345  06E1  0086               	movwf	6
  5346  06E2  3002               	movlw	2	; select bank4/5
  5347  06E3  0087               	movwf	7
  5348  06E4  0020               	movlb	0	; select bank0
  5349  06E5  086D               	movf	??_efgtoa,w
  5350  06E6  0081               	movwf	1
  5351  06E7                     l3565:
  5352  06E7  3001               	movlw	1
  5353  06E8  0021               	movlb	1	; select bank1
  5354  06E9  07CD               	addwf	efgtoa@n^(0+128),f
  5355  06EA  3000               	movlw	0
  5356  06EB  3DCE               	addwfc	(efgtoa@n+1)^(0+128),f
  5357  06EC                     l3567:
  5358                           
  5359                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 495:     dbuf[n] 
      +                          = '\0';
  5360  06EC  084D               	movf	efgtoa@n^(0+128),w
  5361  06ED  3E20               	addlw	(low (_dbuf| (0+512)))& (0+255)
  5362  06EE  0086               	movwf	6
  5363  06EF  3002               	movlw	2	; select bank4/5
  5364  06F0  0087               	movwf	7
  5365  06F1  0181               	clrf	1
  5366  06F2                     l3569:
  5367                           
  5368                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 498:     if (nmod
      +                          e == 'e') {
  5369  06F2  3065               	movlw	101
  5370  06F3  063B               	xorwf	efgtoa@nmode^(0+128),w
  5371  06F4  1D03               	btfss	3,2
  5372  06F5  2EF7               	goto	u5061
  5373  06F6  2EF8               	goto	u5060
  5374  06F7                     u5061:
  5375  06F7  2FC1               	goto	l3627
  5376  06F8                     u5060:
  5377  06F8                     l3571:
  5378                           
  5379                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 499:         i = 
      +                          sizeof(dbuf) - 1;
  5380  06F8  304F               	movlw	79
  5381  06F9  00C5               	movwf	efgtoa@i^(0+128)
  5382  06FA  3000               	movlw	0
  5383  06FB  00C6               	movwf	(efgtoa@i^(0+128)+1)
  5384  06FC                     l3573:
  5385                           
  5386                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 500:         dbuf
      +                          [i] = '\0';
  5387  06FC  0845               	movf	efgtoa@i^(0+128),w
  5388  06FD  3E20               	addlw	(low (_dbuf| (0+512)))& (0+255)
  5389  06FE  0086               	movwf	6
  5390  06FF  3002               	movlw	2	; select bank4/5
  5391  0700  0087               	movwf	7
  5392  0701  0181               	clrf	1
  5393  0702                     l3575:
  5394                           
  5395                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 501:         sign
      +                           = 0;
  5396  0702  01B4               	clrf	efgtoa@sign^(0+128)
  5397  0703  01B5               	clrf	(efgtoa@sign+1)^(0+128)
  5398  0704                     l3577:
  5399                           
  5400                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 502:         if (
      +                          e < 0) {
  5401  0704  1FCC               	btfss	(efgtoa@e+1)^(0+128),7
  5402  0705  2F07               	goto	u5071
  5403  0706  2F08               	goto	u5070
  5404  0707                     u5071:
  5405  0707  2F11               	goto	l3583
  5406  0708                     u5070:
  5407  0708                     l3579:
  5408                           
  5409                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 503:             
      +                          sign = 1;
  5410  0708  3001               	movlw	1
  5411  0709  00B4               	movwf	efgtoa@sign^(0+128)
  5412  070A  3000               	movlw	0
  5413  070B  00B5               	movwf	(efgtoa@sign^(0+128)+1)
  5414  070C                     l3581:
  5415                           
  5416                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 504:             
      +                          e = -e;
  5417  070C  09CB               	comf	efgtoa@e^(0+128),f
  5418  070D  09CC               	comf	(efgtoa@e+1)^(0+128),f
  5419  070E  0ACB               	incf	efgtoa@e^(0+128),f
  5420  070F  1903               	skipnz
  5421  0710  0ACC               	incf	(efgtoa@e+1)^(0+128),f
  5422  0711                     l3583:
  5423                           
  5424                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 506:         p = 
      +                          2;
  5425  0711  3002               	movlw	2
  5426  0712  00B7               	movwf	efgtoa@p^(0+128)
  5427  0713  3000               	movlw	0
  5428  0714  00B8               	movwf	(efgtoa@p^(0+128)+1)
  5429                           
  5430                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 507:         whil
      +                          e (e || (0 < p)) {
  5431  0715  2F4C               	goto	l3595
  5432  0716                     l3585:
  5433                           
  5434                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 508:             
      +                          --i;
  5435  0716  30FF               	movlw	255
  5436  0717  0021               	movlb	1	; select bank1
  5437  0718  07C5               	addwf	efgtoa@i^(0+128),f
  5438  0719  30FF               	movlw	255
  5439  071A  3DC6               	addwfc	(efgtoa@i+1)^(0+128),f
  5440  071B                     l3587:
  5441                           
  5442                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 509:             
      +                          dbuf[i] = '0' + (e % 10);
  5443  071B  300A               	movlw	10
  5444  071C  00F0               	movwf	___awmod@divisor
  5445  071D  3000               	movlw	0
  5446  071E  00F1               	movwf	___awmod@divisor+1
  5447  071F  084C               	movf	(efgtoa@e+1)^(0+128),w
  5448  0720  00F3               	movwf	___awmod@dividend+1
  5449  0721  084B               	movf	efgtoa@e^(0+128),w
  5450  0722  00F2               	movwf	___awmod@dividend
  5451  0723  319F  27AD  3180   	fcall	___awmod
  5452  0726  0870               	movf	?___awmod,w
  5453  0727  3E30               	addlw	48
  5454  0728  0020               	movlb	0	; select bank0
  5455  0729  00ED               	movwf	??_efgtoa
  5456  072A  0021               	movlb	1	; select bank1
  5457  072B  0845               	movf	efgtoa@i^(0+128),w
  5458  072C  3E20               	addlw	(low (_dbuf| (0+512)))& (0+255)
  5459  072D  0086               	movwf	6
  5460  072E  3002               	movlw	2	; select bank4/5
  5461  072F  0087               	movwf	7
  5462  0730  0020               	movlb	0	; select bank0
  5463  0731  086D               	movf	??_efgtoa,w
  5464  0732  0081               	movwf	1
  5465  0733                     l3589:
  5466                           
  5467                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 510:             
      +                          e = e / 10;
  5468  0733  300A               	movlw	10
  5469  0734  00F0               	movwf	___awdiv@divisor
  5470  0735  3000               	movlw	0
  5471  0736  00F1               	movwf	___awdiv@divisor+1
  5472  0737  0021               	movlb	1	; select bank1
  5473  0738  084C               	movf	(efgtoa@e+1)^(0+128),w
  5474  0739  00F3               	movwf	___awdiv@dividend+1
  5475  073A  084B               	movf	efgtoa@e^(0+128),w
  5476  073B  00F2               	movwf	___awdiv@dividend
  5477  073C  3191  21F3  3180   	fcall	___awdiv
  5478  073F  0871               	movf	?___awdiv+1,w
  5479  0740  0021               	movlb	1	; select bank1
  5480  0741  00CC               	movwf	(efgtoa@e+1)^(0+128)
  5481  0742  0870               	movf	?___awdiv,w
  5482  0743  00CB               	movwf	efgtoa@e^(0+128)
  5483  0744                     l3591:
  5484                           
  5485                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 511:             
      +                          --p;
  5486  0744  30FF               	movlw	255
  5487  0745  07B7               	addwf	efgtoa@p^(0+128),f
  5488  0746  30FF               	movlw	255
  5489  0747  3DB8               	addwfc	(efgtoa@p+1)^(0+128),f
  5490  0748                     l3593:
  5491                           
  5492                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 512:             
      +                          --w;
  5493  0748  30FF               	movlw	255
  5494  0749  07B9               	addwf	efgtoa@w^(0+128),f
  5495  074A  30FF               	movlw	255
  5496  074B  3DBA               	addwfc	(efgtoa@w+1)^(0+128),f
  5497  074C                     l3595:
  5498                           
  5499                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 507:         whil
      +                          e (e || (0 < p)) {
  5500  074C  084B               	movf	efgtoa@e^(0+128),w
  5501  074D  044C               	iorwf	(efgtoa@e+1)^(0+128),w
  5502  074E  1D03               	btfss	3,2
  5503  074F  2F51               	goto	u5081
  5504  0750  2F52               	goto	u5080
  5505  0751                     u5081:
  5506  0751  2F16               	goto	l3585
  5507  0752                     u5080:
  5508  0752                     l3597:
  5509  0752  0838               	movf	(efgtoa@p+1)^(0+128),w
  5510  0753  3A80               	xorlw	128
  5511  0754  0020               	movlb	0	; select bank0
  5512  0755  00ED               	movwf	??_efgtoa
  5513  0756  3080               	movlw	128
  5514  0757  026D               	subwf	??_efgtoa,w
  5515  0758  1D03               	skipz
  5516  0759  2F5D               	goto	u5095
  5517  075A  3001               	movlw	1
  5518  075B  0021               	movlb	1	; select bank1
  5519  075C  0237               	subwf	efgtoa@p^(0+128),w
  5520  075D                     u5095:
  5521  075D  1803               	skipnc
  5522  075E  2F60               	goto	u5091
  5523  075F  2F61               	goto	u5090
  5524  0760                     u5091:
  5525  0760  2F16               	goto	l3585
  5526  0761                     u5090:
  5527  0761                     l3599:
  5528                           
  5529                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 514:         --i;
  5530  0761  30FF               	movlw	255
  5531  0762  0021               	movlb	1	; select bank1
  5532  0763  07C5               	addwf	efgtoa@i^(0+128),f
  5533  0764  30FF               	movlw	255
  5534  0765  3DC6               	addwfc	(efgtoa@i+1)^(0+128),f
  5535  0766                     l3601:
  5536                           
  5537                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 515:         dbuf
      +                          [i] = sign ? '-' : '+';
  5538  0766  0834               	movf	efgtoa@sign^(0+128),w
  5539  0767  0435               	iorwf	(efgtoa@sign+1)^(0+128),w
  5540  0768  1D03               	btfss	3,2
  5541  0769  2F6B               	goto	u5101
  5542  076A  2F6C               	goto	u5100
  5543  076B                     u5101:
  5544  076B  2F71               	goto	l3605
  5545  076C                     u5100:
  5546  076C                     l3603:
  5547  076C  302B               	movlw	43
  5548  076D  00A2               	movwf	_efgtoa$737^(0+128)
  5549  076E  3000               	movlw	0
  5550  076F  00A3               	movwf	(_efgtoa$737^(0+128)+1)
  5551  0770  2F75               	goto	l3607
  5552  0771                     l3605:
  5553  0771  302D               	movlw	45
  5554  0772  00A2               	movwf	_efgtoa$737^(0+128)
  5555  0773  3000               	movlw	0
  5556  0774  00A3               	movwf	(_efgtoa$737^(0+128)+1)
  5557  0775                     l3607:
  5558  0775  0822               	movf	_efgtoa$737^(0+128),w
  5559  0776  0020               	movlb	0	; select bank0
  5560  0777  00ED               	movwf	??_efgtoa
  5561  0778  0021               	movlb	1	; select bank1
  5562  0779  0845               	movf	efgtoa@i^(0+128),w
  5563  077A  3E20               	addlw	(low (_dbuf| (0+512)))& (0+255)
  5564  077B  0086               	movwf	6
  5565  077C  3002               	movlw	2	; select bank4/5
  5566  077D  0087               	movwf	7
  5567  077E  0020               	movlb	0	; select bank0
  5568  077F  086D               	movf	??_efgtoa,w
  5569  0780  0081               	movwf	1
  5570  0781                     l3609:
  5571                           
  5572                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 516:         --w;
  5573  0781  30FF               	movlw	255
  5574  0782  0021               	movlb	1	; select bank1
  5575  0783  07B9               	addwf	efgtoa@w^(0+128),f
  5576  0784  30FF               	movlw	255
  5577  0785  3DBA               	addwfc	(efgtoa@w+1)^(0+128),f
  5578  0786                     l3611:
  5579                           
  5580                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 517:         --i;
  5581  0786  30FF               	movlw	255
  5582  0787  07C5               	addwf	efgtoa@i^(0+128),f
  5583  0788  30FF               	movlw	255
  5584  0789  3DC6               	addwfc	(efgtoa@i+1)^(0+128),f
  5585  078A                     l3615:	
  5586                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 518:         dbuf
      +                          [i] = (0 && isupper((int)c), ((unsigned)((int)c)-'A') < 26) ? 'E' : 'e';
  5587                           
  5588  078A  0020               	movlb	0	; select bank0
  5589  078B  086C               	movf	efgtoa@c,w
  5590  078C  3EBF               	addlw	191
  5591  078D  00ED               	movwf	??_efgtoa
  5592  078E  30FF               	movlw	255
  5593  078F  1803               	skipnc
  5594  0790  3000               	movlw	0
  5595  0791  00EE               	movwf	??_efgtoa+1
  5596  0792  3000               	movlw	0
  5597  0793  026E               	subwf	??_efgtoa+1,w
  5598  0794  301A               	movlw	26
  5599  0795  1903               	skipnz
  5600  0796  026D               	subwf	??_efgtoa,w
  5601  0797  1C03               	skipc
  5602  0798  2F9A               	goto	u5111
  5603  0799  2F9B               	goto	u5110
  5604  079A                     u5111:
  5605  079A  2FA1               	goto	l3619
  5606  079B                     u5110:
  5607  079B                     l3617:
  5608  079B  3065               	movlw	101
  5609  079C  0021               	movlb	1	; select bank1
  5610  079D  00A4               	movwf	_efgtoa$738^(0+128)
  5611  079E  3000               	movlw	0
  5612  079F  00A5               	movwf	(_efgtoa$738^(0+128)+1)
  5613  07A0  2FA6               	goto	l3621
  5614  07A1                     l3619:
  5615  07A1  3045               	movlw	69
  5616  07A2  0021               	movlb	1	; select bank1
  5617  07A3  00A4               	movwf	_efgtoa$738^(0+128)
  5618  07A4  3000               	movlw	0
  5619  07A5  00A5               	movwf	(_efgtoa$738^(0+128)+1)
  5620  07A6                     l3621:
  5621  07A6  0824               	movf	_efgtoa$738^(0+128),w
  5622  07A7  0020               	movlb	0	; select bank0
  5623  07A8  00ED               	movwf	??_efgtoa
  5624  07A9  0021               	movlb	1	; select bank1
  5625  07AA  0845               	movf	efgtoa@i^(0+128),w
  5626  07AB  3E20               	addlw	(low (_dbuf| (0+512)))& (0+255)
  5627  07AC  0086               	movwf	6
  5628  07AD  3002               	movlw	2	; select bank4/5
  5629  07AE  0087               	movwf	7
  5630  07AF  0020               	movlb	0	; select bank0
  5631  07B0  086D               	movf	??_efgtoa,w
  5632  07B1  0081               	movwf	1
  5633  07B2                     l3623:
  5634                           
  5635                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 519:         --w;
  5636  07B2  30FF               	movlw	255
  5637  07B3  0021               	movlb	1	; select bank1
  5638  07B4  07B9               	addwf	efgtoa@w^(0+128),f
  5639  07B5  30FF               	movlw	255
  5640  07B6  3DBA               	addwfc	(efgtoa@w+1)^(0+128),f
  5641  07B7                     l3625:
  5642                           
  5643                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 520:         strc
      +                          py(&dbuf[n], &dbuf[i]);
  5644  07B7  0845               	movf	efgtoa@i^(0+128),w
  5645  07B8  3E20               	addlw	(low (_dbuf| (0+512)))& (0+255)
  5646  07B9  00F0               	movwf	strcpy@src
  5647  07BA  3002               	movlw	2
  5648  07BB  00F1               	movwf	strcpy@src+1
  5649  07BC  084D               	movf	efgtoa@n^(0+128),w
  5650  07BD  3E20               	addlw	(low (_dbuf| (0+512)))& (0+255)
  5651  07BE  319E  26C3  3180   	fcall	_strcpy
  5652  07C1                     l3627:
  5653                           
  5654                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 524:     return p
      +                          ad(fp, &dbuf[0], w);
  5655  07C1  3020               	movlw	(low (_dbuf| (0+512)))& (0+255)
  5656  07C2  0020               	movlb	0	; select bank0
  5657  07C3  00ED               	movwf	??_efgtoa
  5658  07C4  086D               	movf	??_efgtoa,w
  5659  07C5  00A4               	movwf	pad@buf
  5660  07C6  0021               	movlb	1	; select bank1
  5661  07C7  083A               	movf	(efgtoa@w+1)^(0+128),w
  5662  07C8  0020               	movlb	0	; select bank0
  5663  07C9  00A6               	movwf	pad@p+1
  5664  07CA  0021               	movlb	1	; select bank1
  5665  07CB  0839               	movf	efgtoa@w^(0+128),w
  5666  07CC  0020               	movlb	0	; select bank0
  5667  07CD  00A5               	movwf	pad@p
  5668  07CE  0021               	movlb	1	; select bank1
  5669  07CF  0836               	movf	efgtoa@fp^(0+128),w
  5670  07D0  3191  2139  3180   	fcall	_pad
  5671  07D3  0020               	movlb	0	; select bank0
  5672  07D4  0825               	movf	?_pad+1,w
  5673  07D5  00E9               	movwf	?_efgtoa+1
  5674  07D6  0824               	movf	?_pad,w
  5675  07D7  00E8               	movwf	?_efgtoa
  5676  07D8                     l711:
  5677  07D8  0008               	return
  5678  07D9                     __end_of_efgtoa:
  5679                           
  5680                           	psect	text6
  5681  1D87                     __ptext6:	
  5682 ;; *************** function _tolower *****************
  5683 ;; Defined at:
  5684 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\tolower.c"
  5685 ;; Parameters:    Size  Location     Type
  5686 ;;  c               2    6[COMMON] int 
  5687 ;; Auto vars:     Size  Location     Type
  5688 ;;		None
  5689 ;; Return value:  Size  Location     Type
  5690 ;;                  2    6[COMMON] int 
  5691 ;; Registers used:
  5692 ;;		wreg, status,2, status,0
  5693 ;; Tracked objects:
  5694 ;;		On entry : 0/0
  5695 ;;		On exit  : 0/0
  5696 ;;		Unchanged: 0/0
  5697 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  5698 ;;      Params:         2       0       0       0       0       0       0       0
  5699 ;;      Locals:         0       0       0       0       0       0       0       0
  5700 ;;      Temps:          2       0       0       0       0       0       0       0
  5701 ;;      Totals:         4       0       0       0       0       0       0       0
  5702 ;;Total ram usage:        4 bytes
  5703 ;; Hardware stack levels used: 1
  5704 ;; Hardware stack levels required when called: 1
  5705 ;; This function calls:
  5706 ;;		_isupper
  5707 ;; This function is called by:
  5708 ;;		_efgtoa
  5709 ;;		_vfpfcnvrt
  5710 ;; This function uses a non-reentrant model
  5711 ;;
  5712                           
  5713  1D87                     _tolower:	
  5714                           ;psect for function _tolower
  5715                           
  5716  1D87                     l3277:	
  5717                           ;incstack = 0
  5718                           ; Regs used in _tolower: [wreg+status,2+status,0]
  5719                           
  5720  1D87                     l3281:
  5721  1D87  0876               	movf	tolower@c,w
  5722  1D88  3EBF               	addlw	191
  5723  1D89  00F8               	movwf	??_tolower
  5724  1D8A  30FF               	movlw	255
  5725  1D8B  3D77               	addwfc	tolower@c+1,w
  5726  1D8C  00F9               	movwf	??_tolower+1
  5727  1D8D  3000               	movlw	0
  5728  1D8E  0279               	subwf	??_tolower+1,w
  5729  1D8F  301A               	movlw	26
  5730  1D90  1903               	skipnz
  5731  1D91  0278               	subwf	??_tolower,w
  5732  1D92  1803               	skipnc
  5733  1D93  2D95               	goto	u4481
  5734  1D94  2D96               	goto	u4480
  5735  1D95                     u4481:
  5736  1D95  2D9D               	goto	l939
  5737  1D96                     u4480:
  5738  1D96                     l3283:
  5739  1D96  3020               	movlw	32
  5740  1D97  0476               	iorwf	tolower@c,w
  5741  1D98  00F6               	movwf	?_tolower
  5742  1D99  3000               	movlw	0
  5743  1D9A  0477               	iorwf	tolower@c+1,w
  5744  1D9B  00F7               	movwf	?_tolower+1
  5745  1D9C  2D9D               	goto	l942
  5746  1D9D                     l939:
  5747  1D9D                     l942:
  5748  1D9D  0008               	return
  5749  1D9E                     __end_of_tolower:
  5750                           
  5751                           	psect	text7
  5752  1DB6                     __ptext7:	
  5753 ;; *************** function _isupper *****************
  5754 ;; Defined at:
  5755 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\isupper.c"
  5756 ;; Parameters:    Size  Location     Type
  5757 ;;  c               2    0[COMMON] int 
  5758 ;; Auto vars:     Size  Location     Type
  5759 ;;		None
  5760 ;; Return value:  Size  Location     Type
  5761 ;;                  2    0[COMMON] int 
  5762 ;; Registers used:
  5763 ;;		wreg, status,2, status,0
  5764 ;; Tracked objects:
  5765 ;;		On entry : 0/0
  5766 ;;		On exit  : 0/0
  5767 ;;		Unchanged: 0/0
  5768 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  5769 ;;      Params:         2       0       0       0       0       0       0       0
  5770 ;;      Locals:         0       0       0       0       0       0       0       0
  5771 ;;      Temps:          4       0       0       0       0       0       0       0
  5772 ;;      Totals:         6       0       0       0       0       0       0       0
  5773 ;;Total ram usage:        6 bytes
  5774 ;; Hardware stack levels used: 1
  5775 ;; This function calls:
  5776 ;;		Nothing
  5777 ;; This function is called by:
  5778 ;;		_efgtoa
  5779 ;;		_vfpfcnvrt
  5780 ;;		_tolower
  5781 ;; This function uses a non-reentrant model
  5782 ;;
  5783                           
  5784  1DB6                     _isupper:	
  5785                           ;psect for function _isupper
  5786                           
  5787  1DB6                     l2765:	
  5788                           ;incstack = 0
  5789                           ; Regs used in _isupper: [wreg+status,2+status,0]
  5790                           
  5791  1DB6  0870               	movf	isupper@c,w
  5792  1DB7  3EBF               	addlw	191
  5793  1DB8  00F2               	movwf	??_isupper
  5794  1DB9  30FF               	movlw	255
  5795  1DBA  3D71               	addwfc	isupper@c+1,w
  5796  1DBB  00F3               	movwf	??_isupper+1
  5797  1DBC  3000               	movlw	0
  5798  1DBD  0273               	subwf	??_isupper+1,w
  5799  1DBE  301A               	movlw	26
  5800  1DBF  1903               	skipnz
  5801  1DC0  0272               	subwf	??_isupper,w
  5802  1DC1  1C03               	skipc
  5803  1DC2  2DC4               	goto	u3361
  5804  1DC3  2DC6               	goto	u3360
  5805  1DC4                     u3361:
  5806  1DC4  3001               	movlw	1
  5807  1DC5  2DC7               	goto	u3370
  5808  1DC6                     u3360:
  5809  1DC6  3000               	movlw	0
  5810  1DC7                     u3370:
  5811  1DC7  00F4               	movwf	??_isupper+2
  5812  1DC8  01F5               	clrf	??_isupper+3
  5813  1DC9  0874               	movf	??_isupper+2,w
  5814  1DCA  00F0               	movwf	?_isupper
  5815  1DCB  0875               	movf	??_isupper+3,w
  5816  1DCC  00F1               	movwf	?_isupper+1
  5817  1DCD                     l887:
  5818  1DCD  0008               	return
  5819  1DCE                     __end_of_isupper:
  5820                           
  5821                           	psect	text8
  5822  1EC3                     __ptext8:	
  5823 ;; *************** function _strcpy *****************
  5824 ;; Defined at:
  5825 ;;		line 3 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\strcpy.c"
  5826 ;; Parameters:    Size  Location     Type
  5827 ;;  dest            1    wreg     PTR unsigned char 
  5828 ;;		 -> dbuf(80), 
  5829 ;;  src             2    0[COMMON] PTR const unsigned char 
  5830 ;;		 -> STR_10(4), STR_9(4), STR_6(4), STR_5(4), 
  5831 ;;		 -> dbuf(80), 
  5832 ;; Auto vars:     Size  Location     Type
  5833 ;;  dest            1    7[COMMON] PTR unsigned char 
  5834 ;;		 -> dbuf(80), 
  5835 ;;  s               2    4[COMMON] PTR const unsigned char 
  5836 ;;		 -> STR_10(4), STR_9(4), STR_6(4), STR_5(4), 
  5837 ;;		 -> dbuf(80), 
  5838 ;;  d               1    6[COMMON] PTR unsigned char 
  5839 ;;		 -> dbuf(80), 
  5840 ;; Return value:  Size  Location     Type
  5841 ;;                  1    wreg      PTR unsigned char 
  5842 ;; Registers used:
  5843 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath
  5844 ;; Tracked objects:
  5845 ;;		On entry : 0/0
  5846 ;;		On exit  : 0/0
  5847 ;;		Unchanged: 0/0
  5848 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  5849 ;;      Params:         2       0       0       0       0       0       0       0
  5850 ;;      Locals:         4       0       0       0       0       0       0       0
  5851 ;;      Temps:          2       0       0       0       0       0       0       0
  5852 ;;      Totals:         8       0       0       0       0       0       0       0
  5853 ;;Total ram usage:        8 bytes
  5854 ;; Hardware stack levels used: 1
  5855 ;; This function calls:
  5856 ;;		Nothing
  5857 ;; This function is called by:
  5858 ;;		_efgtoa
  5859 ;; This function uses a non-reentrant model
  5860 ;;
  5861                           
  5862  1EC3                     _strcpy:	
  5863                           ;psect for function _strcpy
  5864                           
  5865                           
  5866                           ;incstack = 0
  5867                           ; Regs used in _strcpy: [wreg-fsr1h+status,2+status,0+pclath]
  5868                           ;strcpy@dest stored from wreg
  5869  1EC3  00F7               	movwf	strcpy@dest
  5870  1EC4                     l3273:
  5871  1EC4  0871               	movf	strcpy@src+1,w
  5872  1EC5  00F5               	movwf	strcpy@s+1
  5873  1EC6  0870               	movf	strcpy@src,w
  5874  1EC7  00F4               	movwf	strcpy@s
  5875  1EC8  0877               	movf	strcpy@dest,w
  5876  1EC9  00F2               	movwf	??_strcpy
  5877  1ECA  0872               	movf	??_strcpy,w
  5878  1ECB  00F6               	movwf	strcpy@d
  5879  1ECC                     l3275:
  5880  1ECC  0876               	movf	strcpy@d,w
  5881  1ECD  0086               	movwf	6
  5882  1ECE  3002               	movlw	2	; select bank4/5
  5883  1ECF  0087               	movwf	7
  5884  1ED0  0AF6               	incf	strcpy@d,f
  5885  1ED1  0875               	movf	strcpy@s+1,w
  5886  1ED2  00F3               	movwf	??_strcpy+1
  5887  1ED3  0874               	movf	strcpy@s,w
  5888  1ED4  00F2               	movwf	??_strcpy
  5889  1ED5  0AF4               	incf	strcpy@s,f
  5890  1ED6  1903               	skipnz
  5891  1ED7  0AF5               	incf	strcpy@s+1,f
  5892  1ED8  0872               	movf	??_strcpy,w
  5893  1ED9  0084               	movwf	4
  5894  1EDA  0873               	movf	??_strcpy+1,w
  5895  1EDB  0085               	movwf	5
  5896  1EDC  0800               	movf	0,w	;code access
  5897  1EDD  3FC0               	movwi [0]fsr1
  5898  1EDE  0889               	movf	9,f
  5899  1EDF  1D03               	btfss	3,2
  5900  1EE0  2EE2               	goto	u4471
  5901  1EE1  2EE3               	goto	u4470
  5902  1EE2                     u4471:
  5903  1EE2  2ECC               	goto	l3275
  5904  1EE3                     u4470:
  5905  1EE3                     l919:
  5906  1EE3  0008               	return
  5907  1EE4                     __end_of_strcpy:
  5908                           
  5909                           	psect	text9
  5910  1139                     __ptext9:	
  5911 ;; *************** function _pad *****************
  5912 ;; Defined at:
  5913 ;;		line 72 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c"
  5914 ;; Parameters:    Size  Location     Type
  5915 ;;  fp              1    wreg     PTR struct _IO_FILE
  5916 ;;		 -> sprintf@f(10), 
  5917 ;;  buf             1    4[BANK0 ] PTR unsigned char 
  5918 ;;		 -> dbuf(80), 
  5919 ;;  p               2    5[BANK0 ] int 
  5920 ;; Auto vars:     Size  Location     Type
  5921 ;;  fp              1   11[BANK0 ] PTR struct _IO_FILE
  5922 ;;		 -> sprintf@f(10), 
  5923 ;;  w               2    9[BANK0 ] int 
  5924 ;;  i               2    7[BANK0 ] int 
  5925 ;; Return value:  Size  Location     Type
  5926 ;;                  2    4[BANK0 ] int 
  5927 ;; Registers used:
  5928 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5929 ;; Tracked objects:
  5930 ;;		On entry : 0/0
  5931 ;;		On exit  : 0/0
  5932 ;;		Unchanged: 0/0
  5933 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  5934 ;;      Params:         0       3       0       0       0       0       0       0
  5935 ;;      Locals:         0       5       0       0       0       0       0       0
  5936 ;;      Temps:          1       0       0       0       0       0       0       0
  5937 ;;      Totals:         1       8       0       0       0       0       0       0
  5938 ;;Total ram usage:        9 bytes
  5939 ;; Hardware stack levels used: 1
  5940 ;; Hardware stack levels required when called: 3
  5941 ;; This function calls:
  5942 ;;		_fputc
  5943 ;;		_fputs
  5944 ;;		_strlen
  5945 ;; This function is called by:
  5946 ;;		_efgtoa
  5947 ;; This function uses a non-reentrant model
  5948 ;;
  5949                           
  5950  1139                     _pad:	
  5951                           ;psect for function _pad
  5952                           
  5953                           
  5954                           ;incstack = 0
  5955                           ; Regs used in _pad: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  5956                           ;pad@fp stored from wreg
  5957  1139  0020               	movlb	0	; select bank0
  5958  113A  00AB               	movwf	pad@fp
  5959  113B                     l3227:
  5960                           
  5961                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 72: static int pa
      +                          d(FILE *fp, char *buf, int p);C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\commo
      +                          n\doprnt.c: 73: {;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 
      +                          74:     int i, w;;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 
      +                          77:     if (flags & (1 << 0)) {
  5962  113B  0021               	movlb	1	; select bank1
  5963  113C  1C6E               	btfss	_flags^(0+128),0
  5964  113D  293F               	goto	u4351
  5965  113E  2940               	goto	u4350
  5966  113F                     u4351:
  5967  113F  2949               	goto	l3231
  5968  1140                     u4350:
  5969  1140                     l3229:
  5970                           
  5971                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 78:         fputs
      +                          ((const char *)buf, fp);
  5972  1140  0020               	movlb	0	; select bank0
  5973  1141  082B               	movf	pad@fp,w
  5974  1142  00FC               	movwf	??_pad
  5975  1143  087C               	movf	??_pad,w
  5976  1144  00F8               	movwf	fputs@fp
  5977  1145  0824               	movf	pad@buf,w
  5978  1146  319F  2707  3191   	fcall	_fputs
  5979  1149                     l3231:
  5980                           
  5981                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 82:     w = (p < 
      +                          0) ? 0 : p;
  5982  1149  0020               	movlb	0	; select bank0
  5983  114A  1BA6               	btfsc	pad@p+1,7
  5984  114B  294D               	goto	u4361
  5985  114C  294E               	goto	u4360
  5986  114D                     u4361:
  5987  114D  2953               	goto	l3235
  5988  114E                     u4360:
  5989  114E                     l3233:
  5990  114E  0826               	movf	pad@p+1,w
  5991  114F  00AA               	movwf	pad@w+1
  5992  1150  0825               	movf	pad@p,w
  5993  1151  00A9               	movwf	pad@w
  5994  1152  2955               	goto	l690
  5995  1153                     l3235:
  5996  1153  01A9               	clrf	pad@w
  5997  1154  01AA               	clrf	pad@w+1
  5998  1155                     l690:
  5999                           
  6000                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 83:     i = 0;
  6001  1155  01A7               	clrf	pad@i
  6002  1156  01A8               	clrf	pad@i+1
  6003                           
  6004                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 84:     while (i 
      +                          < w) {
  6005  1157  2969               	goto	l3241
  6006  1158                     l3237:
  6007                           
  6008                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 85:         fputc
      +                          (' ', fp);
  6009  1158  3020               	movlw	32
  6010  1159  00F0               	movwf	fputc@c
  6011  115A  3000               	movlw	0
  6012  115B  00F1               	movwf	fputc@c+1
  6013  115C  0020               	movlb	0	; select bank0
  6014  115D  082B               	movf	pad@fp,w
  6015  115E  00FC               	movwf	??_pad
  6016  115F  087C               	movf	??_pad,w
  6017  1160  00F2               	movwf	fputc@fp
  6018  1161  3190  2086  3191   	fcall	_fputc
  6019  1164                     l3239:
  6020                           
  6021                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 86:         ++i;
  6022  1164  3001               	movlw	1
  6023  1165  0020               	movlb	0	; select bank0
  6024  1166  07A7               	addwf	pad@i,f
  6025  1167  3000               	movlw	0
  6026  1168  3DA8               	addwfc	pad@i+1,f
  6027  1169                     l3241:
  6028                           
  6029                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 84:     while (i 
      +                          < w) {
  6030  1169  0828               	movf	pad@i+1,w
  6031  116A  3A80               	xorlw	128
  6032  116B  00FC               	movwf	??_pad
  6033  116C  082A               	movf	pad@w+1,w
  6034  116D  3A80               	xorlw	128
  6035  116E  027C               	subwf	??_pad,w
  6036  116F  1D03               	skipz
  6037  1170  2973               	goto	u4375
  6038  1171  0829               	movf	pad@w,w
  6039  1172  0227               	subwf	pad@i,w
  6040  1173                     u4375:
  6041  1173  1C03               	skipc
  6042  1174  2976               	goto	u4371
  6043  1175  2977               	goto	u4370
  6044  1176                     u4371:
  6045  1176  2958               	goto	l3237
  6046  1177                     u4370:
  6047  1177                     l693:
  6048                           
  6049                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 90:     if (!(fla
      +                          gs & (1 << 0))) {
  6050  1177  0021               	movlb	1	; select bank1
  6051  1178  186E               	btfsc	_flags^(0+128),0
  6052  1179  297B               	goto	u4381
  6053  117A  297C               	goto	u4380
  6054  117B                     u4381:
  6055  117B  2985               	goto	l3245
  6056  117C                     u4380:
  6057  117C                     l3243:
  6058                           
  6059                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 91:         fputs
      +                          ((const char *)buf, fp);
  6060  117C  0020               	movlb	0	; select bank0
  6061  117D  082B               	movf	pad@fp,w
  6062  117E  00FC               	movwf	??_pad
  6063  117F  087C               	movf	??_pad,w
  6064  1180  00F8               	movwf	fputs@fp
  6065  1181  0824               	movf	pad@buf,w
  6066  1182  319F  2707  3191   	fcall	_fputs
  6067  1185                     l3245:
  6068                           
  6069                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 94:     return (i
      +                          nt)(strlen(buf) + (size_t)w);
  6070  1185  0020               	movlb	0	; select bank0
  6071  1186  0824               	movf	pad@buf,w
  6072  1187  00F0               	movwf	strlen@s
  6073  1188  3002               	movlw	2
  6074  1189  00F1               	movwf	strlen@s+1
  6075  118A  319D  25CE  3191   	fcall	_strlen
  6076  118D  0020               	movlb	0	; select bank0
  6077  118E  0829               	movf	pad@w,w
  6078  118F  0770               	addwf	?_strlen,w
  6079  1190  00A4               	movwf	?_pad
  6080  1191  082A               	movf	pad@w+1,w
  6081  1192  3D71               	addwfc	?_strlen+1,w
  6082  1193  00A5               	movwf	?_pad+1
  6083  1194                     l695:
  6084  1194  0008               	return
  6085  1195                     __end_of_pad:
  6086                           
  6087                           	psect	text10
  6088  1F07                     __ptext10:	
  6089 ;; *************** function _fputs *****************
  6090 ;; Defined at:
  6091 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\nf_fputs.c"
  6092 ;; Parameters:    Size  Location     Type
  6093 ;;  s               1    wreg     PTR const unsigned char 
  6094 ;;		 -> dbuf(80), 
  6095 ;;  fp              1    8[COMMON] PTR struct _IO_FILE
  6096 ;;		 -> sprintf@f(10), 
  6097 ;; Auto vars:     Size  Location     Type
  6098 ;;  s               1    3[BANK0 ] PTR const unsigned char 
  6099 ;;		 -> dbuf(80), 
  6100 ;;  i               2    1[BANK0 ] int 
  6101 ;;  c               1    0[BANK0 ] unsigned char 
  6102 ;; Return value:  Size  Location     Type
  6103 ;;                  2    8[COMMON] int 
  6104 ;; Registers used:
  6105 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6106 ;; Tracked objects:
  6107 ;;		On entry : 0/0
  6108 ;;		On exit  : 0/0
  6109 ;;		Unchanged: 0/0
  6110 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  6111 ;;      Params:         1       0       0       0       0       0       0       0
  6112 ;;      Locals:         0       4       0       0       0       0       0       0
  6113 ;;      Temps:          3       0       0       0       0       0       0       0
  6114 ;;      Totals:         4       4       0       0       0       0       0       0
  6115 ;;Total ram usage:        8 bytes
  6116 ;; Hardware stack levels used: 1
  6117 ;; Hardware stack levels required when called: 2
  6118 ;; This function calls:
  6119 ;;		_fputc
  6120 ;; This function is called by:
  6121 ;;		_pad
  6122 ;; This function uses a non-reentrant model
  6123 ;;
  6124                           
  6125  1F07                     _fputs:	
  6126                           ;psect for function _fputs
  6127                           
  6128                           
  6129                           ;incstack = 0
  6130                           ; Regs used in _fputs: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  6131                           ;fputs@s stored from wreg
  6132  1F07  0020               	movlb	0	; select bank0
  6133  1F08  00A3               	movwf	fputs@s
  6134  1F09                     l2757:
  6135  1F09  01A1               	clrf	fputs@i
  6136  1F0A  01A2               	clrf	fputs@i+1
  6137  1F0B  2F1F               	goto	l2763
  6138  1F0C                     l2759:
  6139  1F0C  0820               	movf	fputs@c,w
  6140  1F0D  00F9               	movwf	??_fputs
  6141  1F0E  01FA               	clrf	??_fputs+1
  6142  1F0F  0879               	movf	??_fputs,w
  6143  1F10  00F0               	movwf	fputc@c
  6144  1F11  087A               	movf	??_fputs+1,w
  6145  1F12  00F1               	movwf	fputc@c+1
  6146  1F13  0878               	movf	fputs@fp,w
  6147  1F14  00FB               	movwf	??_fputs+2
  6148  1F15  087B               	movf	??_fputs+2,w
  6149  1F16  00F2               	movwf	fputc@fp
  6150  1F17  3190  2086  319F   	fcall	_fputc
  6151  1F1A                     l2761:
  6152  1F1A  3001               	movlw	1
  6153  1F1B  0020               	movlb	0	; select bank0
  6154  1F1C  07A1               	addwf	fputs@i,f
  6155  1F1D  3000               	movlw	0
  6156  1F1E  3DA2               	addwfc	fputs@i+1,f
  6157  1F1F                     l2763:
  6158  1F1F  0821               	movf	fputs@i,w
  6159  1F20  0723               	addwf	fputs@s,w
  6160  1F21  00F9               	movwf	??_fputs
  6161  1F22  0879               	movf	??_fputs,w
  6162  1F23  0086               	movwf	6
  6163  1F24  3002               	movlw	2	; select bank4/5
  6164  1F25  0087               	movwf	7
  6165  1F26  0801               	movf	1,w
  6166  1F27  00FA               	movwf	??_fputs+1
  6167  1F28  087A               	movf	??_fputs+1,w
  6168  1F29  00A0               	movwf	fputs@c
  6169  1F2A  0820               	movf	fputs@c,w
  6170  1F2B  1D03               	btfss	3,2
  6171  1F2C  2F2E               	goto	u3351
  6172  1F2D  2F2F               	goto	u3350
  6173  1F2E                     u3351:
  6174  1F2E  2F0C               	goto	l2759
  6175  1F2F                     u3350:
  6176  1F2F                     l910:
  6177  1F2F  0008               	return
  6178  1F30                     __end_of_fputs:
  6179                           
  6180                           	psect	text11
  6181  1086                     __ptext11:	
  6182 ;; *************** function _fputc *****************
  6183 ;; Defined at:
  6184 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\nf_fputc.c"
  6185 ;; Parameters:    Size  Location     Type
  6186 ;;  c               2    0[COMMON] int 
  6187 ;;  fp              1    2[COMMON] PTR struct _IO_FILE
  6188 ;;		 -> sprintf@f(10), 
  6189 ;; Auto vars:     Size  Location     Type
  6190 ;;		None
  6191 ;; Return value:  Size  Location     Type
  6192 ;;                  2    0[COMMON] int 
  6193 ;; Registers used:
  6194 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6195 ;; Tracked objects:
  6196 ;;		On entry : 0/0
  6197 ;;		On exit  : 0/0
  6198 ;;		Unchanged: 0/0
  6199 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  6200 ;;      Params:         3       0       0       0       0       0       0       0
  6201 ;;      Locals:         0       0       0       0       0       0       0       0
  6202 ;;      Temps:          5       0       0       0       0       0       0       0
  6203 ;;      Totals:         8       0       0       0       0       0       0       0
  6204 ;;Total ram usage:        8 bytes
  6205 ;; Hardware stack levels used: 1
  6206 ;; Hardware stack levels required when called: 1
  6207 ;; This function calls:
  6208 ;;		_putch
  6209 ;; This function is called by:
  6210 ;;		_pad
  6211 ;;		_vfpfcnvrt
  6212 ;;		_fputs
  6213 ;; This function uses a non-reentrant model
  6214 ;;
  6215                           
  6216  1086                     _fputc:	
  6217                           ;psect for function _fputc
  6218                           
  6219  1086                     l2523:	
  6220                           ;incstack = 0
  6221                           ; Regs used in _fputc: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  6222                           
  6223  1086  0872               	movf	fputc@fp,w
  6224  1087  1903               	btfsc	3,2
  6225  1088  288A               	goto	u2841
  6226  1089  288B               	goto	u2840
  6227  108A                     u2841:
  6228  108A  2890               	goto	l2527
  6229  108B                     u2840:
  6230  108B                     l2525:
  6231  108B  0872               	movf	fputc@fp,w
  6232  108C  1D03               	btfss	3,2
  6233  108D  288F               	goto	u2851
  6234  108E  2890               	goto	u2850
  6235  108F                     u2851:
  6236  108F  2895               	goto	l2529
  6237  1090                     u2850:
  6238  1090                     l2527:
  6239  1090  0870               	movf	fputc@c,w
  6240  1091  3180  2007  3190   	fcall	_putch
  6241  1094  28DE               	goto	l902
  6242  1095                     l2529:
  6243  1095  0872               	movf	fputc@fp,w
  6244  1096  3E08               	addlw	8
  6245  1097  0086               	movwf	6
  6246  1098  3001               	movlw	1	; select bank2/3
  6247  1099  0087               	movwf	7
  6248  109A  0016               	moviw fsr1++
  6249  109B  0401               	iorwf	1,w
  6250  109C  1903               	btfsc	3,2
  6251  109D  289F               	goto	u2861
  6252  109E  28A0               	goto	u2860
  6253  109F                     u2861:
  6254  109F  28C0               	goto	l2533
  6255  10A0                     u2860:
  6256  10A0                     l2531:
  6257  10A0  0872               	movf	fputc@fp,w
  6258  10A1  3E08               	addlw	8
  6259  10A2  0086               	movwf	6
  6260  10A3  3001               	movlw	1	; select bank2/3
  6261  10A4  0087               	movwf	7
  6262  10A5  3F40               	moviw [0]fsr1
  6263  10A6  00F3               	movwf	??_fputc
  6264  10A7  3F41               	moviw [1]fsr1
  6265  10A8  00F4               	movwf	??_fputc+1
  6266  10A9  0872               	movf	fputc@fp,w
  6267  10AA  3E02               	addlw	2
  6268  10AB  0086               	movwf	6
  6269  10AC  3001               	movlw	1	; select bank2/3
  6270  10AD  0087               	movwf	7
  6271  10AE  3F40               	moviw [0]fsr1
  6272  10AF  00F5               	movwf	??_fputc+2
  6273  10B0  3F41               	moviw [1]fsr1
  6274  10B1  00F6               	movwf	??_fputc+3
  6275  10B2  0876               	movf	??_fputc+3,w
  6276  10B3  3A80               	xorlw	128
  6277  10B4  00F7               	movwf	??_fputc+4
  6278  10B5  0874               	movf	??_fputc+1,w
  6279  10B6  3A80               	xorlw	128
  6280  10B7  0277               	subwf	??_fputc+4,w
  6281  10B8  1D03               	skipz
  6282  10B9  28BC               	goto	u2875
  6283  10BA  0873               	movf	??_fputc,w
  6284  10BB  0275               	subwf	??_fputc+2,w
  6285  10BC                     u2875:
  6286  10BC  1803               	skipnc
  6287  10BD  28BF               	goto	u2871
  6288  10BE  28C0               	goto	u2870
  6289  10BF                     u2871:
  6290  10BF  28DE               	goto	l902
  6291  10C0                     u2870:
  6292  10C0                     l2533:
  6293  10C0  0870               	movf	fputc@c,w
  6294  10C1  00F3               	movwf	??_fputc
  6295  10C2  0872               	movf	fputc@fp,w
  6296  10C3  0086               	movwf	6
  6297  10C4  3001               	movlw	1	; select bank2/3
  6298  10C5  0087               	movwf	7
  6299  10C6  0872               	movf	fputc@fp,w
  6300  10C7  3E02               	addlw	2
  6301  10C8  0084               	movwf	4
  6302  10C9  3001               	movlw	1	; select bank2/3
  6303  10CA  0085               	movwf	5
  6304  10CB  0800               	movf	0,w
  6305  10CC  0701               	addwf	1,w
  6306  10CD  00F4               	movwf	??_fputc+1
  6307  10CE  0874               	movf	??_fputc+1,w
  6308  10CF  0086               	movwf	6
  6309  10D0  3001               	movlw	1	; select bank2/3
  6310  10D1  0087               	movwf	7
  6311  10D2  0873               	movf	??_fputc,w
  6312  10D3  0081               	movwf	1
  6313  10D4                     l2535:
  6314  10D4  0872               	movf	fputc@fp,w
  6315  10D5  3E02               	addlw	2
  6316  10D6  0086               	movwf	6
  6317  10D7  3001               	movlw	1	; select bank2/3
  6318  10D8  0087               	movwf	7
  6319  10D9  3001               	movlw	1
  6320  10DA  0781               	addwf	1,f
  6321  10DB  3141               	addfsr 1,1
  6322  10DC  1803               	skipnc
  6323  10DD  0A81               	incf	1,f
  6324  10DE                     l902:
  6325  10DE  0008               	return
  6326  10DF                     __end_of_fputc:
  6327                           
  6328                           	psect	text12
  6329  0007                     __ptext12:	
  6330 ;; *************** function _putch *****************
  6331 ;; Defined at:
  6332 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\putch.c"
  6333 ;; Parameters:    Size  Location     Type
  6334 ;;  c               1    wreg     unsigned char 
  6335 ;; Auto vars:     Size  Location     Type
  6336 ;;  c               1    0[COMMON] unsigned char 
  6337 ;; Return value:  Size  Location     Type
  6338 ;;                  1    wreg      void 
  6339 ;; Registers used:
  6340 ;;		wreg
  6341 ;; Tracked objects:
  6342 ;;		On entry : 0/0
  6343 ;;		On exit  : 0/0
  6344 ;;		Unchanged: 0/0
  6345 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  6346 ;;      Params:         0       0       0       0       0       0       0       0
  6347 ;;      Locals:         0       0       0       0       0       0       0       0
  6348 ;;      Temps:          0       0       0       0       0       0       0       0
  6349 ;;      Totals:         0       0       0       0       0       0       0       0
  6350 ;;Total ram usage:        0 bytes
  6351 ;; Hardware stack levels used: 1
  6352 ;; This function calls:
  6353 ;;		Nothing
  6354 ;; This function is called by:
  6355 ;;		_fputc
  6356 ;; This function uses a non-reentrant model
  6357 ;;
  6358                           
  6359  0007                     _putch:	
  6360                           ;psect for function _putch
  6361                           
  6362  0007                     l913:	
  6363                           ;incstack = 0
  6364                           ; Regs used in _putch: [wreg]
  6365                           
  6366  0007  0008               	return
  6367  0008                     __end_of_putch:
  6368                           
  6369                           	psect	text13
  6370  13F0                     __ptext13:	
  6371 ;; *************** function _floorf *****************
  6372 ;; Defined at:
  6373 ;;		line 3 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\floorf.c"
  6374 ;; Parameters:    Size  Location     Type
  6375 ;;  x               4   52[BANK0 ] float 
  6376 ;; Auto vars:     Size  Location     Type
  6377 ;;  u               4   68[BANK0 ] struct .
  6378 ;;  m               4   62[BANK0 ] unsigned long 
  6379 ;;  e               2   66[BANK0 ] int 
  6380 ;; Return value:  Size  Location     Type
  6381 ;;                  4   52[BANK0 ] float 
  6382 ;; Registers used:
  6383 ;;		wreg, status,2, status,0
  6384 ;; Tracked objects:
  6385 ;;		On entry : 0/0
  6386 ;;		On exit  : 0/0
  6387 ;;		Unchanged: 0/0
  6388 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  6389 ;;      Params:         0       4       0       0       0       0       0       0
  6390 ;;      Locals:         0      10       0       0       0       0       0       0
  6391 ;;      Temps:          0       6       0       0       0       0       0       0
  6392 ;;      Totals:         0      20       0       0       0       0       0       0
  6393 ;;Total ram usage:       20 bytes
  6394 ;; Hardware stack levels used: 1
  6395 ;; This function calls:
  6396 ;;		Nothing
  6397 ;; This function is called by:
  6398 ;;		_efgtoa
  6399 ;; This function uses a non-reentrant model
  6400 ;;
  6401                           
  6402  13F0                     _floorf:	
  6403                           ;psect for function _floorf
  6404                           
  6405  13F0                     l3287:	
  6406                           ;incstack = 0
  6407                           ; Regs used in _floorf: [wreg+status,2+status,0]
  6408                           
  6409  13F0  0023               	movlb	3	; select bank3
  6410  13F1  0833               	movf	(floorf@F526+3)^(0+384),w
  6411  13F2  0020               	movlb	0	; select bank0
  6412  13F3  00E7               	movwf	floorf@u+3
  6413  13F4  0023               	movlb	3	; select bank3
  6414  13F5  0832               	movf	(floorf@F526+2)^(0+384),w
  6415  13F6  0020               	movlb	0	; select bank0
  6416  13F7  00E6               	movwf	floorf@u+2
  6417  13F8  0023               	movlb	3	; select bank3
  6418  13F9  0831               	movf	(floorf@F526+1)^(0+384),w
  6419  13FA  0020               	movlb	0	; select bank0
  6420  13FB  00E5               	movwf	floorf@u+1
  6421  13FC  0023               	movlb	3	; select bank3
  6422  13FD  0830               	movf	floorf@F526^(0+384),w
  6423  13FE  0020               	movlb	0	; select bank0
  6424  13FF  00E4               	movwf	floorf@u
  6425  1400  0857               	movf	floorf@x+3,w
  6426  1401  00E7               	movwf	floorf@u+3
  6427  1402  0856               	movf	floorf@x+2,w
  6428  1403  00E6               	movwf	floorf@u+2
  6429  1404  0855               	movf	floorf@x+1,w
  6430  1405  00E5               	movwf	floorf@u+1
  6431  1406  0854               	movf	floorf@x,w
  6432  1407  00E4               	movwf	floorf@u
  6433  1408                     l3289:
  6434  1408  0864               	movf	floorf@u,w
  6435  1409  00D8               	movwf	??_floorf
  6436  140A  0865               	movf	floorf@u+1,w
  6437  140B  00D9               	movwf	??_floorf+1
  6438  140C  0866               	movf	floorf@u+2,w
  6439  140D  00DA               	movwf	??_floorf+2
  6440  140E  0867               	movf	floorf@u+3,w
  6441  140F  00DB               	movwf	??_floorf+3
  6442  1410  3017               	movlw	23
  6443  1411                     u4495:
  6444  1411  36DB               	lsrf	??_floorf+3,f
  6445  1412  0CDA               	rrf	??_floorf+2,f
  6446  1413  0CD9               	rrf	??_floorf+1,f
  6447  1414  0CD8               	rrf	??_floorf,f
  6448  1415                     u4490:
  6449  1415  0B89               	decfsz	9,f
  6450  1416  2C11               	goto	u4495
  6451  1417  30FF               	movlw	255
  6452  1418  0558               	andwf	??_floorf,w
  6453  1419  00DC               	movwf	??_floorf+4
  6454  141A  3000               	movlw	0
  6455  141B  0559               	andwf	??_floorf+1,w
  6456  141C  00DD               	movwf	??_floorf+5
  6457  141D  085C               	movf	??_floorf+4,w
  6458  141E  3E81               	addlw	129
  6459  141F  00E2               	movwf	floorf@e
  6460  1420  30FF               	movlw	255
  6461  1421  3D5D               	addwfc	??_floorf+5,w
  6462  1422  00E3               	movwf	floorf@e+1
  6463  1423                     l3291:
  6464  1423  0863               	movf	floorf@e+1,w
  6465  1424  3A80               	xorlw	128
  6466  1425  00D8               	movwf	??_floorf
  6467  1426  3080               	movlw	128
  6468  1427  0258               	subwf	??_floorf,w
  6469  1428  1D03               	skipz
  6470  1429  2C2C               	goto	u4505
  6471  142A  3017               	movlw	23
  6472  142B  0262               	subwf	floorf@e,w
  6473  142C                     u4505:
  6474  142C  1C03               	skipc
  6475  142D  2C2F               	goto	u4501
  6476  142E  2C30               	goto	u4500
  6477  142F                     u4501:
  6478  142F  2C31               	goto	l862
  6479  1430                     u4500:
  6480  1430                     l3293:
  6481  1430  2CDA               	goto	l863
  6482  1431                     l862:
  6483  1431  0020               	movlb	0	; select bank0
  6484  1432  1BE3               	btfsc	floorf@e+1,7
  6485  1433  2C35               	goto	u4511
  6486  1434  2C36               	goto	u4510
  6487  1435                     u4511:
  6488  1435  2C93               	goto	l3307
  6489  1436                     u4510:
  6490  1436                     l3295:
  6491  1436  30FF               	movlw	255
  6492  1437  00D8               	movwf	??_floorf
  6493  1438  30FF               	movlw	255
  6494  1439  00D9               	movwf	??_floorf+1
  6495  143A  307F               	movlw	127
  6496  143B  00DA               	movwf	??_floorf+2
  6497  143C  3000               	movlw	0
  6498  143D  00DB               	movwf	??_floorf+3
  6499  143E  0A62               	incf	floorf@e,w
  6500  143F  2C44               	goto	u4520
  6501  1440                     u4525:
  6502  1440  37DB               	asrf	??_floorf+3,f
  6503  1441  0CDA               	rrf	??_floorf+2,f
  6504  1442  0CD9               	rrf	??_floorf+1,f
  6505  1443  0CD8               	rrf	??_floorf,f
  6506  1444                     u4520:
  6507  1444  0B89               	decfsz	9,f
  6508  1445  2C40               	goto	u4525
  6509  1446  085B               	movf	??_floorf+3,w
  6510  1447  00E1               	movwf	floorf@m+3
  6511  1448  085A               	movf	??_floorf+2,w
  6512  1449  00E0               	movwf	floorf@m+2
  6513  144A  0859               	movf	??_floorf+1,w
  6514  144B  00DF               	movwf	floorf@m+1
  6515  144C  0858               	movf	??_floorf,w
  6516  144D  00DE               	movwf	floorf@m
  6517  144E                     l3297:
  6518  144E  0864               	movf	floorf@u,w
  6519  144F  055E               	andwf	floorf@m,w
  6520  1450  00D8               	movwf	??_floorf
  6521  1451  0865               	movf	floorf@u+1,w
  6522  1452  055F               	andwf	floorf@m+1,w
  6523  1453  00D9               	movwf	??_floorf+1
  6524  1454  0866               	movf	floorf@u+2,w
  6525  1455  0560               	andwf	floorf@m+2,w
  6526  1456  00DA               	movwf	??_floorf+2
  6527  1457  0867               	movf	floorf@u+3,w
  6528  1458  0561               	andwf	floorf@m+3,w
  6529  1459  00DB               	movwf	??_floorf+3
  6530  145A  085B               	movf	??_floorf+3,w
  6531  145B  045A               	iorwf	??_floorf+2,w
  6532  145C  0459               	iorwf	??_floorf+1,w
  6533  145D  0458               	iorwf	??_floorf,w
  6534  145E  1D03               	skipz
  6535  145F  2C61               	goto	u4531
  6536  1460  2C62               	goto	u4530
  6537  1461                     u4531:
  6538  1461  2C63               	goto	l3301
  6539  1462                     u4530:
  6540  1462  2C30               	goto	l3293
  6541  1463                     l3301:
  6542  1463  0864               	movf	floorf@u,w
  6543  1464  00D8               	movwf	??_floorf
  6544  1465  0865               	movf	floorf@u+1,w
  6545  1466  00D9               	movwf	??_floorf+1
  6546  1467  0866               	movf	floorf@u+2,w
  6547  1468  00DA               	movwf	??_floorf+2
  6548  1469  0867               	movf	floorf@u+3,w
  6549  146A  00DB               	movwf	??_floorf+3
  6550  146B  301F               	movlw	31
  6551  146C                     u4545:
  6552  146C  36DB               	lsrf	??_floorf+3,f
  6553  146D  0CDA               	rrf	??_floorf+2,f
  6554  146E  0CD9               	rrf	??_floorf+1,f
  6555  146F  0CD8               	rrf	??_floorf,f
  6556  1470                     u4540:
  6557  1470  0B89               	decfsz	9,f
  6558  1471  2C6C               	goto	u4545
  6559  1472  085B               	movf	??_floorf+3,w
  6560  1473  045A               	iorwf	??_floorf+2,w
  6561  1474  0459               	iorwf	??_floorf+1,w
  6562  1475  0458               	iorwf	??_floorf,w
  6563  1476  1903               	skipnz
  6564  1477  2C79               	goto	u4551
  6565  1478  2C7A               	goto	u4550
  6566  1479                     u4551:
  6567  1479  2C82               	goto	l3305
  6568  147A                     u4550:
  6569  147A                     l3303:
  6570  147A  085E               	movf	floorf@m,w
  6571  147B  07E4               	addwf	floorf@u,f
  6572  147C  085F               	movf	floorf@m+1,w
  6573  147D  3DE5               	addwfc	floorf@u+1,f
  6574  147E  0860               	movf	floorf@m+2,w
  6575  147F  3DE6               	addwfc	floorf@u+2,f
  6576  1480  0861               	movf	floorf@m+3,w
  6577  1481  3DE7               	addwfc	floorf@u+3,f
  6578  1482                     l3305:
  6579  1482  095E               	comf	floorf@m,w
  6580  1483  00D8               	movwf	??_floorf
  6581  1484  095F               	comf	floorf@m+1,w
  6582  1485  00D9               	movwf	??_floorf+1
  6583  1486  0960               	comf	floorf@m+2,w
  6584  1487  00DA               	movwf	??_floorf+2
  6585  1488  0961               	comf	floorf@m+3,w
  6586  1489  00DB               	movwf	??_floorf+3
  6587  148A  0858               	movf	??_floorf,w
  6588  148B  05E4               	andwf	floorf@u,f
  6589  148C  0859               	movf	??_floorf+1,w
  6590  148D  05E5               	andwf	floorf@u+1,f
  6591  148E  085A               	movf	??_floorf+2,w
  6592  148F  05E6               	andwf	floorf@u+2,f
  6593  1490  085B               	movf	??_floorf+3,w
  6594  1491  05E7               	andwf	floorf@u+3,f
  6595  1492  2CD2               	goto	l867
  6596  1493                     l3307:
  6597  1493  0864               	movf	floorf@u,w
  6598  1494  00D8               	movwf	??_floorf
  6599  1495  0865               	movf	floorf@u+1,w
  6600  1496  00D9               	movwf	??_floorf+1
  6601  1497  0866               	movf	floorf@u+2,w
  6602  1498  00DA               	movwf	??_floorf+2
  6603  1499  0867               	movf	floorf@u+3,w
  6604  149A  00DB               	movwf	??_floorf+3
  6605  149B  301F               	movlw	31
  6606  149C                     u4565:
  6607  149C  36DB               	lsrf	??_floorf+3,f
  6608  149D  0CDA               	rrf	??_floorf+2,f
  6609  149E  0CD9               	rrf	??_floorf+1,f
  6610  149F  0CD8               	rrf	??_floorf,f
  6611  14A0                     u4560:
  6612  14A0  0B89               	decfsz	9,f
  6613  14A1  2C9C               	goto	u4565
  6614  14A2  085B               	movf	??_floorf+3,w
  6615  14A3  045A               	iorwf	??_floorf+2,w
  6616  14A4  0459               	iorwf	??_floorf+1,w
  6617  14A5  0458               	iorwf	??_floorf,w
  6618  14A6  1D03               	skipz
  6619  14A7  2CA9               	goto	u4571
  6620  14A8  2CAA               	goto	u4570
  6621  14A9                     u4571:
  6622  14A9  2CB3               	goto	l3311
  6623  14AA                     u4570:
  6624  14AA                     l3309:
  6625  14AA  3000               	movlw	0
  6626  14AB  00E7               	movwf	floorf@u+3
  6627  14AC  3000               	movlw	0
  6628  14AD  00E6               	movwf	floorf@u+2
  6629  14AE  3000               	movlw	0
  6630  14AF  00E5               	movwf	floorf@u+1
  6631  14B0  3000               	movlw	0
  6632  14B1  00E4               	movwf	floorf@u
  6633  14B2  2CD2               	goto	l867
  6634  14B3                     l3311:
  6635  14B3  0864               	movf	floorf@u,w
  6636  14B4  00D8               	movwf	??_floorf
  6637  14B5  0865               	movf	floorf@u+1,w
  6638  14B6  00D9               	movwf	??_floorf+1
  6639  14B7  0866               	movf	floorf@u+2,w
  6640  14B8  00DA               	movwf	??_floorf+2
  6641  14B9  0867               	movf	floorf@u+3,w
  6642  14BA  00DB               	movwf	??_floorf+3
  6643  14BB  3001               	movlw	1
  6644  14BC                     u4585:
  6645  14BC  35D8               	lslf	??_floorf,f
  6646  14BD  0DD9               	rlf	??_floorf+1,f
  6647  14BE  0DDA               	rlf	??_floorf+2,f
  6648  14BF  0DDB               	rlf	??_floorf+3,f
  6649  14C0                     u4580:
  6650  14C0  0B89               	decfsz	9,f
  6651  14C1  2CBC               	goto	u4585
  6652  14C2  085B               	movf	??_floorf+3,w
  6653  14C3  045A               	iorwf	??_floorf+2,w
  6654  14C4  0459               	iorwf	??_floorf+1,w
  6655  14C5  0458               	iorwf	??_floorf,w
  6656  14C6  1903               	skipnz
  6657  14C7  2CC9               	goto	u4591
  6658  14C8  2CCA               	goto	u4590
  6659  14C9                     u4591:
  6660  14C9  2CD2               	goto	l867
  6661  14CA                     u4590:
  6662  14CA                     l3313:
  6663  14CA  30BF               	movlw	191
  6664  14CB  00E7               	movwf	floorf@u+3
  6665  14CC  3080               	movlw	128
  6666  14CD  00E6               	movwf	floorf@u+2
  6667  14CE  3000               	movlw	0
  6668  14CF  00E5               	movwf	floorf@u+1
  6669  14D0  3000               	movlw	0
  6670  14D1  00E4               	movwf	floorf@u
  6671  14D2                     l867:
  6672  14D2  0867               	movf	floorf@u+3,w
  6673  14D3  00D7               	movwf	?_floorf+3
  6674  14D4  0866               	movf	floorf@u+2,w
  6675  14D5  00D6               	movwf	?_floorf+2
  6676  14D6  0865               	movf	floorf@u+1,w
  6677  14D7  00D5               	movwf	?_floorf+1
  6678  14D8  0864               	movf	floorf@u,w
  6679  14D9  00D4               	movwf	?_floorf
  6680  14DA                     l863:
  6681  14DA  0008               	return
  6682  14DB                     __end_of_floorf:
  6683                           
  6684                           	psect	text14
  6685  1252                     __ptext14:	
  6686 ;; *************** function ___fpclassifyf *****************
  6687 ;; Defined at:
  6688 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\__fpclassifyf.c"
  6689 ;; Parameters:    Size  Location     Type
  6690 ;;  x               4    0[COMMON] float 
  6691 ;; Auto vars:     Size  Location     Type
  6692 ;;  u               4    2[BANK0 ] struct .
  6693 ;;  e               2    0[BANK0 ] int 
  6694 ;; Return value:  Size  Location     Type
  6695 ;;                  2    0[COMMON] int 
  6696 ;; Registers used:
  6697 ;;		wreg, status,2, status,0
  6698 ;; Tracked objects:
  6699 ;;		On entry : 0/0
  6700 ;;		On exit  : 0/0
  6701 ;;		Unchanged: 0/0
  6702 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  6703 ;;      Params:         4       0       0       0       0       0       0       0
  6704 ;;      Locals:         0       6       0       0       0       0       0       0
  6705 ;;      Temps:          6       0       0       0       0       0       0       0
  6706 ;;      Totals:        10       6       0       0       0       0       0       0
  6707 ;;Total ram usage:       16 bytes
  6708 ;; Hardware stack levels used: 1
  6709 ;; This function calls:
  6710 ;;		Nothing
  6711 ;; This function is called by:
  6712 ;;		_efgtoa
  6713 ;; This function uses a non-reentrant model
  6714 ;;
  6715                           
  6716  1252                     ___fpclassifyf:	
  6717                           ;psect for function ___fpclassifyf
  6718                           
  6719  1252                     l3249:	
  6720                           ;incstack = 0
  6721                           ; Regs used in ___fpclassifyf: [wreg+status,2+status,0]
  6722                           
  6723  1252  0022               	movlb	2	; select bank2
  6724  1253  0866               	movf	(___fpclassifyf@F465+3)^(0+256),w
  6725  1254  0020               	movlb	0	; select bank0
  6726  1255  00A5               	movwf	___fpclassifyf@u+3
  6727  1256  0022               	movlb	2	; select bank2
  6728  1257  0865               	movf	(___fpclassifyf@F465+2)^(0+256),w
  6729  1258  0020               	movlb	0	; select bank0
  6730  1259  00A4               	movwf	___fpclassifyf@u+2
  6731  125A  0022               	movlb	2	; select bank2
  6732  125B  0864               	movf	(___fpclassifyf@F465+1)^(0+256),w
  6733  125C  0020               	movlb	0	; select bank0
  6734  125D  00A3               	movwf	___fpclassifyf@u+1
  6735  125E  0022               	movlb	2	; select bank2
  6736  125F  0863               	movf	___fpclassifyf@F465^(0+256),w
  6737  1260  0020               	movlb	0	; select bank0
  6738  1261  00A2               	movwf	___fpclassifyf@u
  6739  1262  0873               	movf	___fpclassifyf@x+3,w
  6740  1263  00A5               	movwf	___fpclassifyf@u+3
  6741  1264  0872               	movf	___fpclassifyf@x+2,w
  6742  1265  00A4               	movwf	___fpclassifyf@u+2
  6743  1266  0871               	movf	___fpclassifyf@x+1,w
  6744  1267  00A3               	movwf	___fpclassifyf@u+1
  6745  1268  0870               	movf	___fpclassifyf@x,w
  6746  1269  00A2               	movwf	___fpclassifyf@u
  6747  126A                     l3251:
  6748  126A  0822               	movf	___fpclassifyf@u,w
  6749  126B  00F4               	movwf	??___fpclassifyf
  6750  126C  0823               	movf	___fpclassifyf@u+1,w
  6751  126D  00F5               	movwf	??___fpclassifyf+1
  6752  126E  0824               	movf	___fpclassifyf@u+2,w
  6753  126F  00F6               	movwf	??___fpclassifyf+2
  6754  1270  0825               	movf	___fpclassifyf@u+3,w
  6755  1271  00F7               	movwf	??___fpclassifyf+3
  6756  1272  3017               	movlw	23
  6757  1273                     u4395:
  6758  1273  36F7               	lsrf	??___fpclassifyf+3,f
  6759  1274  0CF6               	rrf	??___fpclassifyf+2,f
  6760  1275  0CF5               	rrf	??___fpclassifyf+1,f
  6761  1276  0CF4               	rrf	??___fpclassifyf,f
  6762  1277                     u4390:
  6763  1277  0B89               	decfsz	9,f
  6764  1278  2A73               	goto	u4395
  6765  1279  30FF               	movlw	255
  6766  127A  0574               	andwf	??___fpclassifyf,w
  6767  127B  00A0               	movwf	___fpclassifyf@e
  6768  127C  3000               	movlw	0
  6769  127D  0575               	andwf	??___fpclassifyf+1,w
  6770  127E  00A1               	movwf	___fpclassifyf@e+1
  6771  127F                     l3253:
  6772  127F  0820               	movf	___fpclassifyf@e,w
  6773  1280  0421               	iorwf	___fpclassifyf@e+1,w
  6774  1281  1D03               	btfss	3,2
  6775  1282  2A84               	goto	u4401
  6776  1283  2A85               	goto	u4400
  6777  1284                     u4401:
  6778  1284  2AA6               	goto	l3263
  6779  1285                     u4400:
  6780  1285                     l3255:
  6781  1285  0822               	movf	___fpclassifyf@u,w
  6782  1286  00F4               	movwf	??___fpclassifyf
  6783  1287  0823               	movf	___fpclassifyf@u+1,w
  6784  1288  00F5               	movwf	??___fpclassifyf+1
  6785  1289  0824               	movf	___fpclassifyf@u+2,w
  6786  128A  00F6               	movwf	??___fpclassifyf+2
  6787  128B  0825               	movf	___fpclassifyf@u+3,w
  6788  128C  00F7               	movwf	??___fpclassifyf+3
  6789  128D  3001               	movlw	1
  6790  128E                     u4415:
  6791  128E  35F4               	lslf	??___fpclassifyf,f
  6792  128F  0DF5               	rlf	??___fpclassifyf+1,f
  6793  1290  0DF6               	rlf	??___fpclassifyf+2,f
  6794  1291  0DF7               	rlf	??___fpclassifyf+3,f
  6795  1292                     u4410:
  6796  1292  0B89               	decfsz	9,f
  6797  1293  2A8E               	goto	u4415
  6798  1294  0877               	movf	??___fpclassifyf+3,w
  6799  1295  0476               	iorwf	??___fpclassifyf+2,w
  6800  1296  0475               	iorwf	??___fpclassifyf+1,w
  6801  1297  0474               	iorwf	??___fpclassifyf,w
  6802  1298  1D03               	skipz
  6803  1299  2A9B               	goto	u4421
  6804  129A  2A9C               	goto	u4420
  6805  129B                     u4421:
  6806  129B  2AA1               	goto	l3259
  6807  129C                     u4420:
  6808  129C                     l3257:
  6809  129C  3002               	movlw	2
  6810  129D  00F0               	movwf	?___fpclassifyf
  6811  129E  3000               	movlw	0
  6812  129F  00F1               	movwf	?___fpclassifyf+1
  6813  12A0  2AD0               	goto	l831
  6814  12A1                     l3259:
  6815  12A1  3003               	movlw	3
  6816  12A2  00F0               	movwf	?___fpclassifyf
  6817  12A3  3000               	movlw	0
  6818  12A4  00F1               	movwf	?___fpclassifyf+1
  6819  12A5  2AD0               	goto	l831
  6820  12A6                     l3263:
  6821  12A6  0A20               	incf	___fpclassifyf@e,w
  6822  12A7  0421               	iorwf	___fpclassifyf@e+1,w
  6823  12A8  1D03               	btfss	3,2
  6824  12A9  2AAB               	goto	u4431
  6825  12AA  2AAC               	goto	u4430
  6826  12AB                     u4431:
  6827  12AB  2ACC               	goto	l3269
  6828  12AC                     u4430:
  6829  12AC                     l3265:
  6830  12AC  0822               	movf	___fpclassifyf@u,w
  6831  12AD  00F4               	movwf	??___fpclassifyf
  6832  12AE  0823               	movf	___fpclassifyf@u+1,w
  6833  12AF  00F5               	movwf	??___fpclassifyf+1
  6834  12B0  0824               	movf	___fpclassifyf@u+2,w
  6835  12B1  00F6               	movwf	??___fpclassifyf+2
  6836  12B2  0825               	movf	___fpclassifyf@u+3,w
  6837  12B3  00F7               	movwf	??___fpclassifyf+3
  6838  12B4  3009               	movlw	9
  6839  12B5                     u4445:
  6840  12B5  35F4               	lslf	??___fpclassifyf,f
  6841  12B6  0DF5               	rlf	??___fpclassifyf+1,f
  6842  12B7  0DF6               	rlf	??___fpclassifyf+2,f
  6843  12B8  0DF7               	rlf	??___fpclassifyf+3,f
  6844  12B9                     u4440:
  6845  12B9  0B89               	decfsz	9,f
  6846  12BA  2AB5               	goto	u4445
  6847  12BB  0877               	movf	??___fpclassifyf+3,w
  6848  12BC  0476               	iorwf	??___fpclassifyf+2,w
  6849  12BD  0475               	iorwf	??___fpclassifyf+1,w
  6850  12BE  0474               	iorwf	??___fpclassifyf,w
  6851  12BF  1903               	skipnz
  6852  12C0  2AC2               	goto	u4451
  6853  12C1  2AC4               	goto	u4450
  6854  12C2                     u4451:
  6855  12C2  3001               	movlw	1
  6856  12C3  2AC5               	goto	u4460
  6857  12C4                     u4450:
  6858  12C4  3000               	movlw	0
  6859  12C5                     u4460:
  6860  12C5  00F8               	movwf	??___fpclassifyf+4
  6861  12C6  01F9               	clrf	??___fpclassifyf+5
  6862  12C7  0878               	movf	??___fpclassifyf+4,w
  6863  12C8  00F0               	movwf	?___fpclassifyf
  6864  12C9  0879               	movf	??___fpclassifyf+5,w
  6865  12CA  00F1               	movwf	?___fpclassifyf+1
  6866  12CB  2AD0               	goto	l831
  6867  12CC                     l3269:
  6868  12CC  3004               	movlw	4
  6869  12CD  00F0               	movwf	?___fpclassifyf
  6870  12CE  3000               	movlw	0
  6871  12CF  00F1               	movwf	?___fpclassifyf+1
  6872  12D0                     l831:
  6873  12D0  0008               	return
  6874  12D1                     __end_of___fpclassifyf:
  6875                           
  6876                           	psect	text15
  6877  0008                     __ptext15:	
  6878 ;; *************** function ___fltol *****************
  6879 ;; Defined at:
  6880 ;;		line 43 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\fltol.c"
  6881 ;; Parameters:    Size  Location     Type
  6882 ;;  f1              4    0[COMMON] int 
  6883 ;; Auto vars:     Size  Location     Type
  6884 ;;  exp1            1   10[COMMON] unsigned char 
  6885 ;;  sign1           1    9[COMMON] unsigned char 
  6886 ;; Return value:  Size  Location     Type
  6887 ;;                  4    0[COMMON] long 
  6888 ;; Registers used:
  6889 ;;		wreg, status,2, status,0
  6890 ;; Tracked objects:
  6891 ;;		On entry : 0/0
  6892 ;;		On exit  : 0/0
  6893 ;;		Unchanged: 0/0
  6894 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  6895 ;;      Params:         4       0       0       0       0       0       0       0
  6896 ;;      Locals:         2       0       0       0       0       0       0       0
  6897 ;;      Temps:          5       0       0       0       0       0       0       0
  6898 ;;      Totals:        11       0       0       0       0       0       0       0
  6899 ;;Total ram usage:       11 bytes
  6900 ;; Hardware stack levels used: 1
  6901 ;; This function calls:
  6902 ;;		Nothing
  6903 ;; This function is called by:
  6904 ;;		_efgtoa
  6905 ;; This function uses a non-reentrant model
  6906 ;;
  6907                           
  6908  0008                     ___fltol:	
  6909                           ;psect for function ___fltol
  6910                           
  6911  0008                     l2905:	
  6912                           ;incstack = 0
  6913                           ; Regs used in ___fltol: [wreg+status,2+status,0]
  6914                           
  6915  0008  1003               	clrc
  6916  0009  0D72               	rlf	___fltol@f1+2,w
  6917  000A  0D73               	rlf	___fltol@f1+3,w
  6918  000B  00F4               	movwf	??___fltol
  6919  000C  0874               	movf	??___fltol,w
  6920  000D  00FA               	movwf	___fltol@exp1
  6921  000E  087A               	movf	___fltol@exp1,w
  6922  000F  1D03               	btfss	3,2
  6923  0010  2812               	goto	u3701
  6924  0011  2813               	goto	u3700
  6925  0012                     u3701:
  6926  0012  281C               	goto	l2911
  6927  0013                     u3700:
  6928  0013                     l2907:
  6929  0013  3000               	movlw	0
  6930  0014  00F3               	movwf	?___fltol+3
  6931  0015  3000               	movlw	0
  6932  0016  00F2               	movwf	?___fltol+2
  6933  0017  3000               	movlw	0
  6934  0018  00F1               	movwf	?___fltol+1
  6935  0019  3000               	movlw	0
  6936  001A  00F0               	movwf	?___fltol
  6937  001B  287B               	goto	l380
  6938  001C                     l2911:
  6939  001C  0870               	movf	___fltol@f1,w
  6940  001D  00F4               	movwf	??___fltol
  6941  001E  0871               	movf	___fltol@f1+1,w
  6942  001F  00F5               	movwf	??___fltol+1
  6943  0020  0872               	movf	___fltol@f1+2,w
  6944  0021  00F6               	movwf	??___fltol+2
  6945  0022  0873               	movf	___fltol@f1+3,w
  6946  0023  00F7               	movwf	??___fltol+3
  6947  0024  301F               	movlw	31
  6948  0025                     u3715:
  6949  0025  36F7               	lsrf	??___fltol+3,f
  6950  0026  0CF6               	rrf	??___fltol+2,f
  6951  0027  0CF5               	rrf	??___fltol+1,f
  6952  0028  0CF4               	rrf	??___fltol,f
  6953  0029                     u3710:
  6954  0029  0B89               	decfsz	9,f
  6955  002A  2825               	goto	u3715
  6956  002B  0874               	movf	??___fltol,w
  6957  002C  00F8               	movwf	??___fltol+4
  6958  002D  0878               	movf	??___fltol+4,w
  6959  002E  00F9               	movwf	___fltol@sign1
  6960  002F                     l2913:
  6961  002F  17F2               	bsf	___fltol@f1+2,7
  6962  0030                     l2915:
  6963  0030  30FF               	movlw	255
  6964  0031  05F0               	andwf	___fltol@f1,f
  6965  0032  30FF               	movlw	255
  6966  0033  05F1               	andwf	___fltol@f1+1,f
  6967  0034  30FF               	movlw	255
  6968  0035  05F2               	andwf	___fltol@f1+2,f
  6969  0036  3000               	movlw	0
  6970  0037  05F3               	andwf	___fltol@f1+3,f
  6971  0038                     l2917:
  6972  0038  3096               	movlw	150
  6973  0039  02FA               	subwf	___fltol@exp1,f
  6974  003A                     l2919:
  6975  003A  1FFA               	btfss	___fltol@exp1,7
  6976  003B  283D               	goto	u3721
  6977  003C  283E               	goto	u3720
  6978  003D                     u3721:
  6979  003D  2856               	goto	l2929
  6980  003E                     u3720:
  6981  003E                     l2921:
  6982  003E  087A               	movf	___fltol@exp1,w
  6983  003F  3A80               	xorlw	128
  6984  0040  3E97               	addlw	151
  6985  0041  1803               	skipnc
  6986  0042  2844               	goto	u3731
  6987  0043  2845               	goto	u3730
  6988  0044                     u3731:
  6989  0044  2846               	goto	l2927
  6990  0045                     u3730:
  6991  0045  2813               	goto	l2907
  6992  0046                     l2927:
  6993  0046  3001               	movlw	1
  6994  0047                     u3745:
  6995  0047  36F3               	lsrf	___fltol@f1+3,f
  6996  0048  0CF2               	rrf	___fltol@f1+2,f
  6997  0049  0CF1               	rrf	___fltol@f1+1,f
  6998  004A  0CF0               	rrf	___fltol@f1,f
  6999  004B  0B89               	decfsz	9,f
  7000  004C  2847               	goto	u3745
  7001  004D  3001               	movlw	1
  7002  004E  00F4               	movwf	??___fltol
  7003  004F  0874               	movf	??___fltol,w
  7004  0050  07FA               	addwf	___fltol@exp1,f
  7005  0051  1D03               	btfss	3,2
  7006  0052  2854               	goto	u3751
  7007  0053  2855               	goto	u3750
  7008  0054                     u3751:
  7009  0054  2846               	goto	l2927
  7010  0055                     u3750:
  7011  0055  286B               	goto	l2937
  7012  0056                     l2929:
  7013  0056  3020               	movlw	32
  7014  0057  027A               	subwf	___fltol@exp1,w
  7015  0058  1C03               	skipc
  7016  0059  285B               	goto	u3761
  7017  005A  285C               	goto	u3760
  7018  005B                     u3761:
  7019  005B  2866               	goto	l387
  7020  005C                     u3760:
  7021  005C  2813               	goto	l2907
  7022  005D                     l2935:
  7023  005D  3001               	movlw	1
  7024  005E                     u3775:
  7025  005E  35F0               	lslf	___fltol@f1,f
  7026  005F  0DF1               	rlf	___fltol@f1+1,f
  7027  0060  0DF2               	rlf	___fltol@f1+2,f
  7028  0061  0DF3               	rlf	___fltol@f1+3,f
  7029  0062  0B89               	decfsz	9,f
  7030  0063  285E               	goto	u3775
  7031  0064  3001               	movlw	1
  7032  0065  02FA               	subwf	___fltol@exp1,f
  7033  0066                     l387:
  7034  0066  087A               	movf	___fltol@exp1,w
  7035  0067  1D03               	btfss	3,2
  7036  0068  286A               	goto	u3781
  7037  0069  286B               	goto	u3780
  7038  006A                     u3781:
  7039  006A  285D               	goto	l2935
  7040  006B                     u3780:
  7041  006B                     l2937:
  7042  006B  0879               	movf	___fltol@sign1,w
  7043  006C  1903               	btfsc	3,2
  7044  006D  286F               	goto	u3791
  7045  006E  2870               	goto	u3790
  7046  006F                     u3791:
  7047  006F  287B               	goto	l390
  7048  0070                     u3790:
  7049  0070                     l2939:
  7050  0070  09F0               	comf	___fltol@f1,f
  7051  0071  09F1               	comf	___fltol@f1+1,f
  7052  0072  09F2               	comf	___fltol@f1+2,f
  7053  0073  09F3               	comf	___fltol@f1+3,f
  7054  0074  0AF0               	incf	___fltol@f1,f
  7055  0075  1903               	skipnz
  7056  0076  0AF1               	incf	___fltol@f1+1,f
  7057  0077  1903               	skipnz
  7058  0078  0AF2               	incf	___fltol@f1+2,f
  7059  0079  1903               	skipnz
  7060  007A  0AF3               	incf	___fltol@f1+3,f
  7061  007B                     l390:
  7062  007B                     l380:
  7063  007B  0008               	return
  7064  007C                     __end_of___fltol:
  7065                           
  7066                           	psect	text16
  7067  1E82                     __ptext16:	
  7068 ;; *************** function ___flsub *****************
  7069 ;; Defined at:
  7070 ;;		line 242 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\sprcadd.c"
  7071 ;; Parameters:    Size  Location     Type
  7072 ;;  a               4   26[BANK0 ] long 
  7073 ;;  b               4   30[BANK0 ] long 
  7074 ;; Auto vars:     Size  Location     Type
  7075 ;;		None
  7076 ;; Return value:  Size  Location     Type
  7077 ;;                  4   26[BANK0 ] long 
  7078 ;; Registers used:
  7079 ;;		wreg, status,2, status,0, pclath, cstack
  7080 ;; Tracked objects:
  7081 ;;		On entry : 0/0
  7082 ;;		On exit  : 0/0
  7083 ;;		Unchanged: 0/0
  7084 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  7085 ;;      Params:         0       8       0       0       0       0       0       0
  7086 ;;      Locals:         0       0       0       0       0       0       0       0
  7087 ;;      Temps:          0       0       0       0       0       0       0       0
  7088 ;;      Totals:         0       8       0       0       0       0       0       0
  7089 ;;Total ram usage:        8 bytes
  7090 ;; Hardware stack levels used: 1
  7091 ;; Hardware stack levels required when called: 1
  7092 ;; This function calls:
  7093 ;;		___fladd
  7094 ;; This function is called by:
  7095 ;;		_efgtoa
  7096 ;; This function uses a non-reentrant model
  7097 ;;
  7098                           
  7099  1E82                     ___flsub:	
  7100                           ;psect for function ___flsub
  7101                           
  7102  1E82                     l2941:	
  7103                           ;incstack = 0
  7104                           ; Regs used in ___flsub: [wreg+status,2+status,0+pclath+cstack]
  7105                           
  7106  1E82  3080               	movlw	128
  7107  1E83  0020               	movlb	0	; select bank0
  7108  1E84  06BD               	xorwf	___flsub@a+3,f
  7109  1E85                     l2943:
  7110  1E85  0841               	movf	___flsub@b+3,w
  7111  1E86  00F3               	movwf	___fladd@b+3
  7112  1E87  0840               	movf	___flsub@b+2,w
  7113  1E88  00F2               	movwf	___fladd@b+2
  7114  1E89  083F               	movf	___flsub@b+1,w
  7115  1E8A  00F1               	movwf	___fladd@b+1
  7116  1E8B  083E               	movf	___flsub@b,w
  7117  1E8C  00F0               	movwf	___fladd@b
  7118  1E8D  083D               	movf	___flsub@a+3,w
  7119  1E8E  00F7               	movwf	___fladd@a+3
  7120  1E8F  083C               	movf	___flsub@a+2,w
  7121  1E90  00F6               	movwf	___fladd@a+2
  7122  1E91  083B               	movf	___flsub@a+1,w
  7123  1E92  00F5               	movwf	___fladd@a+1
  7124  1E93  083A               	movf	___flsub@a,w
  7125  1E94  00F4               	movwf	___fladd@a
  7126  1E95  3188  20E2  319E   	fcall	___fladd
  7127  1E98  0873               	movf	?___fladd+3,w
  7128  1E99  0020               	movlb	0	; select bank0
  7129  1E9A  00BD               	movwf	?___flsub+3
  7130  1E9B  0872               	movf	?___fladd+2,w
  7131  1E9C  00BC               	movwf	?___flsub+2
  7132  1E9D  0871               	movf	?___fladd+1,w
  7133  1E9E  00BB               	movwf	?___flsub+1
  7134  1E9F  0870               	movf	?___fladd,w
  7135  1EA0  00BA               	movwf	?___flsub
  7136  1EA1                     l533:
  7137  1EA1  0008               	return
  7138  1EA2                     __end_of___flsub:
  7139                           
  7140                           	psect	text17
  7141  08E2                     __ptext17:	
  7142 ;; *************** function ___fladd *****************
  7143 ;; Defined at:
  7144 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\sprcadd.c"
  7145 ;; Parameters:    Size  Location     Type
  7146 ;;  b               4    0[COMMON] long 
  7147 ;;  a               4    4[COMMON] long 
  7148 ;; Auto vars:     Size  Location     Type
  7149 ;;  grs             1   11[COMMON] unsigned char 
  7150 ;;  bexp            1   10[COMMON] unsigned char 
  7151 ;;  aexp            1    9[COMMON] unsigned char 
  7152 ;;  signs           1    8[COMMON] unsigned char 
  7153 ;; Return value:  Size  Location     Type
  7154 ;;                  4    0[COMMON] unsigned char 
  7155 ;; Registers used:
  7156 ;;		wreg, status,2, status,0
  7157 ;; Tracked objects:
  7158 ;;		On entry : 0/0
  7159 ;;		On exit  : 0/0
  7160 ;;		Unchanged: 0/0
  7161 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  7162 ;;      Params:         8       0       0       0       0       0       0       0
  7163 ;;      Locals:         4       0       0       0       0       0       0       0
  7164 ;;      Temps:          0       8       0       0       0       0       0       0
  7165 ;;      Totals:        12       8       0       0       0       0       0       0
  7166 ;;Total ram usage:       20 bytes
  7167 ;; Hardware stack levels used: 1
  7168 ;; This function calls:
  7169 ;;		Nothing
  7170 ;; This function is called by:
  7171 ;;		___flsub
  7172 ;;		_efgtoa
  7173 ;; This function uses a non-reentrant model
  7174 ;;
  7175                           
  7176  08E2                     ___fladd:	
  7177                           ;psect for function ___fladd
  7178                           
  7179  08E2                     l2549:	
  7180                           ;incstack = 0
  7181                           ; Regs used in ___fladd: [wreg+status,2+status,0]
  7182                           
  7183  08E2  0873               	movf	___fladd@b+3,w
  7184  08E3  3980               	andlw	128
  7185  08E4  0020               	movlb	0	; select bank0
  7186  08E5  00A0               	movwf	??___fladd
  7187  08E6  0820               	movf	??___fladd,w
  7188  08E7  00F8               	movwf	___fladd@signs
  7189  08E8                     l2551:
  7190  08E8  3573               	lslf	___fladd@b+3,w
  7191  08E9  00A0               	movwf	??___fladd
  7192  08EA  0820               	movf	??___fladd,w
  7193  08EB  00FA               	movwf	___fladd@bexp
  7194  08EC                     l2553:
  7195  08EC  1FF2               	btfss	___fladd@b+2,7
  7196  08ED  28EF               	goto	u2891
  7197  08EE  28F0               	goto	u2890
  7198  08EF                     u2891:
  7199  08EF  28F1               	goto	l2557
  7200  08F0                     u2890:
  7201  08F0                     l2555:
  7202  08F0  147A               	bsf	___fladd@bexp,0
  7203  08F1                     l2557:
  7204  08F1  087A               	movf	___fladd@bexp,w
  7205  08F2  1903               	btfsc	3,2
  7206  08F3  28F5               	goto	u2901
  7207  08F4  28F6               	goto	u2900
  7208  08F5                     u2901:
  7209  08F5  2906               	goto	l2567
  7210  08F6                     u2900:
  7211  08F6                     l2559:
  7212  08F6  0A7A               	incf	___fladd@bexp,w
  7213  08F7  1D03               	btfss	3,2
  7214  08F8  28FA               	goto	u2911
  7215  08F9  28FB               	goto	u2910
  7216  08FA                     u2911:
  7217  08FA  2903               	goto	l2563
  7218  08FB                     u2910:
  7219  08FB                     l2561:
  7220  08FB  3000               	movlw	0
  7221  08FC  00F3               	movwf	___fladd@b+3
  7222  08FD  3000               	movlw	0
  7223  08FE  00F2               	movwf	___fladd@b+2
  7224  08FF  3000               	movlw	0
  7225  0900  00F1               	movwf	___fladd@b+1
  7226  0901  3000               	movlw	0
  7227  0902  00F0               	movwf	___fladd@b
  7228  0903                     l2563:
  7229  0903  17F2               	bsf	___fladd@b+2,7
  7230  0904                     l2565:
  7231  0904  01F3               	clrf	___fladd@b+3
  7232  0905  290E               	goto	l2569
  7233  0906                     l2567:
  7234  0906  3000               	movlw	0
  7235  0907  00F3               	movwf	___fladd@b+3
  7236  0908  3000               	movlw	0
  7237  0909  00F2               	movwf	___fladd@b+2
  7238  090A  3000               	movlw	0
  7239  090B  00F1               	movwf	___fladd@b+1
  7240  090C  3000               	movlw	0
  7241  090D  00F0               	movwf	___fladd@b
  7242  090E                     l2569:
  7243  090E  0877               	movf	___fladd@a+3,w
  7244  090F  3980               	andlw	128
  7245  0910  00A0               	movwf	??___fladd
  7246  0911  0820               	movf	??___fladd,w
  7247  0912  00F9               	movwf	___fladd@aexp
  7248  0913                     l2571:
  7249  0913  0879               	movf	___fladd@aexp,w
  7250  0914  0678               	xorwf	___fladd@signs,w
  7251  0915  1903               	skipnz
  7252  0916  2918               	goto	u2921
  7253  0917  2919               	goto	u2920
  7254  0918                     u2921:
  7255  0918  291A               	goto	l2575
  7256  0919                     u2920:
  7257  0919                     l2573:
  7258  0919  1778               	bsf	___fladd@signs,6
  7259  091A                     l2575:
  7260  091A  3577               	lslf	___fladd@a+3,w
  7261  091B  00A0               	movwf	??___fladd
  7262  091C  0820               	movf	??___fladd,w
  7263  091D  00F9               	movwf	___fladd@aexp
  7264  091E                     l2577:
  7265  091E  1FF6               	btfss	___fladd@a+2,7
  7266  091F  2921               	goto	u2931
  7267  0920  2922               	goto	u2930
  7268  0921                     u2931:
  7269  0921  2923               	goto	l2581
  7270  0922                     u2930:
  7271  0922                     l2579:
  7272  0922  1479               	bsf	___fladd@aexp,0
  7273  0923                     l2581:
  7274  0923  0879               	movf	___fladd@aexp,w
  7275  0924  1903               	btfsc	3,2
  7276  0925  2927               	goto	u2941
  7277  0926  2928               	goto	u2940
  7278  0927                     u2941:
  7279  0927  2938               	goto	l2591
  7280  0928                     u2940:
  7281  0928                     l2583:
  7282  0928  0A79               	incf	___fladd@aexp,w
  7283  0929  1D03               	btfss	3,2
  7284  092A  292C               	goto	u2951
  7285  092B  292D               	goto	u2950
  7286  092C                     u2951:
  7287  092C  2935               	goto	l2587
  7288  092D                     u2950:
  7289  092D                     l2585:
  7290  092D  3000               	movlw	0
  7291  092E  00F7               	movwf	___fladd@a+3
  7292  092F  3000               	movlw	0
  7293  0930  00F6               	movwf	___fladd@a+2
  7294  0931  3000               	movlw	0
  7295  0932  00F5               	movwf	___fladd@a+1
  7296  0933  3000               	movlw	0
  7297  0934  00F4               	movwf	___fladd@a
  7298  0935                     l2587:
  7299  0935  17F6               	bsf	___fladd@a+2,7
  7300  0936                     l2589:
  7301  0936  01F7               	clrf	___fladd@a+3
  7302  0937  2940               	goto	l487
  7303  0938                     l2591:
  7304  0938  3000               	movlw	0
  7305  0939  00F7               	movwf	___fladd@a+3
  7306  093A  3000               	movlw	0
  7307  093B  00F6               	movwf	___fladd@a+2
  7308  093C  3000               	movlw	0
  7309  093D  00F5               	movwf	___fladd@a+1
  7310  093E  3000               	movlw	0
  7311  093F  00F4               	movwf	___fladd@a
  7312  0940                     l487:
  7313  0940  087A               	movf	___fladd@bexp,w
  7314  0941  0279               	subwf	___fladd@aexp,w
  7315  0942  1803               	skipnc
  7316  0943  2945               	goto	u2961
  7317  0944  2946               	goto	u2960
  7318  0945                     u2961:
  7319  0945  298A               	goto	l2627
  7320  0946                     u2960:
  7321  0946                     l2593:
  7322  0946  1F78               	btfss	___fladd@signs,6
  7323  0947  2949               	goto	u2971
  7324  0948  294A               	goto	u2970
  7325  0949                     u2971:
  7326  0949  294E               	goto	l2597
  7327  094A                     u2970:
  7328  094A                     l2595:
  7329  094A  3080               	movlw	128
  7330  094B  00A0               	movwf	??___fladd
  7331  094C  0820               	movf	??___fladd,w
  7332  094D  06F8               	xorwf	___fladd@signs,f
  7333  094E                     l2597:
  7334  094E  087A               	movf	___fladd@bexp,w
  7335  094F  00A0               	movwf	??___fladd
  7336  0950  0820               	movf	??___fladd,w
  7337  0951  00FB               	movwf	___fladd@grs
  7338  0952                     l2599:
  7339  0952  0879               	movf	___fladd@aexp,w
  7340  0953  00A0               	movwf	??___fladd
  7341  0954  0820               	movf	??___fladd,w
  7342  0955  00FA               	movwf	___fladd@bexp
  7343  0956                     l2601:
  7344  0956  087B               	movf	___fladd@grs,w
  7345  0957  00A0               	movwf	??___fladd
  7346  0958  0820               	movf	??___fladd,w
  7347  0959  00F9               	movwf	___fladd@aexp
  7348  095A                     l2603:
  7349  095A  0870               	movf	___fladd@b,w
  7350  095B  00A0               	movwf	??___fladd
  7351  095C  0820               	movf	??___fladd,w
  7352  095D  00FB               	movwf	___fladd@grs
  7353  095E                     l2605:
  7354  095E  0874               	movf	___fladd@a,w
  7355  095F  00A0               	movwf	??___fladd
  7356  0960  0820               	movf	??___fladd,w
  7357  0961  00F0               	movwf	___fladd@b
  7358  0962                     l2607:
  7359  0962  087B               	movf	___fladd@grs,w
  7360  0963  00A0               	movwf	??___fladd
  7361  0964  0820               	movf	??___fladd,w
  7362  0965  00F4               	movwf	___fladd@a
  7363  0966                     l2609:
  7364  0966  0871               	movf	___fladd@b+1,w
  7365  0967  00A0               	movwf	??___fladd
  7366  0968  0820               	movf	??___fladd,w
  7367  0969  00FB               	movwf	___fladd@grs
  7368  096A                     l2611:
  7369  096A  0875               	movf	___fladd@a+1,w
  7370  096B  00A0               	movwf	??___fladd
  7371  096C  0820               	movf	??___fladd,w
  7372  096D  00F1               	movwf	___fladd@b+1
  7373  096E                     l2613:
  7374  096E  087B               	movf	___fladd@grs,w
  7375  096F  00A0               	movwf	??___fladd
  7376  0970  0820               	movf	??___fladd,w
  7377  0971  00F5               	movwf	___fladd@a+1
  7378  0972                     l2615:
  7379  0972  0872               	movf	___fladd@b+2,w
  7380  0973  00A0               	movwf	??___fladd
  7381  0974  0820               	movf	??___fladd,w
  7382  0975  00FB               	movwf	___fladd@grs
  7383  0976                     l2617:
  7384  0976  0876               	movf	___fladd@a+2,w
  7385  0977  00A0               	movwf	??___fladd
  7386  0978  0820               	movf	??___fladd,w
  7387  0979  00F2               	movwf	___fladd@b+2
  7388  097A                     l2619:
  7389  097A  087B               	movf	___fladd@grs,w
  7390  097B  00A0               	movwf	??___fladd
  7391  097C  0820               	movf	??___fladd,w
  7392  097D  00F6               	movwf	___fladd@a+2
  7393  097E                     l2621:
  7394  097E  0873               	movf	___fladd@b+3,w
  7395  097F  00A0               	movwf	??___fladd
  7396  0980  0820               	movf	??___fladd,w
  7397  0981  00FB               	movwf	___fladd@grs
  7398  0982                     l2623:
  7399  0982  0877               	movf	___fladd@a+3,w
  7400  0983  00A0               	movwf	??___fladd
  7401  0984  0820               	movf	??___fladd,w
  7402  0985  00F3               	movwf	___fladd@b+3
  7403  0986                     l2625:
  7404  0986  087B               	movf	___fladd@grs,w
  7405  0987  00A0               	movwf	??___fladd
  7406  0988  0820               	movf	??___fladd,w
  7407  0989  00F7               	movwf	___fladd@a+3
  7408  098A                     l2627:
  7409  098A  01FB               	clrf	___fladd@grs
  7410  098B                     l2629:
  7411  098B  0879               	movf	___fladd@aexp,w
  7412  098C  00A0               	movwf	??___fladd
  7413  098D  01A1               	clrf	??___fladd+1
  7414  098E  0821               	movf	??___fladd+1,w
  7415  098F  00A3               	movwf	??___fladd+3
  7416  0990  087A               	movf	___fladd@bexp,w
  7417  0991  0220               	subwf	??___fladd,w
  7418  0992  00A2               	movwf	??___fladd+2
  7419  0993  1C03               	skipc
  7420  0994  03A3               	decf	??___fladd+3,f
  7421  0995  0823               	movf	??___fladd+3,w
  7422  0996  3A80               	xorlw	128
  7423  0997  00A4               	movwf	??___fladd+4
  7424  0998  3080               	movlw	128
  7425  0999  0224               	subwf	??___fladd+4,w
  7426  099A  1D03               	skipz
  7427  099B  299E               	goto	u2985
  7428  099C  301A               	movlw	26
  7429  099D  0222               	subwf	??___fladd+2,w
  7430  099E                     u2985:
  7431  099E  1C03               	skipc
  7432  099F  29A1               	goto	u2981
  7433  09A0  29A2               	goto	u2980
  7434  09A1                     u2981:
  7435  09A1  29DC               	goto	l2645
  7436  09A2                     u2980:
  7437  09A2                     l2631:
  7438  09A2  0873               	movf	___fladd@b+3,w
  7439  09A3  0472               	iorwf	___fladd@b+2,w
  7440  09A4  0471               	iorwf	___fladd@b+1,w
  7441  09A5  0470               	iorwf	___fladd@b,w
  7442  09A6  1D03               	skipz
  7443  09A7  29A9               	goto	u2991
  7444  09A8  29AB               	goto	u2990
  7445  09A9                     u2991:
  7446  09A9  3001               	movlw	1
  7447  09AA  29AC               	goto	u3000
  7448  09AB                     u2990:
  7449  09AB  3000               	movlw	0
  7450  09AC                     u3000:
  7451  09AC  0020               	movlb	0	; select bank0
  7452  09AD  00A0               	movwf	??___fladd
  7453  09AE  0820               	movf	??___fladd,w
  7454  09AF  00FB               	movwf	___fladd@grs
  7455  09B0  3000               	movlw	0
  7456  09B1  00F3               	movwf	___fladd@b+3
  7457  09B2  3000               	movlw	0
  7458  09B3  00F2               	movwf	___fladd@b+2
  7459  09B4  3000               	movlw	0
  7460  09B5  00F1               	movwf	___fladd@b+1
  7461  09B6  3000               	movlw	0
  7462  09B7  00F0               	movwf	___fladd@b
  7463  09B8  0879               	movf	___fladd@aexp,w
  7464  09B9  00A0               	movwf	??___fladd
  7465  09BA  0820               	movf	??___fladd,w
  7466  09BB  00FA               	movwf	___fladd@bexp
  7467  09BC  29E2               	goto	l491
  7468  09BD                     l493:
  7469  09BD  1C7B               	btfss	___fladd@grs,0
  7470  09BE  29C0               	goto	u3011
  7471  09BF  29C1               	goto	u3010
  7472  09C0                     u3011:
  7473  09C0  29C8               	goto	l2635
  7474  09C1                     u3010:
  7475  09C1                     l2633:
  7476  09C1  367B               	lsrf	___fladd@grs,w
  7477  09C2  3801               	iorlw	1
  7478  09C3  0020               	movlb	0	; select bank0
  7479  09C4  00A0               	movwf	??___fladd
  7480  09C5  0820               	movf	??___fladd,w
  7481  09C6  00FB               	movwf	___fladd@grs
  7482  09C7  29CA               	goto	l2637
  7483  09C8                     l2635:
  7484  09C8  1003               	clrc
  7485  09C9  0CFB               	rrf	___fladd@grs,f
  7486  09CA                     l2637:
  7487  09CA  1C70               	btfss	___fladd@b,0
  7488  09CB  29CD               	goto	u3021
  7489  09CC  29CE               	goto	u3020
  7490  09CD                     u3021:
  7491  09CD  29CF               	goto	l2641
  7492  09CE                     u3020:
  7493  09CE                     l2639:
  7494  09CE  17FB               	bsf	___fladd@grs,7
  7495  09CF                     l2641:
  7496  09CF  3001               	movlw	1
  7497  09D0  0020               	movlb	0	; select bank0
  7498  09D1  00A0               	movwf	??___fladd
  7499  09D2                     u3035:
  7500  09D2  37F3               	asrf	___fladd@b+3,f
  7501  09D3  0CF2               	rrf	___fladd@b+2,f
  7502  09D4  0CF1               	rrf	___fladd@b+1,f
  7503  09D5  0CF0               	rrf	___fladd@b,f
  7504  09D6  0BA0               	decfsz	??___fladd& (0+127),f
  7505  09D7  29D2               	goto	u3035
  7506  09D8                     l2643:
  7507  09D8  3001               	movlw	1
  7508  09D9  00A0               	movwf	??___fladd
  7509  09DA  0820               	movf	??___fladd,w
  7510  09DB  07FA               	addwf	___fladd@bexp,f
  7511  09DC                     l2645:
  7512  09DC  0879               	movf	___fladd@aexp,w
  7513  09DD  027A               	subwf	___fladd@bexp,w
  7514  09DE  1C03               	skipc
  7515  09DF  29E1               	goto	u3041
  7516  09E0  29E2               	goto	u3040
  7517  09E1                     u3041:
  7518  09E1  29BD               	goto	l493
  7519  09E2                     u3040:
  7520  09E2                     l491:
  7521  09E2  1B78               	btfsc	___fladd@signs,6
  7522  09E3  29E5               	goto	u3051
  7523  09E4  29E6               	goto	u3050
  7524  09E5                     u3051:
  7525  09E5  2A20               	goto	l2671
  7526  09E6                     u3050:
  7527  09E6                     l2647:
  7528  09E6  087A               	movf	___fladd@bexp,w
  7529  09E7  1D03               	btfss	3,2
  7530  09E8  29EA               	goto	u3061
  7531  09E9  29EB               	goto	u3060
  7532  09EA                     u3061:
  7533  09EA  29F4               	goto	l2653
  7534  09EB                     u3060:
  7535  09EB                     l2649:
  7536  09EB  3000               	movlw	0
  7537  09EC  00F3               	movwf	?___fladd+3
  7538  09ED  3000               	movlw	0
  7539  09EE  00F2               	movwf	?___fladd+2
  7540  09EF  3000               	movlw	0
  7541  09F0  00F1               	movwf	?___fladd+1
  7542  09F1  3000               	movlw	0
  7543  09F2  00F0               	movwf	?___fladd
  7544  09F3  2B20               	goto	l500
  7545  09F4                     l2653:
  7546  09F4  0874               	movf	___fladd@a,w
  7547  09F5  07F0               	addwf	___fladd@b,f
  7548  09F6  0875               	movf	___fladd@a+1,w
  7549  09F7  3DF1               	addwfc	___fladd@b+1,f
  7550  09F8  0876               	movf	___fladd@a+2,w
  7551  09F9  3DF2               	addwfc	___fladd@b+2,f
  7552  09FA  0877               	movf	___fladd@a+3,w
  7553  09FB  3DF3               	addwfc	___fladd@b+3,f
  7554  09FC                     l2655:
  7555  09FC  1C73               	btfss	___fladd@b+3,0
  7556  09FD  29FF               	goto	u3071
  7557  09FE  2A00               	goto	u3070
  7558  09FF                     u3071:
  7559  09FF  2AAD               	goto	l2705
  7560  0A00                     u3070:
  7561  0A00                     l2657:
  7562  0A00  1C7B               	btfss	___fladd@grs,0
  7563  0A01  2A03               	goto	u3081
  7564  0A02  2A04               	goto	u3080
  7565  0A03                     u3081:
  7566  0A03  2A0B               	goto	l2661
  7567  0A04                     u3080:
  7568  0A04                     l2659:
  7569  0A04  367B               	lsrf	___fladd@grs,w
  7570  0A05  3801               	iorlw	1
  7571  0A06  0020               	movlb	0	; select bank0
  7572  0A07  00A0               	movwf	??___fladd
  7573  0A08  0820               	movf	??___fladd,w
  7574  0A09  00FB               	movwf	___fladd@grs
  7575  0A0A  2A0D               	goto	l2663
  7576  0A0B                     l2661:
  7577  0A0B  1003               	clrc
  7578  0A0C  0CFB               	rrf	___fladd@grs,f
  7579  0A0D                     l2663:
  7580  0A0D  1C70               	btfss	___fladd@b,0
  7581  0A0E  2A10               	goto	u3091
  7582  0A0F  2A11               	goto	u3090
  7583  0A10                     u3091:
  7584  0A10  2A12               	goto	l2667
  7585  0A11                     u3090:
  7586  0A11                     l2665:
  7587  0A11  17FB               	bsf	___fladd@grs,7
  7588  0A12                     l2667:
  7589  0A12  3001               	movlw	1
  7590  0A13  0020               	movlb	0	; select bank0
  7591  0A14  00A0               	movwf	??___fladd
  7592  0A15                     u3105:
  7593  0A15  37F3               	asrf	___fladd@b+3,f
  7594  0A16  0CF2               	rrf	___fladd@b+2,f
  7595  0A17  0CF1               	rrf	___fladd@b+1,f
  7596  0A18  0CF0               	rrf	___fladd@b,f
  7597  0A19  0BA0               	decfsz	??___fladd& (0+127),f
  7598  0A1A  2A15               	goto	u3105
  7599  0A1B                     l2669:
  7600  0A1B  3001               	movlw	1
  7601  0A1C  00A0               	movwf	??___fladd
  7602  0A1D  0820               	movf	??___fladd,w
  7603  0A1E  07FA               	addwf	___fladd@bexp,f
  7604  0A1F  2AAD               	goto	l2705
  7605  0A20                     l2671:
  7606  0A20  0873               	movf	___fladd@b+3,w
  7607  0A21  3A80               	xorlw	128
  7608  0A22  0020               	movlb	0	; select bank0
  7609  0A23  00A0               	movwf	??___fladd
  7610  0A24  0877               	movf	___fladd@a+3,w
  7611  0A25  3A80               	xorlw	128
  7612  0A26  0220               	subwf	??___fladd,w
  7613  0A27  1D03               	skipz
  7614  0A28  2A33               	goto	u3113
  7615  0A29  0876               	movf	___fladd@a+2,w
  7616  0A2A  0272               	subwf	___fladd@b+2,w
  7617  0A2B  1D03               	skipz
  7618  0A2C  2A33               	goto	u3113
  7619  0A2D  0875               	movf	___fladd@a+1,w
  7620  0A2E  0271               	subwf	___fladd@b+1,w
  7621  0A2F  1D03               	skipz
  7622  0A30  2A33               	goto	u3113
  7623  0A31  0874               	movf	___fladd@a,w
  7624  0A32  0270               	subwf	___fladd@b,w
  7625  0A33                     u3113:
  7626  0A33  1803               	skipnc
  7627  0A34  2A36               	goto	u3111
  7628  0A35  2A37               	goto	u3110
  7629  0A36                     u3111:
  7630  0A36  2A6F               	goto	l2681
  7631  0A37                     u3110:
  7632  0A37                     l2673:
  7633  0A37  30FF               	movlw	255
  7634  0A38  00A0               	movwf	??___fladd
  7635  0A39  30FF               	movlw	255
  7636  0A3A  00A1               	movwf	??___fladd+1
  7637  0A3B  30FF               	movlw	255
  7638  0A3C  00A2               	movwf	??___fladd+2
  7639  0A3D  30FF               	movlw	255
  7640  0A3E  00A3               	movwf	??___fladd+3
  7641  0A3F  0870               	movf	___fladd@b,w
  7642  0A40  0274               	subwf	___fladd@a,w
  7643  0A41  00A4               	movwf	??___fladd+4
  7644  0A42  0871               	movf	___fladd@b+1,w
  7645  0A43  3B75               	subwfb	___fladd@a+1,w
  7646  0A44  00A5               	movwf	??___fladd+5
  7647  0A45  0872               	movf	___fladd@b+2,w
  7648  0A46  3B76               	subwfb	___fladd@a+2,w
  7649  0A47  00A6               	movwf	??___fladd+6
  7650  0A48  0873               	movf	___fladd@b+3,w
  7651  0A49  3B77               	subwfb	___fladd@a+3,w
  7652  0A4A  00A7               	movwf	??___fladd+7
  7653  0A4B  0824               	movf	??___fladd+4,w
  7654  0A4C  07A0               	addwf	??___fladd,f
  7655  0A4D  0825               	movf	??___fladd+5,w
  7656  0A4E  3DA1               	addwfc	??___fladd+1,f
  7657  0A4F  0826               	movf	??___fladd+6,w
  7658  0A50  3DA2               	addwfc	??___fladd+2,f
  7659  0A51  0827               	movf	??___fladd+7,w
  7660  0A52  3DA3               	addwfc	??___fladd+3,f
  7661  0A53  0823               	movf	??___fladd+3,w
  7662  0A54  00F3               	movwf	___fladd@b+3
  7663  0A55  0822               	movf	??___fladd+2,w
  7664  0A56  00F2               	movwf	___fladd@b+2
  7665  0A57  0821               	movf	??___fladd+1,w
  7666  0A58  00F1               	movwf	___fladd@b+1
  7667  0A59  0820               	movf	??___fladd,w
  7668  0A5A  00F0               	movwf	___fladd@b
  7669  0A5B                     l2675:
  7670  0A5B  3080               	movlw	128
  7671  0A5C  00A0               	movwf	??___fladd
  7672  0A5D  0820               	movf	??___fladd,w
  7673  0A5E  06F8               	xorwf	___fladd@signs,f
  7674  0A5F  09FB               	comf	___fladd@grs,f
  7675  0A60  0AFB               	incf	___fladd@grs,f
  7676  0A61                     l2677:
  7677  0A61  087B               	movf	___fladd@grs,w
  7678  0A62  1D03               	btfss	3,2
  7679  0A63  2A65               	goto	u3121
  7680  0A64  2A66               	goto	u3120
  7681  0A65                     u3121:
  7682  0A65  2A77               	goto	l508
  7683  0A66                     u3120:
  7684  0A66                     l2679:
  7685  0A66  3001               	movlw	1
  7686  0A67  07F0               	addwf	___fladd@b,f
  7687  0A68  3000               	movlw	0
  7688  0A69  3DF1               	addwfc	___fladd@b+1,f
  7689  0A6A  3000               	movlw	0
  7690  0A6B  3DF2               	addwfc	___fladd@b+2,f
  7691  0A6C  3000               	movlw	0
  7692  0A6D  3DF3               	addwfc	___fladd@b+3,f
  7693  0A6E  2A77               	goto	l508
  7694  0A6F                     l2681:
  7695  0A6F  0874               	movf	___fladd@a,w
  7696  0A70  02F0               	subwf	___fladd@b,f
  7697  0A71  0875               	movf	___fladd@a+1,w
  7698  0A72  3BF1               	subwfb	___fladd@b+1,f
  7699  0A73  0876               	movf	___fladd@a+2,w
  7700  0A74  3BF2               	subwfb	___fladd@b+2,f
  7701  0A75  0877               	movf	___fladd@a+3,w
  7702  0A76  3BF3               	subwfb	___fladd@b+3,f
  7703  0A77                     l508:
  7704  0A77  0873               	movf	___fladd@b+3,w
  7705  0A78  0472               	iorwf	___fladd@b+2,w
  7706  0A79  0471               	iorwf	___fladd@b+1,w
  7707  0A7A  0470               	iorwf	___fladd@b,w
  7708  0A7B  1D03               	skipz
  7709  0A7C  2A7E               	goto	u3131
  7710  0A7D  2A7F               	goto	u3130
  7711  0A7E                     u3131:
  7712  0A7E  2AA9               	goto	l2703
  7713  0A7F                     u3130:
  7714  0A7F                     l2683:
  7715  0A7F  087B               	movf	___fladd@grs,w
  7716  0A80  1D03               	btfss	3,2
  7717  0A81  2A83               	goto	u3141
  7718  0A82  2A84               	goto	u3140
  7719  0A83                     u3141:
  7720  0A83  2AA9               	goto	l2703
  7721  0A84                     u3140:
  7722  0A84                     l2685:
  7723  0A84  3000               	movlw	0
  7724  0A85  00F3               	movwf	?___fladd+3
  7725  0A86  3000               	movlw	0
  7726  0A87  00F2               	movwf	?___fladd+2
  7727  0A88  3000               	movlw	0
  7728  0A89  00F1               	movwf	?___fladd+1
  7729  0A8A  3000               	movlw	0
  7730  0A8B  00F0               	movwf	?___fladd
  7731  0A8C  2B20               	goto	l500
  7732  0A8D                     l2689:
  7733  0A8D  3001               	movlw	1
  7734  0A8E                     u3155:
  7735  0A8E  35F0               	lslf	___fladd@b,f
  7736  0A8F  0DF1               	rlf	___fladd@b+1,f
  7737  0A90  0DF2               	rlf	___fladd@b+2,f
  7738  0A91  0DF3               	rlf	___fladd@b+3,f
  7739  0A92  0B89               	decfsz	9,f
  7740  0A93  2A8E               	goto	u3155
  7741  0A94                     l2691:
  7742  0A94  1FFB               	btfss	___fladd@grs,7
  7743  0A95  2A97               	goto	u3161
  7744  0A96  2A98               	goto	u3160
  7745  0A97                     u3161:
  7746  0A97  2A99               	goto	l512
  7747  0A98                     u3160:
  7748  0A98                     l2693:
  7749  0A98  1470               	bsf	___fladd@b,0
  7750  0A99                     l512:
  7751  0A99  1C7B               	btfss	___fladd@grs,0
  7752  0A9A  2A9C               	goto	u3171
  7753  0A9B  2A9D               	goto	u3170
  7754  0A9C                     u3171:
  7755  0A9C  2AA0               	goto	l2697
  7756  0A9D                     u3170:
  7757  0A9D                     l2695:
  7758  0A9D  1403               	setc
  7759  0A9E  0DFB               	rlf	___fladd@grs,f
  7760  0A9F  2AA2               	goto	l2699
  7761  0AA0                     l2697:
  7762  0AA0  1003               	clrc
  7763  0AA1  0DFB               	rlf	___fladd@grs,f
  7764  0AA2                     l2699:
  7765  0AA2  087A               	movf	___fladd@bexp,w
  7766  0AA3  1903               	btfsc	3,2
  7767  0AA4  2AA6               	goto	u3181
  7768  0AA5  2AA7               	goto	u3180
  7769  0AA6                     u3181:
  7770  0AA6  2AA9               	goto	l2703
  7771  0AA7                     u3180:
  7772  0AA7                     l2701:
  7773  0AA7  3001               	movlw	1
  7774  0AA8  02FA               	subwf	___fladd@bexp,f
  7775  0AA9                     l2703:
  7776  0AA9  1FF2               	btfss	___fladd@b+2,7
  7777  0AAA  2AAC               	goto	u3191
  7778  0AAB  2AAD               	goto	u3190
  7779  0AAC                     u3191:
  7780  0AAC  2A8D               	goto	l2689
  7781  0AAD                     u3190:
  7782  0AAD                     l2705:
  7783  0AAD  01F9               	clrf	___fladd@aexp
  7784  0AAE                     l2707:
  7785  0AAE  1FFB               	btfss	___fladd@grs,7
  7786  0AAF  2AB1               	goto	u3201
  7787  0AB0  2AB2               	goto	u3200
  7788  0AB1                     u3201:
  7789  0AB1  2AC0               	goto	l2715
  7790  0AB2                     u3200:
  7791  0AB2                     l2709:
  7792  0AB2  087B               	movf	___fladd@grs,w
  7793  0AB3  397F               	andlw	127
  7794  0AB4  1903               	btfsc	3,2
  7795  0AB5  2AB7               	goto	u3211
  7796  0AB6  2AB8               	goto	u3210
  7797  0AB7                     u3211:
  7798  0AB7  2ABB               	goto	l518
  7799  0AB8                     u3210:
  7800  0AB8                     l2711:
  7801  0AB8  01F9               	clrf	___fladd@aexp
  7802  0AB9  0AF9               	incf	___fladd@aexp,f
  7803  0ABA  2AC0               	goto	l2715
  7804  0ABB                     l518:
  7805  0ABB  1C70               	btfss	___fladd@b,0
  7806  0ABC  2ABE               	goto	u3221
  7807  0ABD  2ABF               	goto	u3220
  7808  0ABE                     u3221:
  7809  0ABE  2AC0               	goto	l2715
  7810  0ABF                     u3220:
  7811  0ABF  2AB8               	goto	l2711
  7812  0AC0                     l2715:
  7813  0AC0  0879               	movf	___fladd@aexp,w
  7814  0AC1  1903               	btfsc	3,2
  7815  0AC2  2AC4               	goto	u3231
  7816  0AC3  2AC5               	goto	u3230
  7817  0AC4                     u3231:
  7818  0AC4  2AF3               	goto	l521
  7819  0AC5                     u3230:
  7820  0AC5                     l2717:
  7821  0AC5  3001               	movlw	1
  7822  0AC6  07F0               	addwf	___fladd@b,f
  7823  0AC7  3000               	movlw	0
  7824  0AC8  3DF1               	addwfc	___fladd@b+1,f
  7825  0AC9  3000               	movlw	0
  7826  0ACA  3DF2               	addwfc	___fladd@b+2,f
  7827  0ACB  3000               	movlw	0
  7828  0ACC  3DF3               	addwfc	___fladd@b+3,f
  7829  0ACD                     l2719:
  7830  0ACD  1C73               	btfss	___fladd@b+3,0
  7831  0ACE  2AD0               	goto	u3241
  7832  0ACF  2AD1               	goto	u3240
  7833  0AD0                     u3241:
  7834  0AD0  2AF3               	goto	l521
  7835  0AD1                     u3240:
  7836  0AD1                     l2721:
  7837  0AD1  0870               	movf	___fladd@b,w
  7838  0AD2  0020               	movlb	0	; select bank0
  7839  0AD3  00A0               	movwf	??___fladd
  7840  0AD4  0871               	movf	___fladd@b+1,w
  7841  0AD5  00A1               	movwf	??___fladd+1
  7842  0AD6  0872               	movf	___fladd@b+2,w
  7843  0AD7  00A2               	movwf	??___fladd+2
  7844  0AD8  0873               	movf	___fladd@b+3,w
  7845  0AD9  00A3               	movwf	??___fladd+3
  7846  0ADA  3001               	movlw	1
  7847  0ADB  00A4               	movwf	??___fladd+4
  7848  0ADC                     u3255:
  7849  0ADC  37A3               	asrf	??___fladd+3,f
  7850  0ADD  0CA2               	rrf	??___fladd+2,f
  7851  0ADE  0CA1               	rrf	??___fladd+1,f
  7852  0ADF  0CA0               	rrf	??___fladd,f
  7853  0AE0                     u3250:
  7854  0AE0  0BA4               	decfsz	??___fladd+4,f
  7855  0AE1  2ADC               	goto	u3255
  7856  0AE2  0823               	movf	??___fladd+3,w
  7857  0AE3  00F3               	movwf	___fladd@b+3
  7858  0AE4  0822               	movf	??___fladd+2,w
  7859  0AE5  00F2               	movwf	___fladd@b+2
  7860  0AE6  0821               	movf	??___fladd+1,w
  7861  0AE7  00F1               	movwf	___fladd@b+1
  7862  0AE8  0820               	movf	??___fladd,w
  7863  0AE9  00F0               	movwf	___fladd@b
  7864  0AEA  0A7A               	incf	___fladd@bexp,w
  7865  0AEB  1903               	btfsc	3,2
  7866  0AEC  2AEE               	goto	u3261
  7867  0AED  2AEF               	goto	u3260
  7868  0AEE                     u3261:
  7869  0AEE  2AF3               	goto	l521
  7870  0AEF                     u3260:
  7871  0AEF                     l2723:
  7872  0AEF  3001               	movlw	1
  7873  0AF0  00A0               	movwf	??___fladd
  7874  0AF1  0820               	movf	??___fladd,w
  7875  0AF2  07FA               	addwf	___fladd@bexp,f
  7876  0AF3                     l521:
  7877  0AF3  0A7A               	incf	___fladd@bexp,w
  7878  0AF4  1903               	btfsc	3,2
  7879  0AF5  2AF7               	goto	u3271
  7880  0AF6  2AF8               	goto	u3270
  7881  0AF7                     u3271:
  7882  0AF7  2AFD               	goto	l2727
  7883  0AF8                     u3270:
  7884  0AF8                     l2725:
  7885  0AF8  087A               	movf	___fladd@bexp,w
  7886  0AF9  1D03               	btfss	3,2
  7887  0AFA  2AFC               	goto	u3281
  7888  0AFB  2AFD               	goto	u3280
  7889  0AFC                     u3281:
  7890  0AFC  2B0B               	goto	l2733
  7891  0AFD                     u3280:
  7892  0AFD                     l2727:
  7893  0AFD  3000               	movlw	0
  7894  0AFE  00F3               	movwf	___fladd@b+3
  7895  0AFF  3000               	movlw	0
  7896  0B00  00F2               	movwf	___fladd@b+2
  7897  0B01  3000               	movlw	0
  7898  0B02  00F1               	movwf	___fladd@b+1
  7899  0B03  3000               	movlw	0
  7900  0B04  00F0               	movwf	___fladd@b
  7901  0B05                     l2729:
  7902  0B05  087A               	movf	___fladd@bexp,w
  7903  0B06  1D03               	btfss	3,2
  7904  0B07  2B09               	goto	u3291
  7905  0B08  2B0A               	goto	u3290
  7906  0B09                     u3291:
  7907  0B09  2B0B               	goto	l2733
  7908  0B0A                     u3290:
  7909  0B0A                     l2731:
  7910  0B0A  01F8               	clrf	___fladd@signs
  7911  0B0B                     l2733:
  7912  0B0B  1C7A               	btfss	___fladd@bexp,0
  7913  0B0C  2B0E               	goto	u3301
  7914  0B0D  2B0F               	goto	u3300
  7915  0B0E                     u3301:
  7916  0B0E  2B11               	goto	l2737
  7917  0B0F                     u3300:
  7918  0B0F                     l2735:
  7919  0B0F  17F2               	bsf	___fladd@b+2,7
  7920  0B10  2B16               	goto	l529
  7921  0B11                     l2737:
  7922  0B11  307F               	movlw	127
  7923  0B12  0020               	movlb	0	; select bank0
  7924  0B13  00A0               	movwf	??___fladd
  7925  0B14  0820               	movf	??___fladd,w
  7926  0B15  05F2               	andwf	___fladd@b+2,f
  7927  0B16                     l529:
  7928  0B16  367A               	lsrf	___fladd@bexp,w
  7929  0B17  0020               	movlb	0	; select bank0
  7930  0B18  00A0               	movwf	??___fladd
  7931  0B19  0820               	movf	??___fladd,w
  7932  0B1A  00F3               	movwf	___fladd@b+3
  7933  0B1B                     l2739:
  7934  0B1B  1FF8               	btfss	___fladd@signs,7
  7935  0B1C  2B1E               	goto	u3311
  7936  0B1D  2B1F               	goto	u3310
  7937  0B1E                     u3311:
  7938  0B1E  2B20               	goto	l530
  7939  0B1F                     u3310:
  7940  0B1F                     l2741:
  7941  0B1F  17F3               	bsf	___fladd@b+3,7
  7942  0B20                     l530:
  7943  0B20                     l500:
  7944  0B20  0008               	return
  7945  0B21                     __end_of___fladd:
  7946                           
  7947                           	psect	text18
  7948  1D6C                     __ptext18:	
  7949 ;; *************** function ___flneg *****************
  7950 ;; Defined at:
  7951 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\flneg.c"
  7952 ;; Parameters:    Size  Location     Type
  7953 ;;  f1              4    0[COMMON] unsigned char 
  7954 ;; Auto vars:     Size  Location     Type
  7955 ;;		None
  7956 ;; Return value:  Size  Location     Type
  7957 ;;                  4    0[COMMON] unsigned char 
  7958 ;; Registers used:
  7959 ;;		wreg
  7960 ;; Tracked objects:
  7961 ;;		On entry : 0/0
  7962 ;;		On exit  : 0/0
  7963 ;;		Unchanged: 0/0
  7964 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  7965 ;;      Params:         4       0       0       0       0       0       0       0
  7966 ;;      Locals:         0       0       0       0       0       0       0       0
  7967 ;;      Temps:          0       0       0       0       0       0       0       0
  7968 ;;      Totals:         4       0       0       0       0       0       0       0
  7969 ;;Total ram usage:        4 bytes
  7970 ;; Hardware stack levels used: 1
  7971 ;; This function calls:
  7972 ;;		Nothing
  7973 ;; This function is called by:
  7974 ;;		_efgtoa
  7975 ;; This function uses a non-reentrant model
  7976 ;;
  7977                           
  7978  1D6C                     ___flneg:	
  7979                           ;psect for function ___flneg
  7980                           
  7981  1D6C                     l2897:	
  7982                           ;incstack = 0
  7983                           ; Regs used in ___flneg: [wreg]
  7984                           
  7985  1D6C  0873               	movf	___flneg@f1+3,w
  7986  1D6D  0472               	iorwf	___flneg@f1+2,w
  7987  1D6E  0471               	iorwf	___flneg@f1+1,w
  7988  1D6F  0470               	iorwf	___flneg@f1,w
  7989  1D70  1903               	skipnz
  7990  1D71  2D73               	goto	u3691
  7991  1D72  2D74               	goto	u3690
  7992  1D73                     u3691:
  7993  1D73  2D76               	goto	l2901
  7994  1D74                     u3690:
  7995  1D74                     l2899:
  7996  1D74  3080               	movlw	128
  7997  1D75  06F3               	xorwf	___flneg@f1+3,f
  7998  1D76                     l2901:
  7999  1D76                     l376:
  8000  1D76  0008               	return
  8001  1D77                     __end_of___flneg:
  8002                           
  8003                           	psect	text19
  8004  0B21                     __ptext19:	
  8005 ;; *************** function ___flmul *****************
  8006 ;; Defined at:
  8007 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\sprcmul.c"
  8008 ;; Parameters:    Size  Location     Type
  8009 ;;  b               4    0[BANK0 ] unsigned char 
  8010 ;;  a               4    4[BANK0 ] unsigned char 
  8011 ;; Auto vars:     Size  Location     Type
  8012 ;;  prod            4   20[BANK0 ] struct .
  8013 ;;  grs             4   14[BANK0 ] unsigned long 
  8014 ;;  temp            2   24[BANK0 ] struct .
  8015 ;;  bexp            1   19[BANK0 ] unsigned char 
  8016 ;;  aexp            1   18[BANK0 ] unsigned char 
  8017 ;;  sign            1   13[BANK0 ] unsigned char 
  8018 ;; Return value:  Size  Location     Type
  8019 ;;                  4    0[BANK0 ] unsigned char 
  8020 ;; Registers used:
  8021 ;;		wreg, status,2, status,0, pclath, cstack
  8022 ;; Tracked objects:
  8023 ;;		On entry : 0/0
  8024 ;;		On exit  : 0/0
  8025 ;;		Unchanged: 0/0
  8026 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  8027 ;;      Params:         0       8       0       0       0       0       0       0
  8028 ;;      Locals:         0      13       0       0       0       0       0       0
  8029 ;;      Temps:          0       5       0       0       0       0       0       0
  8030 ;;      Totals:         0      26       0       0       0       0       0       0
  8031 ;;Total ram usage:       26 bytes
  8032 ;; Hardware stack levels used: 1
  8033 ;; Hardware stack levels required when called: 1
  8034 ;; This function calls:
  8035 ;;		__Umul8_16
  8036 ;; This function is called by:
  8037 ;;		_main
  8038 ;;		_efgtoa
  8039 ;; This function uses a non-reentrant model
  8040 ;;
  8041                           
  8042  0B21                     ___flmul:	
  8043                           ;psect for function ___flmul
  8044                           
  8045  0B21                     l3087:	
  8046                           ;incstack = 0
  8047                           ; Regs used in ___flmul: [wreg+status,2+status,0+pclath+cstack]
  8048                           
  8049  0B21  0020               	movlb	0	; select bank0
  8050  0B22  0823               	movf	___flmul@b+3,w
  8051  0B23  3980               	andlw	128
  8052  0B24  00A8               	movwf	??___flmul
  8053  0B25  0828               	movf	??___flmul,w
  8054  0B26  00AD               	movwf	___flmul@sign
  8055  0B27                     l3089:
  8056  0B27  3523               	lslf	___flmul@b+3,w
  8057  0B28  00A8               	movwf	??___flmul
  8058  0B29  0828               	movf	??___flmul,w
  8059  0B2A  00B3               	movwf	___flmul@bexp
  8060  0B2B                     l3091:
  8061  0B2B  1FA2               	btfss	___flmul@b+2,7
  8062  0B2C  2B2E               	goto	u4091
  8063  0B2D  2B2F               	goto	u4090
  8064  0B2E                     u4091:
  8065  0B2E  2B30               	goto	l3095
  8066  0B2F                     u4090:
  8067  0B2F                     l3093:
  8068  0B2F  1433               	bsf	___flmul@bexp,0
  8069  0B30                     l3095:
  8070  0B30  0833               	movf	___flmul@bexp,w
  8071  0B31  1903               	btfsc	3,2
  8072  0B32  2B34               	goto	u4101
  8073  0B33  2B35               	goto	u4100
  8074  0B34                     u4101:
  8075  0B34  2B44               	goto	l3103
  8076  0B35                     u4100:
  8077  0B35                     l3097:
  8078  0B35  0A33               	incf	___flmul@bexp,w
  8079  0B36  1D03               	btfss	3,2
  8080  0B37  2B39               	goto	u4111
  8081  0B38  2B3A               	goto	u4110
  8082  0B39                     u4111:
  8083  0B39  2B42               	goto	l3101
  8084  0B3A                     u4110:
  8085  0B3A                     l3099:
  8086  0B3A  3000               	movlw	0
  8087  0B3B  00A3               	movwf	___flmul@b+3
  8088  0B3C  3000               	movlw	0
  8089  0B3D  00A2               	movwf	___flmul@b+2
  8090  0B3E  3000               	movlw	0
  8091  0B3F  00A1               	movwf	___flmul@b+1
  8092  0B40  3000               	movlw	0
  8093  0B41  00A0               	movwf	___flmul@b
  8094  0B42                     l3101:
  8095  0B42  17A2               	bsf	___flmul@b+2,7
  8096  0B43  2B4C               	goto	l3105
  8097  0B44                     l3103:
  8098  0B44  3000               	movlw	0
  8099  0B45  00A3               	movwf	___flmul@b+3
  8100  0B46  3000               	movlw	0
  8101  0B47  00A2               	movwf	___flmul@b+2
  8102  0B48  3000               	movlw	0
  8103  0B49  00A1               	movwf	___flmul@b+1
  8104  0B4A  3000               	movlw	0
  8105  0B4B  00A0               	movwf	___flmul@b
  8106  0B4C                     l3105:
  8107  0B4C  0827               	movf	___flmul@a+3,w
  8108  0B4D  3980               	andlw	128
  8109  0B4E  00A8               	movwf	??___flmul
  8110  0B4F  0828               	movf	??___flmul,w
  8111  0B50  06AD               	xorwf	___flmul@sign,f
  8112  0B51                     l3107:
  8113  0B51  3527               	lslf	___flmul@a+3,w
  8114  0B52  00A8               	movwf	??___flmul
  8115  0B53  0828               	movf	??___flmul,w
  8116  0B54  00B2               	movwf	___flmul@aexp
  8117  0B55                     l3109:
  8118  0B55  1FA6               	btfss	___flmul@a+2,7
  8119  0B56  2B58               	goto	u4121
  8120  0B57  2B59               	goto	u4120
  8121  0B58                     u4121:
  8122  0B58  2B5A               	goto	l3113
  8123  0B59                     u4120:
  8124  0B59                     l3111:
  8125  0B59  1432               	bsf	___flmul@aexp,0
  8126  0B5A                     l3113:
  8127  0B5A  0832               	movf	___flmul@aexp,w
  8128  0B5B  1903               	btfsc	3,2
  8129  0B5C  2B5E               	goto	u4131
  8130  0B5D  2B5F               	goto	u4130
  8131  0B5E                     u4131:
  8132  0B5E  2B6E               	goto	l3121
  8133  0B5F                     u4130:
  8134  0B5F                     l3115:
  8135  0B5F  0A32               	incf	___flmul@aexp,w
  8136  0B60  1D03               	btfss	3,2
  8137  0B61  2B63               	goto	u4141
  8138  0B62  2B64               	goto	u4140
  8139  0B63                     u4141:
  8140  0B63  2B6C               	goto	l3119
  8141  0B64                     u4140:
  8142  0B64                     l3117:
  8143  0B64  3000               	movlw	0
  8144  0B65  00A7               	movwf	___flmul@a+3
  8145  0B66  3000               	movlw	0
  8146  0B67  00A6               	movwf	___flmul@a+2
  8147  0B68  3000               	movlw	0
  8148  0B69  00A5               	movwf	___flmul@a+1
  8149  0B6A  3000               	movlw	0
  8150  0B6B  00A4               	movwf	___flmul@a
  8151  0B6C                     l3119:
  8152  0B6C  17A6               	bsf	___flmul@a+2,7
  8153  0B6D  2B76               	goto	l3123
  8154  0B6E                     l3121:
  8155  0B6E  3000               	movlw	0
  8156  0B6F  00A7               	movwf	___flmul@a+3
  8157  0B70  3000               	movlw	0
  8158  0B71  00A6               	movwf	___flmul@a+2
  8159  0B72  3000               	movlw	0
  8160  0B73  00A5               	movwf	___flmul@a+1
  8161  0B74  3000               	movlw	0
  8162  0B75  00A4               	movwf	___flmul@a
  8163  0B76                     l3123:
  8164  0B76  0832               	movf	___flmul@aexp,w
  8165  0B77  1903               	btfsc	3,2
  8166  0B78  2B7A               	goto	u4151
  8167  0B79  2B7B               	goto	u4150
  8168  0B7A                     u4151:
  8169  0B7A  2B80               	goto	l3127
  8170  0B7B                     u4150:
  8171  0B7B                     l3125:
  8172  0B7B  0833               	movf	___flmul@bexp,w
  8173  0B7C  1D03               	btfss	3,2
  8174  0B7D  2B7F               	goto	u4161
  8175  0B7E  2B80               	goto	u4160
  8176  0B7F                     u4161:
  8177  0B7F  2B89               	goto	l3131
  8178  0B80                     u4160:
  8179  0B80                     l3127:
  8180  0B80  3000               	movlw	0
  8181  0B81  00A3               	movwf	?___flmul+3
  8182  0B82  3000               	movlw	0
  8183  0B83  00A2               	movwf	?___flmul+2
  8184  0B84  3000               	movlw	0
  8185  0B85  00A1               	movwf	?___flmul+1
  8186  0B86  3000               	movlw	0
  8187  0B87  00A0               	movwf	?___flmul
  8188  0B88  2D77               	goto	l583
  8189  0B89                     l3131:
  8190  0B89  0820               	movf	___flmul@b,w
  8191  0B8A  00A8               	movwf	??___flmul
  8192  0B8B  0828               	movf	??___flmul,w
  8193  0B8C  00F0               	movwf	__Umul8_16@multiplicand
  8194  0B8D  0826               	movf	___flmul@a+2,w
  8195  0B8E  319E  26E4  318B   	fcall	__Umul8_16
  8196  0B91  0871               	movf	?__Umul8_16+1,w
  8197  0B92  0020               	movlb	0	; select bank0
  8198  0B93  00B9               	movwf	___flmul@temp+1
  8199  0B94  0870               	movf	?__Umul8_16,w
  8200  0B95  00B8               	movwf	___flmul@temp
  8201  0B96                     l3133:
  8202  0B96  0838               	movf	___flmul@temp,w
  8203  0B97  00A8               	movwf	??___flmul
  8204  0B98  01A9               	clrf	??___flmul+1
  8205  0B99  01AA               	clrf	??___flmul+2
  8206  0B9A  01AB               	clrf	??___flmul+3
  8207  0B9B  082B               	movf	??___flmul+3,w
  8208  0B9C  00B1               	movwf	___flmul@grs+3
  8209  0B9D  082A               	movf	??___flmul+2,w
  8210  0B9E  00B0               	movwf	___flmul@grs+2
  8211  0B9F  0829               	movf	??___flmul+1,w
  8212  0BA0  00AF               	movwf	___flmul@grs+1
  8213  0BA1  0828               	movf	??___flmul,w
  8214  0BA2  00AE               	movwf	___flmul@grs
  8215  0BA3                     l3135:
  8216  0BA3  0839               	movf	___flmul@temp+1,w
  8217  0BA4  00A8               	movwf	??___flmul
  8218  0BA5  01A9               	clrf	??___flmul+1
  8219  0BA6  01AA               	clrf	??___flmul+2
  8220  0BA7  01AB               	clrf	??___flmul+3
  8221  0BA8  082B               	movf	??___flmul+3,w
  8222  0BA9  00B7               	movwf	___flmul@prod+3
  8223  0BAA  082A               	movf	??___flmul+2,w
  8224  0BAB  00B6               	movwf	___flmul@prod+2
  8225  0BAC  0829               	movf	??___flmul+1,w
  8226  0BAD  00B5               	movwf	___flmul@prod+1
  8227  0BAE  0828               	movf	??___flmul,w
  8228  0BAF  00B4               	movwf	___flmul@prod
  8229  0BB0  0821               	movf	___flmul@b+1,w
  8230  0BB1  00A8               	movwf	??___flmul
  8231  0BB2  0828               	movf	??___flmul,w
  8232  0BB3  00F0               	movwf	__Umul8_16@multiplicand
  8233  0BB4  0825               	movf	___flmul@a+1,w
  8234  0BB5  319E  26E4  318B   	fcall	__Umul8_16
  8235  0BB8  0871               	movf	?__Umul8_16+1,w
  8236  0BB9  0020               	movlb	0	; select bank0
  8237  0BBA  00B9               	movwf	___flmul@temp+1
  8238  0BBB  0870               	movf	?__Umul8_16,w
  8239  0BBC  00B8               	movwf	___flmul@temp
  8240  0BBD                     l3137:
  8241  0BBD  0838               	movf	___flmul@temp,w
  8242  0BBE  00A8               	movwf	??___flmul
  8243  0BBF  01A9               	clrf	??___flmul+1
  8244  0BC0  01AA               	clrf	??___flmul+2
  8245  0BC1  01AB               	clrf	??___flmul+3
  8246  0BC2  0828               	movf	??___flmul,w
  8247  0BC3  07AE               	addwf	___flmul@grs,f
  8248  0BC4  0829               	movf	??___flmul+1,w
  8249  0BC5  3DAF               	addwfc	___flmul@grs+1,f
  8250  0BC6  082A               	movf	??___flmul+2,w
  8251  0BC7  3DB0               	addwfc	___flmul@grs+2,f
  8252  0BC8  082B               	movf	??___flmul+3,w
  8253  0BC9  3DB1               	addwfc	___flmul@grs+3,f
  8254  0BCA                     l3139:
  8255  0BCA  0839               	movf	___flmul@temp+1,w
  8256  0BCB  00A8               	movwf	??___flmul
  8257  0BCC  01A9               	clrf	??___flmul+1
  8258  0BCD  01AA               	clrf	??___flmul+2
  8259  0BCE  01AB               	clrf	??___flmul+3
  8260  0BCF  0828               	movf	??___flmul,w
  8261  0BD0  07B4               	addwf	___flmul@prod,f
  8262  0BD1  0829               	movf	??___flmul+1,w
  8263  0BD2  3DB5               	addwfc	___flmul@prod+1,f
  8264  0BD3  082A               	movf	??___flmul+2,w
  8265  0BD4  3DB6               	addwfc	___flmul@prod+2,f
  8266  0BD5  082B               	movf	??___flmul+3,w
  8267  0BD6  3DB7               	addwfc	___flmul@prod+3,f
  8268  0BD7  0822               	movf	___flmul@b+2,w
  8269  0BD8  00A8               	movwf	??___flmul
  8270  0BD9  0828               	movf	??___flmul,w
  8271  0BDA  00F0               	movwf	__Umul8_16@multiplicand
  8272  0BDB  0824               	movf	___flmul@a,w
  8273  0BDC  319E  26E4  318B   	fcall	__Umul8_16
  8274  0BDF  0871               	movf	?__Umul8_16+1,w
  8275  0BE0  0020               	movlb	0	; select bank0
  8276  0BE1  00B9               	movwf	___flmul@temp+1
  8277  0BE2  0870               	movf	?__Umul8_16,w
  8278  0BE3  00B8               	movwf	___flmul@temp
  8279  0BE4                     l3141:
  8280  0BE4  0838               	movf	___flmul@temp,w
  8281  0BE5  00A8               	movwf	??___flmul
  8282  0BE6  01A9               	clrf	??___flmul+1
  8283  0BE7  01AA               	clrf	??___flmul+2
  8284  0BE8  01AB               	clrf	??___flmul+3
  8285  0BE9  0828               	movf	??___flmul,w
  8286  0BEA  07AE               	addwf	___flmul@grs,f
  8287  0BEB  0829               	movf	??___flmul+1,w
  8288  0BEC  3DAF               	addwfc	___flmul@grs+1,f
  8289  0BED  082A               	movf	??___flmul+2,w
  8290  0BEE  3DB0               	addwfc	___flmul@grs+2,f
  8291  0BEF  082B               	movf	??___flmul+3,w
  8292  0BF0  3DB1               	addwfc	___flmul@grs+3,f
  8293  0BF1                     l3143:
  8294  0BF1  0839               	movf	___flmul@temp+1,w
  8295  0BF2  00A8               	movwf	??___flmul
  8296  0BF3  01A9               	clrf	??___flmul+1
  8297  0BF4  01AA               	clrf	??___flmul+2
  8298  0BF5  01AB               	clrf	??___flmul+3
  8299  0BF6  0828               	movf	??___flmul,w
  8300  0BF7  07B4               	addwf	___flmul@prod,f
  8301  0BF8  0829               	movf	??___flmul+1,w
  8302  0BF9  3DB5               	addwfc	___flmul@prod+1,f
  8303  0BFA  082A               	movf	??___flmul+2,w
  8304  0BFB  3DB6               	addwfc	___flmul@prod+2,f
  8305  0BFC  082B               	movf	??___flmul+3,w
  8306  0BFD  3DB7               	addwfc	___flmul@prod+3,f
  8307  0BFE                     l3145:
  8308  0BFE  3008               	movlw	8
  8309  0BFF                     u4175:
  8310  0BFF  35AE               	lslf	___flmul@grs,f
  8311  0C00  0DAF               	rlf	___flmul@grs+1,f
  8312  0C01  0DB0               	rlf	___flmul@grs+2,f
  8313  0C02  0DB1               	rlf	___flmul@grs+3,f
  8314  0C03  0B89               	decfsz	9,f
  8315  0C04  2BFF               	goto	u4175
  8316  0C05                     l3147:
  8317  0C05  0821               	movf	___flmul@b+1,w
  8318  0C06  00A8               	movwf	??___flmul
  8319  0C07  0828               	movf	??___flmul,w
  8320  0C08  00F0               	movwf	__Umul8_16@multiplicand
  8321  0C09  0824               	movf	___flmul@a,w
  8322  0C0A  319E  26E4  318B   	fcall	__Umul8_16
  8323  0C0D  0871               	movf	?__Umul8_16+1,w
  8324  0C0E  0020               	movlb	0	; select bank0
  8325  0C0F  00B9               	movwf	___flmul@temp+1
  8326  0C10  0870               	movf	?__Umul8_16,w
  8327  0C11  00B8               	movwf	___flmul@temp
  8328  0C12                     l3149:
  8329  0C12  0838               	movf	___flmul@temp,w
  8330  0C13  07AE               	addwf	___flmul@grs,f
  8331  0C14  0839               	movf	___flmul@temp+1,w
  8332  0C15  3DAF               	addwfc	___flmul@grs+1,f
  8333  0C16  3000               	movlw	0
  8334  0C17  3DB0               	addwfc	___flmul@grs+2,f
  8335  0C18  3DB1               	addwfc	___flmul@grs+3,f
  8336  0C19                     l3151:
  8337  0C19  0820               	movf	___flmul@b,w
  8338  0C1A  00A8               	movwf	??___flmul
  8339  0C1B  0828               	movf	??___flmul,w
  8340  0C1C  00F0               	movwf	__Umul8_16@multiplicand
  8341  0C1D  0825               	movf	___flmul@a+1,w
  8342  0C1E  319E  26E4  318B   	fcall	__Umul8_16
  8343  0C21  0871               	movf	?__Umul8_16+1,w
  8344  0C22  0020               	movlb	0	; select bank0
  8345  0C23  00B9               	movwf	___flmul@temp+1
  8346  0C24  0870               	movf	?__Umul8_16,w
  8347  0C25  00B8               	movwf	___flmul@temp
  8348  0C26                     l3153:
  8349  0C26  0838               	movf	___flmul@temp,w
  8350  0C27  07AE               	addwf	___flmul@grs,f
  8351  0C28  0839               	movf	___flmul@temp+1,w
  8352  0C29  3DAF               	addwfc	___flmul@grs+1,f
  8353  0C2A  3000               	movlw	0
  8354  0C2B  3DB0               	addwfc	___flmul@grs+2,f
  8355  0C2C  3DB1               	addwfc	___flmul@grs+3,f
  8356  0C2D                     l3155:
  8357  0C2D  3008               	movlw	8
  8358  0C2E                     u4185:
  8359  0C2E  35AE               	lslf	___flmul@grs,f
  8360  0C2F  0DAF               	rlf	___flmul@grs+1,f
  8361  0C30  0DB0               	rlf	___flmul@grs+2,f
  8362  0C31  0DB1               	rlf	___flmul@grs+3,f
  8363  0C32  0B89               	decfsz	9,f
  8364  0C33  2C2E               	goto	u4185
  8365  0C34  0820               	movf	___flmul@b,w
  8366  0C35  00A8               	movwf	??___flmul
  8367  0C36  0828               	movf	??___flmul,w
  8368  0C37  00F0               	movwf	__Umul8_16@multiplicand
  8369  0C38  0824               	movf	___flmul@a,w
  8370  0C39  319E  26E4  318B   	fcall	__Umul8_16
  8371  0C3C  0871               	movf	?__Umul8_16+1,w
  8372  0C3D  0020               	movlb	0	; select bank0
  8373  0C3E  00B9               	movwf	___flmul@temp+1
  8374  0C3F  0870               	movf	?__Umul8_16,w
  8375  0C40  00B8               	movwf	___flmul@temp
  8376  0C41                     l3157:
  8377  0C41  0838               	movf	___flmul@temp,w
  8378  0C42  07AE               	addwf	___flmul@grs,f
  8379  0C43  0839               	movf	___flmul@temp+1,w
  8380  0C44  3DAF               	addwfc	___flmul@grs+1,f
  8381  0C45  3000               	movlw	0
  8382  0C46  3DB0               	addwfc	___flmul@grs+2,f
  8383  0C47  3DB1               	addwfc	___flmul@grs+3,f
  8384  0C48                     l3159:
  8385  0C48  0821               	movf	___flmul@b+1,w
  8386  0C49  00A8               	movwf	??___flmul
  8387  0C4A  0828               	movf	??___flmul,w
  8388  0C4B  00F0               	movwf	__Umul8_16@multiplicand
  8389  0C4C  0826               	movf	___flmul@a+2,w
  8390  0C4D  319E  26E4  318B   	fcall	__Umul8_16
  8391  0C50  0871               	movf	?__Umul8_16+1,w
  8392  0C51  0020               	movlb	0	; select bank0
  8393  0C52  00B9               	movwf	___flmul@temp+1
  8394  0C53  0870               	movf	?__Umul8_16,w
  8395  0C54  00B8               	movwf	___flmul@temp
  8396  0C55  0838               	movf	___flmul@temp,w
  8397  0C56  07B4               	addwf	___flmul@prod,f
  8398  0C57  0839               	movf	___flmul@temp+1,w
  8399  0C58  3DB5               	addwfc	___flmul@prod+1,f
  8400  0C59  3000               	movlw	0
  8401  0C5A  3DB6               	addwfc	___flmul@prod+2,f
  8402  0C5B  3DB7               	addwfc	___flmul@prod+3,f
  8403  0C5C                     l3161:
  8404  0C5C  0822               	movf	___flmul@b+2,w
  8405  0C5D  00A8               	movwf	??___flmul
  8406  0C5E  0828               	movf	??___flmul,w
  8407  0C5F  00F0               	movwf	__Umul8_16@multiplicand
  8408  0C60  0825               	movf	___flmul@a+1,w
  8409  0C61  319E  26E4  318B   	fcall	__Umul8_16
  8410  0C64  0871               	movf	?__Umul8_16+1,w
  8411  0C65  0020               	movlb	0	; select bank0
  8412  0C66  00B9               	movwf	___flmul@temp+1
  8413  0C67  0870               	movf	?__Umul8_16,w
  8414  0C68  00B8               	movwf	___flmul@temp
  8415  0C69                     l3163:
  8416  0C69  0838               	movf	___flmul@temp,w
  8417  0C6A  07B4               	addwf	___flmul@prod,f
  8418  0C6B  0839               	movf	___flmul@temp+1,w
  8419  0C6C  3DB5               	addwfc	___flmul@prod+1,f
  8420  0C6D  3000               	movlw	0
  8421  0C6E  3DB6               	addwfc	___flmul@prod+2,f
  8422  0C6F  3DB7               	addwfc	___flmul@prod+3,f
  8423  0C70  0822               	movf	___flmul@b+2,w
  8424  0C71  00A8               	movwf	??___flmul
  8425  0C72  0828               	movf	??___flmul,w
  8426  0C73  00F0               	movwf	__Umul8_16@multiplicand
  8427  0C74  0826               	movf	___flmul@a+2,w
  8428  0C75  319E  26E4  318B   	fcall	__Umul8_16
  8429  0C78  0871               	movf	?__Umul8_16+1,w
  8430  0C79  0020               	movlb	0	; select bank0
  8431  0C7A  00B9               	movwf	___flmul@temp+1
  8432  0C7B  0870               	movf	?__Umul8_16,w
  8433  0C7C  00B8               	movwf	___flmul@temp
  8434  0C7D                     l3165:
  8435  0C7D  0838               	movf	___flmul@temp,w
  8436  0C7E  00A8               	movwf	??___flmul
  8437  0C7F  0839               	movf	___flmul@temp+1,w
  8438  0C80  00A9               	movwf	??___flmul+1
  8439  0C81  01AA               	clrf	??___flmul+2
  8440  0C82  01AB               	clrf	??___flmul+3
  8441  0C83  3008               	movlw	8
  8442  0C84                     u4195:
  8443  0C84  35A8               	lslf	??___flmul,f
  8444  0C85  0DA9               	rlf	??___flmul+1,f
  8445  0C86  0DAA               	rlf	??___flmul+2,f
  8446  0C87  0DAB               	rlf	??___flmul+3,f
  8447  0C88                     u4190:
  8448  0C88  0B89               	decfsz	9,f
  8449  0C89  2C84               	goto	u4195
  8450  0C8A  0828               	movf	??___flmul,w
  8451  0C8B  07B4               	addwf	___flmul@prod,f
  8452  0C8C  0829               	movf	??___flmul+1,w
  8453  0C8D  3DB5               	addwfc	___flmul@prod+1,f
  8454  0C8E  082A               	movf	??___flmul+2,w
  8455  0C8F  3DB6               	addwfc	___flmul@prod+2,f
  8456  0C90  082B               	movf	??___flmul+3,w
  8457  0C91  3DB7               	addwfc	___flmul@prod+3,f
  8458  0C92                     l3167:
  8459  0C92  082E               	movf	___flmul@grs,w
  8460  0C93  00A8               	movwf	??___flmul
  8461  0C94  082F               	movf	___flmul@grs+1,w
  8462  0C95  00A9               	movwf	??___flmul+1
  8463  0C96  0830               	movf	___flmul@grs+2,w
  8464  0C97  00AA               	movwf	??___flmul+2
  8465  0C98  0831               	movf	___flmul@grs+3,w
  8466  0C99  00AB               	movwf	??___flmul+3
  8467  0C9A  3018               	movlw	24
  8468  0C9B                     u4205:
  8469  0C9B  36AB               	lsrf	??___flmul+3,f
  8470  0C9C  0CAA               	rrf	??___flmul+2,f
  8471  0C9D  0CA9               	rrf	??___flmul+1,f
  8472  0C9E  0CA8               	rrf	??___flmul,f
  8473  0C9F                     u4200:
  8474  0C9F  0B89               	decfsz	9,f
  8475  0CA0  2C9B               	goto	u4205
  8476  0CA1  0828               	movf	??___flmul,w
  8477  0CA2  07B4               	addwf	___flmul@prod,f
  8478  0CA3  0829               	movf	??___flmul+1,w
  8479  0CA4  3DB5               	addwfc	___flmul@prod+1,f
  8480  0CA5  082A               	movf	??___flmul+2,w
  8481  0CA6  3DB6               	addwfc	___flmul@prod+2,f
  8482  0CA7  082B               	movf	??___flmul+3,w
  8483  0CA8  3DB7               	addwfc	___flmul@prod+3,f
  8484  0CA9                     l3169:
  8485  0CA9  3008               	movlw	8
  8486  0CAA                     u4215:
  8487  0CAA  35AE               	lslf	___flmul@grs,f
  8488  0CAB  0DAF               	rlf	___flmul@grs+1,f
  8489  0CAC  0DB0               	rlf	___flmul@grs+2,f
  8490  0CAD  0DB1               	rlf	___flmul@grs+3,f
  8491  0CAE  0B89               	decfsz	9,f
  8492  0CAF  2CAA               	goto	u4215
  8493  0CB0                     l3171:
  8494  0CB0  0833               	movf	___flmul@bexp,w
  8495  0CB1  0732               	addwf	___flmul@aexp,w
  8496  0CB2  00A8               	movwf	??___flmul
  8497  0CB3  01A9               	clrf	??___flmul+1
  8498  0CB4  0DA9               	rlf	??___flmul+1,f
  8499  0CB5  0828               	movf	??___flmul,w
  8500  0CB6  3E82               	addlw	130
  8501  0CB7  00B8               	movwf	___flmul@temp
  8502  0CB8  30FF               	movlw	255
  8503  0CB9  3D29               	addwfc	??___flmul+1,w
  8504  0CBA  00B9               	movwf	___flmul@temp+1
  8505  0CBB  2CD3               	goto	l3183
  8506  0CBC                     l3173:
  8507  0CBC  3001               	movlw	1
  8508  0CBD                     u4225:
  8509  0CBD  35B4               	lslf	___flmul@prod,f
  8510  0CBE  0DB5               	rlf	___flmul@prod+1,f
  8511  0CBF  0DB6               	rlf	___flmul@prod+2,f
  8512  0CC0  0DB7               	rlf	___flmul@prod+3,f
  8513  0CC1  0B89               	decfsz	9,f
  8514  0CC2  2CBD               	goto	u4225
  8515  0CC3                     l3175:
  8516  0CC3  1FB1               	btfss	___flmul@grs+3,7
  8517  0CC4  2CC6               	goto	u4231
  8518  0CC5  2CC7               	goto	u4230
  8519  0CC6                     u4231:
  8520  0CC6  2CC8               	goto	l3179
  8521  0CC7                     u4230:
  8522  0CC7                     l3177:
  8523  0CC7  1434               	bsf	___flmul@prod,0
  8524  0CC8                     l3179:
  8525  0CC8  3001               	movlw	1
  8526  0CC9                     u4245:
  8527  0CC9  35AE               	lslf	___flmul@grs,f
  8528  0CCA  0DAF               	rlf	___flmul@grs+1,f
  8529  0CCB  0DB0               	rlf	___flmul@grs+2,f
  8530  0CCC  0DB1               	rlf	___flmul@grs+3,f
  8531  0CCD  0B89               	decfsz	9,f
  8532  0CCE  2CC9               	goto	u4245
  8533  0CCF                     l3181:
  8534  0CCF  30FF               	movlw	255
  8535  0CD0  07B8               	addwf	___flmul@temp,f
  8536  0CD1  30FF               	movlw	255
  8537  0CD2  3DB9               	addwfc	___flmul@temp+1,f
  8538  0CD3                     l3183:
  8539  0CD3  1FB6               	btfss	___flmul@prod+2,7
  8540  0CD4  2CD6               	goto	u4251
  8541  0CD5  2CD7               	goto	u4250
  8542  0CD6                     u4251:
  8543  0CD6  2CBC               	goto	l3173
  8544  0CD7                     u4250:
  8545  0CD7                     l3185:
  8546  0CD7  01B2               	clrf	___flmul@aexp
  8547  0CD8                     l3187:
  8548  0CD8  1FB1               	btfss	___flmul@grs+3,7
  8549  0CD9  2CDB               	goto	u4261
  8550  0CDA  2CDC               	goto	u4260
  8551  0CDB                     u4261:
  8552  0CDB  2CF8               	goto	l3195
  8553  0CDC                     u4260:
  8554  0CDC                     l3189:
  8555  0CDC  30FF               	movlw	255
  8556  0CDD  052E               	andwf	___flmul@grs,w
  8557  0CDE  00A8               	movwf	??___flmul
  8558  0CDF  30FF               	movlw	255
  8559  0CE0  052F               	andwf	___flmul@grs+1,w
  8560  0CE1  00A9               	movwf	??___flmul+1
  8561  0CE2  30FF               	movlw	255
  8562  0CE3  0530               	andwf	___flmul@grs+2,w
  8563  0CE4  00AA               	movwf	??___flmul+2
  8564  0CE5  307F               	movlw	127
  8565  0CE6  0531               	andwf	___flmul@grs+3,w
  8566  0CE7  00AB               	movwf	??___flmul+3
  8567  0CE8  082B               	movf	??___flmul+3,w
  8568  0CE9  042A               	iorwf	??___flmul+2,w
  8569  0CEA  0429               	iorwf	??___flmul+1,w
  8570  0CEB  0428               	iorwf	??___flmul,w
  8571  0CEC  1903               	skipnz
  8572  0CED  2CEF               	goto	u4271
  8573  0CEE  2CF0               	goto	u4270
  8574  0CEF                     u4271:
  8575  0CEF  2CF3               	goto	l589
  8576  0CF0                     u4270:
  8577  0CF0                     l3191:
  8578  0CF0  01B2               	clrf	___flmul@aexp
  8579  0CF1  0AB2               	incf	___flmul@aexp,f
  8580  0CF2  2CF8               	goto	l3195
  8581  0CF3                     l589:
  8582  0CF3  1C34               	btfss	___flmul@prod,0
  8583  0CF4  2CF6               	goto	u4281
  8584  0CF5  2CF7               	goto	u4280
  8585  0CF6                     u4281:
  8586  0CF6  2CF8               	goto	l3195
  8587  0CF7                     u4280:
  8588  0CF7  2CF0               	goto	l3191
  8589  0CF8                     l3195:
  8590  0CF8  0832               	movf	___flmul@aexp,w
  8591  0CF9  1903               	btfsc	3,2
  8592  0CFA  2CFC               	goto	u4291
  8593  0CFB  2CFD               	goto	u4290
  8594  0CFC                     u4291:
  8595  0CFC  2D25               	goto	l3205
  8596  0CFD                     u4290:
  8597  0CFD                     l3197:
  8598  0CFD  3001               	movlw	1
  8599  0CFE  07B4               	addwf	___flmul@prod,f
  8600  0CFF  3000               	movlw	0
  8601  0D00  3DB5               	addwfc	___flmul@prod+1,f
  8602  0D01  3000               	movlw	0
  8603  0D02  3DB6               	addwfc	___flmul@prod+2,f
  8604  0D03  3000               	movlw	0
  8605  0D04  3DB7               	addwfc	___flmul@prod+3,f
  8606  0D05                     l3199:
  8607  0D05  1C37               	btfss	___flmul@prod+3,0
  8608  0D06  2D08               	goto	u4301
  8609  0D07  2D09               	goto	u4300
  8610  0D08                     u4301:
  8611  0D08  2D25               	goto	l3205
  8612  0D09                     u4300:
  8613  0D09                     l3201:
  8614  0D09  0834               	movf	___flmul@prod,w
  8615  0D0A  00A8               	movwf	??___flmul
  8616  0D0B  0835               	movf	___flmul@prod+1,w
  8617  0D0C  00A9               	movwf	??___flmul+1
  8618  0D0D  0836               	movf	___flmul@prod+2,w
  8619  0D0E  00AA               	movwf	??___flmul+2
  8620  0D0F  0837               	movf	___flmul@prod+3,w
  8621  0D10  00AB               	movwf	??___flmul+3
  8622  0D11  3001               	movlw	1
  8623  0D12  00AC               	movwf	??___flmul+4
  8624  0D13                     u4315:
  8625  0D13  37AB               	asrf	??___flmul+3,f
  8626  0D14  0CAA               	rrf	??___flmul+2,f
  8627  0D15  0CA9               	rrf	??___flmul+1,f
  8628  0D16  0CA8               	rrf	??___flmul,f
  8629  0D17                     u4310:
  8630  0D17  0BAC               	decfsz	??___flmul+4,f
  8631  0D18  2D13               	goto	u4315
  8632  0D19  082B               	movf	??___flmul+3,w
  8633  0D1A  00B7               	movwf	___flmul@prod+3
  8634  0D1B  082A               	movf	??___flmul+2,w
  8635  0D1C  00B6               	movwf	___flmul@prod+2
  8636  0D1D  0829               	movf	??___flmul+1,w
  8637  0D1E  00B5               	movwf	___flmul@prod+1
  8638  0D1F  0828               	movf	??___flmul,w
  8639  0D20  00B4               	movwf	___flmul@prod
  8640  0D21                     l3203:
  8641  0D21  3001               	movlw	1
  8642  0D22  07B8               	addwf	___flmul@temp,f
  8643  0D23  3000               	movlw	0
  8644  0D24  3DB9               	addwfc	___flmul@temp+1,f
  8645  0D25                     l3205:
  8646  0D25  0839               	movf	___flmul@temp+1,w
  8647  0D26  3A80               	xorlw	128
  8648  0D27  00A8               	movwf	??___flmul
  8649  0D28  3080               	movlw	128
  8650  0D29  0228               	subwf	??___flmul,w
  8651  0D2A  1D03               	skipz
  8652  0D2B  2D2E               	goto	u4325
  8653  0D2C  30FF               	movlw	255
  8654  0D2D  0238               	subwf	___flmul@temp,w
  8655  0D2E                     u4325:
  8656  0D2E  1C03               	skipc
  8657  0D2F  2D31               	goto	u4321
  8658  0D30  2D32               	goto	u4320
  8659  0D31                     u4321:
  8660  0D31  2D3C               	goto	l3209
  8661  0D32                     u4320:
  8662  0D32                     l3207:
  8663  0D32  307F               	movlw	127
  8664  0D33  0020               	movlb	0	; select bank0
  8665  0D34  00B7               	movwf	___flmul@prod+3
  8666  0D35  3080               	movlw	128
  8667  0D36  00B6               	movwf	___flmul@prod+2
  8668  0D37  3000               	movlw	0
  8669  0D38  00B5               	movwf	___flmul@prod+1
  8670  0D39  3000               	movlw	0
  8671  0D3A  00B4               	movwf	___flmul@prod
  8672  0D3B  2D6B               	goto	l595
  8673  0D3C                     l3209:
  8674  0D3C  0020               	movlb	0	; select bank0
  8675  0D3D  0839               	movf	___flmul@temp+1,w
  8676  0D3E  3A80               	xorlw	128
  8677  0D3F  00A8               	movwf	??___flmul
  8678  0D40  3080               	movlw	128
  8679  0D41  0228               	subwf	??___flmul,w
  8680  0D42  1D03               	skipz
  8681  0D43  2D46               	goto	u4335
  8682  0D44  3001               	movlw	1
  8683  0D45  0238               	subwf	___flmul@temp,w
  8684  0D46                     u4335:
  8685  0D46  1803               	skipnc
  8686  0D47  2D49               	goto	u4331
  8687  0D48  2D4A               	goto	u4330
  8688  0D49                     u4331:
  8689  0D49  2D55               	goto	l3215
  8690  0D4A                     u4330:
  8691  0D4A                     l3211:
  8692  0D4A  3000               	movlw	0
  8693  0D4B  0020               	movlb	0	; select bank0
  8694  0D4C  00B7               	movwf	___flmul@prod+3
  8695  0D4D  3000               	movlw	0
  8696  0D4E  00B6               	movwf	___flmul@prod+2
  8697  0D4F  3000               	movlw	0
  8698  0D50  00B5               	movwf	___flmul@prod+1
  8699  0D51  3000               	movlw	0
  8700  0D52  00B4               	movwf	___flmul@prod
  8701  0D53                     l3213:
  8702  0D53  01AD               	clrf	___flmul@sign
  8703  0D54  2D6B               	goto	l595
  8704  0D55                     l3215:
  8705  0D55  0020               	movlb	0	; select bank0
  8706  0D56  0838               	movf	___flmul@temp,w
  8707  0D57  00A8               	movwf	??___flmul
  8708  0D58  0828               	movf	??___flmul,w
  8709  0D59  00B3               	movwf	___flmul@bexp
  8710  0D5A  30FF               	movlw	255
  8711  0D5B  05B4               	andwf	___flmul@prod,f
  8712  0D5C  30FF               	movlw	255
  8713  0D5D  05B5               	andwf	___flmul@prod+1,f
  8714  0D5E  307F               	movlw	127
  8715  0D5F  05B6               	andwf	___flmul@prod+2,f
  8716  0D60  3000               	movlw	0
  8717  0D61  05B7               	andwf	___flmul@prod+3,f
  8718  0D62                     l3217:
  8719  0D62  1C33               	btfss	___flmul@bexp,0
  8720  0D63  2D65               	goto	u4341
  8721  0D64  2D66               	goto	u4340
  8722  0D65                     u4341:
  8723  0D65  2D67               	goto	l3221
  8724  0D66                     u4340:
  8725  0D66                     l3219:
  8726  0D66  17B6               	bsf	___flmul@prod+2,7
  8727  0D67                     l3221:
  8728  0D67  3633               	lsrf	___flmul@bexp,w
  8729  0D68  00A8               	movwf	??___flmul
  8730  0D69  0828               	movf	??___flmul,w
  8731  0D6A  00B7               	movwf	___flmul@prod+3
  8732  0D6B                     l595:
  8733  0D6B  082D               	movf	___flmul@sign,w
  8734  0D6C  00A8               	movwf	??___flmul
  8735  0D6D  0828               	movf	??___flmul,w
  8736  0D6E  04B7               	iorwf	___flmul@prod+3,f
  8737  0D6F                     l3223:
  8738  0D6F  0837               	movf	___flmul@prod+3,w
  8739  0D70  00A3               	movwf	?___flmul+3
  8740  0D71  0836               	movf	___flmul@prod+2,w
  8741  0D72  00A2               	movwf	?___flmul+2
  8742  0D73  0835               	movf	___flmul@prod+1,w
  8743  0D74  00A1               	movwf	?___flmul+1
  8744  0D75  0834               	movf	___flmul@prod,w
  8745  0D76  00A0               	movwf	?___flmul
  8746  0D77                     l583:
  8747  0D77  0008               	return
  8748  0D78                     __end_of___flmul:
  8749                           
  8750                           	psect	text20
  8751  1EE4                     __ptext20:	
  8752 ;; *************** function __Umul8_16 *****************
  8753 ;; Defined at:
  8754 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\Umul8_16.c"
  8755 ;; Parameters:    Size  Location     Type
  8756 ;;  multiplier      1    wreg     unsigned char 
  8757 ;;  multiplicand    1    0[COMMON] unsigned char 
  8758 ;; Auto vars:     Size  Location     Type
  8759 ;;  multiplier      1    8[COMMON] unsigned char 
  8760 ;;  word_mpld       2    6[COMMON] unsigned int 
  8761 ;;  product         2    4[COMMON] unsigned int 
  8762 ;; Return value:  Size  Location     Type
  8763 ;;                  2    0[COMMON] unsigned int 
  8764 ;; Registers used:
  8765 ;;		wreg, status,2, status,0
  8766 ;; Tracked objects:
  8767 ;;		On entry : 0/0
  8768 ;;		On exit  : 0/0
  8769 ;;		Unchanged: 0/0
  8770 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  8771 ;;      Params:         2       0       0       0       0       0       0       0
  8772 ;;      Locals:         5       0       0       0       0       0       0       0
  8773 ;;      Temps:          2       0       0       0       0       0       0       0
  8774 ;;      Totals:         9       0       0       0       0       0       0       0
  8775 ;;Total ram usage:        9 bytes
  8776 ;; Hardware stack levels used: 1
  8777 ;; This function calls:
  8778 ;;		Nothing
  8779 ;; This function is called by:
  8780 ;;		___flmul
  8781 ;; This function uses a non-reentrant model
  8782 ;;
  8783                           
  8784  1EE4                     __Umul8_16:	
  8785                           ;psect for function __Umul8_16
  8786                           
  8787                           
  8788                           ;incstack = 0
  8789                           ; Regs used in __Umul8_16: [wreg+status,2+status,0]
  8790                           ;__Umul8_16@multiplier stored from wreg
  8791  1EE4  00F8               	movwf	__Umul8_16@multiplier
  8792  1EE5                     l2743:
  8793  1EE5  01F4               	clrf	__Umul8_16@product
  8794  1EE6  01F5               	clrf	__Umul8_16@product+1
  8795  1EE7                     l2745:
  8796  1EE7  0870               	movf	__Umul8_16@multiplicand,w
  8797  1EE8  00F2               	movwf	??__Umul8_16
  8798  1EE9  01F3               	clrf	??__Umul8_16+1
  8799  1EEA  0872               	movf	??__Umul8_16,w
  8800  1EEB  00F6               	movwf	__Umul8_16@word_mpld
  8801  1EEC  0873               	movf	??__Umul8_16+1,w
  8802  1EED  00F7               	movwf	__Umul8_16@word_mpld+1
  8803  1EEE                     l2747:
  8804  1EEE  1C78               	btfss	__Umul8_16@multiplier,0
  8805  1EEF  2EF1               	goto	u3321
  8806  1EF0  2EF2               	goto	u3320
  8807  1EF1                     u3321:
  8808  1EF1  2EF6               	goto	l602
  8809  1EF2                     u3320:
  8810  1EF2                     l2749:
  8811  1EF2  0876               	movf	__Umul8_16@word_mpld,w
  8812  1EF3  07F4               	addwf	__Umul8_16@product,f
  8813  1EF4  0877               	movf	__Umul8_16@word_mpld+1,w
  8814  1EF5  3DF5               	addwfc	__Umul8_16@product+1,f
  8815  1EF6                     l602:
  8816  1EF6  3001               	movlw	1
  8817  1EF7                     u3335:
  8818  1EF7  35F6               	lslf	__Umul8_16@word_mpld,f
  8819  1EF8  0DF7               	rlf	__Umul8_16@word_mpld+1,f
  8820  1EF9  0B89               	decfsz	9,f
  8821  1EFA  2EF7               	goto	u3335
  8822  1EFB  1003               	clrc
  8823  1EFC  0CF8               	rrf	__Umul8_16@multiplier,f
  8824  1EFD                     l2751:
  8825  1EFD  0878               	movf	__Umul8_16@multiplier,w
  8826  1EFE  1D03               	btfss	3,2
  8827  1EFF  2F01               	goto	u3341
  8828  1F00  2F02               	goto	u3340
  8829  1F01                     u3341:
  8830  1F01  2EEE               	goto	l2747
  8831  1F02                     u3340:
  8832  1F02                     l2753:
  8833  1F02  0875               	movf	__Umul8_16@product+1,w
  8834  1F03  00F1               	movwf	?__Umul8_16+1
  8835  1F04  0874               	movf	__Umul8_16@product,w
  8836  1F05  00F0               	movwf	?__Umul8_16
  8837  1F06                     l604:
  8838  1F06  0008               	return
  8839  1F07                     __end_of__Umul8_16:
  8840                           
  8841                           	psect	text21
  8842  12D1                     __ptext21:	
  8843 ;; *************** function ___flge *****************
  8844 ;; Defined at:
  8845 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\flge.c"
  8846 ;; Parameters:    Size  Location     Type
  8847 ;;  ff1             4   26[BANK0 ] unsigned int 
  8848 ;;  ff2             4   30[BANK0 ] unsigned int 
  8849 ;; Auto vars:     Size  Location     Type
  8850 ;;		None
  8851 ;; Return value:  Size  Location     Type
  8852 ;;		None               void
  8853 ;; Registers used:
  8854 ;;		wreg, status,2, status,0
  8855 ;; Tracked objects:
  8856 ;;		On entry : 0/0
  8857 ;;		On exit  : 0/0
  8858 ;;		Unchanged: 0/0
  8859 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  8860 ;;      Params:         0       8       0       0       0       0       0       0
  8861 ;;      Locals:         0       0       0       0       0       0       0       0
  8862 ;;      Temps:          0       4       0       0       0       0       0       0
  8863 ;;      Totals:         0      12       0       0       0       0       0       0
  8864 ;;Total ram usage:       12 bytes
  8865 ;; Hardware stack levels used: 1
  8866 ;; This function calls:
  8867 ;;		Nothing
  8868 ;; This function is called by:
  8869 ;;		_main
  8870 ;;		_efgtoa
  8871 ;; This function uses a non-reentrant model
  8872 ;;
  8873                           
  8874  12D1                     ___flge:	
  8875                           ;psect for function ___flge
  8876                           
  8877  12D1                     l2877:	
  8878                           ;incstack = 0
  8879                           ; Regs used in ___flge: [wreg+status,2+status,0]
  8880                           
  8881  12D1  3000               	movlw	0
  8882  12D2  0020               	movlb	0	; select bank0
  8883  12D3  053A               	andwf	___flge@ff1,w
  8884  12D4  00C2               	movwf	??___flge
  8885  12D5  3000               	movlw	0
  8886  12D6  053B               	andwf	___flge@ff1+1,w
  8887  12D7  00C3               	movwf	??___flge+1
  8888  12D8  3080               	movlw	128
  8889  12D9  053C               	andwf	___flge@ff1+2,w
  8890  12DA  00C4               	movwf	??___flge+2
  8891  12DB  307F               	movlw	127
  8892  12DC  053D               	andwf	___flge@ff1+3,w
  8893  12DD  00C5               	movwf	??___flge+3
  8894  12DE  0845               	movf	??___flge+3,w
  8895  12DF  0444               	iorwf	??___flge+2,w
  8896  12E0  0443               	iorwf	??___flge+1,w
  8897  12E1  0442               	iorwf	??___flge,w
  8898  12E2  1D03               	skipz
  8899  12E3  2AE5               	goto	u3641
  8900  12E4  2AE6               	goto	u3640
  8901  12E5                     u3641:
  8902  12E5  2AEE               	goto	l364
  8903  12E6                     u3640:
  8904  12E6                     l2879:
  8905  12E6  3000               	movlw	0
  8906  12E7  00BD               	movwf	___flge@ff1+3
  8907  12E8  3000               	movlw	0
  8908  12E9  00BC               	movwf	___flge@ff1+2
  8909  12EA  3000               	movlw	0
  8910  12EB  00BB               	movwf	___flge@ff1+1
  8911  12EC  3000               	movlw	0
  8912  12ED  00BA               	movwf	___flge@ff1
  8913  12EE                     l364:
  8914  12EE  3000               	movlw	0
  8915  12EF  053E               	andwf	___flge@ff2,w
  8916  12F0  00C2               	movwf	??___flge
  8917  12F1  3000               	movlw	0
  8918  12F2  053F               	andwf	___flge@ff2+1,w
  8919  12F3  00C3               	movwf	??___flge+1
  8920  12F4  3080               	movlw	128
  8921  12F5  0540               	andwf	___flge@ff2+2,w
  8922  12F6  00C4               	movwf	??___flge+2
  8923  12F7  307F               	movlw	127
  8924  12F8  0541               	andwf	___flge@ff2+3,w
  8925  12F9  00C5               	movwf	??___flge+3
  8926  12FA  0845               	movf	??___flge+3,w
  8927  12FB  0444               	iorwf	??___flge+2,w
  8928  12FC  0443               	iorwf	??___flge+1,w
  8929  12FD  0442               	iorwf	??___flge,w
  8930  12FE  1D03               	skipz
  8931  12FF  2B01               	goto	u3651
  8932  1300  2B02               	goto	u3650
  8933  1301                     u3651:
  8934  1301  2B0A               	goto	l2883
  8935  1302                     u3650:
  8936  1302                     l2881:
  8937  1302  3000               	movlw	0
  8938  1303  00C1               	movwf	___flge@ff2+3
  8939  1304  3000               	movlw	0
  8940  1305  00C0               	movwf	___flge@ff2+2
  8941  1306  3000               	movlw	0
  8942  1307  00BF               	movwf	___flge@ff2+1
  8943  1308  3000               	movlw	0
  8944  1309  00BE               	movwf	___flge@ff2
  8945  130A                     l2883:
  8946  130A  1FBD               	btfss	___flge@ff1+3,7
  8947  130B  2B0D               	goto	u3661
  8948  130C  2B0E               	goto	u3660
  8949  130D                     u3661:
  8950  130D  2B26               	goto	l2887
  8951  130E                     u3660:
  8952  130E                     l2885:
  8953  130E  3000               	movlw	0
  8954  130F  00C2               	movwf	??___flge
  8955  1310  3000               	movlw	0
  8956  1311  00C3               	movwf	??___flge+1
  8957  1312  3000               	movlw	0
  8958  1313  00C4               	movwf	??___flge+2
  8959  1314  3080               	movlw	128
  8960  1315  00C5               	movwf	??___flge+3
  8961  1316  083A               	movf	___flge@ff1,w
  8962  1317  02C2               	subwf	??___flge,f
  8963  1318  083B               	movf	___flge@ff1+1,w
  8964  1319  3BC3               	subwfb	??___flge+1,f
  8965  131A  083C               	movf	___flge@ff1+2,w
  8966  131B  3BC4               	subwfb	??___flge+2,f
  8967  131C  083D               	movf	___flge@ff1+3,w
  8968  131D  3BC5               	subwfb	??___flge+3,f
  8969  131E  0845               	movf	??___flge+3,w
  8970  131F  00BD               	movwf	___flge@ff1+3
  8971  1320  0844               	movf	??___flge+2,w
  8972  1321  00BC               	movwf	___flge@ff1+2
  8973  1322  0843               	movf	??___flge+1,w
  8974  1323  00BB               	movwf	___flge@ff1+1
  8975  1324  0842               	movf	??___flge,w
  8976  1325  00BA               	movwf	___flge@ff1
  8977  1326                     l2887:
  8978  1326  1FC1               	btfss	___flge@ff2+3,7
  8979  1327  2B29               	goto	u3671
  8980  1328  2B2A               	goto	u3670
  8981  1329                     u3671:
  8982  1329  2B42               	goto	l367
  8983  132A                     u3670:
  8984  132A                     l2889:
  8985  132A  3000               	movlw	0
  8986  132B  00C2               	movwf	??___flge
  8987  132C  3000               	movlw	0
  8988  132D  00C3               	movwf	??___flge+1
  8989  132E  3000               	movlw	0
  8990  132F  00C4               	movwf	??___flge+2
  8991  1330  3080               	movlw	128
  8992  1331  00C5               	movwf	??___flge+3
  8993  1332  083E               	movf	___flge@ff2,w
  8994  1333  02C2               	subwf	??___flge,f
  8995  1334  083F               	movf	___flge@ff2+1,w
  8996  1335  3BC3               	subwfb	??___flge+1,f
  8997  1336  0840               	movf	___flge@ff2+2,w
  8998  1337  3BC4               	subwfb	??___flge+2,f
  8999  1338  0841               	movf	___flge@ff2+3,w
  9000  1339  3BC5               	subwfb	??___flge+3,f
  9001  133A  0845               	movf	??___flge+3,w
  9002  133B  00C1               	movwf	___flge@ff2+3
  9003  133C  0844               	movf	??___flge+2,w
  9004  133D  00C0               	movwf	___flge@ff2+2
  9005  133E  0843               	movf	??___flge+1,w
  9006  133F  00BF               	movwf	___flge@ff2+1
  9007  1340  0842               	movf	??___flge,w
  9008  1341  00BE               	movwf	___flge@ff2
  9009  1342                     l367:
  9010  1342  3080               	movlw	128
  9011  1343  06BD               	xorwf	___flge@ff1+3,f
  9012  1344  3080               	movlw	128
  9013  1345  06C1               	xorwf	___flge@ff2+3,f
  9014  1346  0841               	movf	___flge@ff2+3,w
  9015  1347  023D               	subwf	___flge@ff1+3,w
  9016  1348  1D03               	skipz
  9017  1349  2B54               	goto	u3685
  9018  134A  0840               	movf	___flge@ff2+2,w
  9019  134B  023C               	subwf	___flge@ff1+2,w
  9020  134C  1D03               	skipz
  9021  134D  2B54               	goto	u3685
  9022  134E  083F               	movf	___flge@ff2+1,w
  9023  134F  023B               	subwf	___flge@ff1+1,w
  9024  1350  1D03               	skipz
  9025  1351  2B54               	goto	u3685
  9026  1352  083E               	movf	___flge@ff2,w
  9027  1353  023A               	subwf	___flge@ff1,w
  9028  1354                     u3685:
  9029  1354  1803               	skipnc
  9030  1355  2B57               	goto	u3681
  9031  1356  2B58               	goto	u3680
  9032  1357                     u3681:
  9033  1357  2B5A               	goto	l2893
  9034  1358                     u3680:
  9035  1358                     l2891:
  9036  1358  1003               	clrc
  9037  1359  2B5B               	goto	l372
  9038  135A                     l2893:
  9039  135A  1403               	setc
  9040  135B                     l372:
  9041  135B  0008               	return
  9042  135C                     __end_of___flge:
  9043                           
  9044                           	psect	text22
  9045  1F5F                     __ptext22:	
  9046 ;; *************** function ___fleq *****************
  9047 ;; Defined at:
  9048 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\fleq.c"
  9049 ;; Parameters:    Size  Location     Type
  9050 ;;  ff1             4    0[COMMON] unsigned int 
  9051 ;;  ff2             4    4[COMMON] unsigned int 
  9052 ;; Auto vars:     Size  Location     Type
  9053 ;;		None
  9054 ;; Return value:  Size  Location     Type
  9055 ;;		None               void
  9056 ;; Registers used:
  9057 ;;		wreg, status,2, status,0
  9058 ;; Tracked objects:
  9059 ;;		On entry : 0/0
  9060 ;;		On exit  : 0/0
  9061 ;;		Unchanged: 0/0
  9062 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  9063 ;;      Params:         8       0       0       0       0       0       0       0
  9064 ;;      Locals:         0       0       0       0       0       0       0       0
  9065 ;;      Temps:          4       0       0       0       0       0       0       0
  9066 ;;      Totals:        12       0       0       0       0       0       0       0
  9067 ;;Total ram usage:       12 bytes
  9068 ;; Hardware stack levels used: 1
  9069 ;; This function calls:
  9070 ;;		Nothing
  9071 ;; This function is called by:
  9072 ;;		_efgtoa
  9073 ;; This function uses a non-reentrant model
  9074 ;;
  9075                           
  9076  1F5F                     ___fleq:	
  9077                           ;psect for function ___fleq
  9078                           
  9079  1F5F                     l2865:	
  9080                           ;incstack = 0
  9081                           ; Regs used in ___fleq: [wreg+status,2+status,0]
  9082                           
  9083  1F5F  3000               	movlw	0
  9084  1F60  0570               	andwf	___fleq@ff1,w
  9085  1F61  00F8               	movwf	??___fleq
  9086  1F62  3000               	movlw	0
  9087  1F63  0571               	andwf	___fleq@ff1+1,w
  9088  1F64  00F9               	movwf	??___fleq+1
  9089  1F65  3080               	movlw	128
  9090  1F66  0572               	andwf	___fleq@ff1+2,w
  9091  1F67  00FA               	movwf	??___fleq+2
  9092  1F68  307F               	movlw	127
  9093  1F69  0573               	andwf	___fleq@ff1+3,w
  9094  1F6A  00FB               	movwf	??___fleq+3
  9095  1F6B  087B               	movf	??___fleq+3,w
  9096  1F6C  047A               	iorwf	??___fleq+2,w
  9097  1F6D  0479               	iorwf	??___fleq+1,w
  9098  1F6E  0478               	iorwf	??___fleq,w
  9099  1F6F  1D03               	skipz
  9100  1F70  2F72               	goto	u3611
  9101  1F71  2F73               	goto	u3610
  9102  1F72                     u3611:
  9103  1F72  2F7B               	goto	l355
  9104  1F73                     u3610:
  9105  1F73                     l2867:
  9106  1F73  3000               	movlw	0
  9107  1F74  00F3               	movwf	___fleq@ff1+3
  9108  1F75  3000               	movlw	0
  9109  1F76  00F2               	movwf	___fleq@ff1+2
  9110  1F77  3000               	movlw	0
  9111  1F78  00F1               	movwf	___fleq@ff1+1
  9112  1F79  3000               	movlw	0
  9113  1F7A  00F0               	movwf	___fleq@ff1
  9114  1F7B                     l355:
  9115  1F7B  3000               	movlw	0
  9116  1F7C  0574               	andwf	___fleq@ff2,w
  9117  1F7D  00F8               	movwf	??___fleq
  9118  1F7E  3000               	movlw	0
  9119  1F7F  0575               	andwf	___fleq@ff2+1,w
  9120  1F80  00F9               	movwf	??___fleq+1
  9121  1F81  3080               	movlw	128
  9122  1F82  0576               	andwf	___fleq@ff2+2,w
  9123  1F83  00FA               	movwf	??___fleq+2
  9124  1F84  307F               	movlw	127
  9125  1F85  0577               	andwf	___fleq@ff2+3,w
  9126  1F86  00FB               	movwf	??___fleq+3
  9127  1F87  087B               	movf	??___fleq+3,w
  9128  1F88  047A               	iorwf	??___fleq+2,w
  9129  1F89  0479               	iorwf	??___fleq+1,w
  9130  1F8A  0478               	iorwf	??___fleq,w
  9131  1F8B  1D03               	skipz
  9132  1F8C  2F8E               	goto	u3621
  9133  1F8D  2F8F               	goto	u3620
  9134  1F8E                     u3621:
  9135  1F8E  2F97               	goto	l356
  9136  1F8F                     u3620:
  9137  1F8F                     l2869:
  9138  1F8F  3000               	movlw	0
  9139  1F90  00F7               	movwf	___fleq@ff2+3
  9140  1F91  3000               	movlw	0
  9141  1F92  00F6               	movwf	___fleq@ff2+2
  9142  1F93  3000               	movlw	0
  9143  1F94  00F5               	movwf	___fleq@ff2+1
  9144  1F95  3000               	movlw	0
  9145  1F96  00F4               	movwf	___fleq@ff2
  9146  1F97                     l356:
  9147  1F97  0877               	movf	___fleq@ff2+3,w
  9148  1F98  0673               	xorwf	___fleq@ff1+3,w
  9149  1F99  1D03               	skipz
  9150  1F9A  2FA5               	goto	u3635
  9151  1F9B  0876               	movf	___fleq@ff2+2,w
  9152  1F9C  0672               	xorwf	___fleq@ff1+2,w
  9153  1F9D  1D03               	skipz
  9154  1F9E  2FA5               	goto	u3635
  9155  1F9F  0875               	movf	___fleq@ff2+1,w
  9156  1FA0  0671               	xorwf	___fleq@ff1+1,w
  9157  1FA1  1D03               	skipz
  9158  1FA2  2FA5               	goto	u3635
  9159  1FA3  0874               	movf	___fleq@ff2,w
  9160  1FA4  0670               	xorwf	___fleq@ff1,w
  9161  1FA5                     u3635:
  9162  1FA5  1903               	skipnz
  9163  1FA6  2FA8               	goto	u3631
  9164  1FA7  2FA9               	goto	u3630
  9165  1FA8                     u3631:
  9166  1FA8  2FAB               	goto	l2873
  9167  1FA9                     u3630:
  9168  1FA9                     l2871:
  9169  1FA9  1003               	clrc
  9170  1FAA  2FAC               	goto	l361
  9171  1FAB                     l2873:
  9172  1FAB  1403               	setc
  9173  1FAC                     l361:
  9174  1FAC  0008               	return
  9175  1FAD                     __end_of___fleq:
  9176                           
  9177                           	psect	text23
  9178  164C                     __ptext23:	
  9179 ;; *************** function ___fldiv *****************
  9180 ;; Defined at:
  9181 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\sprcdiv.c"
  9182 ;; Parameters:    Size  Location     Type
  9183 ;;  a               4   26[BANK0 ] unsigned int 
  9184 ;;  b               4   30[BANK0 ] unsigned int 
  9185 ;; Auto vars:     Size  Location     Type
  9186 ;;  grs             4   46[BANK0 ] unsigned long 
  9187 ;;  rem             4   39[BANK0 ] unsigned long 
  9188 ;;  new_exp         2   44[BANK0 ] int 
  9189 ;;  aexp            1   51[BANK0 ] unsigned char 
  9190 ;;  bexp            1   50[BANK0 ] unsigned char 
  9191 ;;  sign            1   43[BANK0 ] unsigned char 
  9192 ;; Return value:  Size  Location     Type
  9193 ;;                  4   26[BANK0 ] unsigned char 
  9194 ;; Registers used:
  9195 ;;		wreg, status,2, status,0
  9196 ;; Tracked objects:
  9197 ;;		On entry : 0/0
  9198 ;;		On exit  : 0/0
  9199 ;;		Unchanged: 0/0
  9200 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  9201 ;;      Params:         0       8       0       0       0       0       0       0
  9202 ;;      Locals:         0      13       0       0       0       0       0       0
  9203 ;;      Temps:          0       5       0       0       0       0       0       0
  9204 ;;      Totals:         0      26       0       0       0       0       0       0
  9205 ;;Total ram usage:       26 bytes
  9206 ;; Hardware stack levels used: 1
  9207 ;; This function calls:
  9208 ;;		Nothing
  9209 ;; This function is called by:
  9210 ;;		_main
  9211 ;;		_efgtoa
  9212 ;; This function uses a non-reentrant model
  9213 ;;
  9214                           
  9215  164C                     ___fldiv:	
  9216                           ;psect for function ___fldiv
  9217                           
  9218  164C                     l2947:	
  9219                           ;incstack = 0
  9220                           ; Regs used in ___fldiv: [wreg+status,2+status,0]
  9221                           
  9222  164C  0020               	movlb	0	; select bank0
  9223  164D  0841               	movf	___fldiv@b+3,w
  9224  164E  3980               	andlw	128
  9225  164F  00C2               	movwf	??___fldiv
  9226  1650  0842               	movf	??___fldiv,w
  9227  1651  00CB               	movwf	___fldiv@sign
  9228  1652                     l2949:
  9229  1652  3541               	lslf	___fldiv@b+3,w
  9230  1653  00C2               	movwf	??___fldiv
  9231  1654  0842               	movf	??___fldiv,w
  9232  1655  00D2               	movwf	___fldiv@bexp
  9233  1656                     l2951:
  9234  1656  1FC0               	btfss	___fldiv@b+2,7
  9235  1657  2E59               	goto	u3801
  9236  1658  2E5A               	goto	u3800
  9237  1659                     u3801:
  9238  1659  2E5B               	goto	l2955
  9239  165A                     u3800:
  9240  165A                     l2953:
  9241  165A  1452               	bsf	___fldiv@bexp,0
  9242  165B                     l2955:
  9243  165B  0852               	movf	___fldiv@bexp,w
  9244  165C  1903               	btfsc	3,2
  9245  165D  2E5F               	goto	u3811
  9246  165E  2E60               	goto	u3810
  9247  165F                     u3811:
  9248  165F  2E70               	goto	l2965
  9249  1660                     u3810:
  9250  1660                     l2957:
  9251  1660  0A52               	incf	___fldiv@bexp,w
  9252  1661  1D03               	btfss	3,2
  9253  1662  2E64               	goto	u3821
  9254  1663  2E65               	goto	u3820
  9255  1664                     u3821:
  9256  1664  2E6D               	goto	l2961
  9257  1665                     u3820:
  9258  1665                     l2959:
  9259  1665  3000               	movlw	0
  9260  1666  00C1               	movwf	___fldiv@b+3
  9261  1667  3000               	movlw	0
  9262  1668  00C0               	movwf	___fldiv@b+2
  9263  1669  3000               	movlw	0
  9264  166A  00BF               	movwf	___fldiv@b+1
  9265  166B  3000               	movlw	0
  9266  166C  00BE               	movwf	___fldiv@b
  9267  166D                     l2961:
  9268  166D  17C0               	bsf	___fldiv@b+2,7
  9269  166E                     l2963:
  9270  166E  01C1               	clrf	___fldiv@b+3
  9271  166F  2E78               	goto	l2967
  9272  1670                     l2965:
  9273  1670  3000               	movlw	0
  9274  1671  00C1               	movwf	___fldiv@b+3
  9275  1672  3000               	movlw	0
  9276  1673  00C0               	movwf	___fldiv@b+2
  9277  1674  3000               	movlw	0
  9278  1675  00BF               	movwf	___fldiv@b+1
  9279  1676  3000               	movlw	0
  9280  1677  00BE               	movwf	___fldiv@b
  9281  1678                     l2967:
  9282  1678  083D               	movf	___fldiv@a+3,w
  9283  1679  3980               	andlw	128
  9284  167A  00C2               	movwf	??___fldiv
  9285  167B  0842               	movf	??___fldiv,w
  9286  167C  06CB               	xorwf	___fldiv@sign,f
  9287  167D                     l2969:
  9288  167D  353D               	lslf	___fldiv@a+3,w
  9289  167E  00C2               	movwf	??___fldiv
  9290  167F  0842               	movf	??___fldiv,w
  9291  1680  00D3               	movwf	___fldiv@aexp
  9292  1681                     l2971:
  9293  1681  1FBC               	btfss	___fldiv@a+2,7
  9294  1682  2E84               	goto	u3831
  9295  1683  2E85               	goto	u3830
  9296  1684                     u3831:
  9297  1684  2E86               	goto	l2975
  9298  1685                     u3830:
  9299  1685                     l2973:
  9300  1685  1453               	bsf	___fldiv@aexp,0
  9301  1686                     l2975:
  9302  1686  0853               	movf	___fldiv@aexp,w
  9303  1687  1903               	btfsc	3,2
  9304  1688  2E8A               	goto	u3841
  9305  1689  2E8B               	goto	u3840
  9306  168A                     u3841:
  9307  168A  2E9B               	goto	l2985
  9308  168B                     u3840:
  9309  168B                     l2977:
  9310  168B  0A53               	incf	___fldiv@aexp,w
  9311  168C  1D03               	btfss	3,2
  9312  168D  2E8F               	goto	u3851
  9313  168E  2E90               	goto	u3850
  9314  168F                     u3851:
  9315  168F  2E98               	goto	l2981
  9316  1690                     u3850:
  9317  1690                     l2979:
  9318  1690  3000               	movlw	0
  9319  1691  00BD               	movwf	___fldiv@a+3
  9320  1692  3000               	movlw	0
  9321  1693  00BC               	movwf	___fldiv@a+2
  9322  1694  3000               	movlw	0
  9323  1695  00BB               	movwf	___fldiv@a+1
  9324  1696  3000               	movlw	0
  9325  1697  00BA               	movwf	___fldiv@a
  9326  1698                     l2981:
  9327  1698  17BC               	bsf	___fldiv@a+2,7
  9328  1699                     l2983:
  9329  1699  01BD               	clrf	___fldiv@a+3
  9330  169A  2EA3               	goto	l543
  9331  169B                     l2985:
  9332  169B  3000               	movlw	0
  9333  169C  00BD               	movwf	___fldiv@a+3
  9334  169D  3000               	movlw	0
  9335  169E  00BC               	movwf	___fldiv@a+2
  9336  169F  3000               	movlw	0
  9337  16A0  00BB               	movwf	___fldiv@a+1
  9338  16A1  3000               	movlw	0
  9339  16A2  00BA               	movwf	___fldiv@a
  9340  16A3                     l543:
  9341  16A3  083D               	movf	___fldiv@a+3,w
  9342  16A4  043C               	iorwf	___fldiv@a+2,w
  9343  16A5  043B               	iorwf	___fldiv@a+1,w
  9344  16A6  043A               	iorwf	___fldiv@a,w
  9345  16A7  1D03               	skipz
  9346  16A8  2EAA               	goto	u3861
  9347  16A9  2EAB               	goto	u3860
  9348  16AA                     u3861:
  9349  16AA  2EC4               	goto	l2995
  9350  16AB                     u3860:
  9351  16AB                     l2987:
  9352  16AB  3000               	movlw	0
  9353  16AC  00C1               	movwf	___fldiv@b+3
  9354  16AD  3000               	movlw	0
  9355  16AE  00C0               	movwf	___fldiv@b+2
  9356  16AF  3000               	movlw	0
  9357  16B0  00BF               	movwf	___fldiv@b+1
  9358  16B1  3000               	movlw	0
  9359  16B2  00BE               	movwf	___fldiv@b
  9360  16B3  3080               	movlw	128
  9361  16B4  04C0               	iorwf	___fldiv@b+2,f
  9362  16B5  307F               	movlw	127
  9363  16B6  04C1               	iorwf	___fldiv@b+3,f
  9364  16B7                     l2989:
  9365  16B7  084B               	movf	___fldiv@sign,w
  9366  16B8  00C2               	movwf	??___fldiv
  9367  16B9  0842               	movf	??___fldiv,w
  9368  16BA  04C1               	iorwf	___fldiv@b+3,f
  9369  16BB                     l2991:
  9370  16BB  0841               	movf	___fldiv@b+3,w
  9371  16BC  00BD               	movwf	?___fldiv+3
  9372  16BD  0840               	movf	___fldiv@b+2,w
  9373  16BE  00BC               	movwf	?___fldiv+2
  9374  16BF  083F               	movf	___fldiv@b+1,w
  9375  16C0  00BB               	movwf	?___fldiv+1
  9376  16C1  083E               	movf	___fldiv@b,w
  9377  16C2  00BA               	movwf	?___fldiv
  9378  16C3  2FFF               	goto	l545
  9379  16C4                     l2995:
  9380  16C4  0852               	movf	___fldiv@bexp,w
  9381  16C5  1D03               	btfss	3,2
  9382  16C6  2EC8               	goto	u3871
  9383  16C7  2EC9               	goto	u3870
  9384  16C8                     u3871:
  9385  16C8  2ED2               	goto	l3001
  9386  16C9                     u3870:
  9387  16C9                     l2997:
  9388  16C9  3000               	movlw	0
  9389  16CA  00BD               	movwf	?___fldiv+3
  9390  16CB  3000               	movlw	0
  9391  16CC  00BC               	movwf	?___fldiv+2
  9392  16CD  3000               	movlw	0
  9393  16CE  00BB               	movwf	?___fldiv+1
  9394  16CF  3000               	movlw	0
  9395  16D0  00BA               	movwf	?___fldiv
  9396  16D1  2FFF               	goto	l545
  9397  16D2                     l3001:
  9398  16D2  0852               	movf	___fldiv@bexp,w
  9399  16D3  00C2               	movwf	??___fldiv
  9400  16D4  01C3               	clrf	??___fldiv+1
  9401  16D5  0843               	movf	??___fldiv+1,w
  9402  16D6  00C5               	movwf	??___fldiv+3
  9403  16D7  0853               	movf	___fldiv@aexp,w
  9404  16D8  0242               	subwf	??___fldiv,w
  9405  16D9  00C4               	movwf	??___fldiv+2
  9406  16DA  1C03               	skipc
  9407  16DB  03C5               	decf	??___fldiv+3,f
  9408  16DC  0844               	movf	??___fldiv+2,w
  9409  16DD  3E7F               	addlw	127
  9410  16DE  00CC               	movwf	___fldiv@new_exp
  9411  16DF  3000               	movlw	0
  9412  16E0  3D45               	addwfc	??___fldiv+3,w
  9413  16E1  00CD               	movwf	___fldiv@new_exp+1
  9414  16E2                     l3003:
  9415  16E2  0841               	movf	___fldiv@b+3,w
  9416  16E3  00CA               	movwf	___fldiv@rem+3
  9417  16E4  0840               	movf	___fldiv@b+2,w
  9418  16E5  00C9               	movwf	___fldiv@rem+2
  9419  16E6  083F               	movf	___fldiv@b+1,w
  9420  16E7  00C8               	movwf	___fldiv@rem+1
  9421  16E8  083E               	movf	___fldiv@b,w
  9422  16E9  00C7               	movwf	___fldiv@rem
  9423  16EA                     l3005:
  9424  16EA  3000               	movlw	0
  9425  16EB  00C1               	movwf	___fldiv@b+3
  9426  16EC  3000               	movlw	0
  9427  16ED  00C0               	movwf	___fldiv@b+2
  9428  16EE  3000               	movlw	0
  9429  16EF  00BF               	movwf	___fldiv@b+1
  9430  16F0  3000               	movlw	0
  9431  16F1  00BE               	movwf	___fldiv@b
  9432  16F2                     l3007:
  9433  16F2  3000               	movlw	0
  9434  16F3  00D1               	movwf	___fldiv@grs+3
  9435  16F4  3000               	movlw	0
  9436  16F5  00D0               	movwf	___fldiv@grs+2
  9437  16F6  3000               	movlw	0
  9438  16F7  00CF               	movwf	___fldiv@grs+1
  9439  16F8  3000               	movlw	0
  9440  16F9  00CE               	movwf	___fldiv@grs
  9441  16FA                     l3009:
  9442  16FA  01D3               	clrf	___fldiv@aexp
  9443  16FB  2F3A               	goto	l3029
  9444  16FC                     l3011:
  9445  16FC  0853               	movf	___fldiv@aexp,w
  9446  16FD  1903               	btfsc	3,2
  9447  16FE  2F00               	goto	u3881
  9448  16FF  2F01               	goto	u3880
  9449  1700                     u3881:
  9450  1700  2F1B               	goto	l3021
  9451  1701                     u3880:
  9452  1701                     l3013:
  9453  1701  3001               	movlw	1
  9454  1702                     u3895:
  9455  1702  35C7               	lslf	___fldiv@rem,f
  9456  1703  0DC8               	rlf	___fldiv@rem+1,f
  9457  1704  0DC9               	rlf	___fldiv@rem+2,f
  9458  1705  0DCA               	rlf	___fldiv@rem+3,f
  9459  1706  0B89               	decfsz	9,f
  9460  1707  2F02               	goto	u3895
  9461  1708  3001               	movlw	1
  9462  1709                     u3905:
  9463  1709  35BE               	lslf	___fldiv@b,f
  9464  170A  0DBF               	rlf	___fldiv@b+1,f
  9465  170B  0DC0               	rlf	___fldiv@b+2,f
  9466  170C  0DC1               	rlf	___fldiv@b+3,f
  9467  170D  0B89               	decfsz	9,f
  9468  170E  2F09               	goto	u3905
  9469  170F                     l3015:
  9470  170F  1FD1               	btfss	___fldiv@grs+3,7
  9471  1710  2F12               	goto	u3911
  9472  1711  2F13               	goto	u3910
  9473  1712                     u3911:
  9474  1712  2F14               	goto	l3019
  9475  1713                     u3910:
  9476  1713                     l3017:
  9477  1713  143E               	bsf	___fldiv@b,0
  9478  1714                     l3019:
  9479  1714  3001               	movlw	1
  9480  1715                     u3925:
  9481  1715  35CE               	lslf	___fldiv@grs,f
  9482  1716  0DCF               	rlf	___fldiv@grs+1,f
  9483  1717  0DD0               	rlf	___fldiv@grs+2,f
  9484  1718  0DD1               	rlf	___fldiv@grs+3,f
  9485  1719  0B89               	decfsz	9,f
  9486  171A  2F15               	goto	u3925
  9487  171B                     l3021:
  9488  171B  083D               	movf	___fldiv@a+3,w
  9489  171C  024A               	subwf	___fldiv@rem+3,w
  9490  171D  1D03               	skipz
  9491  171E  2F29               	goto	u3935
  9492  171F  083C               	movf	___fldiv@a+2,w
  9493  1720  0249               	subwf	___fldiv@rem+2,w
  9494  1721  1D03               	skipz
  9495  1722  2F29               	goto	u3935
  9496  1723  083B               	movf	___fldiv@a+1,w
  9497  1724  0248               	subwf	___fldiv@rem+1,w
  9498  1725  1D03               	skipz
  9499  1726  2F29               	goto	u3935
  9500  1727  083A               	movf	___fldiv@a,w
  9501  1728  0247               	subwf	___fldiv@rem,w
  9502  1729                     u3935:
  9503  1729  1C03               	skipc
  9504  172A  2F2C               	goto	u3931
  9505  172B  2F2D               	goto	u3930
  9506  172C                     u3931:
  9507  172C  2F36               	goto	l3027
  9508  172D                     u3930:
  9509  172D                     l3023:
  9510  172D  1751               	bsf	___fldiv@grs+3,6
  9511  172E                     l3025:
  9512  172E  083A               	movf	___fldiv@a,w
  9513  172F  02C7               	subwf	___fldiv@rem,f
  9514  1730  083B               	movf	___fldiv@a+1,w
  9515  1731  3BC8               	subwfb	___fldiv@rem+1,f
  9516  1732  083C               	movf	___fldiv@a+2,w
  9517  1733  3BC9               	subwfb	___fldiv@rem+2,f
  9518  1734  083D               	movf	___fldiv@a+3,w
  9519  1735  3BCA               	subwfb	___fldiv@rem+3,f
  9520  1736                     l3027:
  9521  1736  3001               	movlw	1
  9522  1737  00C2               	movwf	??___fldiv
  9523  1738  0842               	movf	??___fldiv,w
  9524  1739  07D3               	addwf	___fldiv@aexp,f
  9525  173A                     l3029:
  9526  173A  301A               	movlw	26
  9527  173B  0253               	subwf	___fldiv@aexp,w
  9528  173C  1C03               	skipc
  9529  173D  2F3F               	goto	u3941
  9530  173E  2F40               	goto	u3940
  9531  173F                     u3941:
  9532  173F  2EFC               	goto	l3011
  9533  1740                     u3940:
  9534  1740                     l3031:
  9535  1740  084A               	movf	___fldiv@rem+3,w
  9536  1741  0449               	iorwf	___fldiv@rem+2,w
  9537  1742  0448               	iorwf	___fldiv@rem+1,w
  9538  1743  0447               	iorwf	___fldiv@rem,w
  9539  1744  1903               	skipnz
  9540  1745  2F47               	goto	u3951
  9541  1746  2F48               	goto	u3950
  9542  1747                     u3951:
  9543  1747  2F61               	goto	l3045
  9544  1748                     u3950:
  9545  1748                     l3033:
  9546  1748  144E               	bsf	___fldiv@grs,0
  9547  1749  2F61               	goto	l3045
  9548  174A                     l3035:
  9549  174A  3001               	movlw	1
  9550  174B                     u3965:
  9551  174B  35BE               	lslf	___fldiv@b,f
  9552  174C  0DBF               	rlf	___fldiv@b+1,f
  9553  174D  0DC0               	rlf	___fldiv@b+2,f
  9554  174E  0DC1               	rlf	___fldiv@b+3,f
  9555  174F  0B89               	decfsz	9,f
  9556  1750  2F4B               	goto	u3965
  9557  1751                     l3037:
  9558  1751  1FD1               	btfss	___fldiv@grs+3,7
  9559  1752  2F54               	goto	u3971
  9560  1753  2F55               	goto	u3970
  9561  1754                     u3971:
  9562  1754  2F56               	goto	l3041
  9563  1755                     u3970:
  9564  1755                     l3039:
  9565  1755  143E               	bsf	___fldiv@b,0
  9566  1756                     l3041:
  9567  1756  3001               	movlw	1
  9568  1757                     u3985:
  9569  1757  35CE               	lslf	___fldiv@grs,f
  9570  1758  0DCF               	rlf	___fldiv@grs+1,f
  9571  1759  0DD0               	rlf	___fldiv@grs+2,f
  9572  175A  0DD1               	rlf	___fldiv@grs+3,f
  9573  175B  0B89               	decfsz	9,f
  9574  175C  2F57               	goto	u3985
  9575  175D                     l3043:
  9576  175D  30FF               	movlw	255
  9577  175E  07CC               	addwf	___fldiv@new_exp,f
  9578  175F  30FF               	movlw	255
  9579  1760  3DCD               	addwfc	___fldiv@new_exp+1,f
  9580  1761                     l3045:
  9581  1761  1FC0               	btfss	___fldiv@b+2,7
  9582  1762  2F64               	goto	u3991
  9583  1763  2F65               	goto	u3990
  9584  1764                     u3991:
  9585  1764  2F4A               	goto	l3035
  9586  1765                     u3990:
  9587  1765                     l3047:
  9588  1765  01D3               	clrf	___fldiv@aexp
  9589  1766                     l3049:
  9590  1766  1FD1               	btfss	___fldiv@grs+3,7
  9591  1767  2F69               	goto	u4001
  9592  1768  2F6A               	goto	u4000
  9593  1769                     u4001:
  9594  1769  2F86               	goto	l3057
  9595  176A                     u4000:
  9596  176A                     l3051:
  9597  176A  30FF               	movlw	255
  9598  176B  054E               	andwf	___fldiv@grs,w
  9599  176C  00C2               	movwf	??___fldiv
  9600  176D  30FF               	movlw	255
  9601  176E  054F               	andwf	___fldiv@grs+1,w
  9602  176F  00C3               	movwf	??___fldiv+1
  9603  1770  30FF               	movlw	255
  9604  1771  0550               	andwf	___fldiv@grs+2,w
  9605  1772  00C4               	movwf	??___fldiv+2
  9606  1773  307F               	movlw	127
  9607  1774  0551               	andwf	___fldiv@grs+3,w
  9608  1775  00C5               	movwf	??___fldiv+3
  9609  1776  0845               	movf	??___fldiv+3,w
  9610  1777  0444               	iorwf	??___fldiv+2,w
  9611  1778  0443               	iorwf	??___fldiv+1,w
  9612  1779  0442               	iorwf	??___fldiv,w
  9613  177A  1903               	skipnz
  9614  177B  2F7D               	goto	u4011
  9615  177C  2F7E               	goto	u4010
  9616  177D                     u4011:
  9617  177D  2F81               	goto	l559
  9618  177E                     u4010:
  9619  177E                     l3053:
  9620  177E  01D3               	clrf	___fldiv@aexp
  9621  177F  0AD3               	incf	___fldiv@aexp,f
  9622  1780  2F86               	goto	l3057
  9623  1781                     l559:
  9624  1781  1C3E               	btfss	___fldiv@b,0
  9625  1782  2F84               	goto	u4021
  9626  1783  2F85               	goto	u4020
  9627  1784                     u4021:
  9628  1784  2F86               	goto	l3057
  9629  1785                     u4020:
  9630  1785  2F7E               	goto	l3053
  9631  1786                     l3057:
  9632  1786  0853               	movf	___fldiv@aexp,w
  9633  1787  1903               	btfsc	3,2
  9634  1788  2F8A               	goto	u4031
  9635  1789  2F8B               	goto	u4030
  9636  178A                     u4031:
  9637  178A  2FB3               	goto	l3067
  9638  178B                     u4030:
  9639  178B                     l3059:
  9640  178B  3001               	movlw	1
  9641  178C  07BE               	addwf	___fldiv@b,f
  9642  178D  3000               	movlw	0
  9643  178E  3DBF               	addwfc	___fldiv@b+1,f
  9644  178F  3000               	movlw	0
  9645  1790  3DC0               	addwfc	___fldiv@b+2,f
  9646  1791  3000               	movlw	0
  9647  1792  3DC1               	addwfc	___fldiv@b+3,f
  9648  1793                     l3061:
  9649  1793  1C41               	btfss	___fldiv@b+3,0
  9650  1794  2F96               	goto	u4041
  9651  1795  2F97               	goto	u4040
  9652  1796                     u4041:
  9653  1796  2FB3               	goto	l3067
  9654  1797                     u4040:
  9655  1797                     l3063:
  9656  1797  083E               	movf	___fldiv@b,w
  9657  1798  00C2               	movwf	??___fldiv
  9658  1799  083F               	movf	___fldiv@b+1,w
  9659  179A  00C3               	movwf	??___fldiv+1
  9660  179B  0840               	movf	___fldiv@b+2,w
  9661  179C  00C4               	movwf	??___fldiv+2
  9662  179D  0841               	movf	___fldiv@b+3,w
  9663  179E  00C5               	movwf	??___fldiv+3
  9664  179F  3001               	movlw	1
  9665  17A0  00C6               	movwf	??___fldiv+4
  9666  17A1                     u4055:
  9667  17A1  37C5               	asrf	??___fldiv+3,f
  9668  17A2  0CC4               	rrf	??___fldiv+2,f
  9669  17A3  0CC3               	rrf	??___fldiv+1,f
  9670  17A4  0CC2               	rrf	??___fldiv,f
  9671  17A5                     u4050:
  9672  17A5  0BC6               	decfsz	??___fldiv+4,f
  9673  17A6  2FA1               	goto	u4055
  9674  17A7  0845               	movf	??___fldiv+3,w
  9675  17A8  00C1               	movwf	___fldiv@b+3
  9676  17A9  0844               	movf	??___fldiv+2,w
  9677  17AA  00C0               	movwf	___fldiv@b+2
  9678  17AB  0843               	movf	??___fldiv+1,w
  9679  17AC  00BF               	movwf	___fldiv@b+1
  9680  17AD  0842               	movf	??___fldiv,w
  9681  17AE  00BE               	movwf	___fldiv@b
  9682  17AF                     l3065:
  9683  17AF  3001               	movlw	1
  9684  17B0  07CC               	addwf	___fldiv@new_exp,f
  9685  17B1  3000               	movlw	0
  9686  17B2  3DCD               	addwfc	___fldiv@new_exp+1,f
  9687  17B3                     l3067:
  9688  17B3  084D               	movf	___fldiv@new_exp+1,w
  9689  17B4  3A80               	xorlw	128
  9690  17B5  00C2               	movwf	??___fldiv
  9691  17B6  3080               	movlw	128
  9692  17B7  0242               	subwf	??___fldiv,w
  9693  17B8  1D03               	skipz
  9694  17B9  2FBC               	goto	u4065
  9695  17BA  30FF               	movlw	255
  9696  17BB  024C               	subwf	___fldiv@new_exp,w
  9697  17BC                     u4065:
  9698  17BC  1C03               	skipc
  9699  17BD  2FBF               	goto	u4061
  9700  17BE  2FC0               	goto	u4060
  9701  17BF                     u4061:
  9702  17BF  2FCD               	goto	l564
  9703  17C0                     u4060:
  9704  17C0                     l3069:
  9705  17C0  30FF               	movlw	255
  9706  17C1  0020               	movlb	0	; select bank0
  9707  17C2  00CC               	movwf	___fldiv@new_exp
  9708  17C3  3000               	movlw	0
  9709  17C4  00CD               	movwf	___fldiv@new_exp+1
  9710  17C5  3000               	movlw	0
  9711  17C6  00C1               	movwf	___fldiv@b+3
  9712  17C7  3000               	movlw	0
  9713  17C8  00C0               	movwf	___fldiv@b+2
  9714  17C9  3000               	movlw	0
  9715  17CA  00BF               	movwf	___fldiv@b+1
  9716  17CB  3000               	movlw	0
  9717  17CC  00BE               	movwf	___fldiv@b
  9718  17CD                     l564:
  9719  17CD  0020               	movlb	0	; select bank0
  9720  17CE  084D               	movf	___fldiv@new_exp+1,w
  9721  17CF  3A80               	xorlw	128
  9722  17D0  00C2               	movwf	??___fldiv
  9723  17D1  3080               	movlw	128
  9724  17D2  0242               	subwf	??___fldiv,w
  9725  17D3  1D03               	skipz
  9726  17D4  2FD7               	goto	u4075
  9727  17D5  3001               	movlw	1
  9728  17D6  024C               	subwf	___fldiv@new_exp,w
  9729  17D7                     u4075:
  9730  17D7  1803               	skipnc
  9731  17D8  2FDA               	goto	u4071
  9732  17D9  2FDB               	goto	u4070
  9733  17DA                     u4071:
  9734  17DA  2FE7               	goto	l565
  9735  17DB                     u4070:
  9736  17DB                     l3071:
  9737  17DB  0020               	movlb	0	; select bank0
  9738  17DC  01CC               	clrf	___fldiv@new_exp
  9739  17DD  01CD               	clrf	___fldiv@new_exp+1
  9740  17DE                     l3073:
  9741  17DE  3000               	movlw	0
  9742  17DF  00C1               	movwf	___fldiv@b+3
  9743  17E0  3000               	movlw	0
  9744  17E1  00C0               	movwf	___fldiv@b+2
  9745  17E2  3000               	movlw	0
  9746  17E3  00BF               	movwf	___fldiv@b+1
  9747  17E4  3000               	movlw	0
  9748  17E5  00BE               	movwf	___fldiv@b
  9749  17E6                     l3075:
  9750  17E6  01CB               	clrf	___fldiv@sign
  9751  17E7                     l565:
  9752  17E7  0020               	movlb	0	; select bank0
  9753  17E8  084C               	movf	___fldiv@new_exp,w
  9754  17E9  00C2               	movwf	??___fldiv
  9755  17EA  0842               	movf	??___fldiv,w
  9756  17EB  00D2               	movwf	___fldiv@bexp
  9757  17EC                     l3077:
  9758  17EC  1C52               	btfss	___fldiv@bexp,0
  9759  17ED  2FEF               	goto	u4081
  9760  17EE  2FF0               	goto	u4080
  9761  17EF                     u4081:
  9762  17EF  2FF2               	goto	l3081
  9763  17F0                     u4080:
  9764  17F0                     l3079:
  9765  17F0  17C0               	bsf	___fldiv@b+2,7
  9766  17F1  2FF6               	goto	l567
  9767  17F2                     l3081:
  9768  17F2  307F               	movlw	127
  9769  17F3  00C2               	movwf	??___fldiv
  9770  17F4  0842               	movf	??___fldiv,w
  9771  17F5  05C0               	andwf	___fldiv@b+2,f
  9772  17F6                     l567:
  9773  17F6  3652               	lsrf	___fldiv@bexp,w
  9774  17F7  00C2               	movwf	??___fldiv
  9775  17F8  0842               	movf	??___fldiv,w
  9776  17F9  00C1               	movwf	___fldiv@b+3
  9777  17FA  084B               	movf	___fldiv@sign,w
  9778  17FB  00C2               	movwf	??___fldiv
  9779  17FC  0842               	movf	??___fldiv,w
  9780  17FD  04C1               	iorwf	___fldiv@b+3,f
  9781  17FE  2EBB               	goto	l2991
  9782  17FF                     l545:
  9783  17FF  0008               	return
  9784  1800                     __end_of___fldiv:
  9785                           
  9786                           	psect	text24
  9787  1FAD                     __ptext24:	
  9788 ;; *************** function ___awmod *****************
  9789 ;; Defined at:
  9790 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\awmod.c"
  9791 ;; Parameters:    Size  Location     Type
  9792 ;;  divisor         2    0[COMMON] int 
  9793 ;;  dividend        2    2[COMMON] int 
  9794 ;; Auto vars:     Size  Location     Type
  9795 ;;  sign            1    6[COMMON] unsigned char 
  9796 ;;  counter         1    5[COMMON] unsigned char 
  9797 ;; Return value:  Size  Location     Type
  9798 ;;                  2    0[COMMON] int 
  9799 ;; Registers used:
  9800 ;;		wreg, status,2, status,0
  9801 ;; Tracked objects:
  9802 ;;		On entry : 0/0
  9803 ;;		On exit  : 0/0
  9804 ;;		Unchanged: 0/0
  9805 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  9806 ;;      Params:         4       0       0       0       0       0       0       0
  9807 ;;      Locals:         2       0       0       0       0       0       0       0
  9808 ;;      Temps:          1       0       0       0       0       0       0       0
  9809 ;;      Totals:         7       0       0       0       0       0       0       0
  9810 ;;Total ram usage:        7 bytes
  9811 ;; Hardware stack levels used: 1
  9812 ;; This function calls:
  9813 ;;		Nothing
  9814 ;; This function is called by:
  9815 ;;		_efgtoa
  9816 ;; This function uses a non-reentrant model
  9817 ;;
  9818                           
  9819  1FAD                     ___awmod:	
  9820                           ;psect for function ___awmod
  9821                           
  9822  1FAD                     l2827:	
  9823                           ;incstack = 0
  9824                           ; Regs used in ___awmod: [wreg+status,2+status,0]
  9825                           
  9826  1FAD  01F6               	clrf	___awmod@sign
  9827  1FAE                     l2829:
  9828  1FAE  1FF3               	btfss	___awmod@dividend+1,7
  9829  1FAF  2FB1               	goto	u3521
  9830  1FB0  2FB2               	goto	u3520
  9831  1FB1                     u3521:
  9832  1FB1  2FB9               	goto	l2835
  9833  1FB2                     u3520:
  9834  1FB2                     l2831:
  9835  1FB2  09F2               	comf	___awmod@dividend,f
  9836  1FB3  09F3               	comf	___awmod@dividend+1,f
  9837  1FB4  0AF2               	incf	___awmod@dividend,f
  9838  1FB5  1903               	skipnz
  9839  1FB6  0AF3               	incf	___awmod@dividend+1,f
  9840  1FB7                     l2833:
  9841  1FB7  01F6               	clrf	___awmod@sign
  9842  1FB8  0AF6               	incf	___awmod@sign,f
  9843  1FB9                     l2835:
  9844  1FB9  1FF1               	btfss	___awmod@divisor+1,7
  9845  1FBA  2FBC               	goto	u3531
  9846  1FBB  2FBD               	goto	u3530
  9847  1FBC                     u3531:
  9848  1FBC  2FC2               	goto	l2839
  9849  1FBD                     u3530:
  9850  1FBD                     l2837:
  9851  1FBD  09F0               	comf	___awmod@divisor,f
  9852  1FBE  09F1               	comf	___awmod@divisor+1,f
  9853  1FBF  0AF0               	incf	___awmod@divisor,f
  9854  1FC0  1903               	skipnz
  9855  1FC1  0AF1               	incf	___awmod@divisor+1,f
  9856  1FC2                     l2839:
  9857  1FC2  0870               	movf	___awmod@divisor,w
  9858  1FC3  0471               	iorwf	___awmod@divisor+1,w
  9859  1FC4  1903               	btfsc	3,2
  9860  1FC5  2FC7               	goto	u3541
  9861  1FC6  2FC8               	goto	u3540
  9862  1FC7                     u3541:
  9863  1FC7  2FF1               	goto	l2857
  9864  1FC8                     u3540:
  9865  1FC8                     l2841:
  9866  1FC8  01F5               	clrf	___awmod@counter
  9867  1FC9  0AF5               	incf	___awmod@counter,f
  9868  1FCA  2FD4               	goto	l2847
  9869  1FCB                     l2843:
  9870  1FCB  3001               	movlw	1
  9871  1FCC                     u3555:
  9872  1FCC  35F0               	lslf	___awmod@divisor,f
  9873  1FCD  0DF1               	rlf	___awmod@divisor+1,f
  9874  1FCE  0B89               	decfsz	9,f
  9875  1FCF  2FCC               	goto	u3555
  9876  1FD0                     l2845:
  9877  1FD0  3001               	movlw	1
  9878  1FD1  00F4               	movwf	??___awmod
  9879  1FD2  0874               	movf	??___awmod,w
  9880  1FD3  07F5               	addwf	___awmod@counter,f
  9881  1FD4                     l2847:
  9882  1FD4  1FF1               	btfss	___awmod@divisor+1,7
  9883  1FD5  2FD7               	goto	u3561
  9884  1FD6  2FD8               	goto	u3560
  9885  1FD7                     u3561:
  9886  1FD7  2FCB               	goto	l2843
  9887  1FD8                     u3560:
  9888  1FD8                     l2849:
  9889  1FD8  0871               	movf	___awmod@divisor+1,w
  9890  1FD9  0273               	subwf	___awmod@dividend+1,w
  9891  1FDA  1D03               	skipz
  9892  1FDB  2FDE               	goto	u3575
  9893  1FDC  0870               	movf	___awmod@divisor,w
  9894  1FDD  0272               	subwf	___awmod@dividend,w
  9895  1FDE                     u3575:
  9896  1FDE  1C03               	skipc
  9897  1FDF  2FE1               	goto	u3571
  9898  1FE0  2FE2               	goto	u3570
  9899  1FE1                     u3571:
  9900  1FE1  2FE6               	goto	l2853
  9901  1FE2                     u3570:
  9902  1FE2                     l2851:
  9903  1FE2  0870               	movf	___awmod@divisor,w
  9904  1FE3  02F2               	subwf	___awmod@dividend,f
  9905  1FE4  0871               	movf	___awmod@divisor+1,w
  9906  1FE5  3BF3               	subwfb	___awmod@dividend+1,f
  9907  1FE6                     l2853:
  9908  1FE6  3001               	movlw	1
  9909  1FE7                     u3585:
  9910  1FE7  36F1               	lsrf	___awmod@divisor+1,f
  9911  1FE8  0CF0               	rrf	___awmod@divisor,f
  9912  1FE9  0B89               	decfsz	9,f
  9913  1FEA  2FE7               	goto	u3585
  9914  1FEB                     l2855:
  9915  1FEB  3001               	movlw	1
  9916  1FEC  02F5               	subwf	___awmod@counter,f
  9917  1FED  1D03               	btfss	3,2
  9918  1FEE  2FF0               	goto	u3591
  9919  1FEF  2FF1               	goto	u3590
  9920  1FF0                     u3591:
  9921  1FF0  2FD8               	goto	l2849
  9922  1FF1                     u3590:
  9923  1FF1                     l2857:
  9924  1FF1  0876               	movf	___awmod@sign,w
  9925  1FF2  1903               	btfsc	3,2
  9926  1FF3  2FF5               	goto	u3601
  9927  1FF4  2FF6               	goto	u3600
  9928  1FF5                     u3601:
  9929  1FF5  2FFB               	goto	l2861
  9930  1FF6                     u3600:
  9931  1FF6                     l2859:
  9932  1FF6  09F2               	comf	___awmod@dividend,f
  9933  1FF7  09F3               	comf	___awmod@dividend+1,f
  9934  1FF8  0AF2               	incf	___awmod@dividend,f
  9935  1FF9  1903               	skipnz
  9936  1FFA  0AF3               	incf	___awmod@dividend+1,f
  9937  1FFB                     l2861:
  9938  1FFB  0873               	movf	___awmod@dividend+1,w
  9939  1FFC  00F1               	movwf	?___awmod+1
  9940  1FFD  0872               	movf	___awmod@dividend,w
  9941  1FFE  00F0               	movwf	?___awmod
  9942  1FFF                     l352:
  9943  1FFF  0008               	return
  9944  2000                     __end_of___awmod:
  9945                           
  9946                           	psect	text25
  9947  11F3                     __ptext25:	
  9948 ;; *************** function ___awdiv *****************
  9949 ;; Defined at:
  9950 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\awdiv.c"
  9951 ;; Parameters:    Size  Location     Type
  9952 ;;  divisor         2    0[COMMON] int 
  9953 ;;  dividend        2    2[COMMON] int 
  9954 ;; Auto vars:     Size  Location     Type
  9955 ;;  quotient        2    7[COMMON] int 
  9956 ;;  sign            1    6[COMMON] unsigned char 
  9957 ;;  counter         1    5[COMMON] unsigned char 
  9958 ;; Return value:  Size  Location     Type
  9959 ;;                  2    0[COMMON] int 
  9960 ;; Registers used:
  9961 ;;		wreg, status,2, status,0
  9962 ;; Tracked objects:
  9963 ;;		On entry : 0/0
  9964 ;;		On exit  : 0/0
  9965 ;;		Unchanged: 0/0
  9966 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  9967 ;;      Params:         4       0       0       0       0       0       0       0
  9968 ;;      Locals:         4       0       0       0       0       0       0       0
  9969 ;;      Temps:          1       0       0       0       0       0       0       0
  9970 ;;      Totals:         9       0       0       0       0       0       0       0
  9971 ;;Total ram usage:        9 bytes
  9972 ;; Hardware stack levels used: 1
  9973 ;; This function calls:
  9974 ;;		Nothing
  9975 ;; This function is called by:
  9976 ;;		_efgtoa
  9977 ;; This function uses a non-reentrant model
  9978 ;;
  9979                           
  9980  11F3                     ___awdiv:	
  9981                           ;psect for function ___awdiv
  9982                           
  9983  11F3                     l2783:	
  9984                           ;incstack = 0
  9985                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
  9986                           
  9987  11F3  01F6               	clrf	___awdiv@sign
  9988  11F4                     l2785:
  9989  11F4  1FF1               	btfss	___awdiv@divisor+1,7
  9990  11F5  29F7               	goto	u3421
  9991  11F6  29F8               	goto	u3420
  9992  11F7                     u3421:
  9993  11F7  29FF               	goto	l2791
  9994  11F8                     u3420:
  9995  11F8                     l2787:
  9996  11F8  09F0               	comf	___awdiv@divisor,f
  9997  11F9  09F1               	comf	___awdiv@divisor+1,f
  9998  11FA  0AF0               	incf	___awdiv@divisor,f
  9999  11FB  1903               	skipnz
 10000  11FC  0AF1               	incf	___awdiv@divisor+1,f
 10001  11FD                     l2789:
 10002  11FD  01F6               	clrf	___awdiv@sign
 10003  11FE  0AF6               	incf	___awdiv@sign,f
 10004  11FF                     l2791:
 10005  11FF  1FF3               	btfss	___awdiv@dividend+1,7
 10006  1200  2A02               	goto	u3431
 10007  1201  2A03               	goto	u3430
 10008  1202                     u3431:
 10009  1202  2A0C               	goto	l2797
 10010  1203                     u3430:
 10011  1203                     l2793:
 10012  1203  09F2               	comf	___awdiv@dividend,f
 10013  1204  09F3               	comf	___awdiv@dividend+1,f
 10014  1205  0AF2               	incf	___awdiv@dividend,f
 10015  1206  1903               	skipnz
 10016  1207  0AF3               	incf	___awdiv@dividend+1,f
 10017  1208                     l2795:
 10018  1208  3001               	movlw	1
 10019  1209  00F4               	movwf	??___awdiv
 10020  120A  0874               	movf	??___awdiv,w
 10021  120B  06F6               	xorwf	___awdiv@sign,f
 10022  120C                     l2797:
 10023  120C  01F7               	clrf	___awdiv@quotient
 10024  120D  01F8               	clrf	___awdiv@quotient+1
 10025  120E                     l2799:
 10026  120E  0870               	movf	___awdiv@divisor,w
 10027  120F  0471               	iorwf	___awdiv@divisor+1,w
 10028  1210  1903               	btfsc	3,2
 10029  1211  2A13               	goto	u3441
 10030  1212  2A14               	goto	u3440
 10031  1213                     u3441:
 10032  1213  2A43               	goto	l2819
 10033  1214                     u3440:
 10034  1214                     l2801:
 10035  1214  01F5               	clrf	___awdiv@counter
 10036  1215  0AF5               	incf	___awdiv@counter,f
 10037  1216  2A20               	goto	l2807
 10038  1217                     l2803:
 10039  1217  3001               	movlw	1
 10040  1218                     u3455:
 10041  1218  35F0               	lslf	___awdiv@divisor,f
 10042  1219  0DF1               	rlf	___awdiv@divisor+1,f
 10043  121A  0B89               	decfsz	9,f
 10044  121B  2A18               	goto	u3455
 10045  121C                     l2805:
 10046  121C  3001               	movlw	1
 10047  121D  00F4               	movwf	??___awdiv
 10048  121E  0874               	movf	??___awdiv,w
 10049  121F  07F5               	addwf	___awdiv@counter,f
 10050  1220                     l2807:
 10051  1220  1FF1               	btfss	___awdiv@divisor+1,7
 10052  1221  2A23               	goto	u3461
 10053  1222  2A24               	goto	u3460
 10054  1223                     u3461:
 10055  1223  2A17               	goto	l2803
 10056  1224                     u3460:
 10057  1224                     l2809:
 10058  1224  3001               	movlw	1
 10059  1225                     u3475:
 10060  1225  35F7               	lslf	___awdiv@quotient,f
 10061  1226  0DF8               	rlf	___awdiv@quotient+1,f
 10062  1227  0B89               	decfsz	9,f
 10063  1228  2A25               	goto	u3475
 10064  1229  0871               	movf	___awdiv@divisor+1,w
 10065  122A  0273               	subwf	___awdiv@dividend+1,w
 10066  122B  1D03               	skipz
 10067  122C  2A2F               	goto	u3485
 10068  122D  0870               	movf	___awdiv@divisor,w
 10069  122E  0272               	subwf	___awdiv@dividend,w
 10070  122F                     u3485:
 10071  122F  1C03               	skipc
 10072  1230  2A32               	goto	u3481
 10073  1231  2A33               	goto	u3480
 10074  1232                     u3481:
 10075  1232  2A38               	goto	l2815
 10076  1233                     u3480:
 10077  1233                     l2811:
 10078  1233  0870               	movf	___awdiv@divisor,w
 10079  1234  02F2               	subwf	___awdiv@dividend,f
 10080  1235  0871               	movf	___awdiv@divisor+1,w
 10081  1236  3BF3               	subwfb	___awdiv@dividend+1,f
 10082  1237                     l2813:
 10083  1237  1477               	bsf	___awdiv@quotient,0
 10084  1238                     l2815:
 10085  1238  3001               	movlw	1
 10086  1239                     u3495:
 10087  1239  36F1               	lsrf	___awdiv@divisor+1,f
 10088  123A  0CF0               	rrf	___awdiv@divisor,f
 10089  123B  0B89               	decfsz	9,f
 10090  123C  2A39               	goto	u3495
 10091  123D                     l2817:
 10092  123D  3001               	movlw	1
 10093  123E  02F5               	subwf	___awdiv@counter,f
 10094  123F  1D03               	btfss	3,2
 10095  1240  2A42               	goto	u3501
 10096  1241  2A43               	goto	u3500
 10097  1242                     u3501:
 10098  1242  2A24               	goto	l2809
 10099  1243                     u3500:
 10100  1243                     l2819:
 10101  1243  0876               	movf	___awdiv@sign,w
 10102  1244  1903               	btfsc	3,2
 10103  1245  2A47               	goto	u3511
 10104  1246  2A48               	goto	u3510
 10105  1247                     u3511:
 10106  1247  2A4D               	goto	l2823
 10107  1248                     u3510:
 10108  1248                     l2821:
 10109  1248  09F7               	comf	___awdiv@quotient,f
 10110  1249  09F8               	comf	___awdiv@quotient+1,f
 10111  124A  0AF7               	incf	___awdiv@quotient,f
 10112  124B  1903               	skipnz
 10113  124C  0AF8               	incf	___awdiv@quotient+1,f
 10114  124D                     l2823:
 10115  124D  0878               	movf	___awdiv@quotient+1,w
 10116  124E  00F1               	movwf	?___awdiv+1
 10117  124F  0877               	movf	___awdiv@quotient,w
 10118  1250  00F0               	movwf	?___awdiv
 10119  1251                     l339:
 10120  1251  0008               	return
 10121  1252                     __end_of___awdiv:
 10122                           
 10123                           	psect	text26
 10124  135C                     __ptext26:	
 10125 ;; *************** function _atoi *****************
 10126 ;; Defined at:
 10127 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\atoi.c"
 10128 ;; Parameters:    Size  Location     Type
 10129 ;;  s               2    6[COMMON] PTR const unsigned char 
 10130 ;;		 -> STR_3(6), 
 10131 ;; Auto vars:     Size  Location     Type
 10132 ;;  n               2    2[BANK0 ] int 
 10133 ;;  neg             2    0[BANK0 ] int 
 10134 ;; Return value:  Size  Location     Type
 10135 ;;                  2    6[COMMON] int 
 10136 ;; Registers used:
 10137 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
 10138 ;; Tracked objects:
 10139 ;;		On entry : 0/0
 10140 ;;		On exit  : 0/0
 10141 ;;		Unchanged: 0/0
 10142 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
 10143 ;;      Params:         2       0       0       0       0       0       0       0
 10144 ;;      Locals:         0       4       0       0       0       0       0       0
 10145 ;;      Temps:          3       0       0       0       0       0       0       0
 10146 ;;      Totals:         5       4       0       0       0       0       0       0
 10147 ;;Total ram usage:        9 bytes
 10148 ;; Hardware stack levels used: 1
 10149 ;; Hardware stack levels required when called: 1
 10150 ;; This function calls:
 10151 ;;		___wmul
 10152 ;;		_isdigit
 10153 ;;		_isspace
 10154 ;; This function is called by:
 10155 ;;		_vfpfcnvrt
 10156 ;; This function uses a non-reentrant model
 10157 ;;
 10158                           
 10159  135C                     _atoi:	
 10160                           ;psect for function _atoi
 10161                           
 10162  135C                     l3631:	
 10163                           ;incstack = 0
 10164                           ; Regs used in _atoi: [wreg-fsr0h+status,2+status,0+pclath+cstack]
 10165                           
 10166  135C  0020               	movlb	0	; select bank0
 10167  135D  01A2               	clrf	atoi@n
 10168  135E  01A3               	clrf	atoi@n+1
 10169  135F  01A0               	clrf	atoi@neg
 10170  1360  01A1               	clrf	atoi@neg+1
 10171  1361  2B66               	goto	l3637
 10172  1362                     l3633:
 10173  1362  3001               	movlw	1
 10174  1363  07F6               	addwf	atoi@s,f
 10175  1364  3000               	movlw	0
 10176  1365  3DF7               	addwfc	atoi@s+1,f
 10177  1366                     l3637:
 10178  1366  0876               	movf	atoi@s,w
 10179  1367  0084               	movwf	4
 10180  1368  0877               	movf	atoi@s+1,w
 10181  1369  0085               	movwf	5
 10182  136A  0012               	moviw fsr0++
 10183  136B  3A20               	xorlw	32
 10184  136C  1903               	btfsc	3,2
 10185  136D  2B6F               	goto	u5121
 10186  136E  2B70               	goto	u5120
 10187  136F                     u5121:
 10188  136F  2B62               	goto	l3633
 10189  1370                     u5120:
 10190  1370                     l3639:
 10191  1370  0876               	movf	atoi@s,w
 10192  1371  0084               	movwf	4
 10193  1372  0877               	movf	atoi@s+1,w
 10194  1373  0085               	movwf	5
 10195  1374  0800               	movf	0,w	;code access
 10196  1375  3EF7               	addlw	247
 10197  1376  00F8               	movwf	??_atoi
 10198  1377  30FF               	movlw	255
 10199  1378  1803               	skipnc
 10200  1379  3000               	movlw	0
 10201  137A  00F9               	movwf	??_atoi+1
 10202  137B  3000               	movlw	0
 10203  137C  0279               	subwf	??_atoi+1,w
 10204  137D  3005               	movlw	5
 10205  137E  1903               	skipnz
 10206  137F  0278               	subwf	??_atoi,w
 10207  1380  1C03               	skipc
 10208  1381  2B83               	goto	u5131
 10209  1382  2B84               	goto	u5130
 10210  1383                     u5131:
 10211  1383  2B62               	goto	l3633
 10212  1384                     u5130:
 10213  1384  2B8F               	goto	l3643
 10214  1385                     l3641:
 10215  1385  3001               	movlw	1
 10216  1386  0020               	movlb	0	; select bank0
 10217  1387  00A0               	movwf	atoi@neg
 10218  1388  3000               	movlw	0
 10219  1389  00A1               	movwf	atoi@neg+1
 10220  138A                     l846:
 10221  138A  3001               	movlw	1
 10222  138B  07F6               	addwf	atoi@s,f
 10223  138C  3000               	movlw	0
 10224  138D  3DF7               	addwfc	atoi@s+1,f
 10225  138E  2BC4               	goto	l3651
 10226  138F                     l3643:
 10227  138F  0876               	movf	atoi@s,w
 10228  1390  0084               	movwf	4
 10229  1391  0877               	movf	atoi@s+1,w
 10230  1392  0085               	movwf	5
 10231  1393  0800               	movf	0,w	;code access
 10232  1394  00F8               	movwf	??_atoi
 10233  1395  01F9               	clrf	??_atoi+1
 10234                           
 10235                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 10236                           ; Switch size 1, requested type "simple"
 10237                           ; Number of cases is 1, Range of values is 0 to 0
 10238                           ; switch strategies available:
 10239                           ; Name         Instructions Cycles
 10240                           ; simple_byte            4     3 (average)
 10241                           ; direct_byte            8     6 (fixed)
 10242                           ; jumptable            260     6 (fixed)
 10243                           ;	Chosen strategy is simple_byte
 10244  1396  0879               	movf	??_atoi+1,w
 10245  1397  3A00               	xorlw	0	; case 0
 10246  1398  1903               	skipnz
 10247  1399  2B9B               	goto	l4101
 10248  139A  2BC4               	goto	l3651
 10249  139B                     l4101:
 10250                           
 10251                           ; Switch size 1, requested type "simple"
 10252                           ; Number of cases is 2, Range of values is 43 to 45
 10253                           ; switch strategies available:
 10254                           ; Name         Instructions Cycles
 10255                           ; simple_byte            7     4 (average)
 10256                           ; direct_byte           15     9 (fixed)
 10257                           ; jumptable            263     9 (fixed)
 10258                           ;	Chosen strategy is simple_byte
 10259  139B  0878               	movf	??_atoi,w
 10260  139C  3A2B               	xorlw	43	; case 43
 10261  139D  1903               	skipnz
 10262  139E  2B8A               	goto	l846
 10263  139F  3A06               	xorlw	6	; case 45
 10264  13A0  1903               	skipnz
 10265  13A1  2B85               	goto	l3641
 10266  13A2  2BC4               	goto	l3651
 10267  13A3                     l3645:
 10268  13A3  0876               	movf	atoi@s,w
 10269  13A4  0084               	movwf	4
 10270  13A5  0877               	movf	atoi@s+1,w
 10271  13A6  0085               	movwf	5
 10272  13A7  0800               	movf	0,w	;code access
 10273  13A8  00F8               	movwf	??_atoi
 10274  13A9  0020               	movlb	0	; select bank0
 10275  13AA  0823               	movf	atoi@n+1,w
 10276  13AB  00F1               	movwf	___wmul@multiplier+1
 10277  13AC  0822               	movf	atoi@n,w
 10278  13AD  00F0               	movwf	___wmul@multiplier
 10279  13AE  300A               	movlw	10
 10280  13AF  00F2               	movwf	___wmul@multiplicand
 10281  13B0  3000               	movlw	0
 10282  13B1  00F3               	movwf	___wmul@multiplicand+1
 10283  13B2  319E  2623  3193   	fcall	___wmul
 10284  13B5  0871               	movf	?___wmul+1,w
 10285  13B6  00FA               	movwf	??_atoi+2
 10286  13B7  0878               	movf	??_atoi,w
 10287  13B8  0270               	subwf	?___wmul,w
 10288  13B9  00F9               	movwf	??_atoi+1
 10289  13BA  1C03               	skipc
 10290  13BB  03FA               	decf	??_atoi+2,f
 10291  13BC  0879               	movf	??_atoi+1,w
 10292  13BD  3E30               	addlw	48
 10293  13BE  0020               	movlb	0	; select bank0
 10294  13BF  00A2               	movwf	atoi@n
 10295  13C0  3000               	movlw	0
 10296  13C1  3D7A               	addwfc	??_atoi+2,w
 10297  13C2  00A3               	movwf	atoi@n+1
 10298  13C3  2B8A               	goto	l846
 10299  13C4                     l3651:
 10300  13C4  0876               	movf	atoi@s,w
 10301  13C5  0084               	movwf	4
 10302  13C6  0877               	movf	atoi@s+1,w
 10303  13C7  0085               	movwf	5
 10304  13C8  0800               	movf	0,w	;code access
 10305  13C9  3ED0               	addlw	208
 10306  13CA  00F8               	movwf	??_atoi
 10307  13CB  30FF               	movlw	255
 10308  13CC  1803               	skipnc
 10309  13CD  3000               	movlw	0
 10310  13CE  00F9               	movwf	??_atoi+1
 10311  13CF  3000               	movlw	0
 10312  13D0  0279               	subwf	??_atoi+1,w
 10313  13D1  300A               	movlw	10
 10314  13D2  1903               	skipnz
 10315  13D3  0278               	subwf	??_atoi,w
 10316  13D4  1C03               	skipc
 10317  13D5  2BD7               	goto	u5141
 10318  13D6  2BD8               	goto	u5140
 10319  13D7                     u5141:
 10320  13D7  2BA3               	goto	l3645
 10321  13D8                     u5140:
 10322  13D8                     l3653:
 10323  13D8  0020               	movlb	0	; select bank0
 10324  13D9  0820               	movf	atoi@neg,w
 10325  13DA  0421               	iorwf	atoi@neg+1,w
 10326  13DB  1D03               	btfss	3,2
 10327  13DC  2BDE               	goto	u5151
 10328  13DD  2BDF               	goto	u5150
 10329  13DE                     u5151:
 10330  13DE  2BEB               	goto	l3657
 10331  13DF                     u5150:
 10332  13DF                     l3655:
 10333  13DF  0922               	comf	atoi@n,w
 10334  13E0  00F8               	movwf	??_atoi
 10335  13E1  0923               	comf	atoi@n+1,w
 10336  13E2  00F9               	movwf	??_atoi+1
 10337  13E3  0AF8               	incf	??_atoi,f
 10338  13E4  1903               	skipnz
 10339  13E5  0AF9               	incf	??_atoi+1,f
 10340  13E6  0878               	movf	??_atoi,w
 10341  13E7  00F6               	movwf	?_atoi
 10342  13E8  0879               	movf	??_atoi+1,w
 10343  13E9  00F7               	movwf	?_atoi+1
 10344  13EA  2BEF               	goto	l857
 10345  13EB                     l3657:
 10346  13EB  0823               	movf	atoi@n+1,w
 10347  13EC  00F7               	movwf	?_atoi+1
 10348  13ED  0822               	movf	atoi@n,w
 10349  13EE  00F6               	movwf	?_atoi
 10350  13EF                     l857:
 10351  13EF  0008               	return
 10352  13F0                     __end_of_atoi:
 10353                           
 10354                           	psect	text27
 10355  1EA2                     __ptext27:	
 10356 ;; *************** function _isspace *****************
 10357 ;; Defined at:
 10358 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\isspace.c"
 10359 ;; Parameters:    Size  Location     Type
 10360 ;;  c               2    0[COMMON] int 
 10361 ;; Auto vars:     Size  Location     Type
 10362 ;;		None
 10363 ;; Return value:  Size  Location     Type
 10364 ;;                  2    0[COMMON] int 
 10365 ;; Registers used:
 10366 ;;		wreg, status,2, status,0
 10367 ;; Tracked objects:
 10368 ;;		On entry : 0/0
 10369 ;;		On exit  : 0/0
 10370 ;;		Unchanged: 0/0
 10371 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
 10372 ;;      Params:         2       0       0       0       0       0       0       0
 10373 ;;      Locals:         1       0       0       0       0       0       0       0
 10374 ;;      Temps:          2       0       0       0       0       0       0       0
 10375 ;;      Totals:         5       0       0       0       0       0       0       0
 10376 ;;Total ram usage:        5 bytes
 10377 ;; Hardware stack levels used: 1
 10378 ;; This function calls:
 10379 ;;		Nothing
 10380 ;; This function is called by:
 10381 ;;		_atoi
 10382 ;; This function uses a non-reentrant model
 10383 ;;
 10384                           
 10385  1EA2                     _isspace:	
 10386                           ;psect for function _isspace
 10387                           
 10388  1EA2                     l3321:	
 10389                           ;incstack = 0
 10390                           ; Regs used in _isspace: [wreg+status,2+status,0]
 10391                           
 10392  1EA2  01F4               	clrf	_isspace$816
 10393  1EA3  0AF4               	incf	_isspace$816,f
 10394  1EA4                     l3323:
 10395  1EA4  3020               	movlw	32
 10396  1EA5  0670               	xorwf	isspace@c,w
 10397  1EA6  0471               	iorwf	isspace@c+1,w
 10398  1EA7  1903               	btfsc	3,2
 10399  1EA8  2EAA               	goto	u4621
 10400  1EA9  2EAB               	goto	u4620
 10401  1EAA                     u4621:
 10402  1EAA  2EBB               	goto	l3329
 10403  1EAB                     u4620:
 10404  1EAB                     l3325:
 10405  1EAB  0870               	movf	isspace@c,w
 10406  1EAC  3EF7               	addlw	247
 10407  1EAD  00F2               	movwf	??_isspace
 10408  1EAE  30FF               	movlw	255
 10409  1EAF  3D71               	addwfc	isspace@c+1,w
 10410  1EB0  00F3               	movwf	??_isspace+1
 10411  1EB1  3000               	movlw	0
 10412  1EB2  0273               	subwf	??_isspace+1,w
 10413  1EB3  3005               	movlw	5
 10414  1EB4  1903               	skipnz
 10415  1EB5  0272               	subwf	??_isspace,w
 10416  1EB6  1C03               	skipc
 10417  1EB7  2EB9               	goto	u4631
 10418  1EB8  2EBA               	goto	u4630
 10419  1EB9                     u4631:
 10420  1EB9  2EBB               	goto	l3329
 10421  1EBA                     u4630:
 10422  1EBA                     l3327:
 10423  1EBA  01F4               	clrf	_isspace$816
 10424  1EBB                     l3329:
 10425  1EBB  0874               	movf	_isspace$816,w
 10426  1EBC  00F2               	movwf	??_isspace
 10427  1EBD  01F3               	clrf	??_isspace+1
 10428  1EBE  0872               	movf	??_isspace,w
 10429  1EBF  00F0               	movwf	?_isspace
 10430  1EC0  0873               	movf	??_isspace+1,w
 10431  1EC1  00F1               	movwf	?_isspace+1
 10432  1EC2                     l881:
 10433  1EC2  0008               	return
 10434  1EC3                     __end_of_isspace:
 10435                           
 10436                           	psect	text28
 10437  1D9E                     __ptext28:	
 10438 ;; *************** function _isdigit *****************
 10439 ;; Defined at:
 10440 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\isdigit.c"
 10441 ;; Parameters:    Size  Location     Type
 10442 ;;  c               2    0[COMMON] int 
 10443 ;; Auto vars:     Size  Location     Type
 10444 ;;		None
 10445 ;; Return value:  Size  Location     Type
 10446 ;;                  2    0[COMMON] int 
 10447 ;; Registers used:
 10448 ;;		wreg, status,2, status,0
 10449 ;; Tracked objects:
 10450 ;;		On entry : 0/0
 10451 ;;		On exit  : 0/0
 10452 ;;		Unchanged: 0/0
 10453 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
 10454 ;;      Params:         2       0       0       0       0       0       0       0
 10455 ;;      Locals:         0       0       0       0       0       0       0       0
 10456 ;;      Temps:          4       0       0       0       0       0       0       0
 10457 ;;      Totals:         6       0       0       0       0       0       0       0
 10458 ;;Total ram usage:        6 bytes
 10459 ;; Hardware stack levels used: 1
 10460 ;; This function calls:
 10461 ;;		Nothing
 10462 ;; This function is called by:
 10463 ;;		_vfpfcnvrt
 10464 ;;		_atoi
 10465 ;; This function uses a non-reentrant model
 10466 ;;
 10467                           
 10468  1D9E                     _isdigit:	
 10469                           ;psect for function _isdigit
 10470                           
 10471  1D9E                     l3317:	
 10472                           ;incstack = 0
 10473                           ; Regs used in _isdigit: [wreg+status,2+status,0]
 10474                           
 10475  1D9E  0870               	movf	isdigit@c,w
 10476  1D9F  3ED0               	addlw	208
 10477  1DA0  00F2               	movwf	??_isdigit
 10478  1DA1  30FF               	movlw	255
 10479  1DA2  3D71               	addwfc	isdigit@c+1,w
 10480  1DA3  00F3               	movwf	??_isdigit+1
 10481  1DA4  3000               	movlw	0
 10482  1DA5  0273               	subwf	??_isdigit+1,w
 10483  1DA6  300A               	movlw	10
 10484  1DA7  1903               	skipnz
 10485  1DA8  0272               	subwf	??_isdigit,w
 10486  1DA9  1C03               	skipc
 10487  1DAA  2DAC               	goto	u4601
 10488  1DAB  2DAE               	goto	u4600
 10489  1DAC                     u4601:
 10490  1DAC  3001               	movlw	1
 10491  1DAD  2DAF               	goto	u4610
 10492  1DAE                     u4600:
 10493  1DAE  3000               	movlw	0
 10494  1DAF                     u4610:
 10495  1DAF  00F4               	movwf	??_isdigit+2
 10496  1DB0  01F5               	clrf	??_isdigit+3
 10497  1DB1  0874               	movf	??_isdigit+2,w
 10498  1DB2  00F0               	movwf	?_isdigit
 10499  1DB3  0875               	movf	??_isdigit+3,w
 10500  1DB4  00F1               	movwf	?_isdigit+1
 10501  1DB5                     l873:
 10502  1DB5  0008               	return
 10503  1DB6                     __end_of_isdigit:
 10504                           
 10505                           	psect	text29
 10506  1E23                     __ptext29:	
 10507 ;; *************** function ___wmul *****************
 10508 ;; Defined at:
 10509 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\Umul16.c"
 10510 ;; Parameters:    Size  Location     Type
 10511 ;;  multiplier      2    0[COMMON] unsigned int 
 10512 ;;  multiplicand    2    2[COMMON] unsigned int 
 10513 ;; Auto vars:     Size  Location     Type
 10514 ;;  product         2    4[COMMON] unsigned int 
 10515 ;; Return value:  Size  Location     Type
 10516 ;;                  2    0[COMMON] unsigned int 
 10517 ;; Registers used:
 10518 ;;		wreg, status,2, status,0
 10519 ;; Tracked objects:
 10520 ;;		On entry : 0/0
 10521 ;;		On exit  : 0/0
 10522 ;;		Unchanged: 0/0
 10523 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
 10524 ;;      Params:         4       0       0       0       0       0       0       0
 10525 ;;      Locals:         2       0       0       0       0       0       0       0
 10526 ;;      Temps:          0       0       0       0       0       0       0       0
 10527 ;;      Totals:         6       0       0       0       0       0       0       0
 10528 ;;Total ram usage:        6 bytes
 10529 ;; Hardware stack levels used: 1
 10530 ;; This function calls:
 10531 ;;		Nothing
 10532 ;; This function is called by:
 10533 ;;		_atoi
 10534 ;; This function uses a non-reentrant model
 10535 ;;
 10536                           
 10537  1E23                     ___wmul:	
 10538                           ;psect for function ___wmul
 10539                           
 10540  1E23                     l2769:	
 10541                           ;incstack = 0
 10542                           ; Regs used in ___wmul: [wreg+status,2+status,0]
 10543                           
 10544  1E23  01F4               	clrf	___wmul@product
 10545  1E24  01F5               	clrf	___wmul@product+1
 10546  1E25                     l2771:
 10547  1E25  1C70               	btfss	___wmul@multiplier,0
 10548  1E26  2E28               	goto	u3381
 10549  1E27  2E29               	goto	u3380
 10550  1E28                     u3381:
 10551  1E28  2E2D               	goto	l186
 10552  1E29                     u3380:
 10553  1E29                     l2773:
 10554  1E29  0872               	movf	___wmul@multiplicand,w
 10555  1E2A  07F4               	addwf	___wmul@product,f
 10556  1E2B  0873               	movf	___wmul@multiplicand+1,w
 10557  1E2C  3DF5               	addwfc	___wmul@product+1,f
 10558  1E2D                     l186:
 10559  1E2D  3001               	movlw	1
 10560  1E2E                     u3395:
 10561  1E2E  35F2               	lslf	___wmul@multiplicand,f
 10562  1E2F  0DF3               	rlf	___wmul@multiplicand+1,f
 10563  1E30  0B89               	decfsz	9,f
 10564  1E31  2E2E               	goto	u3395
 10565  1E32                     l2775:
 10566  1E32  3001               	movlw	1
 10567  1E33                     u3405:
 10568  1E33  36F1               	lsrf	___wmul@multiplier+1,f
 10569  1E34  0CF0               	rrf	___wmul@multiplier,f
 10570  1E35  0B89               	decfsz	9,f
 10571  1E36  2E33               	goto	u3405
 10572  1E37                     l2777:
 10573  1E37  0870               	movf	___wmul@multiplier,w
 10574  1E38  0471               	iorwf	___wmul@multiplier+1,w
 10575  1E39  1D03               	btfss	3,2
 10576  1E3A  2E3C               	goto	u3411
 10577  1E3B  2E3D               	goto	u3410
 10578  1E3C                     u3411:
 10579  1E3C  2E25               	goto	l2771
 10580  1E3D                     u3410:
 10581  1E3D                     l2779:
 10582  1E3D  0875               	movf	___wmul@product+1,w
 10583  1E3E  00F1               	movwf	?___wmul+1
 10584  1E3F  0874               	movf	___wmul@product,w
 10585  1E40  00F0               	movwf	?___wmul
 10586  1E41                     l188:
 10587  1E41  0008               	return
 10588  1E42                     __end_of___wmul:
 10589                           
 10590                           	psect	text30
 10591  0836                     __ptext30:	
 10592 ;; *************** function ___xxtofl *****************
 10593 ;; Defined at:
 10594 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\xxtofl.c"
 10595 ;; Parameters:    Size  Location     Type
 10596 ;;  sign            1    wreg     unsigned char 
 10597 ;;  val             4    0[COMMON] long 
 10598 ;; Auto vars:     Size  Location     Type
 10599 ;;  sign            1    8[COMMON] unsigned char 
 10600 ;;  arg             4   10[COMMON] unsigned long 
 10601 ;;  exp             1    9[COMMON] unsigned char 
 10602 ;; Return value:  Size  Location     Type
 10603 ;;                  4    0[COMMON] unsigned char 
 10604 ;; Registers used:
 10605 ;;		wreg, status,2, status,0
 10606 ;; Tracked objects:
 10607 ;;		On entry : 0/0
 10608 ;;		On exit  : 0/0
 10609 ;;		Unchanged: 0/0
 10610 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
 10611 ;;      Params:         4       0       0       0       0       0       0       0
 10612 ;;      Locals:         6       0       0       0       0       0       0       0
 10613 ;;      Temps:          4       0       0       0       0       0       0       0
 10614 ;;      Totals:        14       0       0       0       0       0       0       0
 10615 ;;Total ram usage:       14 bytes
 10616 ;; Hardware stack levels used: 1
 10617 ;; This function calls:
 10618 ;;		Nothing
 10619 ;; This function is called by:
 10620 ;;		_main
 10621 ;; This function uses a non-reentrant model
 10622 ;;
 10623                           
 10624  0836                     ___xxtofl:	
 10625                           ;psect for function ___xxtofl
 10626                           
 10627                           
 10628                           ;incstack = 0
 10629                           ; Regs used in ___xxtofl: [wreg+status,2+status,0]
 10630                           ;___xxtofl@sign stored from wreg
 10631  0836  00F8               	movwf	___xxtofl@sign
 10632  0837                     l3943:
 10633  0837  0878               	movf	___xxtofl@sign,w
 10634  0838  1903               	btfsc	3,2
 10635  0839  283B               	goto	u5471
 10636  083A  283C               	goto	u5470
 10637  083B                     u5471:
 10638  083B  2850               	goto	l3949
 10639  083C                     u5470:
 10640  083C                     l3945:
 10641  083C  1FF3               	btfss	___xxtofl@val+3,7
 10642  083D  283F               	goto	u5481
 10643  083E  2840               	goto	u5480
 10644  083F                     u5481:
 10645  083F  2850               	goto	l3949
 10646  0840                     u5480:
 10647  0840                     l3947:
 10648  0840  0970               	comf	___xxtofl@val,w
 10649  0841  00FA               	movwf	___xxtofl@arg
 10650  0842  0971               	comf	___xxtofl@val+1,w
 10651  0843  00FB               	movwf	___xxtofl@arg+1
 10652  0844  0972               	comf	___xxtofl@val+2,w
 10653  0845  00FC               	movwf	___xxtofl@arg+2
 10654  0846  0973               	comf	___xxtofl@val+3,w
 10655  0847  00FD               	movwf	___xxtofl@arg+3
 10656  0848  0AFA               	incf	___xxtofl@arg,f
 10657  0849  1903               	skipnz
 10658  084A  0AFB               	incf	___xxtofl@arg+1,f
 10659  084B  1903               	skipnz
 10660  084C  0AFC               	incf	___xxtofl@arg+2,f
 10661  084D  1903               	skipnz
 10662  084E  0AFD               	incf	___xxtofl@arg+3,f
 10663  084F  2858               	goto	l627
 10664  0850                     l3949:
 10665  0850  0873               	movf	___xxtofl@val+3,w
 10666  0851  00FD               	movwf	___xxtofl@arg+3
 10667  0852  0872               	movf	___xxtofl@val+2,w
 10668  0853  00FC               	movwf	___xxtofl@arg+2
 10669  0854  0871               	movf	___xxtofl@val+1,w
 10670  0855  00FB               	movwf	___xxtofl@arg+1
 10671  0856  0870               	movf	___xxtofl@val,w
 10672  0857  00FA               	movwf	___xxtofl@arg
 10673  0858                     l627:
 10674  0858  0873               	movf	___xxtofl@val+3,w
 10675  0859  0472               	iorwf	___xxtofl@val+2,w
 10676  085A  0471               	iorwf	___xxtofl@val+1,w
 10677  085B  0470               	iorwf	___xxtofl@val,w
 10678  085C  1D03               	skipz
 10679  085D  285F               	goto	u5491
 10680  085E  2860               	goto	u5490
 10681  085F                     u5491:
 10682  085F  2869               	goto	l3955
 10683  0860                     u5490:
 10684  0860                     l3951:
 10685  0860  3000               	movlw	0
 10686  0861  00F3               	movwf	?___xxtofl+3
 10687  0862  3000               	movlw	0
 10688  0863  00F2               	movwf	?___xxtofl+2
 10689  0864  3000               	movlw	0
 10690  0865  00F1               	movwf	?___xxtofl+1
 10691  0866  3000               	movlw	0
 10692  0867  00F0               	movwf	?___xxtofl
 10693  0868  28E1               	goto	l629
 10694  0869                     l3955:
 10695  0869  3096               	movlw	150
 10696  086A  00F4               	movwf	??___xxtofl
 10697  086B  0874               	movf	??___xxtofl,w
 10698  086C  00F9               	movwf	___xxtofl@exp
 10699  086D  2879               	goto	l3959
 10700  086E                     l3957:
 10701  086E  3001               	movlw	1
 10702  086F  00F4               	movwf	??___xxtofl
 10703  0870  0874               	movf	??___xxtofl,w
 10704  0871  07F9               	addwf	___xxtofl@exp,f
 10705  0872  3001               	movlw	1
 10706  0873                     u5505:
 10707  0873  36FD               	lsrf	___xxtofl@arg+3,f
 10708  0874  0CFC               	rrf	___xxtofl@arg+2,f
 10709  0875  0CFB               	rrf	___xxtofl@arg+1,f
 10710  0876  0CFA               	rrf	___xxtofl@arg,f
 10711  0877  0B89               	decfsz	9,f
 10712  0878  2873               	goto	u5505
 10713  0879                     l3959:
 10714  0879  30FE               	movlw	254
 10715  087A  057D               	andwf	___xxtofl@arg+3,w
 10716  087B  1D03               	btfss	3,2
 10717  087C  287E               	goto	u5511
 10718  087D  287F               	goto	u5510
 10719  087E                     u5511:
 10720  087E  286E               	goto	l3957
 10721  087F                     u5510:
 10722  087F  2893               	goto	l633
 10723  0880                     l3961:
 10724  0880  3001               	movlw	1
 10725  0881  00F4               	movwf	??___xxtofl
 10726  0882  0874               	movf	??___xxtofl,w
 10727  0883  07F9               	addwf	___xxtofl@exp,f
 10728  0884                     l3963:
 10729  0884  3001               	movlw	1
 10730  0885  07FA               	addwf	___xxtofl@arg,f
 10731  0886  3000               	movlw	0
 10732  0887  3DFB               	addwfc	___xxtofl@arg+1,f
 10733  0888  3000               	movlw	0
 10734  0889  3DFC               	addwfc	___xxtofl@arg+2,f
 10735  088A  3000               	movlw	0
 10736  088B  3DFD               	addwfc	___xxtofl@arg+3,f
 10737  088C                     l3965:
 10738  088C  3001               	movlw	1
 10739  088D                     u5525:
 10740  088D  36FD               	lsrf	___xxtofl@arg+3,f
 10741  088E  0CFC               	rrf	___xxtofl@arg+2,f
 10742  088F  0CFB               	rrf	___xxtofl@arg+1,f
 10743  0890  0CFA               	rrf	___xxtofl@arg,f
 10744  0891  0B89               	decfsz	9,f
 10745  0892  288D               	goto	u5525
 10746  0893                     l633:
 10747  0893  30FF               	movlw	255
 10748  0894  057D               	andwf	___xxtofl@arg+3,w
 10749  0895  1D03               	btfss	3,2
 10750  0896  2898               	goto	u5531
 10751  0897  2899               	goto	u5530
 10752  0898                     u5531:
 10753  0898  2880               	goto	l3961
 10754  0899                     u5530:
 10755  0899  28A3               	goto	l3969
 10756  089A                     l3967:
 10757  089A  3001               	movlw	1
 10758  089B  02F9               	subwf	___xxtofl@exp,f
 10759  089C  3001               	movlw	1
 10760  089D                     u5545:
 10761  089D  35FA               	lslf	___xxtofl@arg,f
 10762  089E  0DFB               	rlf	___xxtofl@arg+1,f
 10763  089F  0DFC               	rlf	___xxtofl@arg+2,f
 10764  08A0  0DFD               	rlf	___xxtofl@arg+3,f
 10765  08A1  0B89               	decfsz	9,f
 10766  08A2  289D               	goto	u5545
 10767  08A3                     l3969:
 10768  08A3  1BFC               	btfsc	___xxtofl@arg+2,7
 10769  08A4  28A6               	goto	u5551
 10770  08A5  28A7               	goto	u5550
 10771  08A6                     u5551:
 10772  08A6  28AD               	goto	l640
 10773  08A7                     u5550:
 10774  08A7                     l3971:
 10775  08A7  3002               	movlw	2
 10776  08A8  0279               	subwf	___xxtofl@exp,w
 10777  08A9  1803               	skipnc
 10778  08AA  28AC               	goto	u5561
 10779  08AB  28AD               	goto	u5560
 10780  08AC                     u5561:
 10781  08AC  289A               	goto	l3967
 10782  08AD                     u5560:
 10783  08AD                     l640:
 10784  08AD  1879               	btfsc	___xxtofl@exp,0
 10785  08AE  28B0               	goto	u5571
 10786  08AF  28B1               	goto	u5570
 10787  08B0                     u5571:
 10788  08B0  28B9               	goto	l641
 10789  08B1                     u5570:
 10790  08B1                     l3973:
 10791  08B1  30FF               	movlw	255
 10792  08B2  05FA               	andwf	___xxtofl@arg,f
 10793  08B3  30FF               	movlw	255
 10794  08B4  05FB               	andwf	___xxtofl@arg+1,f
 10795  08B5  307F               	movlw	127
 10796  08B6  05FC               	andwf	___xxtofl@arg+2,f
 10797  08B7  30FF               	movlw	255
 10798  08B8  05FD               	andwf	___xxtofl@arg+3,f
 10799  08B9                     l641:
 10800  08B9  1003               	clrc
 10801  08BA  0CF9               	rrf	___xxtofl@exp,f
 10802  08BB                     l3975:
 10803  08BB  0879               	movf	___xxtofl@exp,w
 10804  08BC  00F4               	movwf	??___xxtofl
 10805  08BD  01F5               	clrf	??___xxtofl+1
 10806  08BE  01F6               	clrf	??___xxtofl+2
 10807  08BF  01F7               	clrf	??___xxtofl+3
 10808  08C0  3018               	movlw	24
 10809  08C1                     u5585:
 10810  08C1  35F4               	lslf	??___xxtofl,f
 10811  08C2  0DF5               	rlf	??___xxtofl+1,f
 10812  08C3  0DF6               	rlf	??___xxtofl+2,f
 10813  08C4  0DF7               	rlf	??___xxtofl+3,f
 10814  08C5                     u5580:
 10815  08C5  0B89               	decfsz	9,f
 10816  08C6  28C1               	goto	u5585
 10817  08C7  0874               	movf	??___xxtofl,w
 10818  08C8  04FA               	iorwf	___xxtofl@arg,f
 10819  08C9  0875               	movf	??___xxtofl+1,w
 10820  08CA  04FB               	iorwf	___xxtofl@arg+1,f
 10821  08CB  0876               	movf	??___xxtofl+2,w
 10822  08CC  04FC               	iorwf	___xxtofl@arg+2,f
 10823  08CD  0877               	movf	??___xxtofl+3,w
 10824  08CE  04FD               	iorwf	___xxtofl@arg+3,f
 10825  08CF                     l3977:
 10826  08CF  0878               	movf	___xxtofl@sign,w
 10827  08D0  1903               	btfsc	3,2
 10828  08D1  28D3               	goto	u5591
 10829  08D2  28D4               	goto	u5590
 10830  08D3                     u5591:
 10831  08D3  28D9               	goto	l3983
 10832  08D4                     u5590:
 10833  08D4                     l3979:
 10834  08D4  1FF3               	btfss	___xxtofl@val+3,7
 10835  08D5  28D7               	goto	u5601
 10836  08D6  28D8               	goto	u5600
 10837  08D7                     u5601:
 10838  08D7  28D9               	goto	l3983
 10839  08D8                     u5600:
 10840  08D8                     l3981:
 10841  08D8  17FD               	bsf	___xxtofl@arg+3,7
 10842  08D9                     l3983:
 10843  08D9  087D               	movf	___xxtofl@arg+3,w
 10844  08DA  00F3               	movwf	?___xxtofl+3
 10845  08DB  087C               	movf	___xxtofl@arg+2,w
 10846  08DC  00F2               	movwf	?___xxtofl+2
 10847  08DD  087B               	movf	___xxtofl@arg+1,w
 10848  08DE  00F1               	movwf	?___xxtofl+1
 10849  08DF  087A               	movf	___xxtofl@arg,w
 10850  08E0  00F0               	movwf	?___xxtofl
 10851  08E1                     l629:
 10852  08E1  0008               	return
 10853  08E2                     __end_of___xxtofl:
 10854                           
 10855                           	psect	text31
 10856  1E62                     __ptext31:	
 10857 ;; *************** function _LCD_Initialize *****************
 10858 ;; Defined at:
 10859 ;;		line 47 in file "lcd.c"
 10860 ;; Parameters:    Size  Location     Type
 10861 ;;		None
 10862 ;; Auto vars:     Size  Location     Type
 10863 ;;		None
 10864 ;; Return value:  Size  Location     Type
 10865 ;;                  1    wreg      void 
 10866 ;; Registers used:
 10867 ;;		wreg, status,2, status,0, pclath, cstack
 10868 ;; Tracked objects:
 10869 ;;		On entry : 0/0
 10870 ;;		On exit  : 0/0
 10871 ;;		Unchanged: 0/0
 10872 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
 10873 ;;      Params:         0       0       0       0       0       0       0       0
 10874 ;;      Locals:         0       0       0       0       0       0       0       0
 10875 ;;      Temps:          1       0       0       0       0       0       0       0
 10876 ;;      Totals:         1       0       0       0       0       0       0       0
 10877 ;;Total ram usage:        1 bytes
 10878 ;; Hardware stack levels used: 1
 10879 ;; Hardware stack levels required when called: 2
 10880 ;; This function calls:
 10881 ;;		_LCDPutCmd
 10882 ;; This function is called by:
 10883 ;;		_main
 10884 ;; This function uses a non-reentrant model
 10885 ;;
 10886                           
 10887  1E62                     _LCD_Initialize:	
 10888                           ;psect for function _LCD_Initialize
 10889                           
 10890  1E62                     l3853:	
 10891                           ;incstack = 0
 10892                           ; Regs used in _LCD_Initialize: [wreg+status,2+status,0+pclath+cstack]
 10893                           
 10894                           
 10895                           ;lcd.c: 50:     PORTC = 0;
 10896  1E62  0020               	movlb	0	; select bank0
 10897  1E63  018E               	clrf	14	;volatile
 10898                           
 10899                           ;lcd.c: 52:     TRISC = 0x00;
 10900  1E64  0021               	movlb	1	; select bank1
 10901  1E65  018E               	clrf	14	;volatile
 10902  1E66                     l3855:
 10903                           
 10904                           ;lcd.c: 58:     _delay((unsigned long)((15)*(1000000/4000.0)));
 10905  1E66  3005               	movlw	5
 10906  1E67  00F7               	movwf	??_LCD_Initialize
 10907  1E68  30DE               	movlw	222
 10908  1E69                     u5687:
 10909  1E69  0B89               	decfsz	9,f
 10910  1E6A  2E69               	goto	u5687
 10911  1E6B  0BF7               	decfsz	??_LCD_Initialize,f
 10912  1E6C  2E69               	goto	u5687
 10913  1E6D                     l3857:
 10914                           
 10915                           ;lcd.c: 61:     LCDPutCmd(0x32);
 10916  1E6D  3032               	movlw	50
 10917  1E6E  319E  2604  319E   	fcall	_LCDPutCmd
 10918  1E71                     l3859:
 10919                           
 10920                           ;lcd.c: 64:     LCDPutCmd(0x28);
 10921  1E71  3028               	movlw	40
 10922  1E72  319E  2604  319E   	fcall	_LCDPutCmd
 10923  1E75                     l3861:
 10924                           
 10925                           ;lcd.c: 67:     LCDPutCmd(0x0C);
 10926  1E75  300C               	movlw	12
 10927  1E76  319E  2604  319E   	fcall	_LCDPutCmd
 10928  1E79                     l3863:
 10929                           
 10930                           ;lcd.c: 69:     LCDPutCmd(0x01);
 10931  1E79  3001               	movlw	1
 10932  1E7A  319E  2604  319E   	fcall	_LCDPutCmd
 10933  1E7D                     l3865:
 10934                           
 10935                           ;lcd.c: 72:     LCDPutCmd(0x06);
 10936  1E7D  3006               	movlw	6
 10937  1E7E  319E  2604  319E   	fcall	_LCDPutCmd
 10938  1E81                     l66:
 10939  1E81  0008               	return
 10940  1E82                     __end_of_LCD_Initialize:
 10941                           
 10942                           	psect	text32
 10943  1195                     __ptext32:	
 10944 ;; *************** function _LCDPutStr3 *****************
 10945 ;; Defined at:
 10946 ;;		line 169 in file "lcd.c"
 10947 ;; Parameters:    Size  Location     Type
 10948 ;;  str             2    7[COMMON] PTR const unsigned char 
 10949 ;;		 -> STR_1(14), 
 10950 ;;  ln              1    9[COMMON] unsigned char 
 10951 ;; Auto vars:     Size  Location     Type
 10952 ;;  i               1    4[BANK0 ] unsigned char 
 10953 ;;  y               1    3[BANK0 ] unsigned char 
 10954 ;;  x               1    2[BANK0 ] unsigned char 
 10955 ;; Return value:  Size  Location     Type
 10956 ;;                  1    wreg      void 
 10957 ;; Registers used:
 10958 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
 10959 ;; Tracked objects:
 10960 ;;		On entry : 0/0
 10961 ;;		On exit  : 0/0
 10962 ;;		Unchanged: 0/0
 10963 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
 10964 ;;      Params:         3       0       0       0       0       0       0       0
 10965 ;;      Locals:         0       5       0       0       0       0       0       0
 10966 ;;      Temps:          3       0       0       0       0       0       0       0
 10967 ;;      Totals:         6       5       0       0       0       0       0       0
 10968 ;;Total ram usage:       11 bytes
 10969 ;; Hardware stack levels used: 1
 10970 ;; Hardware stack levels required when called: 2
 10971 ;; This function calls:
 10972 ;;		_LCDPutChar
 10973 ;;		_LCDPutCmd
 10974 ;;		_strlen
 10975 ;; This function is called by:
 10976 ;;		_main
 10977 ;; This function uses a non-reentrant model
 10978 ;;
 10979                           
 10980  1195                     _LCDPutStr3:	
 10981                           ;psect for function _LCDPutStr3
 10982                           
 10983  1195                     l3867:	
 10984                           ;incstack = 0
 10985                           ; Regs used in _LCDPutStr3: [wreg-fsr0h+status,2+status,0+pclath+cstack]
 10986                           
 10987                           
 10988                           ;lcd.c: 169: void LCDPutStr3(const char *str , char ln);lcd.c: 170: {;lcd.c: 171:     ui
      +                          nt8_t x = 8 -((strlen(str))/2);
 10989  1195  0878               	movf	LCDPutStr3@str+1,w
 10990  1196  00F1               	movwf	strlen@s+1
 10991  1197  0877               	movf	LCDPutStr3@str,w
 10992  1198  00F0               	movwf	strlen@s
 10993  1199  319D  25CE  3191   	fcall	_strlen
 10994  119C  0870               	movf	?_strlen,w
 10995  119D  00FA               	movwf	??_LCDPutStr3
 10996  119E  0871               	movf	?_strlen+1,w
 10997  119F  00FB               	movwf	??_LCDPutStr3+1
 10998  11A0  36FB               	lsrf	??_LCDPutStr3+1,f
 10999  11A1  0CFA               	rrf	??_LCDPutStr3,f
 11000  11A2  087A               	movf	??_LCDPutStr3,w
 11001  11A3  3C08               	sublw	8
 11002  11A4  00FC               	movwf	??_LCDPutStr3+2
 11003  11A5  087C               	movf	??_LCDPutStr3+2,w
 11004  11A6  0020               	movlb	0	; select bank0
 11005  11A7  00A2               	movwf	LCDPutStr3@x
 11006  11A8                     l3869:
 11007                           
 11008                           ;lcd.c: 172:     uint8_t y = ln;
 11009  11A8  0879               	movf	LCDPutStr3@ln,w
 11010  11A9  00FA               	movwf	??_LCDPutStr3
 11011  11AA  087A               	movf	??_LCDPutStr3,w
 11012  11AB  00A3               	movwf	LCDPutStr3@y
 11013  11AC                     l3871:
 11014                           
 11015                           ;lcd.c: 173:     if ((y > (2 -1)))
 11016  11AC  3002               	movlw	2
 11017  11AD  0223               	subwf	LCDPutStr3@y,w
 11018  11AE  1C03               	skipc
 11019  11AF  29B1               	goto	u5371
 11020  11B0  29B2               	goto	u5370
 11021  11B1                     u5371:
 11022  11B1  29B3               	goto	l3875
 11023  11B2                     u5370:
 11024  11B2  29F2               	goto	l98
 11025  11B3                     l3875:
 11026                           
 11027                           ;lcd.c: 177:     LCDPutCmd((y == 1) ? (0xC0 | x) : (0x80 | x));
 11028  11B3  0323               	decf	LCDPutStr3@y,w
 11029  11B4  1903               	btfsc	3,2
 11030  11B5  29B7               	goto	u5381
 11031  11B6  29B8               	goto	u5380
 11032  11B7                     u5381:
 11033  11B7  29BE               	goto	l3879
 11034  11B8                     u5380:
 11035  11B8                     l3877:
 11036  11B8  3080               	movlw	128
 11037  11B9  0422               	iorwf	LCDPutStr3@x,w
 11038  11BA  00A0               	movwf	_LCDPutStr3$278
 11039  11BB  3000               	movlw	0
 11040  11BC  00A1               	movwf	_LCDPutStr3$278+1
 11041  11BD  29C3               	goto	l3881
 11042  11BE                     l3879:
 11043  11BE  30C0               	movlw	192
 11044  11BF  0422               	iorwf	LCDPutStr3@x,w
 11045  11C0  00A0               	movwf	_LCDPutStr3$278
 11046  11C1  3000               	movlw	0
 11047  11C2  00A1               	movwf	_LCDPutStr3$278+1
 11048  11C3                     l3881:
 11049  11C3  0820               	movf	_LCDPutStr3$278,w
 11050  11C4  319E  2604  3191   	fcall	_LCDPutCmd
 11051  11C7                     l3883:
 11052                           
 11053                           ;lcd.c: 178:     _delay((unsigned long)((5)*(1000000/4000.0)));
 11054  11C7  30FA               	movlw	250
 11055  11C8                     u5697:
 11056  11C8  3200               	nop2
 11057  11C9  0B89               	decfsz	9,f
 11058  11CA  29C8               	goto	u5697
 11059  11CB                     l3885:
 11060                           
 11061                           ;lcd.c: 180:     uint8_t i=0;
 11062  11CB  0020               	movlb	0	; select bank0
 11063  11CC  01A4               	clrf	LCDPutStr3@i
 11064                           
 11065                           ;lcd.c: 181:     while (str[i])
 11066  11CD  29E2               	goto	l3891
 11067  11CE                     l3887:
 11068                           
 11069                           ;lcd.c: 182:     {;lcd.c: 183:         LCDPutChar(str[i++]);
 11070  11CE  0878               	movf	LCDPutStr3@str+1,w
 11071  11CF  00FB               	movwf	??_LCDPutStr3+1
 11072  11D0  0877               	movf	LCDPutStr3@str,w
 11073  11D1  00FA               	movwf	??_LCDPutStr3
 11074  11D2  0824               	movf	LCDPutStr3@i,w
 11075  11D3  077A               	addwf	??_LCDPutStr3,w
 11076  11D4  0084               	movwf	4
 11077  11D5  087B               	movf	??_LCDPutStr3+1,w
 11078  11D6  1803               	skipnc
 11079  11D7  0A7B               	incf	??_LCDPutStr3+1,w
 11080  11D8  0085               	movwf	5
 11081  11D9  0800               	movf	0,w	;code access
 11082  11DA  319D  25E7  3191   	fcall	_LCDPutChar
 11083  11DD                     l3889:
 11084  11DD  3001               	movlw	1
 11085  11DE  00FA               	movwf	??_LCDPutStr3
 11086  11DF  087A               	movf	??_LCDPutStr3,w
 11087  11E0  0020               	movlb	0	; select bank0
 11088  11E1  07A4               	addwf	LCDPutStr3@i,f
 11089  11E2                     l3891:
 11090                           
 11091                           ;lcd.c: 181:     while (str[i])
 11092  11E2  0878               	movf	LCDPutStr3@str+1,w
 11093  11E3  00FB               	movwf	??_LCDPutStr3+1
 11094  11E4  0877               	movf	LCDPutStr3@str,w
 11095  11E5  00FA               	movwf	??_LCDPutStr3
 11096  11E6  0824               	movf	LCDPutStr3@i,w
 11097  11E7  077A               	addwf	??_LCDPutStr3,w
 11098  11E8  0084               	movwf	4
 11099  11E9  087B               	movf	??_LCDPutStr3+1,w
 11100  11EA  1803               	skipnc
 11101  11EB  0A7B               	incf	??_LCDPutStr3+1,w
 11102  11EC  0085               	movwf	5
 11103  11ED  0012               	moviw fsr0++
 11104  11EE  1D03               	btfss	3,2
 11105  11EF  29F1               	goto	u5391
 11106  11F0  29F2               	goto	u5390
 11107  11F1                     u5391:
 11108  11F1  29CE               	goto	l3887
 11109  11F2                     u5390:
 11110  11F2                     l98:
 11111  11F2  0008               	return
 11112  11F3                     __end_of_LCDPutStr3:
 11113                           
 11114                           	psect	text33
 11115  1DCE                     __ptext33:	
 11116 ;; *************** function _strlen *****************
 11117 ;; Defined at:
 11118 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\strlen.c"
 11119 ;; Parameters:    Size  Location     Type
 11120 ;;  s               2    0[COMMON] PTR const unsigned char 
 11121 ;;		 -> dbuf(80), STR_1(14), 
 11122 ;; Auto vars:     Size  Location     Type
 11123 ;;  a               2    3[COMMON] PTR const unsigned char 
 11124 ;;		 -> dbuf(80), STR_1(14), 
 11125 ;; Return value:  Size  Location     Type
 11126 ;;                  2    0[COMMON] unsigned int 
 11127 ;; Registers used:
 11128 ;;		wreg, fsr0l, fsr0h, status,2, status,0
 11129 ;; Tracked objects:
 11130 ;;		On entry : 0/0
 11131 ;;		On exit  : 0/0
 11132 ;;		Unchanged: 0/0
 11133 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
 11134 ;;      Params:         2       0       0       0       0       0       0       0
 11135 ;;      Locals:         2       0       0       0       0       0       0       0
 11136 ;;      Temps:          1       0       0       0       0       0       0       0
 11137 ;;      Totals:         5       0       0       0       0       0       0       0
 11138 ;;Total ram usage:        5 bytes
 11139 ;; Hardware stack levels used: 1
 11140 ;; This function calls:
 11141 ;;		Nothing
 11142 ;; This function is called by:
 11143 ;;		_LCDPutStr3
 11144 ;;		_pad
 11145 ;; This function uses a non-reentrant model
 11146 ;;
 11147                           
 11148  1DCE                     _strlen:	
 11149                           ;psect for function _strlen
 11150                           
 11151  1DCE                     l2539:	
 11152                           ;incstack = 0
 11153                           ; Regs used in _strlen: [wreg-fsr0h+status,2+status,0]
 11154                           
 11155  1DCE  0871               	movf	strlen@s+1,w
 11156  1DCF  00F4               	movwf	strlen@a+1
 11157  1DD0  0870               	movf	strlen@s,w
 11158  1DD1  00F3               	movwf	strlen@a
 11159  1DD2  2DD7               	goto	l2543
 11160  1DD3                     l2541:
 11161  1DD3  3001               	movlw	1
 11162  1DD4  07F0               	addwf	strlen@s,f
 11163  1DD5  3000               	movlw	0
 11164  1DD6  3DF1               	addwfc	strlen@s+1,f
 11165  1DD7                     l2543:
 11166  1DD7  0870               	movf	strlen@s,w
 11167  1DD8  0084               	movwf	4
 11168  1DD9  0871               	movf	strlen@s+1,w
 11169  1DDA  0085               	movwf	5
 11170  1DDB  0012               	moviw fsr0++
 11171  1DDC  1D03               	btfss	3,2
 11172  1DDD  2DDF               	goto	u2881
 11173  1DDE  2DE0               	goto	u2880
 11174  1DDF                     u2881:
 11175  1DDF  2DD3               	goto	l2541
 11176  1DE0                     u2880:
 11177  1DE0                     l2545:
 11178  1DE0  0873               	movf	strlen@a,w
 11179  1DE1  0270               	subwf	strlen@s,w
 11180  1DE2  00F0               	movwf	?_strlen
 11181  1DE3  0874               	movf	strlen@a+1,w
 11182  1DE4  3B71               	subwfb	strlen@s+1,w
 11183  1DE5  00F1               	movwf	?_strlen+1
 11184  1DE6                     l925:
 11185  1DE6  0008               	return
 11186  1DE7                     __end_of_strlen:
 11187                           
 11188                           	psect	text34
 11189  10DF                     __ptext34:	
 11190 ;; *************** function _LCDPutStr2 *****************
 11191 ;; Defined at:
 11192 ;;		line 150 in file "lcd.c"
 11193 ;; Parameters:    Size  Location     Type
 11194 ;;  str             2    7[COMMON] PTR const unsigned char 
 11195 ;;		 -> STR_4(2), main@temp_result(15), STR_2(7), 
 11196 ;;  pos             1    9[COMMON] unsigned char 
 11197 ;;  ln              1   10[COMMON] unsigned char 
 11198 ;; Auto vars:     Size  Location     Type
 11199 ;;  h               1    2[BANK0 ] unsigned char 
 11200 ;;  x               1    5[BANK0 ] unsigned char 
 11201 ;;  i               1    4[BANK0 ] unsigned char 
 11202 ;;  y               1    3[BANK0 ] unsigned char 
 11203 ;; Return value:  Size  Location     Type
 11204 ;;                  1    wreg      void 
 11205 ;; Registers used:
 11206 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
 11207 ;; Tracked objects:
 11208 ;;		On entry : 0/0
 11209 ;;		On exit  : 0/0
 11210 ;;		Unchanged: 0/0
 11211 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
 11212 ;;      Params:         4       0       0       0       0       0       0       0
 11213 ;;      Locals:         0       6       0       0       0       0       0       0
 11214 ;;      Temps:          3       0       0       0       0       0       0       0
 11215 ;;      Totals:         7       6       0       0       0       0       0       0
 11216 ;;Total ram usage:       13 bytes
 11217 ;; Hardware stack levels used: 1
 11218 ;; Hardware stack levels required when called: 2
 11219 ;; This function calls:
 11220 ;;		_LCDPutChar
 11221 ;;		_LCDPutCmd
 11222 ;; This function is called by:
 11223 ;;		_main
 11224 ;; This function uses a non-reentrant model
 11225 ;;
 11226                           
 11227  10DF                     _LCDPutStr2:	
 11228                           ;psect for function _LCDPutStr2
 11229                           
 11230  10DF                     l3893:	
 11231                           ;incstack = 0
 11232                           ; Regs used in _LCDPutStr2: [wreg-fsr0h+status,2+status,0+pclath+cstack]
 11233                           
 11234                           
 11235                           ;lcd.c: 150: void LCDPutStr2(const char *str , char pos , char ln);lcd.c: 151: {;lcd.c: 
      +                          152:     uint8_t x = pos;
 11236  10DF  0879               	movf	LCDPutStr2@pos,w
 11237  10E0  00FB               	movwf	??_LCDPutStr2
 11238  10E1  087B               	movf	??_LCDPutStr2,w
 11239  10E2  0020               	movlb	0	; select bank0
 11240  10E3  00A5               	movwf	LCDPutStr2@x
 11241                           
 11242                           ;lcd.c: 153:     uint8_t y = ln;
 11243  10E4  087A               	movf	LCDPutStr2@ln,w
 11244  10E5  00FB               	movwf	??_LCDPutStr2
 11245  10E6  087B               	movf	??_LCDPutStr2,w
 11246  10E7  00A3               	movwf	LCDPutStr2@y
 11247                           
 11248                           ;lcd.c: 154:     if ((y > (2 -1)) || (x > (16 -1)))
 11249  10E8  3002               	movlw	2
 11250  10E9  0223               	subwf	LCDPutStr2@y,w
 11251  10EA  1803               	skipnc
 11252  10EB  28ED               	goto	u5401
 11253  10EC  28EE               	goto	u5400
 11254  10ED                     u5401:
 11255  10ED  2938               	goto	l87
 11256  10EE                     u5400:
 11257  10EE                     l3895:
 11258  10EE  3010               	movlw	16
 11259  10EF  0225               	subwf	LCDPutStr2@x,w
 11260  10F0  1C03               	skipc
 11261  10F1  28F3               	goto	u5411
 11262  10F2  28F4               	goto	u5410
 11263  10F3                     u5411:
 11264  10F3  28F5               	goto	l3897
 11265  10F4                     u5410:
 11266  10F4  2938               	goto	l87
 11267  10F5                     l3897:
 11268                           
 11269                           ;lcd.c: 158:     LCDPutCmd((y == 1) ? (0xC0 | x) : (0x80 | x));
 11270  10F5  0323               	decf	LCDPutStr2@y,w
 11271  10F6  1903               	btfsc	3,2
 11272  10F7  28F9               	goto	u5421
 11273  10F8  28FA               	goto	u5420
 11274  10F9                     u5421:
 11275  10F9  2900               	goto	l3901
 11276  10FA                     u5420:
 11277  10FA                     l3899:
 11278  10FA  3080               	movlw	128
 11279  10FB  0425               	iorwf	LCDPutStr2@x,w
 11280  10FC  00A0               	movwf	_LCDPutStr2$270
 11281  10FD  3000               	movlw	0
 11282  10FE  00A1               	movwf	_LCDPutStr2$270+1
 11283  10FF  2905               	goto	l3903
 11284  1100                     l3901:
 11285  1100  30C0               	movlw	192
 11286  1101  0425               	iorwf	LCDPutStr2@x,w
 11287  1102  00A0               	movwf	_LCDPutStr2$270
 11288  1103  3000               	movlw	0
 11289  1104  00A1               	movwf	_LCDPutStr2$270+1
 11290  1105                     l3903:
 11291  1105  0820               	movf	_LCDPutStr2$270,w
 11292  1106  319E  2604  3190   	fcall	_LCDPutCmd
 11293  1109                     l3905:
 11294                           
 11295                           ;lcd.c: 159:     _delay((unsigned long)((5)*(1000000/4000.0)));
 11296  1109  30FA               	movlw	250
 11297  110A                     u5707:
 11298  110A  3200               	nop2
 11299  110B  0B89               	decfsz	9,f
 11300  110C  290A               	goto	u5707
 11301  110D                     l3907:
 11302                           
 11303                           ;lcd.c: 161:     uint8_t i=0;
 11304  110D  0020               	movlb	0	; select bank0
 11305  110E  01A4               	clrf	LCDPutStr2@i
 11306                           
 11307                           ;lcd.c: 162:     while (str[i])
 11308  110F  2927               	goto	l3915
 11309  1110                     l3909:
 11310                           
 11311                           ;lcd.c: 163:     {;lcd.c: 164:         uint8_t h = i++;
 11312  1110  0824               	movf	LCDPutStr2@i,w
 11313  1111  00FB               	movwf	??_LCDPutStr2
 11314  1112  087B               	movf	??_LCDPutStr2,w
 11315  1113  00A2               	movwf	LCDPutStr2@h
 11316  1114                     l3911:
 11317  1114  3001               	movlw	1
 11318  1115  00FB               	movwf	??_LCDPutStr2
 11319  1116  087B               	movf	??_LCDPutStr2,w
 11320  1117  07A4               	addwf	LCDPutStr2@i,f
 11321  1118                     l3913:
 11322                           
 11323                           ;lcd.c: 165:         LCDPutChar(str[h]);
 11324  1118  0878               	movf	LCDPutStr2@str+1,w
 11325  1119  00FC               	movwf	??_LCDPutStr2+1
 11326  111A  0877               	movf	LCDPutStr2@str,w
 11327  111B  00FB               	movwf	??_LCDPutStr2
 11328  111C  0822               	movf	LCDPutStr2@h,w
 11329  111D  077B               	addwf	??_LCDPutStr2,w
 11330  111E  0084               	movwf	4
 11331  111F  087C               	movf	??_LCDPutStr2+1,w
 11332  1120  1803               	skipnc
 11333  1121  0A7C               	incf	??_LCDPutStr2+1,w
 11334  1122  0085               	movwf	5
 11335  1123  0800               	movf	0,w	;code access
 11336  1124  319D  25E7  3190   	fcall	_LCDPutChar
 11337  1127                     l3915:
 11338                           
 11339                           ;lcd.c: 162:     while (str[i])
 11340  1127  0878               	movf	LCDPutStr2@str+1,w
 11341  1128  00FC               	movwf	??_LCDPutStr2+1
 11342  1129  0877               	movf	LCDPutStr2@str,w
 11343  112A  00FB               	movwf	??_LCDPutStr2
 11344  112B  0020               	movlb	0	; select bank0
 11345  112C  0824               	movf	LCDPutStr2@i,w
 11346  112D  077B               	addwf	??_LCDPutStr2,w
 11347  112E  0084               	movwf	4
 11348  112F  087C               	movf	??_LCDPutStr2+1,w
 11349  1130  1803               	skipnc
 11350  1131  0A7C               	incf	??_LCDPutStr2+1,w
 11351  1132  0085               	movwf	5
 11352  1133  0012               	moviw fsr0++
 11353  1134  1D03               	btfss	3,2
 11354  1135  2937               	goto	u5431
 11355  1136  2938               	goto	u5430
 11356  1137                     u5431:
 11357  1137  2910               	goto	l3909
 11358  1138                     u5430:
 11359  1138                     l87:
 11360  1138  0008               	return
 11361  1139                     __end_of_LCDPutStr2:
 11362                           
 11363                           	psect	text35
 11364  1DE7                     __ptext35:	
 11365 ;; *************** function _LCDPutChar *****************
 11366 ;; Defined at:
 11367 ;;		line 104 in file "lcd.c"
 11368 ;; Parameters:    Size  Location     Type
 11369 ;;  ch              1    wreg     unsigned char 
 11370 ;; Auto vars:     Size  Location     Type
 11371 ;;  ch              1    6[COMMON] unsigned char 
 11372 ;; Return value:  Size  Location     Type
 11373 ;;                  1    wreg      void 
 11374 ;; Registers used:
 11375 ;;		wreg, status,2, status,0, pclath, cstack
 11376 ;; Tracked objects:
 11377 ;;		On entry : 0/0
 11378 ;;		On exit  : 0/0
 11379 ;;		Unchanged: 0/0
 11380 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
 11381 ;;      Params:         0       0       0       0       0       0       0       0
 11382 ;;      Locals:         1       0       0       0       0       0       0       0
 11383 ;;      Temps:          2       0       0       0       0       0       0       0
 11384 ;;      Totals:         3       0       0       0       0       0       0       0
 11385 ;;Total ram usage:        3 bytes
 11386 ;; Hardware stack levels used: 1
 11387 ;; Hardware stack levels required when called: 1
 11388 ;; This function calls:
 11389 ;;		_LCDWriteNibble
 11390 ;; This function is called by:
 11391 ;;		_main
 11392 ;;		_LCDPutStr2
 11393 ;;		_LCDPutStr3
 11394 ;;		_LCDPutStr
 11395 ;; This function uses a non-reentrant model
 11396 ;;
 11397                           
 11398  1DE7                     _LCDPutChar:	
 11399                           ;psect for function _LCDPutChar
 11400                           
 11401                           
 11402                           ;incstack = 0
 11403                           ; Regs used in _LCDPutChar: [wreg+status,2+status,0+pclath+cstack]
 11404                           ;LCDPutChar@ch stored from wreg
 11405  1DE7  00F6               	movwf	LCDPutChar@ch
 11406  1DE8                     l3833:
 11407                           
 11408                           ;lcd.c: 104: void LCDPutChar(uint8_t ch);lcd.c: 105: {;lcd.c: 106:     _delay((unsigned 
      +                          long)((5)*(1000000/4000.0)));
 11409  1DE8  30FA               	movlw	250
 11410  1DE9                     u5717:
 11411  1DE9  3200               	nop2
 11412  1DEA  0B89               	decfsz	9,f
 11413  1DEB  2DE9               	goto	u5717
 11414  1DEC                     l3835:
 11415                           
 11416                           ;lcd.c: 109:     LCDWriteNibble(ch,1);
 11417  1DEC  01F0               	clrf	LCDWriteNibble@rs
 11418  1DED  0AF0               	incf	LCDWriteNibble@rs,f
 11419  1DEE  0876               	movf	LCDPutChar@ch,w
 11420  1DEF  319E  2642  319D   	fcall	_LCDWriteNibble
 11421  1DF2                     l3837:
 11422                           
 11423                           ;lcd.c: 112:     ch = (ch << 4);
 11424  1DF2  0876               	movf	LCDPutChar@ch,w
 11425  1DF3  00F4               	movwf	??_LCDPutChar
 11426  1DF4  3003               	movlw	3
 11427  1DF5                     u5355:
 11428  1DF5  35F4               	lslf	??_LCDPutChar,f
 11429  1DF6  3EFF               	addlw	-1
 11430  1DF7  1D03               	skipz
 11431  1DF8  2DF5               	goto	u5355
 11432  1DF9  3574               	lslf	??_LCDPutChar,w
 11433  1DFA  00F5               	movwf	??_LCDPutChar+1
 11434  1DFB  0875               	movf	??_LCDPutChar+1,w
 11435  1DFC  00F6               	movwf	LCDPutChar@ch
 11436  1DFD                     l3839:
 11437                           
 11438                           ;lcd.c: 115:     LCDWriteNibble(ch,1);
 11439  1DFD  01F0               	clrf	LCDWriteNibble@rs
 11440  1DFE  0AF0               	incf	LCDWriteNibble@rs,f
 11441  1DFF  0876               	movf	LCDPutChar@ch,w
 11442  1E00  319E  2642  319D   	fcall	_LCDWriteNibble
 11443  1E03                     l72:
 11444  1E03  0008               	return
 11445  1E04                     __end_of_LCDPutChar:
 11446                           
 11447                           	psect	text36
 11448  1F30                     __ptext36:	
 11449 ;; *************** function _LCDGoto *****************
 11450 ;; Defined at:
 11451 ;;		line 188 in file "lcd.c"
 11452 ;; Parameters:    Size  Location     Type
 11453 ;;  pos             1    wreg     unsigned char 
 11454 ;;  ln              1    7[COMMON] unsigned char 
 11455 ;; Auto vars:     Size  Location     Type
 11456 ;;  pos             1    9[COMMON] unsigned char 
 11457 ;;  x               1   13[COMMON] unsigned char 
 11458 ;;  y               1   12[COMMON] unsigned char 
 11459 ;; Return value:  Size  Location     Type
 11460 ;;                  1    wreg      void 
 11461 ;; Registers used:
 11462 ;;		wreg, status,2, status,0, pclath, cstack
 11463 ;; Tracked objects:
 11464 ;;		On entry : 0/0
 11465 ;;		On exit  : 0/0
 11466 ;;		Unchanged: 0/0
 11467 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
 11468 ;;      Params:         1       0       0       0       0       0       0       0
 11469 ;;      Locals:         5       0       0       0       0       0       0       0
 11470 ;;      Temps:          1       0       0       0       0       0       0       0
 11471 ;;      Totals:         7       0       0       0       0       0       0       0
 11472 ;;Total ram usage:        7 bytes
 11473 ;; Hardware stack levels used: 1
 11474 ;; Hardware stack levels required when called: 2
 11475 ;; This function calls:
 11476 ;;		_LCDPutCmd
 11477 ;; This function is called by:
 11478 ;;		_main
 11479 ;; This function uses a non-reentrant model
 11480 ;;
 11481                           
 11482  1F30                     _LCDGoto:	
 11483                           ;psect for function _LCDGoto
 11484                           
 11485                           
 11486                           ;incstack = 0
 11487                           ; Regs used in _LCDGoto: [wreg+status,2+status,0+pclath+cstack]
 11488                           ;LCDGoto@pos stored from wreg
 11489  1F30  00F9               	movwf	LCDGoto@pos
 11490  1F31                     l3929:
 11491                           
 11492                           ;lcd.c: 188: void LCDGoto(char pos,char ln);lcd.c: 189: {;lcd.c: 190:     uint8_t x = po
      +                          s;
 11493  1F31  0879               	movf	LCDGoto@pos,w
 11494  1F32  00F8               	movwf	??_LCDGoto
 11495  1F33  0878               	movf	??_LCDGoto,w
 11496  1F34  00FD               	movwf	LCDGoto@x
 11497                           
 11498                           ;lcd.c: 191:     uint8_t y = ln;
 11499  1F35  0877               	movf	LCDGoto@ln,w
 11500  1F36  00F8               	movwf	??_LCDGoto
 11501  1F37  0878               	movf	??_LCDGoto,w
 11502  1F38  00FC               	movwf	LCDGoto@y
 11503                           
 11504                           ;lcd.c: 193:     if ((y > (2 -1)) || (x > (16 -1)))
 11505  1F39  3002               	movlw	2
 11506  1F3A  027C               	subwf	LCDGoto@y,w
 11507  1F3B  1803               	skipnc
 11508  1F3C  2F3E               	goto	u5441
 11509  1F3D  2F3F               	goto	u5440
 11510  1F3E                     u5441:
 11511  1F3E  2F5E               	goto	l111
 11512  1F3F                     u5440:
 11513  1F3F                     l3931:
 11514  1F3F  3010               	movlw	16
 11515  1F40  027D               	subwf	LCDGoto@x,w
 11516  1F41  1C03               	skipc
 11517  1F42  2F44               	goto	u5451
 11518  1F43  2F45               	goto	u5450
 11519  1F44                     u5451:
 11520  1F44  2F46               	goto	l3933
 11521  1F45                     u5450:
 11522  1F45  2F5E               	goto	l111
 11523  1F46                     l3933:
 11524                           
 11525                           ;lcd.c: 200:     LCDPutCmd((y == 1) ? (0xC0 | x) : (0x80 | x));
 11526  1F46  037C               	decf	LCDGoto@y,w
 11527  1F47  1903               	btfsc	3,2
 11528  1F48  2F4A               	goto	u5461
 11529  1F49  2F4B               	goto	u5460
 11530  1F4A                     u5461:
 11531  1F4A  2F51               	goto	l3937
 11532  1F4B                     u5460:
 11533  1F4B                     l3935:
 11534  1F4B  3080               	movlw	128
 11535  1F4C  047D               	iorwf	LCDGoto@x,w
 11536  1F4D  00FA               	movwf	_LCDGoto$285
 11537  1F4E  3000               	movlw	0
 11538  1F4F  00FB               	movwf	_LCDGoto$285+1
 11539  1F50  2F56               	goto	l3939
 11540  1F51                     l3937:
 11541  1F51  30C0               	movlw	192
 11542  1F52  047D               	iorwf	LCDGoto@x,w
 11543  1F53  00FA               	movwf	_LCDGoto$285
 11544  1F54  3000               	movlw	0
 11545  1F55  00FB               	movwf	_LCDGoto$285+1
 11546  1F56                     l3939:
 11547  1F56  087A               	movf	_LCDGoto$285,w
 11548  1F57  319E  2604  319F   	fcall	_LCDPutCmd
 11549  1F5A                     l3941:
 11550                           
 11551                           ;lcd.c: 203:     _delay((unsigned long)((5)*(1000000/4000.0)));
 11552  1F5A  30FA               	movlw	250
 11553  1F5B                     u5727:
 11554  1F5B  3200               	nop2
 11555  1F5C  0B89               	decfsz	9,f
 11556  1F5D  2F5B               	goto	u5727
 11557  1F5E                     l111:
 11558  1F5E  0008               	return
 11559  1F5F                     __end_of_LCDGoto:
 11560                           
 11561                           	psect	text37
 11562  1E04                     __ptext37:	
 11563 ;; *************** function _LCDPutCmd *****************
 11564 ;; Defined at:
 11565 ;;		line 119 in file "lcd.c"
 11566 ;; Parameters:    Size  Location     Type
 11567 ;;  ch              1    wreg     unsigned char 
 11568 ;; Auto vars:     Size  Location     Type
 11569 ;;  ch              1    6[COMMON] unsigned char 
 11570 ;; Return value:  Size  Location     Type
 11571 ;;                  1    wreg      void 
 11572 ;; Registers used:
 11573 ;;		wreg, status,2, status,0, pclath, cstack
 11574 ;; Tracked objects:
 11575 ;;		On entry : 0/0
 11576 ;;		On exit  : 0/0
 11577 ;;		Unchanged: 0/0
 11578 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
 11579 ;;      Params:         0       0       0       0       0       0       0       0
 11580 ;;      Locals:         1       0       0       0       0       0       0       0
 11581 ;;      Temps:          2       0       0       0       0       0       0       0
 11582 ;;      Totals:         3       0       0       0       0       0       0       0
 11583 ;;Total ram usage:        3 bytes
 11584 ;; Hardware stack levels used: 1
 11585 ;; Hardware stack levels required when called: 1
 11586 ;; This function calls:
 11587 ;;		_LCDWriteNibble
 11588 ;; This function is called by:
 11589 ;;		_main
 11590 ;;		_LCD_Initialize
 11591 ;;		_LCDPutStr2
 11592 ;;		_LCDPutStr3
 11593 ;;		_LCDGoto
 11594 ;;		_LCD_Clear
 11595 ;; This function uses a non-reentrant model
 11596 ;;
 11597                           
 11598  1E04                     _LCDPutCmd:	
 11599                           ;psect for function _LCDPutCmd
 11600                           
 11601                           
 11602                           ;incstack = 0
 11603                           ; Regs used in _LCDPutCmd: [wreg+status,2+status,0+pclath+cstack]
 11604                           ;LCDPutCmd@ch stored from wreg
 11605  1E04  00F6               	movwf	LCDPutCmd@ch
 11606  1E05                     l3823:
 11607                           
 11608                           ;lcd.c: 119: void LCDPutCmd(uint8_t ch);lcd.c: 120: {;lcd.c: 121:     _delay((unsigned l
      +                          ong)((5)*(1000000/4000.0)));
 11609  1E05  30FA               	movlw	250
 11610  1E06                     u5737:
 11611  1E06  3200               	nop2
 11612  1E07  0B89               	decfsz	9,f
 11613  1E08  2E06               	goto	u5737
 11614  1E09                     l3825:
 11615                           
 11616                           ;lcd.c: 124:     LCDWriteNibble(ch,0);
 11617  1E09  01F0               	clrf	LCDWriteNibble@rs
 11618  1E0A  0876               	movf	LCDPutCmd@ch,w
 11619  1E0B  319E  2642  319E   	fcall	_LCDWriteNibble
 11620  1E0E                     l3827:
 11621                           
 11622                           ;lcd.c: 127:     ch = (ch << 4);
 11623  1E0E  0876               	movf	LCDPutCmd@ch,w
 11624  1E0F  00F4               	movwf	??_LCDPutCmd
 11625  1E10  3003               	movlw	3
 11626  1E11                     u5345:
 11627  1E11  35F4               	lslf	??_LCDPutCmd,f
 11628  1E12  3EFF               	addlw	-1
 11629  1E13  1D03               	skipz
 11630  1E14  2E11               	goto	u5345
 11631  1E15  3574               	lslf	??_LCDPutCmd,w
 11632  1E16  00F5               	movwf	??_LCDPutCmd+1
 11633  1E17  0875               	movf	??_LCDPutCmd+1,w
 11634  1E18  00F6               	movwf	LCDPutCmd@ch
 11635  1E19                     l3829:
 11636                           
 11637                           ;lcd.c: 129:     _delay((unsigned long)((1)*(1000000/4000.0)));
 11638  1E19  3053               	movlw	83
 11639  1E1A                     u5747:
 11640  1E1A  0B89               	decfsz	9,f
 11641  1E1B  2E1A               	goto	u5747
 11642  1E1C  0000               	nop
 11643  1E1D                     l3831:
 11644                           
 11645                           ;lcd.c: 132:     LCDWriteNibble(ch,0);
 11646  1E1D  01F0               	clrf	LCDWriteNibble@rs
 11647  1E1E  0876               	movf	LCDPutCmd@ch,w
 11648  1E1F  319E  2642  319E   	fcall	_LCDWriteNibble
 11649  1E22                     l75:
 11650  1E22  0008               	return
 11651  1E23                     __end_of_LCDPutCmd:
 11652                           
 11653                           	psect	text38
 11654  1E42                     __ptext38:	
 11655 ;; *************** function _LCDWriteNibble *****************
 11656 ;; Defined at:
 11657 ;;		line 77 in file "lcd.c"
 11658 ;; Parameters:    Size  Location     Type
 11659 ;;  ch              1    wreg     unsigned char 
 11660 ;;  rs              1    0[COMMON] unsigned char 
 11661 ;; Auto vars:     Size  Location     Type
 11662 ;;  ch              1    3[COMMON] unsigned char 
 11663 ;; Return value:  Size  Location     Type
 11664 ;;                  1    wreg      void 
 11665 ;; Registers used:
 11666 ;;		wreg, status,2, status,0
 11667 ;; Tracked objects:
 11668 ;;		On entry : 0/0
 11669 ;;		On exit  : 0/0
 11670 ;;		Unchanged: 0/0
 11671 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
 11672 ;;      Params:         1       0       0       0       0       0       0       0
 11673 ;;      Locals:         1       0       0       0       0       0       0       0
 11674 ;;      Temps:          2       0       0       0       0       0       0       0
 11675 ;;      Totals:         4       0       0       0       0       0       0       0
 11676 ;;Total ram usage:        4 bytes
 11677 ;; Hardware stack levels used: 1
 11678 ;; This function calls:
 11679 ;;		Nothing
 11680 ;; This function is called by:
 11681 ;;		_LCDPutChar
 11682 ;;		_LCDPutCmd
 11683 ;; This function uses a non-reentrant model
 11684 ;;
 11685                           
 11686  1E42                     _LCDWriteNibble:	
 11687                           ;psect for function _LCDWriteNibble
 11688                           
 11689                           
 11690                           ;incstack = 0
 11691                           ; Regs used in _LCDWriteNibble: [wreg+status,2+status,0]
 11692                           ;LCDWriteNibble@ch stored from wreg
 11693  1E42  00F3               	movwf	LCDWriteNibble@ch
 11694  1E43                     l3691:
 11695                           
 11696                           ;lcd.c: 77: void LCDWriteNibble(uint8_t ch,uint8_t rs);lcd.c: 78: {;lcd.c: 80:     ch = 
      +                          (ch >> 4);
 11697  1E43  0873               	movf	LCDWriteNibble@ch,w
 11698  1E44  00F1               	movwf	??_LCDWriteNibble
 11699  1E45  3004               	movlw	4
 11700  1E46                     u5215:
 11701  1E46  36F1               	lsrf	??_LCDWriteNibble,f
 11702  1E47  0B89               	decfsz	9,f
 11703  1E48  2E46               	goto	u5215
 11704  1E49  0871               	movf	??_LCDWriteNibble,w
 11705  1E4A  00F2               	movwf	??_LCDWriteNibble+1
 11706  1E4B  0872               	movf	??_LCDWriteNibble+1,w
 11707  1E4C  00F3               	movwf	LCDWriteNibble@ch
 11708  1E4D                     l3693:
 11709                           
 11710                           ;lcd.c: 83:     ch = (ch & 0x0F);
 11711  1E4D  0873               	movf	LCDWriteNibble@ch,w
 11712  1E4E  390F               	andlw	15
 11713  1E4F  00F1               	movwf	??_LCDWriteNibble
 11714  1E50  0871               	movf	??_LCDWriteNibble,w
 11715  1E51  00F3               	movwf	LCDWriteNibble@ch
 11716  1E52                     l3695:
 11717                           
 11718                           ;lcd.c: 86:     PORTC = (PORTC & 0xF0);
 11719  1E52  0020               	movlb	0	; select bank0
 11720  1E53  080E               	movf	14,w	;volatile
 11721  1E54  39F0               	andlw	240
 11722  1E55  008E               	movwf	14	;volatile
 11723                           
 11724                           ;lcd.c: 89:     PORTC = (PORTC | ch);
 11725  1E56  080E               	movf	14,w	;volatile
 11726  1E57  0473               	iorwf	LCDWriteNibble@ch,w
 11727  1E58  008E               	movwf	14	;volatile
 11728  1E59                     l3697:
 11729                           
 11730                           ;lcd.c: 92:     PORTCbits.RC4 = rs;
 11731  1E59  0C70               	rrf	LCDWriteNibble@rs,w
 11732  1E5A  1C03               	skipc
 11733  1E5B  120E               	bcf	14,4	;volatile
 11734  1E5C  1803               	skipnc
 11735  1E5D  160E               	bsf	14,4	;volatile
 11736  1E5E                     l3699:
 11737                           
 11738                           ;lcd.c: 95:     PORTCbits.RC5 = 0;
 11739  1E5E  128E               	bcf	14,5	;volatile
 11740  1E5F                     l3701:
 11741                           
 11742                           ;lcd.c: 98:     PORTCbits.RC6 = 1;
 11743  1E5F  170E               	bsf	14,6	;volatile
 11744  1E60                     l3703:
 11745                           
 11746                           ;lcd.c: 101:     PORTCbits.RC6 = 0;
 11747  1E60  130E               	bcf	14,6	;volatile
 11748  1E61                     l69:
 11749  1E61  0008               	return
 11750  1E62                     __end_of_LCDWriteNibble:
 11751  007E                     btemp	set	126	;btemp
 11752  007E                     wtemp0	set	126
 11753                           
 11754                           	psect	idloc
 11755                           
 11756                           ;Config register IDLOC0 @ 0x8000
 11757                           ;	unspecified, using default values
 11758  8000                     	org	32768
 11759  8000  3FFF               	dw	16383
 11760                           
 11761                           ;Config register IDLOC1 @ 0x8001
 11762                           ;	unspecified, using default values
 11763  8001                     	org	32769
 11764  8001  3FFF               	dw	16383
 11765                           
 11766                           ;Config register IDLOC2 @ 0x8002
 11767                           ;	unspecified, using default values
 11768  8002                     	org	32770
 11769  8002  3FFF               	dw	16383
 11770                           
 11771                           ;Config register IDLOC3 @ 0x8003
 11772                           ;	unspecified, using default values
 11773  8003                     	org	32771
 11774  8003  3FFF               	dw	16383
 11775                           
 11776                           	psect	config
 11777                           
 11778                           ;Config register CONFIG1 @ 0x8007
 11779                           ;	Oscillator Selection Bits
 11780                           ;	FOSC = INTOSC, INTOSC oscillator: I/O function on CLKIN pin
 11781                           ;	Watchdog Timer Enable
 11782                           ;	WDTE = OFF, WDT disabled
 11783                           ;	Power-up Timer Enable
 11784                           ;	PWRTE = OFF, PWRT disabled
 11785                           ;	MCLR Pin Function Select
 11786                           ;	MCLRE = OFF, MCLR/VPP pin function is digital input
 11787                           ;	Flash Program Memory Code Protection
 11788                           ;	CP = OFF, Program memory code protection is disabled
 11789                           ;	Brown-out Reset Enable
 11790                           ;	BOREN = OFF, Brown-out Reset disabled
 11791                           ;	Clock Out Enable
 11792                           ;	CLKOUTEN = OFF, CLKOUT function is disabled. I/O or oscillator function on the CLKOUT 
      +                          pin
 11793                           ;	Internal/External Switchover Mode
 11794                           ;	IESO = OFF, Internal/External Switchover Mode is disabled
 11795                           ;	Fail-Safe Clock Monitor Enable
 11796                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
 11797  8007                     	org	32775
 11798  8007  09A4               	dw	2468
 11799                           
 11800                           ;Config register CONFIG2 @ 0x8008
 11801                           ;	Flash Memory Self-Write Protection
 11802                           ;	WRT = OFF, Write protection off
 11803                           ;	Stack Overflow/Underflow Reset Enable
 11804                           ;	STVREN = OFF, Stack Overflow or Underflow will not cause a Reset
 11805                           ;	Brown-out Reset Voltage Selection
 11806                           ;	BORV = LO, Brown-out Reset Voltage (Vbor), low trip point selected.
 11807                           ;	Low-Power Brown Out Reset
 11808                           ;	LPBOR = OFF, Low-Power BOR is disabled
 11809                           ;	Low-Voltage Programming Enable
 11810                           ;	LVP = OFF, High-voltage on MCLR/VPP must be used for programming
 11811  8008                     	org	32776
 11812  8008  1DFF               	dw	7679

Data Sizes:
    Strings     48
    Constant    0
    Data        16
    BSS         96
    Persistent  32
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     80      80
    BANK1            80     78      80
    BANK2            80     67      77
    BANK3            80      0      20
    BANK4            80      0      80
    BANK5            80      0       0
    BANK6            16      0       0

Pointer List with Targets:

    strncmp@_r	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_15(CODE[3]), 

    strncmp@r	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_15(CODE[3]), 

    strncmp@_l	PTR const unsigned char  size(1) Largest target is 3
		 -> vfpfcnvrt@ct(BANK1[3]), 

    strncmp@l	PTR const unsigned char  size(1) Largest target is 3
		 -> vfpfcnvrt@ct(BANK1[3]), 

    strlen@s	PTR const unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK4[80]), STR_1(CODE[14]), 

    strlen@a	PTR const unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK4[80]), STR_1(CODE[14]), 

    strcpy@dest	PTR unsigned char  size(1) Largest target is 80
		 -> dbuf(BANK4[80]), 

    strcpy@d	PTR unsigned char  size(1) Largest target is 80
		 -> dbuf(BANK4[80]), 

    strcpy@src	PTR const unsigned char  size(2) Largest target is 80
		 -> STR_10(CODE[4]), STR_9(CODE[4]), STR_6(CODE[4]), STR_5(CODE[4]), 
		 -> dbuf(BANK4[80]), 

    strcpy@s	PTR const unsigned char  size(2) Largest target is 80
		 -> STR_10(CODE[4]), STR_9(CODE[4]), STR_6(CODE[4]), STR_5(CODE[4]), 
		 -> dbuf(BANK4[80]), 

    fputs@s	PTR const unsigned char  size(1) Largest target is 80
		 -> dbuf(BANK4[80]), 

    fputs@fp	PTR struct _IO_FILE size(1) Largest target is 10
		 -> sprintf@f(BANK2[10]), 

    fputc@fp...source	PTR const unsigned char  size(1) Largest target is 0

    fputc@fp...buffer	PTR unsigned char  size(1) Largest target is 0

    fputc@fp	PTR struct _IO_FILE size(1) Largest target is 10
		 -> sprintf@f(BANK2[10]), 

    atoi@s	PTR const unsigned char  size(2) Largest target is 6
		 -> STR_3(CODE[6]), 

    vfprintf@ap	PTR PTR void  size(1) Largest target is 1
		 -> sprintf@ap(BANK2[1]), 

    vfprintf@fp	PTR struct _IO_FILE size(1) Largest target is 10
		 -> sprintf@f(BANK2[10]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 6
		 -> STR_3(CODE[6]), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 6
		 -> STR_3(CODE[6]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(1) Largest target is 10
		 -> sprintf@f(BANK2[10]), 

    vfpfcnvrt@ap	PTR PTR void  size(1) Largest target is 1
		 -> sprintf@ap(BANK2[1]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(1) Largest target is 2
		 -> vfprintf@cfmt(BANK1[2]), 

    efgtoa@fp	PTR struct _IO_FILE size(1) Largest target is 10
		 -> sprintf@f(BANK2[10]), 

    sp__strcpy	PTR unsigned char  size(1) Largest target is 80
		 -> dbuf(BANK4[80]), 

    pad@fp	PTR struct _IO_FILE size(1) Largest target is 10
		 -> sprintf@f(BANK2[10]), 

    pad@buf	PTR unsigned char  size(1) Largest target is 80
		 -> dbuf(BANK4[80]), 

    sprintf@fmt	PTR const unsigned char  size(2) Largest target is 6
		 -> STR_3(CODE[6]), 

    sprintf@s	PTR unsigned char  size(1) Largest target is 15
		 -> main@temp_result(BANK2[15]), 

    sprintf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_sprintf(BANK2[2]), 

    S599$source	PTR const unsigned char  size(1) Largest target is 0

    f...source	PTR const unsigned char  size(1) Largest target is 0

    S599$buffer	PTR unsigned char  size(1) Largest target is 0

    f...buffer	PTR unsigned char  size(1) Largest target is 0

    LCDPutStr3@str	PTR const unsigned char  size(2) Largest target is 14
		 -> STR_1(CODE[14]), 

    LCDPutStr2@str	PTR const unsigned char  size(2) Largest target is 15
		 -> STR_4(CODE[2]), main@temp_result(BANK2[15]), STR_2(CODE[7]), 


Critical Paths under _main in COMMON

    _main->_LCDGoto
    _main->_LCDPutStr2
    _main->___xxtofl
    _tolower->_isupper
    _pad->_fputs
    _fputs->_fputc
    ___flmul->___xxtofl
    ___fldiv->___xxtofl
    _atoi->___wmul
    _atoi->_isdigit
    _LCD_Initialize->_LCDPutCmd
    _LCDPutStr3->_LCDPutChar
    _LCDPutStr3->_LCDPutCmd
    _LCDPutStr2->_LCDPutChar
    _LCDPutStr2->_LCDPutCmd
    _LCDPutChar->_LCDWriteNibble
    _LCDGoto->_LCDPutCmd
    _LCDPutCmd->_LCDWriteNibble

Critical Paths under _main in BANK0

    _vfpfcnvrt->_efgtoa
    _efgtoa->_floorf
    _pad->_fputs
    _floorf->___fldiv
    ___flsub->___flmul
    ___flge->___flmul
    ___fldiv->___flmul

Critical Paths under _main in BANK1

    _main->_sprintf
    _sprintf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_efgtoa

Critical Paths under _main in BANK2

    _main->_sprintf

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                49    49      0   41496
                                             18 BANK2     49    49      0
                            _LCDGoto
                         _LCDPutChar
                          _LCDPutCmd
                         _LCDPutStr2
                         _LCDPutStr3
                     _LCD_Initialize
                            ___fldiv
                             ___flge
                            ___flmul
                           ___xxtofl
                            _sprintf
 ---------------------------------------------------------------------------------
 (1) _sprintf                                             21    15      6   28193
                                             77 BANK1      1     1      0
                                              0 BANK2     18    12      6
                           _vfprintf
 ---------------------------------------------------------------------------------
 (2) _vfprintf                                             8     5      3   27879
                                             69 BANK1      8     5      3
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (3) _vfpfcnvrt                                           40    38      2   27539
                                             51 BANK1     18    16      2
                               _atoi
                             _efgtoa
                              _fputc
                            _isdigit
                            _isupper
                            _strncmp
                            _tolower
 ---------------------------------------------------------------------------------
 (4) _strncmp                                              9     5      4     410
                                              0 COMMON     9     5      4
 ---------------------------------------------------------------------------------
 (4) _efgtoa                                              59    54      5   22381
                                             72 BANK0      8     3      5
                                              0 BANK1     51    51      0
                            ___awdiv
                            ___awmod
                            ___fladd
                            ___fldiv
                             ___fleq
                             ___flge
                            ___flmul
                            ___flneg
                            ___flsub
                            ___fltol
                      ___fpclassifyf
                             _floorf
                            _isupper
                                _pad
                             _strcpy
                            _tolower
 ---------------------------------------------------------------------------------
 (4) _tolower                                              4     2      2     920
                                              6 COMMON     4     2      2
                            _isupper
 ---------------------------------------------------------------------------------
 (5) _isupper                                              6     4      2     465
                                              0 COMMON     6     4      2
 ---------------------------------------------------------------------------------
 (5) _strcpy                                               8     6      2     641
                                              0 COMMON     8     6      2
 ---------------------------------------------------------------------------------
 (5) _pad                                                  9     6      3    3026
                                             12 COMMON     1     1      0
                                              4 BANK0      8     5      3
                              _fputc
                              _fputs
                             _strlen
 ---------------------------------------------------------------------------------
 (6) _fputs                                                8     7      1    1149
                                              8 COMMON     4     3      1
                                              0 BANK0      4     4      0
                              _fputc
 ---------------------------------------------------------------------------------
 (4) _fputc                                                8     5      3     834
                                              0 COMMON     8     5      3
                              _putch
 ---------------------------------------------------------------------------------
 (5) _putch                                                1     1      0       0
 ---------------------------------------------------------------------------------
 (5) _floorf                                              20    16      4     490
                                             52 BANK0     20    16      4
                            ___fldiv (ARG)
 ---------------------------------------------------------------------------------
 (5) ___fpclassifyf                                       16    12      4     287
                                              0 COMMON    10     6      4
                                              0 BANK0      6     6      0
 ---------------------------------------------------------------------------------
 (5) ___fltol                                             11     7      4     381
                                              0 COMMON    11     7      4
 ---------------------------------------------------------------------------------
 (5) ___flsub                                              8     0      8    2637
                                             26 BANK0      8     0      8
                            ___fladd
                            ___flmul (ARG)
 ---------------------------------------------------------------------------------
 (6) ___fladd                                             20    12      8    2288
                                              0 COMMON    12     4      8
                                              0 BANK0      8     8      0
 ---------------------------------------------------------------------------------
 (5) ___flneg                                              4     0      4     121
                                              0 COMMON     4     0      4
 ---------------------------------------------------------------------------------
 (5) ___flmul                                             26    18      8    3633
                                              0 BANK0     26    18      8
                          __Umul8_16
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (6) __Umul8_16                                            9     7      2     799
                                              0 COMMON     9     7      2
 ---------------------------------------------------------------------------------
 (5) ___flge                                              12     4      8    1246
                                             26 BANK0     12     4      8
                            ___flmul (ARG)
 ---------------------------------------------------------------------------------
 (5) ___fleq                                              12     4      8     394
                                              0 COMMON    12     4      8
 ---------------------------------------------------------------------------------
 (5) ___fldiv                                             26    18      8    2033
                                             26 BANK0     26    18      8
                            ___flmul (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (5) ___awmod                                              7     3      4     448
                                              0 COMMON     7     3      4
 ---------------------------------------------------------------------------------
 (5) ___awdiv                                              9     5      4     452
                                              0 COMMON     9     5      4
 ---------------------------------------------------------------------------------
 (4) _atoi                                                 9     7      2    1013
                                              6 COMMON     5     3      2
                                              0 BANK0      4     4      0
                             ___wmul
                            _isdigit
                            _isspace
 ---------------------------------------------------------------------------------
 (5) _isspace                                              5     3      2     207
                                              0 COMMON     5     3      2
 ---------------------------------------------------------------------------------
 (4) _isdigit                                              6     4      2     237
                                              0 COMMON     6     4      2
 ---------------------------------------------------------------------------------
 (5) ___wmul                                               6     2      4     244
                                              0 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (1) ___xxtofl                                            14    10      4     398
                                              0 COMMON    14    10      4
 ---------------------------------------------------------------------------------
 (1) _LCD_Initialize                                       1     1      0     461
                                              7 COMMON     1     1      0
                          _LCDPutCmd
 ---------------------------------------------------------------------------------
 (1) _LCDPutStr3                                          11     8      3    1564
                                              7 COMMON     6     3      3
                                              0 BANK0      5     5      0
                         _LCDPutChar
                          _LCDPutCmd
                             _strlen
 ---------------------------------------------------------------------------------
 (6) _strlen                                               5     3      2     242
                                              0 COMMON     5     3      2
 ---------------------------------------------------------------------------------
 (1) _LCDPutStr2                                          13     9      4    1899
                                              7 COMMON     7     3      4
                                              0 BANK0      6     6      0
                         _LCDPutChar
                          _LCDPutCmd
 ---------------------------------------------------------------------------------
 (2) _LCDPutChar                                           3     3      0     461
                                              4 COMMON     3     3      0
                     _LCDWriteNibble
 ---------------------------------------------------------------------------------
 (1) _LCDGoto                                              7     6      1     869
                                              7 COMMON     7     6      1
                          _LCDPutCmd
 ---------------------------------------------------------------------------------
 (2) _LCDPutCmd                                            3     3      0     461
                                              4 COMMON     3     3      0
                     _LCDWriteNibble
 ---------------------------------------------------------------------------------
 (3) _LCDWriteNibble                                       4     3      1     394
                                              0 COMMON     4     3      1
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _LCDGoto
     _LCDPutCmd
       _LCDWriteNibble
   _LCDPutChar
     _LCDWriteNibble
   _LCDPutCmd
   _LCDPutStr2
     _LCDPutChar
     _LCDPutCmd
   _LCDPutStr3
     _LCDPutChar
     _LCDPutCmd
     _strlen
   _LCD_Initialize
     _LCDPutCmd
   ___fldiv
     ___flmul (ARG)
       __Umul8_16
       ___xxtofl (ARG)
     ___xxtofl (ARG)
   ___flge
     ___flmul (ARG)
   ___flmul
   ___xxtofl
   _sprintf
     _vfprintf
       _vfpfcnvrt
         _atoi
           ___wmul
           _isdigit
           _isspace
         _efgtoa
           ___awdiv
           ___awmod
           ___fladd
           ___fldiv
           ___fleq
           ___flge
           ___flmul
           ___flneg
           ___flsub
             ___fladd
             ___flmul (ARG)
           ___fltol
           ___fpclassifyf
           _floorf
             ___fldiv (ARG)
           _isupper
           _pad
             _fputc
               _putch
             _fputs
               _fputc
             _strlen
           _strcpy
           _tolower
             _isupper
         _fputc
         _isdigit
         _isupper
         _strncmp
         _tolower

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             1F0      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      E       E       2      100.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
ABS                  0      0     15F       4        0.0%
BITBANK0            50      0       0       5        0.0%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BANK0               50     50      50       6      100.0%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BITBANK1            50      0       0       7        0.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BANK1               50     4E      50       8      100.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BITBANK2            50      0       0       9        0.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BANK2               50     43      4D      10       96.2%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BITBANK3            50      0       0      11        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BANK3               50      0      14      12       25.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BITBANK4            50      0       0      13        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BANK4               50      0      50      14      100.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BITBANK5            50      0       0      15        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BANK5               50      0       0      16        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BITBANK6            10      0       0      17        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BANK6               10      0       0      18        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
DATA                 0      0     15F      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V2.36 build 20220127204148 
Symbol Table                                                                                   Sun May 08 14:48:24 2022

           ___fldiv@aexp 0053             ___fldiv@bexp 0052           _LCD_Initialize 1E62  
           ___fldiv@sign 004B                       l43 1531              ?_LCDPutChar 0070  
                     l44 1533                       l47 1620                       l72 1E03  
                     l66 1E81                       l75 1E22                       l69 1E61  
                     l87 1138                       l98 11F2             ___awdiv@sign 0076  
            ?_LCDPutStr2 0077              ?_LCDPutStr3 0077      ___wmul@multiplicand 0072  
    __Umul8_16@word_mpld 0076                      l111 1F5E                      l500 0B20  
                    l352 1FFF                      l512 0A99                      l361 1FAC  
                    l521 0AF3                      l186 1E2D                      l602 1EF6  
                    l530 0B20                      l339 1251                      l355 1F7B  
                    l188 1E41                      l356 1F97                      l372 135B  
                    l364 12EE                      l604 1F06                      l508 0A77  
                    l380 007B                      l533 1EA1                      l518 0ABB  
                    l390 007B                      l543 16A3                      l367 1342  
                    l711 07D8                      l640 08AD                      l376 1D76  
                    l641 08B9                      l633 0893                      l545 17FF  
                    l529 0B16                      l627 0858                      l491 09E2  
                    l387 0066                      l564 17CD                      l724 02CF  
                    l629 08E1                      l565 17E7                      l493 09BD  
                    l725 02B1                      l821 0835                      l902 10DE  
                    l910 1F2F                      l750 054E                      l567 17F6  
                    l559 1781                      l583 0D77                      l487 0940  
                    l831 12D0                      l735 0313                      l913 0007  
                    l809 0FFF                      l649 102D                      l690 1155  
                    l595 0D6B                      l755 0564                      l925 1DE6  
                    l589 0CF3                      l693 1177                      l846 138A  
                    l862 1431                      l942 1D9D                      l863 14DA  
                    l695 1194                      l919 1EE3                      l791 0DAC  
                    l792 0DAE                      l873 1DB5                      l881 1EC2  
                    l857 13EF                      l929 1085                      l793 0DB0  
                    l794 0DB2                      l867 14D2                      l939 1D9D  
                    l796 0DE3                      l789 0DA2                      l887 1DCD  
                    _pad 1139             ___awmod@sign 0076                      wreg 0009  
           ___flmul@aexp 0032             ___flmul@bexp 0033             ___flmul@sign 002D  
           ___flmul@temp 0038             ___flmul@prod 0034          __end_of_LCDGoto 1F5F  
           ___fltol@exp1 007A                     l3001 16D2                     l3011 16FC  
                   l3003 16E2                     l3013 1701                     l3021 171B  
                   l3005 16EA                     l3101 0B42                     l3031 1740  
                   l3023 172D                     l3015 170F                     l3007 16F2  
                   l3111 0B59                     l3103 0B44                     l3041 1756  
                   l3033 1748                     l3025 172E                     l3017 1713  
                   l3009 16FA                     l3201 0D09                     l3121 0B6E  
                   l3113 0B5A                     l3105 0B4C                     l4001 14F8  
                   l3051 176A                     l3043 175D                     l3035 174A  
                   l3027 1736                     l3019 1714                     l3211 0D4A  
                   l3203 0D21                     l3131 0B89                     l3123 0B76  
                   l3115 0B5F                     l3107 0B51                     l4011 1504  
                   l4003 14F9                     l4101 139B                     l3061 1793  
                   l3053 177E                     l3037 1751                     l3045 1761  
                   l3029 173A                     l3221 0D67                     l3213 0D53  
                   l3205 0D25                     l3141 0BE4                     l3133 0B96  
                   l3125 0B7B                     l3117 0B64                     l3109 0B55  
                   l3301 1463                     l4021 151F                     l4013 1513  
                   l4005 14FB                     l3071 17DB                     l3063 1797  
                   l3047 1765                     l3039 1755                     l3223 0D6F  
                   l3215 0D55                     l3207 0D32                     l3151 0C19  
                   l3143 0BF1                     l3135 0BA3                     l3127 0B80  
                   l3119 0B6C                     l3311 14B3                     l3303 147A  
                   l3231 1149                     l4031 15C1                     l4023 1524  
                   l4007 14FC                     l3321 1EA2                     l3081 17F2  
                   l3073 17DE                     l3065 17AF                     l3057 1786  
                   l3049 1766                     l3217 0D62                     l3209 0D3C  
                   l3161 0C5C                     l3153 0C26                     l3145 0BFE  
                   l3137 0BBD                     l2601 0956                     l3313 14CA  
                   l3305 1482                     l3241 1169                     l3233 114E  
                   l3401 01AC                     l4041 15F7                     l4033 15D1  
                   l4025 1537                     l4009 1500                     l3323 1EA4  
                   l3075 17E6                     l3059 178B                     l3067 17B3  
                   l3219 0D66                     l3171 0CB0                     l3163 0C69  
                   l3155 0C2D                     l3147 0C05                     l3139 0BCA  
                   l3091 0B2B                     l2611 096A                     l2603 095A  
                   l3251 126A                     l3307 1493                     l2531 10A0  
                   l2523 1086                     l3243 117C                     l3235 1153  
                   l3227 113B                     l3411 01F6                     l3403 01AE  
                   l4043 1616                     l4035 15DF                     l4027 1551  
                   l4019 1515                     l2541 1DD3                     l3317 1D9E  
                   l3325 1EAB                     l3077 17EC                     l3069 17C0  
                   l3181 0CCF                     l3173 0CBC                     l3165 0C7D  
                   l3157 0C41                     l3149 0C12                     l3093 0B2F  
                   l2701 0AA7                     l2621 097E                     l2613 096E  
                   l2605 095E                     l3253 127F                     l3309 14AA  
                   l2533 10C0                     l2525 108B                     l3245 1185  
                   l3237 1158                     l3229 1140                     l3501 0557  
                   l3421 029A                     l3413 0232                     l3341 00B3  
                   l3333 007E                     l4045 163F                     l4037 15E5  
                   l4029 1595                     l2543 1DD7                     l3327 1EBA  
                   l3079 17F0                     l3191 0CF0                     l3175 0CC3  
                   l3183 0CD3                     l3167 0C92                     l3159 0C48  
                   l3095 0B30                     l3087 0B21                     l2711 0AB8  
                   l2703 0AA9                     l2631 09A2                     l2623 0982  
                   l2615 0972                     l2607 0962                     l2551 08E8  
                   l3255 1285                     l3263 12A6                     l2535 10D4  
                   l2527 1090                     l3239 1164                     l3511 05BE  
                   l3503 055D                     l3431 02C6                     l3423 02A0  
                   l3415 025E                     l3407 01C6                     l3351 00DC  
                   l3343 00C7                     l3335 0080                     l4039 15E9  
                   l2545 1DE0                     l3329 1EBB                     l2801 1214  
                   l3185 0CD7                     l3177 0CC7                     l3169 0CA9  
                   l3097 0B35                     l3089 0B27                     l2721 0AD1  
                   l2705 0AAD                     l2641 09CF                     l2633 09C1  
                   l2625 0986                     l2617 0976                     l2609 0966  
                   l2561 08FB                     l2553 08EC                     l3265 12AC  
                   l3257 129C                     l3249 1252                     l2529 1095  
                   l3273 1EC4                     l3281 1D87                     l3601 0766  
                   l3521 05D9                     l3513 05C4                     l3505 0562  
                   l3441 02EA                     l3425 02A6                     l3417 0262  
                   l3409 01F2                     l3361 00F6                     l3353 00E2  
                   l3345 00CA                     l3337 0090                     l2539 1DCE  
                   l2811 1233                     l2803 1217                     l3195 0CF8  
                   l3187 0CD8                     l3179 0CC8                     l3099 0B3A  
                   l2731 0B0A                     l2723 0AEF                     l2715 0AC0  
                   l2707 0AAE                     l2643 09D8                     l2635 09C8  
                   l2619 097A                     l2627 098A                     l2571 0913  
                   l2563 0903                     l2555 08F0                     l3259 12A1  
                   l3291 1423                     l3275 1ECC                     l3283 1D96  
                   l3611 0786                     l3603 076C                     l3531 05F7  
                   l3523 05DD                     l3515 05CA                     l3507 056B  
                   l3451 0323                     l3443 0306                     l3427 02AD  
                   l3419 0289                     l3371 011C                     l3355 00E7  
                   l3363 00FA                     l3347 00D2                     l3339 00AE  
                   l3701 1E5F                     l2821 1248                     l2813 1237  
                   l2805 121C                     l3197 0CFD                     l3189 0CDC  
                   l2901 1D76                     l2741 0B1F                     l2733 0B0B  
                   l2725 0AF8                     l2717 0AC5                     l2709 0AB2  
                   l2661 0A0B                     l2653 09F4                     l2637 09CA  
                   l2645 09DC                     l2629 098B                     l2581 0923  
                   l2573 0919                     l2565 0904                     l2557 08F1  
                   l2549 08E2                     l3269 12CC                     l3293 1430  
                   l3277 1D87                     l3621 07A6                     l3605 0771  
                   l3541 0616                     l3533 0603                     l3525 05E9  
                   l3517 05CE                     l3509 05BA                     l3461 033D  
                   l3453 0327                     l3445 030D                     l3437 02D5  
                   l3429 02C0                     l3373 0127                     l3381 014E  
                   l3357 00EB                     l3349 00D8                     l3703 1E60  
                   l3631 135C                     l2823 124D                     l2815 1238  
                   l2807 1220                     l2831 1FB2                     l2751 1EFD  
                   l2743 1EE5                     l3199 0D05                     l2735 0B0F  
                   l2727 0AFD                     l2719 0ACD                     l2663 0A0D  
                   l2655 09FC                     l2647 09E6                     l2671 0A20  
                   l2639 09CE                     l2583 0928                     l2591 0938  
                   l2575 091A                     l2559 08F6                     l2567 0906  
                   l2911 001C                     l3295 1436                     l3287 13F0  
                   l3623 07B2                     l3615 078A                     l3607 0775  
                   l3551 06A6                     l3543 0623                     l3535 0608  
                   l3527 05EE                     l3519 05D3                     l3471 0353  
                   l3463 033F                     l3455 032B                     l3447 0317  
                   l3439 02DB                     l3391 017C                     l3375 0131  
                   l3359 00F1                     l3711 0D99                     l3641 1385  
                   l3633 1362                     l2817 123D                     l2809 1224  
                   l2841 1FC8                     l2833 1FB7                     l2753 1F02  
                   l2745 1EE7                     l2737 0B11                     l2729 0B05  
                   l2673 0A37                     l2681 0A6F                     l2665 0A11  
                   l2657 0A00                     l2649 09EB                     l2593 0946  
                   l2585 092D                     l2577 091E                     l2569 090E  
                   l2921 003E                     l2913 002F                     l2905 0008  
                   l3297 144E                     l3289 1408                     l2761 1F1A  
                   l3625 07B7                     l3617 079B                     l3609 0781  
                   l3561 06D7                     l3553 06AA                     l3545 0628  
                   l3537 060C                     l3529 05F2                     l3481 048D  
                   l3473 035C                     l3465 0345                     l3457 0331  
                   l3449 031D                     l3393 0186                     l3377 0136  
                   l3369 010B                     l3801 0FCB                     l3713 0D9E  
                   l3705 0D7A                     l2771 1E25                     l3651 13C4  
                   l3643 138F                     l2819 1243                     l2851 1FE2  
                   l2843 1FCB                     l2835 1FB9                     l2827 1FAD  
                   l2747 1EEE                     l2739 0B1B                     l2691 0A94  
                   l2683 0A7F                     l2675 0A5B                     l2667 0A12  
                   l2659 0A04                     l2595 094A                     l2587 0935  
                   l2579 0922                     l2915 0030                     l2907 0013  
                   l2763 1F1F                     l3619 07A1                     l3571 06F8  
                   l3627 07C1                     l3563 06DB                     l3539 0610  
                   l3547 062C                     l3555 06AE                     l3491 04D9  
                   l3483 0497                     l3475 0425                     l3459 0335  
                   l3467 0349                     l3395 018B                     l3387 0160  
                   l4099 0DCC                     l3715 0DA3                     l3731 0DDD  
                   l3707 0D8B                     l3811 0FDC                     l3901 1100  
                   l2773 1E29                     l3653 13D8                     l3645 13A3  
                   l3637 1366                     l2861 1FFB                     l2853 1FE6  
                   l2845 1FD0                     l2837 1FBD                     l2829 1FAE  
                   l2749 1EF2                     l2693 0A98                     l2685 0A84  
                   l2677 0A61                     l2669 0A1B                     l2597 094E  
                   l2589 0936                     l2941 1E82                     l2917 0038  
                   l2757 1F09                     l2765 1DB6                     l3581 070C  
                   l3573 06FC                     l3565 06E7                     l3557 06C0  
                   l3549 067A                     l3493 0513                     l3485 04AF  
                   l3477 0429                     l3469 034B                     l3389 0171  
                   l3813 0FF5                     l3805 0FD1                     l3741 0E08  
                   l3733 0DE7                     l3725 0DB4                     l3709 0D93  
                   ?_pad 0024                     l3831 1E1D                     l3823 1E05  
                   l3911 1114                     l3903 1105                     l2775 1E32  
                   l3655 13DF                     l3639 1370                     l2791 11FF  
                   l2783 11F3                     l2855 1FEB                     l2847 1FD4  
                   l2839 1FC2                     l2951 1656                     l2871 1FA9  
                   l2695 0A9D                     l2679 0A66                     l2599 0952  
                   l2943 1E85                     l2935 005D                     l2927 0046  
                   l2919 003A                     l2759 1F0C                     l3591 0744  
                   l3583 0711                     l3575 0702                     l3567 06EC  
                   l3559 06D0                     l3495 0518                     l3487 04B4  
                   l3479 043B                     l3399 01A3                     l3807 0FD9  
                   l3743 0E19                     l3735 0DEB                     l3825 1E09  
                   l3833 1DE8                     l3913 1118                     l3905 1109  
                   l2777 1E37                     l2769 1E23                     l3657 13EB  
                   l2793 1203                     l2785 11F4                     l2849 1FD8  
                   l2857 1FF1                     l2961 166D                     l2953 165A  
                   l2873 1FAB                     l2865 1F5F                     l2881 1302  
                   l2697 0AA0                     l2689 0A8D                     l2937 006B  
                   l2929 0056                     l3593 0748                     l3585 0716  
                   l3577 0704                     l3569 06F2                     l3497 0544  
                   l3489 04BC                     l3681 105A                     l3673 1046  
                   l3665 102F                     l3761 0EA2                     l3753 0E49  
                   l3745 0E21                     l3737 0DFC                     l3729 0DB9  
                   l3841 0807                     l3921 1012                     l3691 1E43  
                   l3827 1E0E                     l3931 1F3F                     l3835 1DEC  
                   l3915 1127                     l3907 110D                     l2779 1E3D  
                   l2795 1208                     l2787 11F8                     l2859 1FF6  
                   l2971 1681                     l2963 166E                     l2955 165B  
                   l2947 164C                     l2867 1F73                     l2891 1358  
                   l2883 130A                     l2699 0AA2                     l2939 0070  
                   l3587 071B                     l3595 074C                     l3579 0708  
                   l3499 054A                     l3683 1063                     l3675 104A  
                   l3667 1037                     l3771 0EE1                     l3763 0EA7  
                   l3747 0E31                     l3739 0DFF                     l3755 0E65  
                   l3843 080B                     l3923 1014                     l3693 1E4D  
                   l3829 1E19                     l3941 1F5A                     l3933 1F46  
                   l3837 1DF2                     l3909 1110                     l3861 1E75  
                   l3853 1E62                     l2797 120C                     l2789 11FD  
                   l2981 1698                     l2973 1685                     l2957 1660  
                   l2965 1670                     l2949 1652                     l2869 1F8F  
                   l2893 135A                     l2885 130E                     l2877 12D1  
                   l3597 0752                     l3589 0733                     l3685 1069  
                   l3677 104E                     l3669 1043                     l3773 0EF3  
                   l3765 0EC4                     l3757 0E80                     l3749 0E41  
                   l3845 080F                     l3925 1023                     l3917 1004  
                   l3695 1E52                     l3935 1F4B                     l3839 1DFD  
                   l3871 11AC                     l3863 1E79                     l3855 1E66  
                   l3951 0860                     l3943 0837                     l2799 120E  
                   l2991 16BB                     l2983 1699                     l2975 1686  
                   l2967 1678                     l2959 1665                     l2887 1326  
                   l2879 12E6                     l3599 0761                     l3687 1078  
                   l3679 1052                     l3791 0F83                     l3783 0F3B  
                   l3767 0ECA                     l3759 0E85                     l3847 0823  
                   l3919 1010                     l3697 1E59                     l3937 1F51  
                   l3929 1F31                     l3881 11C3                     l3865 1E7D  
                   l3857 1E6D                     l3961 0880                     l3945 083C  
                   l2977 168B                     l2985 169B                     l2969 167D  
                   l2889 132A                     l2897 1D6C                     l3785 0F56  
                   l3769 0ED9                     l3777 0F16                     l3849 082D  
                   l3699 1E5E                     l3939 1F56                     l3891 11E2  
                   l3883 11C7                     l3875 11B3                     l3867 1195  
                   l3859 1E71                     l3971 08A7                     l3963 0884  
                   l3955 0869                     l3947 0840                     l2987 16AB  
                   l2995 16C4                     l2979 1690                     l2899 1D74  
                   l3787 0F69                     l3779 0F28                     l3795 0FA6  
                   l3893 10DF                     l3885 11CB                     l3877 11B8  
                   l3869 11A8                     l3981 08D8                     l3973 08B1  
                   l3965 088C                     l3957 086E                     l3949 0850  
                   l2997 16C9                     l2989 16B7                     l3797 0FB8  
                   l3789 0F7B                     l3895 10EE                     l3887 11CE  
                   l3879 11BE                     l3983 08D9                     l3975 08BB  
                   l3967 089A                     l3959 0879                     l3799 0FC0  
                   l3991 14E6                     l3897 10F5                     l3889 11DD  
                   l3977 08CF                     l3969 08A3                     l3993 14F0  
                   l3899 10FA                     l3979 08D4                     l3995 14F2  
                   l3987 14DB                     l3997 14F4                     l3989 14DE  
                   l3999 14F6                     STR_1 1800                     STR_2 180E  
                   STR_3 1815                     STR_4 182E                     STR_5 181B  
                   STR_6 1823                     STR_9 181F                     u3000 09AC  
                   u3010 09C1                     u3011 09C0                     u3020 09CE  
                   u3021 09CD                     u3110 0A37                     u3111 0A36  
                   u4000 176A                     u3200 0AB2                     u3120 0A66  
                   u3040 09E2                     u4001 1769                     u3201 0AB1  
                   u3121 0A65                     u3113 0A33                     u3105 0A15  
                   u3041 09E1                     u4010 177E                     u3210 0AB8  
                   u3130 0A7F                     u3050 09E6                     u4011 177D  
                   u3211 0AB7                     u3131 0A7E                     u3051 09E5  
                   u3035 09D2                     u4020 1785                     u4100 0B35  
                   u3300 0B0F                     u3220 0ABF                     u3140 0A84  
                   u3060 09EB                     u4021 1784                     u4101 0B34  
                   u3301 0B0E                     u3221 0ABE                     u3141 0A83  
                   u3061 09EA                     u4030 178B                     u4110 0B3A  
                   u3310 0B1F                     u3230 0AC5                     u3070 0A00  
                   u4031 178A                     u4111 0B39                     u3311 0B1E  
                   u3231 0AC4                     u3071 09FF                     u4040 1797  
                   u3320 1EF2                     u4200 0C9F                     u4120 0B59  
                   u3240 0AD1                     u3160 0A98                     u3080 0A04  
                   u5000 05DD                     u4041 1796                     u3321 1EF1  
                   u4121 0B58                     u3241 0AD0                     u3161 0A97  
                   u3081 0A03                     u5001 05DC                     u3410 1E3D  
                   u4050 17A5                     u4130 0B5F                     u3250 0AE0  
                   u3170 0A9D                     u3090 0A11                     u5010 0616  
                   u3411 1E3C                     u4131 0B5E                     u3171 0A9C  
                   u3155 0A8E                     u3091 0A10                     u5011 0615  
                   u3500 1243                     u3420 11F8                     u4060 17C0  
                   u3340 1F02                     u4300 0D09                     u4140 0B64  
                   u3260 0AEF                     u3180 0AA7                     u5100 076C  
                   u5020 06C0                     u3405 1E33                     u3501 1242  
                   u3421 11F7                     u4061 17BF                     u3341 1F01  
                   u4301 0D08                     u4205 0C9B                     u4141 0B63  
                   u3261 0AEE                     u3181 0AA6                     u5101 076B  
                   u5021 06BF                     u3510 1248                     u3430 1203  
                   u4070 17DB                     u4310 0D17                     u4230 0CC7  
                   u4150 0B7B                     u3270 0AF8                     u3190 0AAD  
                   u3350 1F2F                     u5110 079B                     u5030 06D0  
                   u3511 1247                     u3431 1202                     u4071 17DA  
                   u4055 17A1                     u3335 1EF7                     u4231 0CC6  
                   u4215 0CAA                     u4151 0B7A                     u3271 0AF7  
                   u3255 0ADC                     u3191 0AAC                     u3351 1F2E  
                   u5111 079A                     u5031 06CF                     u5120 1370  
                   u3440 1214                     u3600 1FF6                     u3520 1FB2  
                   u4080 17F0                     u4320 0D32                     u4160 0B80  
                   u3280 0AFD                     u4400 1285                     u3360 1DC6  
                   u5040 06D7                     u5200 1078                     u5121 136F  
                   u3441 1213                     u3601 1FF5                     u3521 1FB1  
                   u4081 17EF                     u4065 17BC                     u4321 0D31  
                   u4225 0CBD                     u4161 0B7F                     u3281 0AFC  
                   u4401 1284                     u3361 1DC4                     u5041 06D6  
                   u5025 06BC                     u5201 1077                     u5130 1384  
                   u3530 1FBD                     u3610 1F73                     u4330 0D4A  
                   u4250 0CD7                     u4090 0B2F                     u3290 0B0A  
                   u4410 1292                     u3370 1DC7                     u5050 06DB  
                   u5131 1383                     u3531 1FBC                     u4075 17D7  
                   u3611 1F72                     u4331 0D49                     u4315 0D13  
                   u4251 0CD6                     u4091 0B2E                     u3291 0B09  
                   u5051 06DA                     u5035 06CC                     u3380 1E29  
                   u5140 13D8                     u3460 1224                     u3540 1FC8  
                   u3620 1F8F                     u4340 0D66                     u4260 0CDC  
                   u2900 08F6                     u3700 0013                     u4420 129C  
                   u4500 1430                     u5060 06F8                     u5300 0ECA  
                   u5220 0D8B                     u3381 1E28                     u5141 13D7  
                   u3461 1223                     u3541 1FC7                     u3621 1F8E  
                   u4341 0D65                     u4325 0D2E                     u4261 0CDB  
                   u4245 0CC9                     u2901 08F5                     u3701 0012  
                   u4421 129B                     u4501 142F                     u5061 06F7  
                   u5301 0EC9                     u5221 0D8A                     u5150 13DF  
                   u3630 1FA9                     u4270 0CF0                     u4190 0C88  
                   u2910 08FB                     u3710 0029                     u4430 12AC  
                   u4510 1436                     u4350 1140                     u5070 0708  
                   u5310 0F28                     u5230 0DE3                     u5215 1E46  
                   u5151 13DE                     u3455 1218                     u3631 1FA8  
                   u4335 0D46                     u4271 0CEF                     u4175 0BFF  
                   u2911 08FA                     u4431 12AB                     u4415 128E  
                   u4511 1435                     u4351 113F                     u5071 0707  
                   u5311 0F27                     u5231 0DE2                     u5400 10EE  
                   u4600 1DAE                     u3480 1233                     u3560 1FD8  
                   u3800 165A                     u3640 12E6                     u4280 0CF7  
                   u2920 0919                     u3720 003E                     u4440 12B9  
                   u4520 1444                     u2840 108B                     u4360 114E  
                   u5080 0752                     u5160 1043                     u5320 0F56  
                   u5240 0DE7                     u5401 10ED                     u4601 1DAC  
                   u3481 1232                     u3561 1FD7                     u3801 1659  
                   u3641 12E5                     u4281 0CF6                     u4185 0C2E  
                   u2921 0918                     u3721 003D                     u4505 142C  
                   u2841 108A                     u4361 114D                     u5081 0751  
                   u5161 1042                     u5321 0F55                     u5241 0DE6  
                   u5410 10F4                     u4610 1DAF                     u3570 1FE2  
                   u3810 1660                     u3650 1302                     u4290 0CFD  
                   u2930 0922                     u3730 0045                     u4450 12C4  
                   u4530 1462                     u2850 1090                     u4370 1177  
                   u5090 0761                     u5170 105A                     u5330 0FB8  
                   u5250 0DFC                     u5411 10F3                     u3395 1E2E  
                   u3475 1225                     u3571 1FE1                     u3555 1FCC  
                   u3811 165F                     u3635 1FA5                     u3651 1301  
                   u4291 0CFC                     u4195 0C84                     u2931 0921  
                   u3731 0044                     u3715 0025                     u4451 12C2  
                   u4531 1461                     u2851 108F                     u4371 1176  
                   u5091 0760                     u5171 1059                     u5331 0FB7  
                   u5251 0DFB                     u5420 10FA                     u4620 1EAB  
                   u3820 1665                     u3660 130E                     u2940 0928  
                   u4460 12C5                     u4540 1470                     u2860 10A0  
                   u4380 117C                     u4700 0160                     u5180 1063  
                   u5260 0E19                     u5421 10F9                     u4621 1EAA  
                   u3485 122F                     u3821 1664                     u3661 130D  
                   u2941 0927                     u4445 12B5                     u4525 1440  
                   u2861 109F                     u4381 117B                     u4701 015F  
                   u5181 1062                     u5261 0E18                     u5430 1138  
                   u5510 087F                     u4630 1EBA                     u3590 1FF1  
                   u3910 1713                     u3830 1685                     u3670 132A  
                   u2950 092D                     u3750 0055                     u4390 1277  
                   u4550 147A                     u2870 10C0                     u4470 1EE3  
                   u4710 0171                     u5190 1069                     u5270 0E65  
                   u5431 1137                     u5511 087E                     u4631 1EB9  
                   u3495 1239                     u3591 1FF0                     u3575 1FDE  
                   u3911 1712                     u3831 1684                     u3671 1329  
                   u2951 092C                     u3751 0054                     u4551 1479  
                   u2871 10BF                     u4375 1173                     u4471 1EE2  
                   u5095 075D                     u4711 0170                     u5191 1068  
                   u5271 0E64                     u5440 1F3F                     u2880 1DE0  
                   u5600 08D8                     u3840 168B                     u3680 1358  
                   u2960 0946                     u3760 005C                     u4560 14A0  
                   u4480 1D96                     u4800 02EA                     u4720 01C5  
                   u4640 00AE                     u5280 0E85                     u5360 082D  
                   u5345 1E11                     u5441 1F3E                     u2881 1DDF  
                   u5601 08D7                     u5505 0873                     u3585 1FE7  
                   u3905 1709                     u3841 168A                     u3681 1357  
                   u2961 0945                     u3761 005B                     u3745 0047  
                   u4545 146C                     u4481 1D95                     u4801 02E9  
                   u4721 01C4                     u4641 00AD                     u5281 0E84  
                   u5361 082C                     u5450 1F45                     u5370 11B2  
                   u5530 0899                     u3930 172D                     u3850 1690  
                   u3690 1D74                     u2970 094A                     u2890 08F0  
                   u4570 14AA                     u4490 1415                     u4810 0306  
                   u4730 0231                     u4650 00D8                     u5290 0EA7  
                   u5610 150F                     u5451 1F44                     u5355 1DF5  
                   u5371 11B1                     u5531 0898                     u3931 172C  
                   u3851 168F                     u3691 1D73                     u2971 0949  
                   u2891 08EF                     u4395 1273                     u4571 14A9  
                   u2875 10BC                     u4811 0305                     u4731 0230  
                   u4651 00D7                     u5291 0EA6                     u5460 1F4B  
                   u5380 11B8                     u3940 1740                     u3860 16AB  
                   u2980 09A2                     u3780 006B                     u4580 14C0  
                   u4900 04AF                     u4820 031D                     u4740 0289  
                   u4660 00DC                     u5620 1531                     u5461 1F4A  
                   u5381 11B7                     u5525 088D                     u3941 173F  
                   u3925 1715                     u3861 16AA                     u3685 1354  
                   u2981 09A1                     u3781 006A                     u4565 149C  
                   u4901 04AE                     u4821 031C                     u4805 02E6  
                   u4741 0288                     u4661 00DB                     u5621 1530  
                   u5390 11F2                     u5550 08A7                     u5470 083C  
                   u3950 1748                     u3870 16C9                     u2990 09AB  
                   u3790 0070                     u4590 14CA                     u4910 04B4  
                   u4830 0323                     u4750 02A6                     u4670 00E2  
                   u5630 1537                     u5391 11F1                     u5551 08A6  
                   u5471 083B                     u3951 1747                     u3935 1729  
                   u3871 16C8                     u2991 09A9                     u3791 006F  
                   u3775 005E                     u4591 14C9                     u4495 1411  
                   u4911 04B3                     u4831 0322                     u4815 0302  
                   u4751 02A5                     u4671 00E1                     u5631 1536  
                   u5560 08AD                     u5480 0840                     u3880 1701  
                   u4920 0513                     u4840 0327                     u4760 02AD  
                   u4680 010B                     u5640 1616                     u5561 08AC  
                   u5545 089D                     u5481 083F                     u3881 1700  
                   u2985 099E                     u4585 14BC                     u4921 0512  
                   u4841 0326                     u4761 02AC                     u4681 010A  
                   u5641 1615                     u5625 152D                     u5570 08B1  
                   u5490 0860                     u3970 1755                     u4930 054A  
                   u4850 0331                     u4770 02C0                     u4690 011C  
                   u5650 163F                     u5707 110A                     u5571 08B0  
                   u5491 085F                     u3971 1754                     u4931 0549  
                   u4851 0330                     u4771 02BF                     u4691 011B  
                   u5651 163E                     u5580 08C5                     u4940 055D  
                   u4860 0335                     u4780 02D4                     u5717 1DE9  
                   u3965 174B                     u4941 055C                     u4861 0334  
                   u4781 02D3                     u5590 08D4                     u3990 1765  
                   u4950 05BE                     u4870 0345                     u4790 02DB  
                   u5727 1F5B                     u5591 08D3                     u3991 1764  
                   u3895 1702                     u4951 05BD                     u4871 0344  
                   u4791 02DA                     u4775 02BC                     u4960 05C4  
                   u4880 043B                     u5737 1E06                     u5585 08C1  
                   u3985 1757                     u4961 05C3                     u4881 043A  
                   u4970 05CA                     u4890 048D                     u5747 1E1A  
                   u4971 05C9                     u4891 048C                     u4980 05CE  
                   u4981 05CD                     u4885 0437                     u5677 14FD  
                   u4990 05D9                     u5687 1E69                     u4991 05D8  
                   u5697 11C8                     _dbuf 0220                     _atoi 135C  
                   _main 14DB                     _prec 016B                     _nout 0167  
                   pad@i 0027                     pad@p 0025                     fsr0h 0005  
                   fsr1h 0007                     indf0 0000                     fsr0l 0004  
                   indf1 0001                     fsr1l 0006                     pad@w 0029  
                   btemp 007E            ___fpclassifyf 1252                     start 0002  
        ___fldiv@new_exp 004C              main@voltage 0157   __end_of_LCD_Initialize 1E82  
                  ??_pad 007C              LCDPutCmd@ch 0076           _LCDPutStr2$270 0020  
         _LCDPutStr3$278 0020            ___fltol@sign1 0079                    ?_atoi 0076  
        __end_of___fladd 0B21                    ?_main 0070          __end_of___fldiv 1800  
        __end_of___awdiv 1252          __end_of___flneg 1D77                    STR_10 1827  
                  STR_13 182B                    STR_15 182B          __end_of___awmod 2000  
        __end_of___flmul 0D78          __end_of___flsub 1EA2          __end_of___fltol 007C  
        ___awdiv@divisor 0070              LCDPutStr2@h 0022              LCDPutStr2@i 0024  
            LCDPutStr3@i 0024              LCDPutStr2@x 0025              LCDPutStr2@y 0023  
            LCDPutStr3@x 0022              LCDPutStr3@y 0023          ___awdiv@counter 0075  
           vfpfcnvrt@fmt 00D3                    _PORTC 000E                    _TRISC 008E  
                  _flags 00EE                    _fputc 1086                    _fputs 1F07  
        __end_of_isdigit 1DB6                    atoi@n 0022                    pad@fp 002B  
                  atoi@s 0076                    _width 0169                    _putch 0007  
                  main@i 0161          __end_of_isspace 1EC3          __end_of_isupper 1DCE  
                  status 0003                    wtemp0 007E          __end_of_sprintf 102E  
         ?___fpclassifyf 0070          __end_of_tolower 1D9E          __end_of_strncmp 1086  
        ?_LCD_Initialize 0070          __initialization 07D9             __end_of_atoi 13F0  
           __end_of_main 164C                   ??_atoi 0078                   ??_main 0132  
              ??_LCDGoto 0078        __end_of_LCDPutCmd 1E23             LCDPutChar@ch 0076  
                 _ADCON0 009D                   _ADCON1 009E                   _ADCON2 009F  
                 ?_fputc 0070                   ?_fputs 0078                   _ADRESH 009C  
                 _ADRESL 009B         ___awdiv@dividend 0072                   ?_putch 0070  
           LCDPutStr2@ln 007A             LCDPutStr3@ln 0079            vfpfcnvrt@done 00DA  
       __end_of___xxtofl 08E2           _LCDWriteNibble 1E42             vfprintf@cfmt 00EB  
                 ___flge 12D1                   ___fleq 1F5F                ??___fladd 0020  
                 ___wmul 1E23                ??___fldiv 0042                ??___awdiv 0074  
              ??___flneg 0074                ??___awmod 0074                ??___flmul 0028  
              ??___flsub 007E                ??___fltol 0074                   _efgtoa 007C  
                 _floorf 13F0         ___awdiv@quotient 0077          ___awmod@divisor 0070  
        ___awmod@counter 0075                   pad@buf 0024                   _strcpy 1EC3  
                 _strlen 1DCE                   fputc@c 0070                   fputs@c 0020  
                 fputs@i 0021                   fputs@s 0023                ??_isdigit 0072  
        ___fpclassifyf@e 0020          ___fpclassifyf@u 0022          ___fpclassifyf@x 0070  
              ??_isspace 0072                ??_isupper 0072                   putch@c 0070  
       __end_of_vfprintf 0836                ??_sprintf 00ED                ??_tolower 0078  
              ??_strncmp 0074               ___flge@ff1 003A               ___flge@ff2 003E  
        ??___fpclassifyf 0074             ___xxtofl@arg 007A             ___xxtofl@exp 0079  
           ___xxtofl@val 0070               ___fleq@ff1 0070               ___fleq@ff2 0074  
 __end_of_LCDWriteNibble 1E62  __end_of__initialization 07FD               ___flneg@f1 0070  
             ___fltol@f1 0070                LCDGoto@ln 0077           __pcstackCOMMON 0070  
           __pidataBANK3 1D77            __end_of_fputc 10DF             ??_LCDPutChar 0074  
          __end_of_fputs 1F30             ??_LCDPutStr2 007B             ??_LCDPutStr3 007A  
          __end_of_putch 0008           _OPTION_REGbits 0095                  ??_fputc 0073  
                ??_fputs 0079                  ??_putch 0070               __pbssBANK1 00EE  
             __pbssBANK2 0163               __pbssBANK3 01B0               __pbssBANK4 0220  
        ?_LCDWriteNibble 0070       __end_of_LCDPutChar 1E04       __end_of_LCDPutStr2 1139  
     __end_of_LCDPutStr3 11F3        __end_of__Umul8_16 1F07               _efgtoa$737 00A2  
             _efgtoa$729 00A0               _efgtoa$738 00A4               __pmaintext 14DB  
                ?___flge 003A                  ?___fleq 0070                  ?___wmul 0070  
                ?_efgtoa 0068                  ?_floorf 0054                  ?_strcpy 0070  
                ?_strlen 0070                  _LCDGoto 1F30            LCDPutStr2@pos 0079  
          LCDPutStr2@str 0077                ?___xxtofl 0070            LCDPutStr3@str 0077  
       ??_LCD_Initialize 0077                  ___fladd 08E2                  ___fldiv 164C  
                ___awdiv 11F3                  ___flneg 1D6C                  ___awmod 1FAD  
                ___flmul 0B21                  ___flsub 1E82                  ___fltol 0008  
              ?_vfprintf 00E5                  __ptext1 1002                  __ptext2 0805  
                __ptext3 0D78                  __ptext4 102E                  __ptext5 007C  
                __ptext6 1D87                  __ptext7 1DB6                  __ptext8 1EC3  
                __ptext9 1139                  _isdigit 1D9E               ??___xxtofl 0074  
       ___awmod@dividend 0072                  _isspace 1EA2                  _isupper 1DB6  
                efgtoa@c 006C                  efgtoa@d 00B2                  efgtoa@e 00CB  
                efgtoa@f 0068                  efgtoa@g 00C7                  efgtoa@h 00BD  
                efgtoa@i 00C5                  efgtoa@l 00C1                  efgtoa@m 00AC  
                efgtoa@n 00CD                  efgtoa@p 00B7                  efgtoa@t 00A6  
                efgtoa@u 00CF                  efgtoa@w 00B9                  atoi@neg 0020  
              _LCDPutCmd 1E04                  main@cus 0138                  _sprintf 1002  
                _tolower 1D87                  clrloop0 1D61                  _strncmp 102E  
   end_of_initialization 07FD                  floorf@e 0062                  floorf@m 005E  
                floorf@u 0064                  floorf@x 0054                  fputc@fp 0072  
                init_ram 1D66                  fputs@fp 0078                  initloop 1D67  
      __end_of_vfpfcnvrt 1000               efgtoa@mode 00BC               efgtoa@sign 00B4  
             ??_vfprintf 00E8                  strcpy@d 0076                  strlen@a 0073  
                strcpy@s 0074                  strlen@s 0070                _PORTCbits 000E  
            ___fladd@grs 007B            ___xxtofl@sign 0078                _TRISAbits 008C  
            ___fldiv@grs 004E              ___fldiv@rem 0047               ?_LCDPutCmd 0070  
            ___flmul@grs 002E               LCDGoto@pos 0079           __end_of___flge 135C  
         __end_of___fleq 1FAD              vfpfcnvrt@ap 00D4              vfpfcnvrt@ct 00E0  
            vfpfcnvrt@fp 00E4           __end_of___wmul 1E42           __end_of_efgtoa 07D9  
         __end_of_floorf 14DB               floorf@F526 01B0           __end_of_strcpy 1EE4  
         __end_of_strlen 1DE7      start_initialization 07D9         ??_LCDWriteNibble 0071  
            __end_of_pad 1195    __end_of___fpclassifyf 12D1              vfprintf@fmt 00E5  
               ??___flge 0042                 ??___fleq 0078                 ??___wmul 0074  
               ??_efgtoa 006D                __Umul8_16 1EE4              __pdataBANK3 01A0  
               ??_floorf 0058                 ??_strcpy 0072                 ??_strlen 0072  
              ___fladd@a 0074                ___fladd@b 0070                 ?_LCDGoto 0077  
              ___fldiv@a 003A                ___fldiv@b 003E                ___flmul@a 0024  
              ___flmul@b 0020                ___flsub@a 003A                ___flsub@b 003E  
              ___latbits 0002                 LCDGoto@x 007D                 LCDGoto@y 007C  
          __pcstackBANK0 0020            __pcstackBANK1 00A0            __pcstackBANK2 0120  
            ??_LCDPutCmd 0074                 ?___fladd 0070                 ?___fldiv 003A  
               ?___awdiv 0070                 ?___flneg 0070                 ?___awmod 0070  
               ?___flmul 0020                 ?___flsub 003A                 ?___fltol 0070  
             ?__Umul8_16 0070         LCDWriteNibble@ch 0073         LCDWriteNibble@rs 0070  
               ?_isdigit 0070                 ?_isspace 0070                 ?_isupper 0070  
               ?_sprintf 0120                 ?_tolower 0076                 ?_strncmp 0070  
         ___wmul@product 0074                clear_ram0 1D60              _LCDGoto$285 007A  
              main@F4003 01A0                _vfpfcnvrt 0D78               _ADCON0bits 009D  
      ___wmul@multiplier 0070               vfpfcnvrt@c 00E3               vfpfcnvrt@f 00DC  
             vfprintf@ap 00E7               vfprintf@fp 00EA              ??__Umul8_16 0072  
             ?_vfpfcnvrt 00D3               _ANSELAbits 018C       ___fpclassifyf@F465 0163  
             sprintf@fmt 0120                 ___xxtofl 0836                 __ptext10 1F07  
               __ptext11 1086                 __ptext20 1EE4                 __ptext12 0007  
               __ptext21 12D1                 __ptext13 13F0                 __ptext30 0836  
               __ptext22 1F5F                 __ptext14 1252                 __ptext31 1E62  
               __ptext23 164C                 __ptext15 0008                 __ptext32 1195  
               __ptext24 1FAD                 __ptext16 1E82                 __ptext33 1DCE  
               __ptext25 11F3                 __ptext17 08E2                 __ptext34 10DF  
               __ptext26 135C                 __ptext18 1D6C                 __ptext35 1DE7  
               __ptext27 1EA2                 __ptext19 0B21                 __ptext36 1F30  
               __ptext28 1D9E                 __ptext37 1E04                 __ptext29 1E23  
               __ptext38 1E42      main@ADC0_result_var 015B               strcpy@dest 0077  
               efgtoa@fp 00B6                 efgtoa@ne 00AA                 efgtoa@pp 00A8  
               efgtoa@ou 00AE                 _vfprintf 0805               _LCDPutChar 1DE7  
             _LCDPutStr2 10DF               _LCDPutStr3 1195          main@temp_result 0148  
            _isspace$816 0074           __pstringtext10 0000                 isdigit@c 0070  
              sprintf@ap 0127                 isspace@c 0070                strcpy@src 0070  
               isupper@c 0070                strncmp@_l 0075                strncmp@_r 0070  
            efgtoa@nmode 00BB              ??_vfpfcnvrt 00D5            __pstringtext1 1800  
          __pstringtext2 180E            __pstringtext3 1815            __pstringtext4 181B  
          __pstringtext5 181F            __pstringtext6 1823            __pstringtext7 1827  
          __pstringtext8 182B            __pstringtext9 182E   __Umul8_16@multiplicand 0070  
               sprintf@f 0128                 tolower@c 0076                 sprintf@s 0126  
               strncmp@l 0078                 strncmp@n 0072                 strncmp@r 0076  
          ___fladd@signs 0078       main@temp_calculate 015D             ___fladd@aexp 0079  
           ___fladd@bexp 007A     __Umul8_16@multiplier 0078        __Umul8_16@product 0074  
